OUTPUT: results/train-pytorch-2021.07.26T15.54.17.179605

---------- FOLD 1/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1 | avg_train_loss=0.098601/home/rvbettker/.local/lib/python3.6/site-packages/torch/autograd/__init__.py:149: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 10010). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at  /pytorch/c10/cuda/CUDAFunctions.cpp:115.)
  allow_unreachable=True, accumulate_grad=True)  # allow_unreachable flag
 | avg_val_loss=0.091768
Epoch 2 | avg_train_loss=0.066799 | avg_val_loss=0.043876
Epoch 3 | avg_train_loss=0.040259 | avg_val_loss=0.037882
Epoch 4 | avg_train_loss=0.037200 | avg_val_loss=0.035768
Epoch 5 | avg_train_loss=0.035655 | avg_val_loss=0.034329
Epoch 6 | avg_train_loss=0.034665 | avg_val_loss=0.033888
Epoch 7 | avg_train_loss=0.033986 | avg_val_loss=0.033246
Epoch 8 | avg_train_loss=0.033404 | avg_val_loss=0.032646
Epoch 9 | avg_train_loss=0.032770 | avg_val_loss=0.032214
Epoch 10 | avg_train_loss=0.032086 | avg_val_loss=0.031626
Epoch 11 | avg_train_loss=0.031523 | avg_val_loss=0.031567
Epoch 12 | avg_train_loss=0.031137 | avg_val_loss=0.031004
Epoch 13 | avg_train_loss=0.030920 | avg_val_loss=0.030405
Epoch 14 | avg_train_loss=0.030457 | avg_val_loss=0.030054
Epoch 15 | avg_train_loss=0.030189 | avg_val_loss=0.030004
Epoch 16 | avg_train_loss=0.029717 | avg_val_loss=0.029867
Epoch 17 | avg_train_loss=0.029483 | avg_val_loss=0.029331
Epoch 18 | avg_train_loss=0.029203 | avg_val_loss=0.028907
Epoch 19 | avg_train_loss=0.028890 | avg_val_loss=0.028616
Epoch 20 | avg_train_loss=0.028521 | avg_val_loss=0.028588
Epoch 21 | avg_train_loss=0.028318 | avg_val_loss=0.028604
Epoch 22 | avg_train_loss=0.027949 | avg_val_loss=0.027775
Epoch 23 | avg_train_loss=0.027689 | avg_val_loss=0.027683
Epoch 24 | avg_train_loss=0.027189 | avg_val_loss=0.027435
Epoch 25 | avg_train_loss=0.026954 | avg_val_loss=0.027163
Epoch 26 | avg_train_loss=0.026627 | avg_val_loss=0.026692
Epoch 27 | avg_train_loss=0.026196 | avg_val_loss=0.026773
Epoch 28 | avg_train_loss=0.026101 | avg_val_loss=0.026739
Epoch 29 | avg_train_loss=0.025814 | avg_val_loss=0.026215
Epoch 30 | avg_train_loss=0.025409 | avg_val_loss=0.025942
Epoch 31 | avg_train_loss=0.025230 | avg_val_loss=0.025717
Epoch 32 | avg_train_loss=0.024938 | avg_val_loss=0.025729
Epoch 33 | avg_train_loss=0.024705 | avg_val_loss=0.025413
Epoch 34 | avg_train_loss=0.024475 | avg_val_loss=0.025794
Epoch 35 | avg_train_loss=0.024191 | avg_val_loss=0.025435
Epoch 36 | avg_train_loss=0.024067 | avg_val_loss=0.024894
Epoch 37 | avg_train_loss=0.023893 | avg_val_loss=0.025223
Epoch 38 | avg_train_loss=0.023759 | avg_val_loss=0.024900
Epoch 39 | avg_train_loss=0.023511 | avg_val_loss=0.024773
Epoch 40 | avg_train_loss=0.023423 | avg_val_loss=0.024343
Epoch 41 | avg_train_loss=0.023095 | avg_val_loss=0.024209
Epoch 42 | avg_train_loss=0.023030 | avg_val_loss=0.024369
Epoch 43 | avg_train_loss=0.022711 | avg_val_loss=0.023859
Epoch 44 | avg_train_loss=0.022723 | avg_val_loss=0.023863
Epoch 45 | avg_train_loss=0.022505 | avg_val_loss=0.024118
Epoch 46 | avg_train_loss=0.022297 | avg_val_loss=0.024062
Epoch 47 | avg_train_loss=0.022158 | avg_val_loss=0.023623
Epoch 48 | avg_train_loss=0.022147 | avg_val_loss=0.023304
Epoch 49 | avg_train_loss=0.021869 | avg_val_loss=0.023163
Epoch 50 | avg_train_loss=0.021844 | avg_val_loss=0.023456
Epoch 51 | avg_train_loss=0.021671 | avg_val_loss=0.023190
Epoch 52 | avg_train_loss=0.021446 | avg_val_loss=0.023313
Epoch 53 | avg_train_loss=0.021372 | avg_val_loss=0.023581
Epoch 54 | avg_train_loss=0.021179 | avg_val_loss=0.023315
Epoch 55 | avg_train_loss=0.021131 | avg_val_loss=0.023167
Epoch 56 | avg_train_loss=0.020968 | avg_val_loss=0.023255
Epoch 57 | avg_train_loss=0.020767 | avg_val_loss=0.023104
Epoch 58 | avg_train_loss=0.020812 | avg_val_loss=0.023189
Epoch 59 | avg_train_loss=0.020504 | avg_val_loss=0.023377
Epoch 60 | avg_train_loss=0.020517 | avg_val_loss=0.023180
Epoch 61 | avg_train_loss=0.020501 | avg_val_loss=0.022895
Epoch 62 | avg_train_loss=0.020235 | avg_val_loss=0.022987
Epoch 63 | avg_train_loss=0.020029 | avg_val_loss=0.023157
Epoch 64 | avg_train_loss=0.019987 | avg_val_loss=0.022935
Epoch 65 | avg_train_loss=0.019723 | avg_val_loss=0.023006
Epoch 66 | avg_train_loss=0.019795 | avg_val_loss=0.023333
Epoch 67 | avg_train_loss=0.019507 | avg_val_loss=0.022775
Epoch 68 | avg_train_loss=0.019584 | avg_val_loss=0.022503
Epoch 69 | avg_train_loss=0.019431 | avg_val_loss=0.022937
Epoch 70 | avg_train_loss=0.019347 | avg_val_loss=0.022454
Epoch 71 | avg_train_loss=0.019172 | avg_val_loss=0.023158
Epoch 72 | avg_train_loss=0.019072 | avg_val_loss=0.022889
Epoch 73 | avg_train_loss=0.018925 | avg_val_loss=0.022691
Epoch 74 | avg_train_loss=0.018757 | avg_val_loss=0.022721
Epoch 75 | avg_train_loss=0.018835 | avg_val_loss=0.022355
Epoch 76 | avg_train_loss=0.018485 | avg_val_loss=0.022135
Epoch 77 | avg_train_loss=0.018604 | avg_val_loss=0.022986
Epoch 78 | avg_train_loss=0.018485 | avg_val_loss=0.022508
Epoch 79 | avg_train_loss=0.018321 | avg_val_loss=0.023500
Epoch 80 | avg_train_loss=0.018291 | avg_val_loss=0.022797
Epoch 81 | avg_train_loss=0.018015 | avg_val_loss=0.023125
Epoch 82 | avg_train_loss=0.018027 | avg_val_loss=0.022909
Epoch 83 | avg_train_loss=0.018008 | avg_val_loss=0.023037
Epoch 84 | avg_train_loss=0.017656 | avg_val_loss=0.023065
Epoch 85 | avg_train_loss=0.017689 | avg_val_loss=0.022765
Epoch 86 | avg_train_loss=0.017667 | avg_val_loss=0.022253
Epoch 87 | avg_train_loss=0.017415 | avg_val_loss=0.022717
Epoch 88 | avg_train_loss=0.017588 | avg_val_loss=0.022825
Epoch 89 | avg_train_loss=0.017304 | avg_val_loss=0.022767
Epoch 90 | avg_train_loss=0.017190 | avg_val_loss=0.022867
Epoch 91 | avg_train_loss=0.017059 | avg_val_loss=0.022814
Epoch 92 | avg_train_loss=0.017066 | avg_val_loss=0.022906
Epoch 93 | avg_train_loss=0.016879 | avg_val_loss=0.022649
Epoch 94 | avg_train_loss=0.016786 | avg_val_loss=0.022998
Epoch 95 | avg_train_loss=0.016686 | avg_val_loss=0.023202
Epoch 96 | avg_train_loss=0.016718 | avg_val_loss=0.022571
Epoch 97 | avg_train_loss=0.016515 | avg_val_loss=0.022481
Epoch 98 | avg_train_loss=0.016343 | avg_val_loss=0.022489
Epoch 99 | avg_train_loss=0.016350 | avg_val_loss=0.022735
Epoch 100 | avg_train_loss=0.016118 | avg_val_loss=0.022519
Epoch 101 | avg_train_loss=0.016198 | avg_val_loss=0.022992
Epoch 102 | avg_train_loss=0.016253INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6398e-05s, 424928 KB] reading input...
[t=0.00214767s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258377s, 427532 KB] Building successor generator...done!
[t=0.0261231s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261463s, 427532 KB] time for successor generation creation: 0.000172061s
[t=0.0261757s, 427532 KB] Variables: 25
[t=0.0261986s, 427532 KB] FactPairs: 182
[t=0.0262207s, 427532 KB] Bytes per state: 8
[t=0.0264187s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107165s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.107219s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.107245s, 430124 KB] f = 145, 1 evaluated, 0 expanded
[t=0.107272s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.107297s, 430124 KB] pruning method: none
[t=0.125664s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.125714s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.126298s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.126328s, 431096 KB] g=2, 6 evaluated, 2 expanded
[t=0.126538s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.126576s, 431096 KB] g=2, 7 evaluated, 2 expanded
[t=0.126789s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.126828s, 431096 KB] g=2, 8 evaluated, 2 expanded
[t=0.127038s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.127067s, 431096 KB] g=2, 9 evaluated, 2 expanded
[t=0.12782s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.127849s, 431096 KB] g=3, 13 evaluated, 3 expanded
[t=0.128062s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.12809s, 431096 KB] g=4, 14 evaluated, 4 expanded
[t=0.129558s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.129588s, 431096 KB] g=5, 22 evaluated, 5 expanded
[t=0.133782s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.133814s, 431096 KB] g=8, 45 evaluated, 12 expanded
[t=0.154119s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.154155s, 431096 KB] g=19, 157 evaluated, 49 expanded
[t=0.27994s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.279986s, 431360 KB] g=24, 851 evaluated, 343 expanded, 42 reopened
[t=0.285997s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.286031s, 431360 KB] g=29, 884 evaluated, 355 expanded, 42 reopened
[t=0.286801s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.286833s, 431360 KB] g=30, 888 evaluated, 356 expanded, 42 reopened
[t=0.289384s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.289421s, 431492 KB] g=32, 902 evaluated, 360 expanded, 42 reopened
[t=0.290731s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.290766s, 431492 KB] g=33, 909 evaluated, 362 expanded, 42 reopened
[t=0.291885s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.291914s, 431492 KB] g=35, 915 evaluated, 364 expanded, 42 reopened
[t=0.292124s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.292152s, 431492 KB] g=35, 916 evaluated, 364 expanded, 42 reopened
[t=0.29345s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.293483s, 431492 KB] g=37, 923 evaluated, 366 expanded, 42 reopened
[t=0.293877s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.293906s, 431492 KB] g=38, 925 evaluated, 367 expanded, 42 reopened
[t=0.294122s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.294155s, 431492 KB] g=38, 926 evaluated, 367 expanded, 42 reopened
[t=0.294922s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.294954s, 431492 KB] g=39, 930 evaluated, 368 expanded, 42 reopened
[t=0.301118s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.301154s, 431492 KB] g=43, 964 evaluated, 378 expanded, 42 reopened
[t=0.301549s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.301578s, 431492 KB] g=44, 966 evaluated, 379 expanded, 42 reopened
[t=0.301975s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.302004s, 431492 KB] g=45, 968 evaluated, 380 expanded, 42 reopened
[t=0.302771s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.302806s, 431492 KB] g=47, 972 evaluated, 382 expanded, 42 reopened
[t=0.303022s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.30305s, 431492 KB] g=48, 973 evaluated, 383 expanded, 42 reopened
[t=0.303446s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.303475s, 431492 KB] g=49, 975 evaluated, 384 expanded, 42 reopened
[t=0.304693s, 431492 KB] Solution found!
[t=0.304725s, 431492 KB] Actual search time: 0.197426s
unstack b d (1)
put-down b (1)
unstack h j (1)
stack h a (1)
unstack f e (1)
stack f d (1)
pick-up e (1)
stack e b (1)
unstack f d (1)
stack f e (1)
unstack d i (1)
put-down d (1)
pick-up j (1)
stack j i (1)
pick-up d (1)
stack d j (1)
unstack h a (1)
stack h f (1)
unstack a k (1)
stack a h (1)
unstack k l (1)
stack k d (1)
unstack l g (1)
put-down l (1)
unstack a h (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d j (1)
stack d b (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.304752s, 431492 KB] Plan length: 52 step(s).
[t=0.304752s, 431492 KB] Plan cost: 52
[t=0.304752s, 431492 KB] Expanded 391 state(s).
[t=0.304752s, 431492 KB] Reopened 42 state(s).
[t=0.304752s, 431492 KB] Evaluated 982 state(s).
[t=0.304752s, 431492 KB] Evaluations: 982
[t=0.304752s, 431492 KB] Generated 1568 state(s).
[t=0.304752s, 431492 KB] Dead ends: 0 state(s).
[t=0.304752s, 431492 KB] Expanded until last jump: 0 state(s).
[t=0.304752s, 431492 KB] Reopened until last jump: 0 state(s).
[t=0.304752s, 431492 KB] Evaluated until last jump: 1 state(s).
[t=0.304752s, 431492 KB] Generated until last jump: 0 state(s).
[t=0.304752s, 431492 KB] Number of registered states: 982
[t=0.304752s, 431492 KB] Int hash set load factor: 982/2048 = 0.479492
[t=0.304752s, 431492 KB] Int hash set resizes: 11
[t=0.304752s, 431492 KB] Search time: 0.278333s
[t=0.304752s, 431492 KB] Total time: 0.304752s
Solution found.
Peak memory: 431492 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7853e-05s, 424928 KB] reading input...
[t=0.00229823s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0265312s, 427532 KB] Building successor generator...done!
[t=0.0268127s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0268371s, 427532 KB] time for successor generation creation: 0.000169818s
[t=0.026866s, 427532 KB] Variables: 25
[t=0.0268891s, 427532 KB] FactPairs: 182
[t=0.0269111s, 427532 KB] Bytes per state: 8
[t=0.0271077s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0997679s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0998197s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0998458s, 430124 KB] f = 152, 1 evaluated, 0 expanded
[t=0.0998828s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0999078s, 430124 KB] pruning method: none
[t=0.111835s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.111885s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.118711s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.118755s, 431096 KB] g=2, 5 evaluated, 2 expanded
[t=0.11934s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.119371s, 431096 KB] g=3, 8 evaluated, 3 expanded
[t=0.11977s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.119799s, 431096 KB] g=4, 10 evaluated, 4 expanded
[t=0.12001s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.120039s, 431096 KB] g=4, 11 evaluated, 4 expanded
[t=0.125537s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.125569s, 431096 KB] g=11, 41 evaluated, 15 expanded
[t=0.127436s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.127468s, 431096 KB] g=14, 51 evaluated, 18 expanded
[t=0.12786s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.127894s, 431096 KB] g=14, 53 evaluated, 18 expanded
[t=0.13048s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.130517s, 431096 KB] g=16, 67 evaluated, 22 expanded
[t=0.132s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.132031s, 431096 KB] g=18, 75 evaluated, 24 expanded
[t=0.132246s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.132277s, 431096 KB] g=19, 76 evaluated, 25 expanded
[t=0.13869s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.138727s, 431096 KB] g=19, 111 evaluated, 34 expanded
[t=0.144251s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.144284s, 431096 KB] g=22, 141 evaluated, 42 expanded
[t=0.144862s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.144892s, 431096 KB] g=22, 144 evaluated, 42 expanded
[t=0.146395s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.14643s, 431096 KB] g=24, 152 evaluated, 44 expanded
[t=0.147381s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.147415s, 431096 KB] g=25, 157 evaluated, 45 expanded
[t=0.147813s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.147842s, 431096 KB] g=26, 159 evaluated, 46 expanded
[t=0.148609s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.14864s, 431228 KB] g=27, 163 evaluated, 47 expanded
[t=0.149402s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.14943s, 431228 KB] g=28, 167 evaluated, 48 expanded
[t=0.1513s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.151334s, 431228 KB] g=30, 177 evaluated, 51 expanded
[t=0.152277s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.15231s, 431228 KB] g=31, 182 evaluated, 52 expanded
[t=0.152709s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.152738s, 431228 KB] g=32, 184 evaluated, 53 expanded
[t=0.153499s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.153531s, 431228 KB] g=33, 188 evaluated, 54 expanded
[t=0.154664s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.154697s, 431228 KB] g=35, 194 evaluated, 56 expanded
[t=0.155456s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.155489s, 431228 KB] g=36, 198 evaluated, 57 expanded
[t=0.159357s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.15939s, 431228 KB] g=41, 219 evaluated, 63 expanded
[t=0.16253s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.162564s, 431228 KB] g=44, 236 evaluated, 67 expanded
[t=0.162965s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.162994s, 431228 KB] g=45, 238 evaluated, 68 expanded
[t=0.164477s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.164507s, 431228 KB] g=46, 246 evaluated, 70 expanded
[t=0.166761s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.166795s, 431228 KB] g=48, 258 evaluated, 73 expanded
[t=0.167191s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.16722s, 431228 KB] g=48, 260 evaluated, 73 expanded
[t=0.170025s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.170063s, 431228 KB] g=51, 275 evaluated, 78 expanded
[t=0.170826s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.170856s, 431228 KB] g=52, 279 evaluated, 79 expanded
[t=0.171438s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.17147s, 431228 KB] g=53, 282 evaluated, 80 expanded
[t=0.172231s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.172261s, 431228 KB] g=55, 286 evaluated, 82 expanded
[t=0.173208s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.173237s, 431228 KB] g=57, 291 evaluated, 84 expanded
[t=0.174023s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.174056s, 431228 KB] g=59, 295 evaluated, 86 expanded
[t=0.174086s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.17411s, 431228 KB] g=60, 296 evaluated, 87 expanded
[t=0.174136s, 431228 KB] Solution found!
[t=0.174162s, 431228 KB] Actual search time: 0.0742499s
unstack c f (1)
stack c j (1)
unstack f d (1)
stack f k (1)
unstack d i (1)
put-down d (1)
unstack f k (1)
stack f c (1)
unstack k g (1)
stack k f (1)
unstack g e (1)
stack g d (1)
unstack e l (1)
stack e k (1)
unstack g d (1)
stack g e (1)
unstack l b (1)
stack l d (1)
unstack g e (1)
put-down g (1)
unstack b a (1)
stack b l (1)
unstack a h (1)
stack a e (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack e k (1)
stack e b (1)
unstack k f (1)
stack k e (1)
unstack f c (1)
stack f a (1)
unstack c j (1)
put-down c (1)
pick-up j (1)
stack j c (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
put-down b (1)
unstack j c (1)
stack j e (1)
pick-up b (1)
stack b c (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.174187s, 431228 KB] Plan length: 60 step(s).
[t=0.174187s, 431228 KB] Plan cost: 60
[t=0.174187s, 431228 KB] Expanded 88 state(s).
[t=0.174187s, 431228 KB] Reopened 0 state(s).
[t=0.174187s, 431228 KB] Evaluated 296 state(s).
[t=0.174187s, 431228 KB] Evaluations: 296
[t=0.174187s, 431228 KB] Generated 384 state(s).
[t=0.174187s, 431228 KB] Dead ends: 0 state(s).
[t=0.174187s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.174187s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.174187s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.174187s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.174187s, 431228 KB] Number of registered states: 296
[t=0.174187s, 431228 KB] Int hash set load factor: 296/512 = 0.578125
[t=0.174187s, 431228 KB] Int hash set resizes: 9
[t=0.174187s, 431228 KB] Search time: 0.147079s
[t=0.174187s, 431228 KB] Total time: 0.174187s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6727e-05s, 424928 KB] reading input...
[t=0.00220399s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258645s, 427532 KB] Building successor generator...done!
[t=0.0261392s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261627s, 427532 KB] time for successor generation creation: 0.000164289s
[t=0.0261916s, 427532 KB] Variables: 25
[t=0.0262148s, 427532 KB] FactPairs: 182
[t=0.026237s, 427532 KB] Bytes per state: 8
[t=0.026432s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981431s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0981942s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982207s, 430124 KB] f = 108, 1 evaluated, 0 expanded
[t=0.0982481s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0982811s, 430124 KB] pruning method: none
[t=0.110153s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.110204s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.116826s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.116869s, 431096 KB] g=1, 4 evaluated, 1 expanded
[t=0.11909s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.119123s, 431096 KB] g=4, 16 evaluated, 5 expanded
[t=0.120059s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.12009s, 431096 KB] g=5, 21 evaluated, 7 expanded
[t=0.128592s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.128629s, 431096 KB] g=13, 68 evaluated, 26 expanded
[t=0.137343s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.137379s, 431096 KB] g=18, 116 evaluated, 44 expanded, 1 reopened
[t=0.155614s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.15565s, 431228 KB] g=22, 216 evaluated, 103 expanded, 28 reopened
[t=0.156577s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.15661s, 431228 KB] g=23, 221 evaluated, 104 expanded, 28 reopened
[t=0.158084s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.158117s, 431228 KB] g=25, 229 evaluated, 106 expanded, 28 reopened
[t=0.158331s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.158359s, 431228 KB] g=25, 230 evaluated, 106 expanded, 28 reopened
[t=0.159286s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.159317s, 431228 KB] g=26, 235 evaluated, 107 expanded, 28 reopened
[t=0.159525s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.159554s, 431228 KB] g=26, 236 evaluated, 107 expanded, 28 reopened
[t=0.160121s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.160151s, 431228 KB] g=27, 239 evaluated, 108 expanded, 28 reopened
[t=0.161261s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.161295s, 431228 KB] g=28, 245 evaluated, 109 expanded, 28 reopened
[t=0.162758s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.162789s, 431228 KB] g=28, 253 evaluated, 111 expanded, 28 reopened
[t=0.16336s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.163396s, 431228 KB] g=29, 256 evaluated, 112 expanded, 28 reopened
[t=0.163996s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.164026s, 431228 KB] g=30, 259 evaluated, 113 expanded, 28 reopened
[t=0.164967s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.165001s, 431228 KB] g=31, 264 evaluated, 114 expanded, 28 reopened
[t=0.168819s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.168852s, 431228 KB] g=33, 285 evaluated, 122 expanded, 28 reopened
[t=0.169433s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.169463s, 431228 KB] g=34, 288 evaluated, 123 expanded, 28 reopened
[t=0.169861s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.16989s, 431228 KB] g=36, 290 evaluated, 125 expanded, 28 reopened
[t=0.170464s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.170493s, 431228 KB] g=38, 293 evaluated, 127 expanded, 28 reopened
[t=0.171437s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.171468s, 431228 KB] g=40, 299 evaluated, 132 expanded, 28 reopened
[t=0.171494s, 431228 KB] Solution found!
[t=0.17152s, 431228 KB] Actual search time: 0.0732352s
unstack f h (1)
stack f l (1)
pick-up h (1)
stack h a (1)
unstack f l (1)
put-down f (1)
unstack l j (1)
put-down l (1)
pick-up f (1)
stack f j (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k b (1)
stack k l (1)
unstack f j (1)
stack f a (1)
unstack b d (1)
put-down b (1)
unstack j e (1)
put-down j (1)
unstack k l (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.171545s, 431228 KB] Plan length: 40 step(s).
[t=0.171545s, 431228 KB] Plan cost: 40
[t=0.171545s, 431228 KB] Expanded 133 state(s).
[t=0.171545s, 431228 KB] Reopened 28 state(s).
[t=0.171545s, 431228 KB] Evaluated 299 state(s).
[t=0.171545s, 431228 KB] Evaluations: 299
[t=0.171545s, 431228 KB] Generated 537 state(s).
[t=0.171545s, 431228 KB] Dead ends: 0 state(s).
[t=0.171545s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.171545s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.171545s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.171545s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.171545s, 431228 KB] Number of registered states: 299
[t=0.171545s, 431228 KB] Int hash set load factor: 299/512 = 0.583984
[t=0.171545s, 431228 KB] Int hash set resizes: 9
[t=0.171545s, 431228 KB] Search time: 0.145114s
[t=0.171545s, 431228 KB] Total time: 0.171545s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6331e-05s, 424928 KB] reading input...
[t=0.00214966s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260508s, 427532 KB] Building successor generator...done!
[t=0.0263513s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263754s, 427532 KB] time for successor generation creation: 0.000168151s
[t=0.026404s, 427532 KB] Variables: 25
[t=0.0264273s, 427532 KB] FactPairs: 182
[t=0.02645s, 427532 KB] Bytes per state: 8
[t=0.0266475s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991024s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.0991543s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991806s, 430124 KB] f = 81, 1 evaluated, 0 expanded
[t=0.0992094s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.099235s, 430124 KB] pruning method: none
[t=0.117709s, 431096 KB] f = 90, 4 evaluated, 1 expanded
[t=0.117951s, 431096 KB] f = 92, 5 evaluated, 2 expanded
[t=0.119272s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.119305s, 431096 KB] g=4, 12 evaluated, 5 expanded
[t=0.119697s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.119727s, 431096 KB] g=5, 14 evaluated, 6 expanded
[t=0.138326s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.138362s, 431096 KB] g=15, 117 evaluated, 34 expanded
[t=0.139117s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.139148s, 431096 KB] g=16, 121 evaluated, 35 expanded
[t=0.140263s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.140294s, 431096 KB] g=17, 127 evaluated, 36 expanded
[t=0.145216s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.145252s, 431096 KB] g=17, 154 evaluated, 42 expanded
[t=0.219952s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.21999s, 431228 KB] g=28, 567 evaluated, 137 expanded
[t=0.223676s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.223711s, 431360 KB] g=29, 587 evaluated, 145 expanded, 2 reopened
[t=0.256936s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.256973s, 431360 KB] g=30, 770 evaluated, 197 expanded, 5 reopened
[t=0.257558s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.257591s, 431360 KB] g=31, 773 evaluated, 198 expanded, 5 reopened
[t=0.25799s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.258023s, 431360 KB] g=31, 775 evaluated, 198 expanded, 5 reopened
[t=0.259698s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.259729s, 431360 KB] g=32, 784 evaluated, 200 expanded, 5 reopened
[t=0.26286s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.262893s, 431360 KB] g=34, 801 evaluated, 203 expanded, 5 reopened
[t=0.26529s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.265324s, 431360 KB] g=36, 814 evaluated, 205 expanded, 5 reopened
[t=0.269469s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.269507s, 431360 KB] g=38, 836 evaluated, 210 expanded, 5 reopened
[t=0.277678s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.277721s, 431360 KB] g=40, 881 evaluated, 219 expanded, 5 reopened
[t=0.292122s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.292159s, 431492 KB] g=41, 960 evaluated, 238 expanded, 6 reopened
[t=0.292736s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.292771s, 431492 KB] g=42, 963 evaluated, 239 expanded, 6 reopened
[t=0.293528s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.293559s, 431492 KB] g=43, 967 evaluated, 240 expanded, 6 reopened
[t=0.294691s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.294725s, 431492 KB] g=45, 973 evaluated, 242 expanded, 6 reopened
[t=0.298193s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.29823s, 431492 KB] g=47, 992 evaluated, 247 expanded, 6 reopened
[t=0.298988s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.299018s, 431492 KB] g=48, 996 evaluated, 248 expanded, 6 reopened
[t=0.30482s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.304853s, 431492 KB] g=53, 1028 evaluated, 257 expanded, 6 reopened
[t=0.311221s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.311255s, 431492 KB] g=53, 1063 evaluated, 270 expanded, 6 reopened
[t=0.311656s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.31169s, 431492 KB] g=54, 1065 evaluated, 271 expanded, 6 reopened
[t=0.312452s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.312483s, 431492 KB] g=56, 1069 evaluated, 273 expanded, 6 reopened
[t=0.333885s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.333927s, 431492 KB] g=60, 1187 evaluated, 323 expanded, 13 reopened
[t=0.334687s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.33472s, 431492 KB] g=62, 1191 evaluated, 325 expanded, 13 reopened
[t=0.334753s, 431492 KB] Solution found!
[t=0.334781s, 431492 KB] Actual search time: 0.235532s
put-down e (1)
unstack l b (1)
put-down l (1)
unstack i c (1)
put-down i (1)
pick-up e (1)
stack e l (1)
unstack c j (1)
stack c i (1)
unstack j d (1)
put-down j (1)
unstack d g (1)
stack d j (1)
unstack b a (1)
stack b c (1)
unstack a k (1)
stack a d (1)
unstack g h (1)
stack g k (1)
unstack h f (1)
stack h a (1)
pick-up f (1)
stack f e (1)
unstack b c (1)
put-down b (1)
unstack c i (1)
stack c b (1)
unstack g k (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a d (1)
stack a h (1)
pick-up i (1)
stack i c (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack i c (1)
stack i l (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b c (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.334806s, 431492 KB] Plan length: 63 step(s).
[t=0.334806s, 431492 KB] Plan cost: 63
[t=0.334806s, 431492 KB] Expanded 327 state(s).
[t=0.334806s, 431492 KB] Reopened 13 state(s).
[t=0.334806s, 431492 KB] Evaluated 1192 state(s).
[t=0.334806s, 431492 KB] Evaluations: 1192
[t=0.334806s, 431492 KB] Generated 1630 state(s).
[t=0.334806s, 431492 KB] Dead ends: 0 state(s).
[t=0.334806s, 431492 KB] Expanded until last jump: 2 state(s).
[t=0.334806s, 431492 KB] Reopened until last jump: 0 state(s).
[t=0.334806s, 431492 KB] Evaluated until last jump: 5 state(s).
[t=0.334806s, 431492 KB] Generated until last jump: 5 state(s).
[t=0.334806s, 431492 KB] Number of registered states: 1192
[t=0.334806s, 431492 KB] Int hash set load factor: 1192/2048 = 0.582031
[t=0.334806s, 431492 KB] Int hash set resizes: 11
[t=0.334806s, 431492 KB] Search time: 0.308159s
[t=0.334806s, 431492 KB] Total time: 0.334806s
Solution found.
Peak memory: 431492 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6834e-05s, 424928 KB] reading input...
[t=0.00220759s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261614s, 427532 KB] Building successor generator...done!
[t=0.0264389s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264624s, 427532 KB] time for successor generation creation: 0.000166337s
[t=0.026491s, 427532 KB] Variables: 25
[t=0.0265135s, 427532 KB] FactPairs: 182
[t=0.0265356s, 427532 KB] Bytes per state: 8
[t=0.0267309s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0996528s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.0997041s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0997297s, 430124 KB] f = 95, 1 evaluated, 0 expanded
[t=0.0997579s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.0997822s, 430124 KB] pruning method: none
[t=0.119232s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.119283s, 431096 KB] g=1, 9 evaluated, 1 expanded
[t=0.120941s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.120972s, 431096 KB] g=3, 18 evaluated, 3 expanded
[t=0.121741s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.121774s, 431096 KB] g=3, 22 evaluated, 3 expanded
[t=0.122349s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.122379s, 431096 KB] g=4, 25 evaluated, 4 expanded
[t=0.133234s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.13327s, 431096 KB] g=10, 85 evaluated, 13 expanded
[t=0.134036s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.134067s, 431096 KB] g=11, 89 evaluated, 14 expanded
[t=0.135003s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.135033s, 431096 KB] g=12, 94 evaluated, 15 expanded
[t=0.135428s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.135457s, 431096 KB] g=13, 96 evaluated, 16 expanded
[t=0.135669s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.135697s, 431096 KB] g=13, 97 evaluated, 16 expanded
[t=0.136451s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.136493s, 431096 KB] g=14, 101 evaluated, 17 expanded
[t=0.13725s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.13728s, 431096 KB] g=15, 105 evaluated, 18 expanded
[t=0.169322s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.169362s, 431228 KB] g=26, 281 evaluated, 61 expanded
[t=0.217662s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.2177s, 431360 KB] g=27, 547 evaluated, 140 expanded, 10 reopened
[t=0.480151s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.480197s, 431624 KB] g=23, 1994 evaluated, 683 expanded, 167 reopened
[t=0.511425s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.511467s, 431624 KB] g=25, 2165 evaluated, 733 expanded, 167 reopened
[t=0.511681s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.51171s, 431624 KB] g=25, 2166 evaluated, 733 expanded, 167 reopened
[t=0.512645s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.512678s, 431624 KB] g=27, 2171 evaluated, 735 expanded, 167 reopened
[t=0.515435s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.515468s, 431624 KB] g=29, 2186 evaluated, 739 expanded, 167 reopened
[t=0.519298s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.519334s, 431624 KB] g=31, 2207 evaluated, 745 expanded, 167 reopened
[t=0.528393s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.528431s, 431624 KB] g=33, 2257 evaluated, 756 expanded, 167 reopened
[t=0.561185s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.561224s, 431756 KB] g=38, 2438 evaluated, 799 expanded, 167 reopened
[t=0.561643s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.561677s, 431756 KB] g=39, 2440 evaluated, 800 expanded, 167 reopened
[t=0.562612s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.562643s, 431756 KB] g=40, 2445 evaluated, 801 expanded, 167 reopened
[t=0.563579s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.56361s, 431756 KB] g=41, 2450 evaluated, 802 expanded, 167 reopened
[t=0.569059s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.569103s, 431756 KB] g=44, 2480 evaluated, 809 expanded, 167 reopened
[t=0.5697s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.569732s, 431756 KB] g=45, 2483 evaluated, 810 expanded, 167 reopened
[t=0.578618s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.578656s, 431756 KB] g=48, 2532 evaluated, 826 expanded, 167 reopened
[t=0.579053s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.579083s, 431756 KB] g=49, 2534 evaluated, 827 expanded, 167 reopened
[t=0.579479s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.579508s, 431756 KB] g=50, 2536 evaluated, 828 expanded, 167 reopened
[t=0.581178s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.581212s, 431756 KB] g=52, 2545 evaluated, 832 expanded, 167 reopened
[t=0.582158s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.582191s, 431756 KB] g=53, 2550 evaluated, 833 expanded, 167 reopened
[t=0.582406s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.582435s, 431756 KB] g=54, 2551 evaluated, 834 expanded, 167 reopened
[t=0.582831s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.58286s, 431756 KB] g=55, 2553 evaluated, 835 expanded, 167 reopened
[t=0.58326s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.583293s, 431756 KB] g=57, 2556 evaluated, 837 expanded, 167 reopened
[t=0.58332s, 431756 KB] Solution found!
[t=0.583346s, 431756 KB] Actual search time: 0.48356s
put-down e (1)
unstack d i (1)
stack d j (1)
pick-up g (1)
stack g d (1)
pick-up b (1)
stack b i (1)
unstack l f (1)
stack l b (1)
pick-up f (1)
stack f l (1)
unstack h k (1)
stack h f (1)
pick-up a (1)
stack a e (1)
unstack g d (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a e (1)
stack a h (1)
pick-up e (1)
stack e d (1)
unstack f l (1)
stack f k (1)
unstack l b (1)
stack l e (1)
unstack b i (1)
put-down b (1)
unstack l e (1)
put-down l (1)
unstack f k (1)
stack f a (1)
unstack k c (1)
stack k e (1)
pick-up i (1)
stack i c (1)
unstack k e (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.583371s, 431756 KB] Plan length: 57 step(s).
[t=0.583371s, 431756 KB] Plan cost: 57
[t=0.583371s, 431756 KB] Expanded 838 state(s).
[t=0.583371s, 431756 KB] Reopened 167 state(s).
[t=0.583371s, 431756 KB] Evaluated 2556 state(s).
[t=0.583371s, 431756 KB] Evaluations: 2556
[t=0.583371s, 431756 KB] Generated 4295 state(s).
[t=0.583371s, 431756 KB] Dead ends: 0 state(s).
[t=0.583371s, 431756 KB] Expanded until last jump: 0 state(s).
[t=0.583371s, 431756 KB] Reopened until last jump: 0 state(s).
[t=0.583371s, 431756 KB] Evaluated until last jump: 1 state(s).
[t=0.583371s, 431756 KB] Generated until last jump: 0 state(s).
[t=0.583371s, 431756 KB] Number of registered states: 2556
[t=0.583371s, 431756 KB] Int hash set load factor: 2556/4096 = 0.624023
[t=0.583371s, 431756 KB] Int hash set resizes: 12
[t=0.583371s, 431756 KB] Search time: 0.55664s
[t=0.583371s, 431756 KB] Total time: 0.583371s
Solution found.
Peak memory: 431756 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.653e-05s, 424928 KB] reading input...
[t=0.0021494s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259664s, 427532 KB] Building successor generator...done!
[t=0.0262436s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262676s, 427532 KB] time for successor generation creation: 0.000166778s
[t=0.0263098s, 427532 KB] Variables: 25
[t=0.0263381s, 427532 KB] FactPairs: 182
[t=0.026361s, 427532 KB] Bytes per state: 8
[t=0.0265576s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107145s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.107201s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.107227s, 430124 KB] f = 106, 1 evaluated, 0 expanded
[t=0.107254s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.107278s, 430124 KB] pruning method: none
[t=0.119226s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.119275s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.126264s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.126307s, 431096 KB] g=2, 6 evaluated, 2 expanded
[t=0.127246s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.127279s, 431096 KB] g=4, 11 evaluated, 4 expanded
[t=0.129448s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.129478s, 431096 KB] g=6, 23 evaluated, 8 expanded
[t=0.134506s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.134538s, 431096 KB] g=14, 51 evaluated, 19 expanded
[t=0.135822s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.135854s, 431096 KB] g=16, 58 evaluated, 21 expanded
[t=0.136243s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.136272s, 431096 KB] g=17, 60 evaluated, 22 expanded
[t=0.13737s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.1374s, 431096 KB] g=19, 66 evaluated, 24 expanded
[t=0.139415s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.139448s, 431096 KB] g=17, 77 evaluated, 30 expanded
[t=0.15836s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.158405s, 431228 KB] g=22, 182 evaluated, 85 expanded, 12 reopened
[t=0.24128s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.241319s, 431228 KB] g=29, 646 evaluated, 270 expanded, 47 reopened
[t=0.244937s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.244971s, 431360 KB] g=32, 666 evaluated, 275 expanded, 47 reopened
[t=0.272745s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.272785s, 431360 KB] g=36, 821 evaluated, 330 expanded, 54 reopened
[t=0.276221s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.276258s, 431360 KB] g=41, 840 evaluated, 335 expanded, 54 reopened
[t=0.326434s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.326476s, 431492 KB] g=42, 1121 evaluated, 411 expanded, 58 reopened
[t=0.417683s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.417731s, 431624 KB] g=43, 1632 evaluated, 588 expanded, 88 reopened
[t=0.605303s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.605354s, 431760 KB] g=52, 2690 evaluated, 922 expanded, 110 reopened
[t=0.607534s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.607569s, 431760 KB] g=53, 2702 evaluated, 926 expanded, 110 reopened
[t=0.609202s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.609236s, 431760 KB] g=55, 2711 evaluated, 928 expanded, 110 reopened
[t=0.60962s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.609652s, 431760 KB] g=55, 2713 evaluated, 928 expanded, 110 reopened
[t=0.610576s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.610611s, 431760 KB] g=56, 2718 evaluated, 929 expanded, 110 reopened
[t=0.615432s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.615471s, 431892 KB] g=58, 2745 evaluated, 935 expanded, 110 reopened
[t=0.621177s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.621214s, 431892 KB] g=60, 2777 evaluated, 943 expanded, 110 reopened
[t=0.627837s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.627874s, 431892 KB] g=64, 2814 evaluated, 953 expanded, 110 reopened
[t=0.628444s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.628474s, 431892 KB] g=65, 2817 evaluated, 954 expanded, 110 reopened
[t=0.642362s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.642402s, 431892 KB] g=70, 2895 evaluated, 976 expanded, 110 reopened
[t=0.645644s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.645679s, 431892 KB] g=72, 2913 evaluated, 982 expanded, 110 reopened
[t=0.648047s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.648082s, 431892 KB] g=72, 2926 evaluated, 986 expanded, 110 reopened
[t=0.649542s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.649573s, 431892 KB] g=73, 2934 evaluated, 988 expanded, 110 reopened
[t=0.650858s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.650891s, 431892 KB] g=74, 2941 evaluated, 990 expanded, 110 reopened
[t=0.651281s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.65131s, 431892 KB] g=75, 2943 evaluated, 991 expanded, 110 reopened
[t=0.651877s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.651906s, 431892 KB] g=76, 2946 evaluated, 992 expanded, 110 reopened
[t=0.652834s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.652867s, 431892 KB] g=78, 2951 evaluated, 994 expanded, 110 reopened
[t=0.653794s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.653826s, 431892 KB] g=80, 2956 evaluated, 996 expanded, 110 reopened
[t=0.654215s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.654245s, 431892 KB] g=81, 2958 evaluated, 997 expanded, 110 reopened
[t=0.655s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.655032s, 431892 KB] g=83, 2962 evaluated, 999 expanded, 110 reopened
[t=0.655063s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.655087s, 431892 KB] g=84, 2963 evaluated, 1000 expanded, 110 reopened
[t=0.655113s, 431892 KB] Solution found!
[t=0.65514s, 431892 KB] Actual search time: 0.547858s
unstack g l (1)
stack g b (1)
unstack e f (1)
put-down e (1)
pick-up f (1)
stack f l (1)
unstack g b (1)
stack g e (1)
unstack f l (1)
put-down f (1)
unstack b d (1)
stack b l (1)
unstack d k (1)
put-down d (1)
unstack g e (1)
stack g b (1)
pick-up e (1)
stack e f (1)
unstack k c (1)
put-down k (1)
unstack c i (1)
stack c d (1)
unstack e f (1)
stack e k (1)
unstack i h (1)
put-down i (1)
unstack h a (1)
stack h g (1)
pick-up f (1)
stack f e (1)
pick-up a (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
stack g h (1)
unstack b l (1)
put-down b (1)
unstack l j (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack c d (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack i c (1)
stack i j (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
unstack i j (1)
stack i l (1)
pick-up j (1)
stack j b (1)
unstack e d (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.655164s, 431892 KB] Plan length: 84 step(s).
[t=0.655164s, 431892 KB] Plan cost: 84
[t=0.655164s, 431892 KB] Expanded 1001 state(s).
[t=0.655164s, 431892 KB] Reopened 110 state(s).
[t=0.655164s, 431892 KB] Evaluated 2963 state(s).
[t=0.655164s, 431892 KB] Evaluations: 2963
[t=0.655164s, 431892 KB] Generated 4601 state(s).
[t=0.655164s, 431892 KB] Dead ends: 0 state(s).
[t=0.655164s, 431892 KB] Expanded until last jump: 0 state(s).
[t=0.655164s, 431892 KB] Reopened until last jump: 0 state(s).
[t=0.655164s, 431892 KB] Evaluated until last jump: 1 state(s).
[t=0.655164s, 431892 KB] Generated until last jump: 0 state(s).
[t=0.655164s, 431892 KB] Number of registered states: 2963
[t=0.655164s, 431892 KB] Int hash set load factor: 2963/4096 = 0.723389
[t=0.655164s, 431892 KB] Int hash set resizes: 12
[t=0.655164s, 431892 KB] Search time: 0.628607s
[t=0.655164s, 431892 KB] Total time: 0.655164s
Solution found.
Peak memory: 431892 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8118e-05s, 424928 KB] reading input...
[t=0.00216587s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258712s, 427532 KB] Building successor generator...done!
[t=0.0261486s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261723s, 427532 KB] time for successor generation creation: 0.000166652s
[t=0.0262008s, 427532 KB] Variables: 25
[t=0.0262242s, 427532 KB] FactPairs: 182
[t=0.0262465s, 427532 KB] Bytes per state: 8
[t=0.0264439s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109078s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.109135s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.109161s, 430124 KB] f = 96, 1 evaluated, 0 expanded
[t=0.109189s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.109213s, 430124 KB] pruning method: none
[t=0.121002s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.121053s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.134412s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.134457s, 431096 KB] g=3, 42 evaluated, 14 expanded
[t=0.135044s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.135078s, 431096 KB] g=4, 45 evaluated, 15 expanded
[t=0.135998s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.136029s, 431096 KB] g=5, 50 evaluated, 16 expanded
[t=0.140534s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.140571s, 431096 KB] g=7, 75 evaluated, 25 expanded
[t=0.14239s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.142423s, 431096 KB] g=9, 85 evaluated, 27 expanded
[t=0.144443s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.144479s, 431096 KB] g=9, 96 evaluated, 31 expanded
[t=0.152557s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.152594s, 431096 KB] g=13, 141 evaluated, 46 expanded
[t=0.178091s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.178127s, 431228 KB] g=15, 283 evaluated, 88 expanded, 3 reopened
[t=0.183705s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.18374s, 431228 KB] g=20, 314 evaluated, 95 expanded, 3 reopened
[t=0.184665s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.184696s, 431228 KB] g=21, 319 evaluated, 96 expanded, 3 reopened
[t=0.184904s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.184945s, 431228 KB] g=21, 320 evaluated, 96 expanded, 3 reopened
[t=0.189098s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.189132s, 431228 KB] g=24, 343 evaluated, 101 expanded, 3 reopened
[t=0.189876s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.189907s, 431228 KB] g=25, 347 evaluated, 102 expanded, 3 reopened
[t=0.190845s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.190878s, 431228 KB] g=27, 352 evaluated, 104 expanded, 3 reopened
[t=0.192342s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.192373s, 431228 KB] g=29, 360 evaluated, 106 expanded, 3 reopened
[t=0.193121s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.193151s, 431228 KB] g=30, 364 evaluated, 107 expanded, 3 reopened
[t=0.193717s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.193747s, 431228 KB] g=31, 367 evaluated, 108 expanded, 3 reopened
[t=0.194494s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.194527s, 431228 KB] g=33, 371 evaluated, 110 expanded, 3 reopened
[t=0.195473s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.195504s, 431228 KB] g=33, 376 evaluated, 113 expanded, 3 reopened
[t=0.196609s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.196639s, 431228 KB] g=34, 382 evaluated, 115 expanded, 3 reopened
[t=0.203136s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.203172s, 431228 KB] g=36, 418 evaluated, 131 expanded, 4 reopened
[t=0.203561s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.203591s, 431228 KB] g=37, 420 evaluated, 132 expanded, 4 reopened
[t=0.203981s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.20401s, 431228 KB] g=38, 422 evaluated, 133 expanded, 4 reopened
[t=0.204574s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.204604s, 431228 KB] g=39, 425 evaluated, 134 expanded, 4 reopened
[t=0.205172s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.205202s, 431228 KB] g=41, 428 evaluated, 136 expanded, 4 reopened
[t=0.205768s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.205798s, 431228 KB] g=43, 431 evaluated, 138 expanded, 4 reopened
[t=0.206192s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.206223s, 431228 KB] g=44, 433 evaluated, 139 expanded, 4 reopened
[t=0.206256s, 431228 KB] Solution found!
[t=0.206283s, 431228 KB] Actual search time: 0.0970667s
stack h f (1)
unstack a e (1)
stack a k (1)
unstack e g (1)
stack e l (1)
unstack h f (1)
stack h a (1)
unstack f b (1)
stack f e (1)
unstack b d (1)
put-down b (1)
unstack f e (1)
stack f d (1)
unstack e l (1)
stack e b (1)
unstack f d (1)
stack f e (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack l j (1)
stack l d (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.206308s, 431228 KB] Plan length: 45 step(s).
[t=0.206308s, 431228 KB] Plan cost: 45
[t=0.206308s, 431228 KB] Expanded 141 state(s).
[t=0.206308s, 431228 KB] Reopened 4 state(s).
[t=0.206308s, 431228 KB] Evaluated 434 state(s).
[t=0.206308s, 431228 KB] Evaluations: 434
[t=0.206308s, 431228 KB] Generated 608 state(s).
[t=0.206308s, 431228 KB] Dead ends: 0 state(s).
[t=0.206308s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.206308s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.206308s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.206308s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.206308s, 431228 KB] Number of registered states: 434
[t=0.206308s, 431228 KB] Int hash set load factor: 434/512 = 0.847656
[t=0.206308s, 431228 KB] Int hash set resizes: 9
[t=0.206308s, 431228 KB] Search time: 0.179865s
[t=0.206308s, 431228 KB] Total time: 0.206308s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p8.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7055e-05s, 424928 KB] reading input...
[t=0.00216281s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259943s, 427532 KB] Building successor generator...done!
[t=0.0262789s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263027s, 427532 KB] time for successor generation creation: 0.000171786s
[t=0.0263324s, 427532 KB] Variables: 25
[t=0.0263555s, 427532 KB] FactPairs: 182
[t=0.0263781s, 427532 KB] Bytes per state: 8
[t=0.026576s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099197s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0992483s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992747s, 430124 KB] f = 114, 1 evaluated, 0 expanded
[t=0.0993025s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0993265s, 430124 KB] pruning method: none
[t=0.111232s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.111282s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.117785s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.117828s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.118585s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.118616s, 431096 KB] g=2, 7 evaluated, 2 expanded
[t=0.137386s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.137424s, 431096 KB] g=6, 112 evaluated, 31 expanded, 1 reopened
[t=0.137636s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.137666s, 431096 KB] g=6, 113 evaluated, 31 expanded, 1 reopened
[t=0.16937s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.169409s, 431228 KB] g=18, 290 evaluated, 81 expanded, 4 reopened
[t=0.173219s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.173262s, 431228 KB] g=14, 311 evaluated, 88 expanded, 4 reopened
[t=0.215478s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.215517s, 431360 KB] g=16, 547 evaluated, 155 expanded, 5 reopened
[t=0.22002s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.220054s, 431360 KB] g=20, 572 evaluated, 162 expanded, 6 reopened
[t=0.284771s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.284812s, 431492 KB] g=22, 934 evaluated, 330 expanded, 75 reopened
[t=0.550774s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.550821s, 431768 KB] g=26, 2429 evaluated, 783 expanded, 121 reopened
[t=0.556728s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.556769s, 431768 KB] g=29, 2462 evaluated, 791 expanded, 121 reopened
[t=0.557872s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.557903s, 431768 KB] g=31, 2468 evaluated, 793 expanded, 121 reopened
[t=0.573924s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.573964s, 431768 KB] g=34, 2558 evaluated, 816 expanded, 121 reopened
[t=0.57418s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.57421s, 431768 KB] g=35, 2559 evaluated, 817 expanded, 121 reopened
[t=0.586179s, 431900 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.58622s, 431900 KB] g=40, 2626 evaluated, 834 expanded, 121 reopened
[t=0.630499s, 431900 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.630541s, 431900 KB] g=40, 2874 evaluated, 916 expanded, 127 reopened
[t=0.631471s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.631508s, 432032 KB] g=41, 2879 evaluated, 918 expanded, 127 reopened
[t=0.634047s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.634081s, 432032 KB] g=42, 2893 evaluated, 922 expanded, 127 reopened
[t=0.635549s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.635581s, 432032 KB] g=43, 2901 evaluated, 926 expanded, 127 reopened
[t=0.636166s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.636201s, 432032 KB] g=44, 2904 evaluated, 927 expanded, 127 reopened
[t=0.638193s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.638232s, 432032 KB] g=46, 2915 evaluated, 930 expanded, 127 reopened
[t=0.639334s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.639365s, 432032 KB] g=47, 2921 evaluated, 931 expanded, 127 reopened
[t=0.639579s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.639608s, 432032 KB] g=48, 2922 evaluated, 932 expanded, 127 reopened
[t=0.641261s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.641295s, 432032 KB] g=50, 2931 evaluated, 934 expanded, 127 reopened
[t=0.642579s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.64261s, 432032 KB] g=50, 2938 evaluated, 936 expanded, 127 reopened
[t=0.648174s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.648209s, 432032 KB] g=50, 2969 evaluated, 944 expanded, 127 reopened
[t=0.653236s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.653274s, 432032 KB] g=55, 2997 evaluated, 952 expanded, 127 reopened
[t=0.654196s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.654226s, 432032 KB] g=56, 3002 evaluated, 953 expanded, 127 reopened
[t=0.654973s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.655003s, 432032 KB] g=57, 3006 evaluated, 954 expanded, 127 reopened
[t=0.65557s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.6556s, 432032 KB] g=58, 3009 evaluated, 955 expanded, 127 reopened
[t=0.655809s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.655841s, 432032 KB] g=58, 3010 evaluated, 955 expanded, 127 reopened
[t=0.657056s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.657092s, 432032 KB] g=60, 3016 evaluated, 958 expanded, 127 reopened
[t=0.657677s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.657711s, 432032 KB] g=61, 3019 evaluated, 959 expanded, 127 reopened
[t=0.658106s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.658136s, 432032 KB] g=62, 3021 evaluated, 960 expanded, 127 reopened
[t=0.658524s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.658555s, 432032 KB] g=63, 3023 evaluated, 961 expanded, 127 reopened
[t=0.658945s, 432032 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.658981s, 432032 KB] g=64, 3025 evaluated, 962 expanded, 127 reopened
[t=0.659014s, 432032 KB] Solution found!
[t=0.659042s, 432032 KB] Actual search time: 0.559711s
put-down g (1)
unstack l a (1)
stack l e (1)
unstack a h (1)
stack a l (1)
pick-up g (1)
stack g a (1)
unstack i c (1)
put-down i (1)
unstack d b (1)
put-down d (1)
unstack g a (1)
stack g d (1)
unstack b k (1)
stack b i (1)
pick-up c (1)
stack c h (1)
unstack a l (1)
stack a k (1)
unstack l e (1)
stack l b (1)
pick-up e (1)
stack e l (1)
unstack c h (1)
put-down c (1)
unstack g d (1)
put-down g (1)
pick-up c (1)
stack c d (1)
unstack a k (1)
put-down a (1)
unstack k f (1)
stack k c (1)
pick-up h (1)
stack h g (1)
unstack f j (1)
stack f e (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack e l (1)
stack e j (1)
unstack c d (1)
put-down c (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j d (1)
unstack l b (1)
put-down l (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.659067s, 432032 KB] Plan length: 65 step(s).
[t=0.659067s, 432032 KB] Plan cost: 65
[t=0.659067s, 432032 KB] Expanded 964 state(s).
[t=0.659067s, 432032 KB] Reopened 127 state(s).
[t=0.659067s, 432032 KB] Evaluated 3026 state(s).
[t=0.659067s, 432032 KB] Evaluations: 3026
[t=0.659067s, 432032 KB] Generated 4781 state(s).
[t=0.659067s, 432032 KB] Dead ends: 0 state(s).
[t=0.659067s, 432032 KB] Expanded until last jump: 0 state(s).
[t=0.659067s, 432032 KB] Reopened until last jump: 0 state(s).
[t=0.659067s, 432032 KB] Evaluated until last jump: 1 state(s).
[t=0.659067s, 432032 KB] Generated until last jump: 0 state(s).
[t=0.659067s, 432032 KB] Number of registered states: 3026
[t=0.659067s, 432032 KB] Int hash set load factor: 3026/4096 = 0.73877
[t=0.659067s, 432032 KB] Int hash set resizes: 12
[t=0.659067s, 432032 KB] Search time: 0.632492s
[t=0.659067s, 432032 KB] Total time: 0.659067s
Solution found.
Peak memory: 432032 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5919e-05s, 424928 KB] reading input...
[t=0.00215006s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260714s, 427532 KB] Building successor generator...done!
[t=0.0263498s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263735s, 427532 KB] time for successor generation creation: 0.000168366s
[t=0.0264018s, 427532 KB] Variables: 25
[t=0.0264469s, 427532 KB] FactPairs: 182
[t=0.02647s, 427532 KB] Bytes per state: 8
[t=0.0266664s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106941s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.106996s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.107022s, 430124 KB] f = 109, 1 evaluated, 0 expanded
[t=0.10705s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.107074s, 430124 KB] pruning method: none
[t=0.125382s, 431096 KB] f = 144, 3 evaluated, 1 expanded
[t=0.126575s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.126607s, 431096 KB] g=4, 9 evaluated, 4 expanded
[t=0.132153s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.132187s, 431096 KB] g=13, 38 evaluated, 22 expanded, 2 reopened
[t=0.132597s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.132626s, 431096 KB] g=14, 40 evaluated, 23 expanded, 2 reopened
[t=0.133221s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.13325s, 431096 KB] g=15, 43 evaluated, 24 expanded, 2 reopened
[t=0.138008s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.138043s, 431096 KB] g=17, 68 evaluated, 34 expanded, 2 reopened
[t=0.138265s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.138305s, 431096 KB] g=18, 69 evaluated, 35 expanded, 2 reopened
[t=0.160088s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.160129s, 431228 KB] g=31, 184 evaluated, 76 expanded, 2 reopened
[t=0.162602s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.162632s, 431228 KB] g=33, 197 evaluated, 80 expanded, 2 reopened
[t=0.163255s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.163289s, 431228 KB] g=34, 200 evaluated, 81 expanded, 2 reopened
[t=0.167285s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.167321s, 431228 KB] g=37, 221 evaluated, 86 expanded, 2 reopened
[t=0.167917s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.167946s, 431228 KB] g=38, 224 evaluated, 87 expanded, 2 reopened
[t=0.168351s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.168382s, 431228 KB] g=38, 226 evaluated, 87 expanded, 2 reopened
[t=0.173491s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.173523s, 431228 KB] g=41, 253 evaluated, 94 expanded, 2 reopened
[t=0.17412s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.174149s, 431228 KB] g=42, 256 evaluated, 95 expanded, 2 reopened
[t=0.192269s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.192304s, 431228 KB] g=46, 352 evaluated, 118 expanded, 2 reopened
[t=0.194029s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.194062s, 431228 KB] g=48, 361 evaluated, 121 expanded, 2 reopened
[t=0.194849s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.19489s, 431228 KB] g=49, 365 evaluated, 122 expanded, 2 reopened
[t=0.197739s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.197773s, 431228 KB] g=53, 380 evaluated, 126 expanded, 2 reopened
[t=0.263824s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.263865s, 431360 KB] g=57, 731 evaluated, 222 expanded, 4 reopened
[t=0.264277s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.264306s, 431360 KB] g=58, 733 evaluated, 223 expanded, 4 reopened
[t=0.267169s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.267206s, 431360 KB] g=60, 748 evaluated, 227 expanded, 4 reopened
[t=0.268188s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.268218s, 431360 KB] g=61, 753 evaluated, 228 expanded, 4 reopened
[t=0.272018s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.272051s, 431360 KB] g=64, 773 evaluated, 234 expanded, 4 reopened
[t=0.273584s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.273614s, 431360 KB] g=66, 781 evaluated, 236 expanded, 4 reopened
[t=0.276655s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.276691s, 431360 KB] g=68, 797 evaluated, 241 expanded, 4 reopened
[t=0.291279s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.291316s, 431492 KB] g=70, 874 evaluated, 265 expanded, 4 reopened
[t=0.29173s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.291762s, 431492 KB] g=71, 876 evaluated, 266 expanded, 4 reopened
[t=0.292549s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.292578s, 431492 KB] g=72, 880 evaluated, 267 expanded, 4 reopened
[t=0.29374s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.29377s, 431492 KB] g=73, 886 evaluated, 269 expanded, 4 reopened
[t=0.294559s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.294591s, 431492 KB] g=74, 890 evaluated, 270 expanded, 4 reopened
[t=0.296704s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.296736s, 431492 KB] g=75, 901 evaluated, 273 expanded, 4 reopened
[t=0.299423s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.29946s, 431492 KB] g=77, 915 evaluated, 277 expanded, 4 reopened
[t=0.299866s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.299895s, 431492 KB] g=77, 917 evaluated, 277 expanded, 4 reopened
[t=0.300684s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.300713s, 431492 KB] g=79, 921 evaluated, 279 expanded, 4 reopened
[t=0.301305s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.301337s, 431492 KB] g=80, 924 evaluated, 280 expanded, 4 reopened
[t=0.301747s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.301776s, 431492 KB] g=81, 926 evaluated, 281 expanded, 4 reopened
[t=0.302182s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.30222s, 431492 KB] g=82, 928 evaluated, 282 expanded, 4 reopened
[t=0.302631s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.302661s, 431492 KB] g=83, 930 evaluated, 283 expanded, 4 reopened
[t=0.302694s, 431492 KB] Solution found!
[t=0.302721s, 431492 KB] Actual search time: 0.195644s
unstack h f (1)
put-down h (1)
unstack f l (1)
stack f j (1)
pick-up h (1)
stack h l (1)
unstack f j (1)
stack f h (1)
unstack j i (1)
put-down j (1)
unstack f h (1)
stack f i (1)
unstack h l (1)
stack h f (1)
unstack l c (1)
stack l j (1)
unstack h f (1)
stack h l (1)
unstack f i (1)
stack f c (1)
unstack h l (1)
stack h f (1)
unstack i k (1)
put-down i (1)
unstack k e (1)
stack k i (1)
unstack l j (1)
stack l h (1)
unstack e d (1)
stack e k (1)
unstack d b (1)
stack d j (1)
unstack b g (1)
stack b d (1)
unstack g a (1)
put-down g (1)
unstack l h (1)
stack l b (1)
unstack h f (1)
stack h a (1)
unstack f c (1)
stack f e (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack l b (1)
stack l c (1)
unstack b d (1)
put-down b (1)
unstack l c (1)
stack l d (1)
pick-up c (1)
stack c b (1)
unstack f e (1)
stack f l (1)
unstack e k (1)
stack e c (1)
unstack f l (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b c (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.302746s, 431492 KB] Plan length: 84 step(s).
[t=0.302746s, 431492 KB] Plan cost: 84
[t=0.302746s, 431492 KB] Expanded 285 state(s).
[t=0.302746s, 431492 KB] Reopened 4 state(s).
[t=0.302746s, 431492 KB] Evaluated 931 state(s).
[t=0.302746s, 431492 KB] Evaluations: 931
[t=0.302746s, 431492 KB] Generated 1256 state(s).
[t=0.302746s, 431492 KB] Dead ends: 0 state(s).
[t=0.302746s, 431492 KB] Expanded until last jump: 1 state(s).
[t=0.302746s, 431492 KB] Reopened until last jump: 0 state(s).
[t=0.302746s, 431492 KB] Evaluated until last jump: 3 state(s).
[t=0.302746s, 431492 KB] Generated until last jump: 2 state(s).
[t=0.302746s, 431492 KB] Number of registered states: 931
[t=0.302746s, 431492 KB] Int hash set load factor: 931/1024 = 0.90918
[t=0.302746s, 431492 KB] Int hash set resizes: 10
[t=0.302746s, 431492 KB] Search time: 0.27608s
[t=0.302746s, 431492 KB] Total time: 0.302746s
Solution found.
Peak memory: 431492 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p10.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7509e-05s, 424928 KB] reading input...
[t=0.0021657s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257992s, 427532 KB] Building successor generator...done!
[t=0.0260832s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261068s, 427532 KB] time for successor generation creation: 0.000169347s
[t=0.0261356s, 427532 KB] Variables: 25
[t=0.0261579s, 427532 KB] FactPairs: 182
[t=0.0261805s, 427532 KB] Bytes per state: 8
[t=0.0263751s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980869s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0981395s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981649s, 430124 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0981931s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0982171s, 430124 KB] pruning method: none
[t=0.110076s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.110127s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.117812s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.117856s, 431096 KB] g=3, 10 evaluated, 3 expanded
[t=0.118611s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.118642s, 431096 KB] g=4, 14 evaluated, 4 expanded
[t=0.118851s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.118891s, 431096 KB] g=4, 15 evaluated, 4 expanded
[t=0.119285s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.119315s, 431096 KB] g=5, 17 evaluated, 5 expanded
[t=0.122023s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.122056s, 431096 KB] g=8, 32 evaluated, 9 expanded
[t=0.12458s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.124611s, 431096 KB] g=10, 46 evaluated, 13 expanded
[t=0.134499s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.134534s, 431096 KB] g=11, 101 evaluated, 31 expanded
[t=0.151372s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.151406s, 431096 KB] g=16, 195 evaluated, 61 expanded
[t=0.155364s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.155397s, 431096 KB] g=13, 217 evaluated, 68 expanded
[t=0.157387s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.157417s, 431228 KB] g=14, 228 evaluated, 71 expanded
[t=0.157629s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.157661s, 431228 KB] g=15, 229 evaluated, 72 expanded
[t=0.165048s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.165085s, 431228 KB] g=18, 270 evaluated, 83 expanded
[t=0.16603s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.166063s, 431228 KB] g=20, 275 evaluated, 85 expanded
[t=0.166813s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.166843s, 431228 KB] g=21, 279 evaluated, 86 expanded
[t=0.167767s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.167799s, 431228 KB] g=22, 284 evaluated, 87 expanded
[t=0.173572s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.173604s, 431228 KB] g=26, 316 evaluated, 98 expanded
[t=0.174179s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.174213s, 431228 KB] g=27, 319 evaluated, 99 expanded
[t=0.175141s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.175175s, 431228 KB] g=29, 324 evaluated, 101 expanded
[t=0.176101s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.176138s, 431228 KB] g=31, 329 evaluated, 103 expanded
[t=0.176886s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.176916s, 431228 KB] g=32, 333 evaluated, 104 expanded
[t=0.179807s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.179842s, 431228 KB] g=35, 349 evaluated, 109 expanded
[t=0.181304s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.181337s, 431228 KB] g=36, 357 evaluated, 112 expanded
[t=0.182623s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.182657s, 431228 KB] g=38, 364 evaluated, 114 expanded
[t=0.19321s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.193245s, 431228 KB] g=41, 423 evaluated, 131 expanded
[t=0.193629s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.193659s, 431228 KB] g=41, 425 evaluated, 131 expanded
[t=0.194423s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.194456s, 431228 KB] g=42, 429 evaluated, 132 expanded
[t=0.195202s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.195235s, 431228 KB] g=43, 433 evaluated, 133 expanded
[t=0.196158s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.196189s, 431228 KB] g=44, 438 evaluated, 134 expanded
[t=0.196754s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.196784s, 431228 KB] g=45, 441 evaluated, 135 expanded
[t=0.197713s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.197744s, 431228 KB] g=46, 446 evaluated, 137 expanded
[t=0.198667s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.198699s, 431228 KB] g=47, 451 evaluated, 138 expanded
[t=0.202682s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.202715s, 431228 KB] g=51, 473 evaluated, 147 expanded
[t=0.203108s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.203138s, 431228 KB] g=52, 475 evaluated, 148 expanded
[t=0.203529s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.203559s, 431228 KB] g=53, 477 evaluated, 149 expanded
[t=0.203591s, 431228 KB] Solution found!
[t=0.203618s, 431228 KB] Actual search time: 0.105398s
unstack g b (1)
stack g j (1)
unstack b k (1)
stack b l (1)
unstack c e (1)
stack c b (1)
unstack g j (1)
stack g k (1)
unstack e a (1)
stack e g (1)
unstack a h (1)
stack a j (1)
unstack e g (1)
stack e a (1)
unstack g k (1)
put-down g (1)
unstack e a (1)
stack e k (1)
pick-up h (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack e k (1)
stack e c (1)
pick-up j (1)
stack j e (1)
unstack k i (1)
stack k j (1)
unstack i f (1)
put-down i (1)
unstack f d (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j i (1)
unstack e c (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.203643s, 431228 KB] Plan length: 54 step(s).
[t=0.203643s, 431228 KB] Plan cost: 54
[t=0.203643s, 431228 KB] Expanded 151 state(s).
[t=0.203643s, 431228 KB] Reopened 0 state(s).
[t=0.203643s, 431228 KB] Evaluated 478 state(s).
[t=0.203643s, 431228 KB] Evaluations: 478
[t=0.203643s, 431228 KB] Generated 639 state(s).
[t=0.203643s, 431228 KB] Dead ends: 0 state(s).
[t=0.203643s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.203643s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.203643s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.203643s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.203643s, 431228 KB] Number of registered states: 478
[t=0.203643s, 431228 KB] Int hash set load factor: 478/512 = 0.933594
[t=0.203643s, 431228 KB] Int hash set resizes: 9
[t=0.203643s, 431228 KB] Search time: 0.177269s
[t=0.203643s, 431228 KB] Total time: 0.203643s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p11.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.025s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5389e-05s, 424928 KB] reading input...
[t=0.00213556s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257454s, 427532 KB] Building successor generator...done!
[t=0.0260312s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260548s, 427532 KB] time for successor generation creation: 0.000172232s
[t=0.0260833s, 427532 KB] Variables: 25
[t=0.0261065s, 427532 KB] FactPairs: 182
[t=0.0261287s, 427532 KB] Bytes per state: 8
[t=0.0263247s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978905s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0979447s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979708s, 430124 KB] f = 132, 1 evaluated, 0 expanded
[t=0.097999s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0980226s, 430124 KB] pruning method: none
[t=0.109804s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.109856s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.116281s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.116324s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.11672s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.11675s, 431096 KB] g=1, 5 evaluated, 1 expanded
[t=0.117876s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.117908s, 431096 KB] g=2, 11 evaluated, 3 expanded
[t=0.119553s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.119583s, 431096 KB] g=4, 20 evaluated, 5 expanded
[t=0.121052s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.121082s, 431096 KB] g=5, 28 evaluated, 6 expanded
[t=0.124907s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.12494s, 431096 KB] g=10, 49 evaluated, 12 expanded
[t=0.135054s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.135088s, 431096 KB] g=11, 105 evaluated, 27 expanded
[t=0.14091s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.140944s, 431096 KB] g=14, 137 evaluated, 34 expanded
[t=0.14116s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.141191s, 431096 KB] g=15, 138 evaluated, 35 expanded
[t=0.144468s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.144501s, 431096 KB] g=16, 156 evaluated, 40 expanded
[t=0.145073s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.145106s, 431096 KB] g=17, 159 evaluated, 41 expanded
[t=0.159728s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.159762s, 431228 KB] g=24, 240 evaluated, 61 expanded
[t=0.164493s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.164526s, 431228 KB] g=27, 266 evaluated, 67 expanded
[t=0.166898s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.166933s, 431228 KB] g=27, 279 evaluated, 70 expanded
[t=0.169681s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.169713s, 431228 KB] g=27, 294 evaluated, 73 expanded
[t=0.171183s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.171215s, 431228 KB] g=29, 302 evaluated, 75 expanded
[t=0.173039s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.17307s, 431228 KB] g=31, 312 evaluated, 77 expanded
[t=0.174903s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.174938s, 431228 KB] g=33, 322 evaluated, 79 expanded
[t=0.176764s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.176797s, 431228 KB] g=35, 332 evaluated, 81 expanded
[t=0.177184s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.177215s, 431228 KB] g=35, 334 evaluated, 81 expanded
[t=0.177425s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.177453s, 431228 KB] g=35, 335 evaluated, 81 expanded
[t=0.177858s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.177889s, 431228 KB] g=36, 337 evaluated, 82 expanded
[t=0.179899s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.17993s, 431228 KB] g=37, 348 evaluated, 85 expanded
[t=0.183572s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.183606s, 431228 KB] g=40, 368 evaluated, 91 expanded
[t=0.183815s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.183844s, 431228 KB] g=40, 369 evaluated, 91 expanded
[t=0.185131s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.185165s, 431228 KB] g=42, 376 evaluated, 93 expanded
[t=0.187011s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.187043s, 431228 KB] g=44, 386 evaluated, 96 expanded
[t=0.187793s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.187826s, 431228 KB] g=45, 390 evaluated, 97 expanded
[t=0.193054s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.193091s, 431228 KB] g=45, 419 evaluated, 105 expanded
[t=0.194573s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.194605s, 431228 KB] g=46, 427 evaluated, 107 expanded
[t=0.195179s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.195211s, 431228 KB] g=48, 430 evaluated, 109 expanded
[t=0.195422s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.195451s, 431228 KB] g=48, 431 evaluated, 109 expanded
[t=0.196018s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.196047s, 431228 KB] g=49, 434 evaluated, 110 expanded
[t=0.197339s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.197372s, 431228 KB] g=52, 441 evaluated, 114 expanded
[t=0.197955s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.197987s, 431228 KB] g=54, 444 evaluated, 116 expanded
[t=0.199461s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.199491s, 431228 KB] g=57, 452 evaluated, 122 expanded
[t=0.199524s, 431228 KB] Solution found!
[t=0.199551s, 431228 KB] Actual search time: 0.101525s
unstack l e (1)
stack l g (1)
unstack e h (1)
stack e b (1)
unstack l g (1)
stack l h (1)
pick-up g (1)
stack g k (1)
unstack l h (1)
put-down l (1)
unstack e b (1)
stack e d (1)
pick-up b (1)
stack b l (1)
unstack e d (1)
stack e b (1)
unstack d i (1)
put-down d (1)
unstack h f (1)
stack h g (1)
unstack f j (1)
stack f i (1)
unstack j a (1)
stack j d (1)
unstack f i (1)
stack f e (1)
unstack h g (1)
stack h a (1)
unstack g k (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
pick-up k (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.199576s, 431228 KB] Plan length: 58 step(s).
[t=0.199576s, 431228 KB] Plan cost: 58
[t=0.199576s, 431228 KB] Expanded 124 state(s).
[t=0.199576s, 431228 KB] Reopened 0 state(s).
[t=0.199576s, 431228 KB] Evaluated 453 state(s).
[t=0.199576s, 431228 KB] Evaluations: 453
[t=0.199576s, 431228 KB] Generated 578 state(s).
[t=0.199576s, 431228 KB] Dead ends: 0 state(s).
[t=0.199576s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.199576s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.199576s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.199576s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.199576s, 431228 KB] Number of registered states: 453
[t=0.199576s, 431228 KB] Int hash set load factor: 453/512 = 0.884766
[t=0.199576s, 431228 KB] Int hash set resizes: 9
[t=0.199576s, 431228 KB] Search time: 0.173252s
[t=0.199576s, 431228 KB] Total time: 0.199576s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p12.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6449e-05s, 424928 KB] reading input...
[t=0.00218613s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261295s, 427532 KB] Building successor generator...done!
[t=0.0264078s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264311s, 427532 KB] time for successor generation creation: 0.000166771s
[t=0.0264594s, 427532 KB] Variables: 25
[t=0.0264827s, 427532 KB] FactPairs: 182
[t=0.0265046s, 427532 KB] Bytes per state: 8
[t=0.0267009s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0989685s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.0990211s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990466s, 430124 KB] f = 110, 1 evaluated, 0 expanded
[t=0.0990741s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.0990985s, 430124 KB] pruning method: none
[t=0.111012s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.111064s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.119216s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.11926s, 431096 KB] g=3, 12 evaluated, 3 expanded
[t=0.121801s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.121832s, 431096 KB] g=5, 26 evaluated, 5 expanded
[t=0.123147s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.12318s, 431096 KB] g=6, 33 evaluated, 6 expanded
[t=0.123753s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.123784s, 431096 KB] g=7, 36 evaluated, 7 expanded
[t=0.125427s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.125462s, 431096 KB] g=8, 45 evaluated, 8 expanded
[t=0.125856s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.125886s, 431096 KB] g=9, 47 evaluated, 9 expanded
[t=0.127368s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.1274s, 431096 KB] g=10, 55 evaluated, 10 expanded
[t=0.130321s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.130352s, 431096 KB] g=12, 71 evaluated, 12 expanded
[t=0.130932s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.130966s, 431096 KB] g=13, 74 evaluated, 13 expanded
[t=0.132452s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.132483s, 431096 KB] g=14, 82 evaluated, 14 expanded
[t=0.13558s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.135617s, 431096 KB] g=15, 99 evaluated, 17 expanded
[t=0.142671s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.142709s, 431228 KB] g=17, 138 evaluated, 25 expanded
[t=0.142933s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.142965s, 431228 KB] g=17, 139 evaluated, 25 expanded
[t=0.145695s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.145726s, 431228 KB] g=19, 154 evaluated, 29 expanded
[t=0.161556s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.161593s, 431228 KB] g=22, 242 evaluated, 52 expanded, 1 reopened
[t=0.165094s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.165129s, 431228 KB] g=26, 261 evaluated, 58 expanded, 1 reopened
[t=0.165521s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.165551s, 431228 KB] g=26, 263 evaluated, 58 expanded, 1 reopened
[t=0.169912s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.169947s, 431228 KB] g=30, 287 evaluated, 65 expanded, 1 reopened
[t=0.171794s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.17183s, 431228 KB] g=32, 297 evaluated, 67 expanded, 1 reopened
[t=0.173121s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.173151s, 431228 KB] g=34, 304 evaluated, 69 expanded, 1 reopened
[t=0.173723s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.173755s, 431228 KB] g=35, 307 evaluated, 70 expanded, 1 reopened
[t=0.175763s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.175795s, 431228 KB] g=37, 318 evaluated, 73 expanded, 1 reopened
[t=0.178337s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.178368s, 431228 KB] g=40, 332 evaluated, 76 expanded, 1 reopened
[t=0.178576s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.178605s, 431228 KB] g=40, 333 evaluated, 76 expanded, 1 reopened
[t=0.179549s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.179589s, 431228 KB] g=41, 338 evaluated, 77 expanded, 1 reopened
[t=0.18016s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.18019s, 431228 KB] g=42, 341 evaluated, 78 expanded, 1 reopened
[t=0.181295s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.181326s, 431228 KB] g=44, 347 evaluated, 80 expanded, 1 reopened
[t=0.187647s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.187682s, 431228 KB] g=46, 382 evaluated, 91 expanded, 1 reopened
[t=0.197219s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.197256s, 431228 KB] g=48, 435 evaluated, 110 expanded, 1 reopened
[t=0.197835s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.197868s, 431228 KB] g=51, 438 evaluated, 113 expanded, 1 reopened
[t=0.198082s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.198111s, 431228 KB] g=52, 439 evaluated, 114 expanded, 1 reopened
[t=0.198866s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.198898s, 431228 KB] g=54, 443 evaluated, 116 expanded, 1 reopened
[t=0.199827s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.19986s, 431228 KB] g=56, 448 evaluated, 118 expanded, 1 reopened
[t=0.201865s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.201901s, 431360 KB] g=57, 459 evaluated, 123 expanded, 1 reopened
[t=0.203562s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.203594s, 431360 KB] g=60, 468 evaluated, 127 expanded, 1 reopened
[t=0.203987s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.204016s, 431360 KB] g=61, 470 evaluated, 128 expanded, 1 reopened
[t=0.204225s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.204257s, 431360 KB] g=62, 471 evaluated, 129 expanded, 1 reopened
[t=0.20519s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.205223s, 431360 KB] g=64, 476 evaluated, 131 expanded, 1 reopened
[t=0.205616s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.205646s, 431360 KB] g=65, 478 evaluated, 132 expanded, 1 reopened
[t=0.206407s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.206444s, 431360 KB] g=68, 483 evaluated, 135 expanded, 1 reopened
[t=0.206471s, 431360 KB] Solution found!
[t=0.206497s, 431360 KB] Actual search time: 0.107396s
unstack a h (1)
put-down a (1)
unstack e b (1)
stack e f (1)
unstack k g (1)
put-down k (1)
unstack b c (1)
stack b l (1)
unstack g j (1)
stack g b (1)
unstack e f (1)
stack e k (1)
pick-up f (1)
stack f e (1)
pick-up h (1)
stack h g (1)
pick-up a (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
stack g h (1)
unstack c d (1)
stack c b (1)
unstack d i (1)
stack d j (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up i (1)
stack i c (1)
unstack a f (1)
stack a h (1)
unstack d j (1)
put-down d (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e j (1)
pick-up k (1)
stack k f (1)
pick-up d (1)
stack d i (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
stack i d (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l b (1)
unstack i d (1)
put-down i (1)
unstack l b (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.206523s, 431360 KB] Plan length: 68 step(s).
[t=0.206523s, 431360 KB] Plan cost: 68
[t=0.206523s, 431360 KB] Expanded 136 state(s).
[t=0.206523s, 431360 KB] Reopened 1 state(s).
[t=0.206523s, 431360 KB] Evaluated 483 state(s).
[t=0.206523s, 431360 KB] Evaluations: 483
[t=0.206523s, 431360 KB] Generated 631 state(s).
[t=0.206523s, 431360 KB] Dead ends: 0 state(s).
[t=0.206523s, 431360 KB] Expanded until last jump: 0 state(s).
[t=0.206523s, 431360 KB] Reopened until last jump: 0 state(s).
[t=0.206523s, 431360 KB] Evaluated until last jump: 1 state(s).
[t=0.206523s, 431360 KB] Generated until last jump: 0 state(s).
[t=0.206523s, 431360 KB] Number of registered states: 483
[t=0.206523s, 431360 KB] Int hash set load factor: 483/512 = 0.943359
[t=0.206523s, 431360 KB] Int hash set resizes: 9
[t=0.206523s, 431360 KB] Search time: 0.179822s
[t=0.206523s, 431360 KB] Total time: 0.206523s
Solution found.
Peak memory: 431360 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p13.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6255e-05s, 424928 KB] reading input...
[t=0.00217374s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261035s, 427532 KB] Building successor generator...done!
[t=0.026381s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264044s, 427532 KB] time for successor generation creation: 0.000166665s
[t=0.0264328s, 427532 KB] Variables: 25
[t=0.0264555s, 427532 KB] FactPairs: 182
[t=0.0264775s, 427532 KB] Bytes per state: 8
[t=0.0266723s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993453s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0993966s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994222s, 430124 KB] f = 124, 1 evaluated, 0 expanded
[t=0.0994501s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0994738s, 430124 KB] pruning method: none
[t=0.117853s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.117904s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.118486s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.118517s, 431096 KB] g=2, 6 evaluated, 2 expanded
[t=0.118915s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.118944s, 431096 KB] g=3, 8 evaluated, 3 expanded
[t=0.119694s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119724s, 431096 KB] g=4, 12 evaluated, 4 expanded
[t=0.120828s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.120858s, 431096 KB] g=6, 18 evaluated, 6 expanded
[t=0.121246s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.121276s, 431096 KB] g=6, 20 evaluated, 6 expanded
[t=0.121482s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.121521s, 431096 KB] g=6, 21 evaluated, 6 expanded
[t=0.122808s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.122841s, 431096 KB] g=7, 28 evaluated, 8 expanded
[t=0.123586s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.123617s, 431096 KB] g=8, 32 evaluated, 9 expanded
[t=0.125781s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.125813s, 431096 KB] g=10, 44 evaluated, 12 expanded
[t=0.127091s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.127121s, 431096 KB] g=11, 51 evaluated, 14 expanded
[t=0.128221s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.128251s, 431096 KB] g=13, 57 evaluated, 16 expanded
[t=0.139296s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.13933s, 431096 KB] g=12, 118 evaluated, 37 expanded, 1 reopened
[t=0.141531s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.141564s, 431096 KB] g=14, 130 evaluated, 40 expanded, 1 reopened
[t=0.142863s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.142898s, 431096 KB] g=15, 137 evaluated, 41 expanded, 1 reopened
[t=0.145076s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.145106s, 431096 KB] g=17, 149 evaluated, 44 expanded, 1 reopened
[t=0.151933s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.151968s, 431228 KB] g=20, 187 evaluated, 52 expanded, 1 reopened
[t=0.152539s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.152569s, 431228 KB] g=21, 190 evaluated, 53 expanded, 1 reopened
[t=0.153878s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.153912s, 431228 KB] g=23, 197 evaluated, 55 expanded, 1 reopened
[t=0.155552s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.155585s, 431228 KB] g=25, 206 evaluated, 58 expanded, 1 reopened
[t=0.156509s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.156539s, 431228 KB] g=26, 211 evaluated, 59 expanded, 1 reopened
[t=0.15783s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.157867s, 431228 KB] g=28, 218 evaluated, 61 expanded, 1 reopened
[t=0.165424s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.165461s, 431228 KB] g=29, 260 evaluated, 79 expanded, 1 reopened
[t=0.166412s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.166445s, 431228 KB] g=30, 265 evaluated, 80 expanded, 1 reopened
[t=0.168262s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.168292s, 431228 KB] g=33, 275 evaluated, 84 expanded, 1 reopened
[t=0.168503s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.168536s, 431228 KB] g=34, 276 evaluated, 85 expanded, 1 reopened
[t=0.16946s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.169494s, 431228 KB] g=35, 281 evaluated, 86 expanded, 1 reopened
[t=0.169718s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.169749s, 431228 KB] g=36, 282 evaluated, 87 expanded, 1 reopened
[t=0.17014s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.170169s, 431228 KB] g=37, 284 evaluated, 88 expanded, 1 reopened
[t=0.170565s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.170594s, 431228 KB] g=39, 287 evaluated, 90 expanded, 1 reopened
[t=0.17062s, 431228 KB] Solution found!
[t=0.170647s, 431228 KB] Actual search time: 0.0711693s
stack a b (1)
unstack g e (1)
put-down g (1)
unstack e j (1)
put-down e (1)
unstack h l (1)
stack h a (1)
unstack j f (1)
stack j l (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack b d (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d i (1)
stack d b (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.170672s, 431228 KB] Plan length: 39 step(s).
[t=0.170672s, 431228 KB] Plan cost: 39
[t=0.170672s, 431228 KB] Expanded 91 state(s).
[t=0.170672s, 431228 KB] Reopened 1 state(s).
[t=0.170672s, 431228 KB] Evaluated 287 state(s).
[t=0.170672s, 431228 KB] Evaluations: 287
[t=0.170672s, 431228 KB] Generated 388 state(s).
[t=0.170672s, 431228 KB] Dead ends: 0 state(s).
[t=0.170672s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.170672s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.170672s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.170672s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.170672s, 431228 KB] Number of registered states: 287
[t=0.170672s, 431228 KB] Int hash set load factor: 287/512 = 0.560547
[t=0.170672s, 431228 KB] Int hash set resizes: 9
[t=0.170672s, 431228 KB] Search time: 0.144s
[t=0.170672s, 431228 KB] Total time: 0.170672s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p14.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9145e-05s, 424928 KB] reading input...
[t=0.00215464s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259582s, 427532 KB] Building successor generator...done!
[t=0.0262365s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262602s, 427532 KB] time for successor generation creation: 0.000166537s
[t=0.0262885s, 427532 KB] Variables: 25
[t=0.0263114s, 427532 KB] FactPairs: 182
[t=0.0263336s, 427532 KB] Bytes per state: 8
[t=0.0265305s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981738s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.0982248s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982503s, 430124 KB] f = 94, 1 evaluated, 0 expanded
[t=0.0982773s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.0983111s, 430124 KB] pruning method: none
[t=0.116852s, 431096 KB] f = 101, 5 evaluated, 1 expanded
[t=0.117089s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.11712s, 431096 KB] g=2, 6 evaluated, 2 expanded
[t=0.117865s, 431096 KB] f = 104, 10 evaluated, 3 expanded
[t=0.118259s, 431096 KB] f = 105, 12 evaluated, 4 expanded
[t=0.119381s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.119414s, 431096 KB] g=5, 18 evaluated, 6 expanded
[t=0.123185s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.123219s, 431096 KB] g=7, 39 evaluated, 12 expanded
[t=0.123782s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.123812s, 431096 KB] g=8, 42 evaluated, 13 expanded
[t=0.124555s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.124584s, 431096 KB] g=9, 46 evaluated, 14 expanded
[t=0.132478s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.132514s, 431096 KB] g=17, 90 evaluated, 25 expanded
[t=0.132907s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.132937s, 431096 KB] g=18, 92 evaluated, 26 expanded
[t=0.252582s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.252624s, 431360 KB] g=23, 761 evaluated, 212 expanded, 17 reopened
[t=0.255868s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.255902s, 431360 KB] g=26, 779 evaluated, 216 expanded, 17 reopened
[t=0.256292s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.256322s, 431360 KB] g=27, 781 evaluated, 217 expanded, 17 reopened
[t=0.310289s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.310328s, 431492 KB] g=30, 1083 evaluated, 297 expanded, 17 reopened
[t=0.322679s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.322725s, 431492 KB] g=37, 1152 evaluated, 311 expanded, 17 reopened
[t=0.328311s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.328345s, 431624 KB] g=36, 1183 evaluated, 318 expanded, 17 reopened
[t=0.340012s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.340049s, 431624 KB] g=38, 1248 evaluated, 333 expanded, 17 reopened
[t=0.340262s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.340299s, 431624 KB] g=39, 1249 evaluated, 334 expanded, 17 reopened
[t=0.340688s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.340717s, 431624 KB] g=39, 1251 evaluated, 334 expanded, 17 reopened
[t=0.342362s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.342395s, 431624 KB] g=40, 1260 evaluated, 337 expanded, 17 reopened
[t=0.344235s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.344268s, 431624 KB] g=42, 1270 evaluated, 340 expanded, 17 reopened
[t=0.349855s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.349888s, 431624 KB] g=46, 1301 evaluated, 348 expanded, 17 reopened
[t=0.354755s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.354791s, 431624 KB] g=47, 1328 evaluated, 356 expanded, 17 reopened
[t=0.358228s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.358262s, 431624 KB] g=48, 1347 evaluated, 360 expanded, 17 reopened
[t=0.359196s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.359229s, 431624 KB] g=49, 1352 evaluated, 361 expanded, 17 reopened
[t=0.360871s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.360904s, 431624 KB] g=51, 1361 evaluated, 365 expanded, 17 reopened
[t=0.362002s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.362034s, 431624 KB] g=52, 1367 evaluated, 366 expanded, 17 reopened
[t=0.363322s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.363358s, 431624 KB] g=55, 1374 evaluated, 369 expanded, 17 reopened
[t=0.36375s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.36378s, 431624 KB] g=56, 1376 evaluated, 370 expanded, 17 reopened
[t=0.364711s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.364741s, 431624 KB] g=59, 1382 evaluated, 374 expanded, 17 reopened
[t=0.364768s, 431624 KB] Solution found!
[t=0.364794s, 431624 KB] Actual search time: 0.266479s
stack f a (1)
unstack g i (1)
put-down g (1)
unstack f a (1)
stack f c (1)
unstack i j (1)
stack i f (1)
unstack a h (1)
stack a j (1)
unstack i f (1)
put-down i (1)
unstack h l (1)
stack h f (1)
unstack a j (1)
stack a l (1)
unstack h f (1)
stack h g (1)
unstack j d (1)
stack j i (1)
unstack d k (1)
stack d j (1)
unstack h g (1)
stack h d (1)
unstack f c (1)
stack f k (1)
unstack h d (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack c b (1)
put-down c (1)
unstack b e (1)
stack b l (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack d j (1)
put-down d (1)
unstack j i (1)
stack j d (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.364819s, 431624 KB] Plan length: 59 step(s).
[t=0.364819s, 431624 KB] Plan cost: 59
[t=0.364819s, 431624 KB] Expanded 375 state(s).
[t=0.364819s, 431624 KB] Reopened 17 state(s).
[t=0.364819s, 431624 KB] Evaluated 1382 state(s).
[t=0.364819s, 431624 KB] Evaluations: 1382
[t=0.364819s, 431624 KB] Generated 1893 state(s).
[t=0.364819s, 431624 KB] Dead ends: 0 state(s).
[t=0.364819s, 431624 KB] Expanded until last jump: 4 state(s).
[t=0.364819s, 431624 KB] Reopened until last jump: 0 state(s).
[t=0.364819s, 431624 KB] Evaluated until last jump: 12 state(s).
[t=0.364819s, 431624 KB] Generated until last jump: 14 state(s).
[t=0.364819s, 431624 KB] Number of registered states: 1382
[t=0.364819s, 431624 KB] Int hash set load factor: 1382/2048 = 0.674805
[t=0.364819s, 431624 KB] Int hash set resizes: 11
[t=0.364819s, 431624 KB] Search time: 0.338289s
[t=0.364819s, 431624 KB] Total time: 0.364819s
Solution found.
Peak memory: 431624 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p15.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5782e-05s, 424928 KB] reading input...
[t=0.00227607s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261766s, 427532 KB] Building successor generator...done!
[t=0.0264554s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264794s, 427532 KB] time for successor generation creation: 0.000166001s
[t=0.0265077s, 427532 KB] Variables: 25
[t=0.0265307s, 427532 KB] FactPairs: 182
[t=0.0265528s, 427532 KB] Bytes per state: 8
[t=0.0267537s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993414s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0993934s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994197s, 430124 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0994466s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0994711s, 430124 KB] pruning method: none
[t=0.111372s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.111422s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.119128s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.119172s, 431096 KB] g=2, 10 evaluated, 2 expanded
[t=0.120116s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.120146s, 431096 KB] g=3, 15 evaluated, 3 expanded
[t=0.121083s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.121113s, 431096 KB] g=4, 20 evaluated, 4 expanded
[t=0.12296s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.122992s, 431096 KB] g=6, 30 evaluated, 6 expanded
[t=0.12375s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.12378s, 431096 KB] g=7, 34 evaluated, 7 expanded
[t=0.125644s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.125676s, 431096 KB] g=8, 44 evaluated, 9 expanded
[t=0.128619s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.128654s, 431096 KB] g=10, 60 evaluated, 12 expanded
[t=0.129804s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.129836s, 431096 KB] g=11, 66 evaluated, 13 expanded
[t=0.132415s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.132457s, 431096 KB] g=13, 80 evaluated, 15 expanded
[t=0.13359s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.133624s, 431096 KB] g=14, 86 evaluated, 16 expanded
[t=0.134744s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.134774s, 431096 KB] g=15, 92 evaluated, 18 expanded
[t=0.135351s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.135383s, 431096 KB] g=16, 95 evaluated, 19 expanded
[t=0.143076s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.14311s, 431096 KB] g=19, 137 evaluated, 28 expanded
[t=0.144596s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.144629s, 431096 KB] g=20, 145 evaluated, 29 expanded
[t=0.145025s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.145054s, 431096 KB] g=21, 147 evaluated, 30 expanded
[t=0.145463s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.145494s, 431096 KB] g=21, 149 evaluated, 30 expanded
[t=0.148237s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.14827s, 431096 KB] g=22, 164 evaluated, 33 expanded
[t=0.149771s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.149809s, 431228 KB] g=24, 172 evaluated, 36 expanded
[t=0.15529s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.155325s, 431228 KB] g=27, 202 evaluated, 45 expanded
[t=0.156807s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.156839s, 431228 KB] g=28, 210 evaluated, 46 expanded
[t=0.163759s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.163795s, 431228 KB] g=31, 248 evaluated, 55 expanded
[t=0.165092s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.165125s, 431228 KB] g=33, 255 evaluated, 57 expanded
[t=0.166816s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.166847s, 431228 KB] g=34, 264 evaluated, 59 expanded
[t=0.167237s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.167269s, 431228 KB] g=34, 266 evaluated, 59 expanded
[t=0.169846s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.169884s, 431228 KB] g=38, 280 evaluated, 64 expanded
[t=0.170819s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.170848s, 431228 KB] g=39, 285 evaluated, 65 expanded
[t=0.17561s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.175645s, 431228 KB] g=42, 311 evaluated, 74 expanded
[t=0.176583s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.176612s, 431228 KB] g=44, 316 evaluated, 76 expanded
[t=0.177734s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.177769s, 431228 KB] g=46, 322 evaluated, 78 expanded
[t=0.178351s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.178381s, 431228 KB] g=48, 325 evaluated, 80 expanded
[t=0.178775s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.178804s, 431228 KB] g=49, 327 evaluated, 81 expanded
[t=0.179381s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.17941s, 431228 KB] g=51, 330 evaluated, 83 expanded
[t=0.179443s, 431228 KB] Solution found!
[t=0.179469s, 431228 KB] Actual search time: 0.0799945s
unstack d c (1)
stack d j (1)
unstack i e (1)
put-down i (1)
unstack e l (1)
stack e i (1)
unstack l a (1)
stack l d (1)
unstack f b (1)
stack f a (1)
unstack b g (1)
stack b c (1)
pick-up h (1)
stack h g (1)
unstack e i (1)
put-down e (1)
unstack f a (1)
stack f l (1)
pick-up a (1)
stack a h (1)
unstack f l (1)
stack f a (1)
pick-up e (1)
stack e l (1)
unstack b c (1)
put-down b (1)
unstack c k (1)
put-down c (1)
pick-up k (1)
stack k f (1)
unstack e l (1)
stack e k (1)
pick-up i (1)
stack i c (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d i (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.179494s, 431228 KB] Plan length: 52 step(s).
[t=0.179494s, 431228 KB] Plan cost: 52
[t=0.179494s, 431228 KB] Expanded 85 state(s).
[t=0.179494s, 431228 KB] Reopened 0 state(s).
[t=0.179494s, 431228 KB] Evaluated 331 state(s).
[t=0.179494s, 431228 KB] Evaluations: 331
[t=0.179494s, 431228 KB] Generated 415 state(s).
[t=0.179494s, 431228 KB] Dead ends: 0 state(s).
[t=0.179494s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.179494s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.179494s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.179494s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.179494s, 431228 KB] Number of registered states: 331
[t=0.179494s, 431228 KB] Int hash set load factor: 331/512 = 0.646484
[t=0.179494s, 431228 KB] Int hash set resizes: 9
[t=0.179494s, 431228 KB] Search time: 0.152741s
[t=0.179494s, 431228 KB] Total time: 0.179494s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p16.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6849e-05s, 424928 KB] reading input...
[t=0.00211505s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260114s, 427532 KB] Building successor generator...done!
[t=0.0262935s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263168s, 427532 KB] time for successor generation creation: 0.000169698s
[t=0.0263458s, 427532 KB] Variables: 25
[t=0.0263683s, 427532 KB] FactPairs: 182
[t=0.0263904s, 427532 KB] Bytes per state: 8
[t=0.0265861s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982497s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.0983008s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983264s, 430124 KB] f = 87, 1 evaluated, 0 expanded
[t=0.0983531s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.098377s, 430124 KB] pruning method: none
[t=0.110173s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.110225s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.11755s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.117593s, 431096 KB] g=2, 8 evaluated, 2 expanded
[t=0.117981s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.118011s, 431096 KB] g=3, 10 evaluated, 3 expanded
[t=0.119449s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.119479s, 431096 KB] g=5, 18 evaluated, 5 expanded
[t=0.122165s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.122198s, 431096 KB] g=11, 33 evaluated, 11 expanded
[t=0.124884s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.124916s, 431096 KB] g=12, 48 evaluated, 16 expanded
[t=0.131478s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.131517s, 431096 KB] g=15, 85 evaluated, 27 expanded
[t=0.136683s, 431096 KB] f = 88, 114 evaluated, 35 expanded
[t=0.138321s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.138354s, 431096 KB] g=18, 123 evaluated, 38 expanded
[t=0.143007s, 431096 KB] f = 89, 149 evaluated, 46 expanded
[t=0.16387s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.163905s, 431228 KB] g=13, 266 evaluated, 86 expanded, 5 reopened
[t=0.166621s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.166653s, 431228 KB] g=16, 281 evaluated, 91 expanded, 5 reopened
[t=0.167043s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.167072s, 431228 KB] g=17, 283 evaluated, 92 expanded, 5 reopened
[t=0.170304s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.170337s, 431228 KB] g=19, 301 evaluated, 98 expanded, 5 reopened
[t=0.186088s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.186122s, 431228 KB] g=24, 390 evaluated, 123 expanded, 5 reopened
[t=0.1929s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.192936s, 431228 KB] g=21, 428 evaluated, 136 expanded, 5 reopened
[t=0.195791s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.195824s, 431228 KB] g=24, 444 evaluated, 140 expanded, 5 reopened
[t=0.197273s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.197314s, 431228 KB] g=25, 452 evaluated, 142 expanded, 5 reopened
[t=0.214083s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.214121s, 431360 KB] g=30, 546 evaluated, 179 expanded, 8 reopened
[t=0.215568s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.215598s, 431360 KB] g=31, 554 evaluated, 181 expanded, 8 reopened
[t=0.217237s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.217269s, 431360 KB] g=32, 563 evaluated, 184 expanded, 8 reopened
[t=0.218008s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.218037s, 431360 KB] g=33, 567 evaluated, 185 expanded, 8 reopened
[t=0.21843s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.218459s, 431360 KB] g=34, 569 evaluated, 186 expanded, 8 reopened
[t=0.219196s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.219225s, 431360 KB] g=35, 573 evaluated, 187 expanded, 8 reopened
[t=0.220137s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.220167s, 431360 KB] g=36, 578 evaluated, 188 expanded, 8 reopened
[t=0.220377s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.220409s, 431360 KB] g=36, 579 evaluated, 188 expanded, 8 reopened
[t=0.22116s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.221192s, 431360 KB] g=37, 583 evaluated, 189 expanded, 8 reopened
[t=0.224226s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.224259s, 431360 KB] g=39, 600 evaluated, 193 expanded, 8 reopened
[t=0.225008s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.225042s, 431360 KB] g=40, 604 evaluated, 194 expanded, 8 reopened
[t=0.226314s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.226347s, 431360 KB] g=41, 611 evaluated, 196 expanded, 8 reopened
[t=0.226903s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.226932s, 431360 KB] g=41, 614 evaluated, 196 expanded, 8 reopened
[t=0.227495s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.227524s, 431360 KB] g=42, 617 evaluated, 197 expanded, 8 reopened
[t=0.228262s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.228297s, 431360 KB] g=43, 621 evaluated, 198 expanded, 8 reopened
[t=0.229236s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.229271s, 431360 KB] g=44, 626 evaluated, 199 expanded, 8 reopened
[t=0.230011s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.230043s, 431360 KB] g=45, 630 evaluated, 200 expanded, 8 reopened
[t=0.230428s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.230457s, 431360 KB] g=46, 632 evaluated, 201 expanded, 8 reopened
[t=0.230846s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.230875s, 431360 KB] g=47, 634 evaluated, 202 expanded, 8 reopened
[t=0.231439s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.231469s, 431360 KB] g=48, 637 evaluated, 203 expanded, 8 reopened
[t=0.231854s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.231886s, 431360 KB] g=49, 639 evaluated, 204 expanded, 8 reopened
[t=0.234784s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.234817s, 431360 KB] g=53, 655 evaluated, 212 expanded, 8 reopened
[t=0.23485s, 431360 KB] Solution found!
[t=0.234877s, 431360 KB] Actual search time: 0.136487s
unstack g b (1)
stack g e (1)
unstack b a (1)
stack b c (1)
unstack g e (1)
stack g b (1)
unstack e f (1)
stack e i (1)
unstack f h (1)
stack f e (1)
unstack h k (1)
stack h f (1)
unstack g b (1)
stack g k (1)
unstack b c (1)
put-down b (1)
unstack g k (1)
stack g b (1)
pick-up k (1)
stack k c (1)
unstack g b (1)
put-down g (1)
pick-up a (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k c (1)
stack k e (1)
unstack c d (1)
stack c b (1)
unstack d j (1)
put-down d (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.234901s, 431360 KB] Plan length: 54 step(s).
[t=0.234901s, 431360 KB] Plan cost: 54
[t=0.234901s, 431360 KB] Expanded 214 state(s).
[t=0.234901s, 431360 KB] Reopened 8 state(s).
[t=0.234901s, 431360 KB] Evaluated 656 state(s).
[t=0.234901s, 431360 KB] Evaluations: 656
[t=0.234901s, 431360 KB] Generated 910 state(s).
[t=0.234901s, 431360 KB] Dead ends: 0 state(s).
[t=0.234901s, 431360 KB] Expanded until last jump: 46 state(s).
[t=0.234901s, 431360 KB] Reopened until last jump: 0 state(s).
[t=0.234901s, 431360 KB] Evaluated until last jump: 149 state(s).
[t=0.234901s, 431360 KB] Generated until last jump: 195 state(s).
[t=0.234901s, 431360 KB] Number of registered states: 656
[t=0.234901s, 431360 KB] Int hash set load factor: 656/1024 = 0.640625
[t=0.234901s, 431360 KB] Int hash set resizes: 10
[t=0.234901s, 431360 KB] Search time: 0.208316s
[t=0.234901s, 431360 KB] Total time: 0.234901s
Solution found.
Peak memory: 431360 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p17.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6985e-05s, 424928 KB] reading input...
[t=0.00212673s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261336s, 427532 KB] Building successor generator...done!
[t=0.0264118s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264355s, 427532 KB] time for successor generation creation: 0.000167902s
[t=0.0264639s, 427532 KB] Variables: 25
[t=0.026487s, 427532 KB] FactPairs: 182
[t=0.026509s, 427532 KB] Bytes per state: 8
[t=0.026705s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.100013s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.100066s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.100092s, 430124 KB] f = 145, 1 evaluated, 0 expanded
[t=0.10012s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.100154s, 430124 KB] pruning method: none
[t=0.112085s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.112138s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.119885s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.119929s, 431096 KB] g=3, 10 evaluated, 3 expanded
[t=0.120506s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.120535s, 431096 KB] g=3, 13 evaluated, 3 expanded
[t=0.121467s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.121497s, 431096 KB] g=4, 18 evaluated, 4 expanded
[t=0.12837s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.128403s, 431096 KB] g=5, 56 evaluated, 12 expanded
[t=0.131152s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.131187s, 431096 KB] g=7, 71 evaluated, 15 expanded
[t=0.131401s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.131431s, 431096 KB] g=8, 72 evaluated, 16 expanded
[t=0.135802s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.135838s, 431096 KB] g=10, 96 evaluated, 22 expanded
[t=0.137675s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.137708s, 431096 KB] g=13, 106 evaluated, 25 expanded
[t=0.139717s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.139749s, 431096 KB] g=14, 117 evaluated, 27 expanded
[t=0.145913s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.145952s, 431228 KB] g=17, 151 evaluated, 33 expanded
[t=0.147616s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.147652s, 431228 KB] g=18, 160 evaluated, 34 expanded
[t=0.148587s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.148616s, 431228 KB] g=19, 165 evaluated, 35 expanded
[t=0.14919s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.149222s, 431228 KB] g=20, 168 evaluated, 36 expanded
[t=0.150514s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.150544s, 431228 KB] g=21, 175 evaluated, 37 expanded
[t=0.151128s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.151168s, 431228 KB] g=21, 178 evaluated, 37 expanded
[t=0.151565s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.151595s, 431228 KB] g=22, 180 evaluated, 38 expanded
[t=0.153258s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.153289s, 431228 KB] g=23, 189 evaluated, 40 expanded
[t=0.153864s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.153893s, 431228 KB] g=24, 192 evaluated, 41 expanded
[t=0.154466s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.154496s, 431228 KB] g=24, 195 evaluated, 41 expanded
[t=0.15526s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.155292s, 431228 KB] g=26, 199 evaluated, 43 expanded
[t=0.156586s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.156619s, 431228 KB] g=28, 206 evaluated, 46 expanded
[t=0.159733s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.159769s, 431228 KB] g=28, 223 evaluated, 51 expanded
[t=0.159981s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.16001s, 431228 KB] g=28, 224 evaluated, 51 expanded
[t=0.16077s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.1608s, 431228 KB] g=29, 228 evaluated, 53 expanded
[t=0.161012s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.161041s, 431228 KB] g=30, 229 evaluated, 54 expanded
[t=0.161437s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.161466s, 431228 KB] g=31, 231 evaluated, 55 expanded
[t=0.162042s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.162072s, 431228 KB] g=33, 234 evaluated, 57 expanded
[t=0.162831s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.162867s, 431228 KB] g=34, 238 evaluated, 58 expanded
[t=0.163083s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.163112s, 431228 KB] g=35, 239 evaluated, 59 expanded
[t=0.164047s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.164077s, 431228 KB] g=36, 244 evaluated, 60 expanded
[t=0.165023s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.16506s, 431228 KB] g=39, 249 evaluated, 63 expanded
[t=0.165094s, 431228 KB] Solution found!
[t=0.165121s, 431228 KB] Actual search time: 0.0649629s
unstack b g (1)
put-down b (1)
unstack i c (1)
stack i d (1)
pick-up c (1)
stack c b (1)
unstack i d (1)
stack i c (1)
unstack d e (1)
put-down d (1)
unstack g k (1)
put-down g (1)
unstack k a (1)
put-down k (1)
unstack h f (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f j (1)
stack f a (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.165147s, 431228 KB] Plan length: 40 step(s).
[t=0.165147s, 431228 KB] Plan cost: 40
[t=0.165147s, 431228 KB] Expanded 65 state(s).
[t=0.165147s, 431228 KB] Reopened 0 state(s).
[t=0.165147s, 431228 KB] Evaluated 250 state(s).
[t=0.165147s, 431228 KB] Evaluations: 250
[t=0.165147s, 431228 KB] Generated 312 state(s).
[t=0.165147s, 431228 KB] Dead ends: 0 state(s).
[t=0.165147s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.165147s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.165147s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.165147s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.165147s, 431228 KB] Number of registered states: 250
[t=0.165147s, 431228 KB] Int hash set load factor: 250/256 = 0.976562
[t=0.165147s, 431228 KB] Int hash set resizes: 8
[t=0.165147s, 431228 KB] Search time: 0.138442s
[t=0.165147s, 431228 KB] Total time: 0.165147s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p18.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6496e-05s, 424928 KB] reading input...
[t=0.00212393s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259191s, 427532 KB] Building successor generator...done!
[t=0.0262038s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262274s, 427532 KB] time for successor generation creation: 0.000169208s
[t=0.0262561s, 427532 KB] Variables: 25
[t=0.0262784s, 427532 KB] FactPairs: 182
[t=0.0263002s, 427532 KB] Bytes per state: 8
[t=0.0264944s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987414s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.0987922s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988179s, 430124 KB] f = 89, 1 evaluated, 0 expanded
[t=0.0988451s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.0988684s, 430124 KB] pruning method: none
[t=0.110737s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.110789s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.117471s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.117513s, 431096 KB] g=1, 4 evaluated, 1 expanded
[t=0.117921s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.117951s, 431096 KB] g=2, 6 evaluated, 2 expanded
[t=0.120796s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.120828s, 431096 KB] g=4, 21 evaluated, 8 expanded
[t=0.121233s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.121262s, 431096 KB] g=5, 23 evaluated, 9 expanded
[t=0.139577s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.139615s, 431096 KB] g=10, 121 evaluated, 43 expanded, 1 reopened
[t=0.140021s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.140051s, 431096 KB] g=11, 123 evaluated, 44 expanded, 1 reopened
[t=0.140642s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.14068s, 431096 KB] g=12, 126 evaluated, 45 expanded, 1 reopened
[t=0.141846s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.141878s, 431096 KB] g=14, 132 evaluated, 48 expanded, 1 reopened
[t=0.142093s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.142124s, 431096 KB] g=14, 133 evaluated, 48 expanded, 1 reopened
[t=0.142526s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.142554s, 431096 KB] g=15, 135 evaluated, 49 expanded, 1 reopened
[t=0.14277s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.142798s, 431096 KB] g=15, 136 evaluated, 49 expanded, 1 reopened
[t=0.143405s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.143436s, 431096 KB] g=16, 139 evaluated, 50 expanded, 1 reopened
[t=0.143657s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.143685s, 431096 KB] g=17, 140 evaluated, 51 expanded, 1 reopened
[t=0.144273s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.144301s, 431096 KB] g=18, 143 evaluated, 52 expanded, 1 reopened
[t=0.145449s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.145482s, 431096 KB] g=19, 149 evaluated, 53 expanded, 1 reopened
[t=0.149069s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.149116s, 431096 KB] g=23, 168 evaluated, 60 expanded, 1 reopened
[t=0.150495s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.150529s, 431096 KB] g=26, 175 evaluated, 64 expanded, 1 reopened
[t=0.150749s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.150778s, 431096 KB] g=27, 176 evaluated, 65 expanded, 1 reopened
[t=0.316793s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.316839s, 431492 KB] g=23, 1060 evaluated, 507 expanded, 35 reopened
[t=0.317615s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.317645s, 431492 KB] g=24, 1064 evaluated, 508 expanded, 35 reopened
[t=0.318422s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.318451s, 431492 KB] g=26, 1068 evaluated, 510 expanded, 35 reopened
[t=0.319616s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.319654s, 431492 KB] g=28, 1074 evaluated, 512 expanded, 35 reopened
[t=0.319874s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.319902s, 431492 KB] g=29, 1075 evaluated, 513 expanded, 35 reopened
[t=0.320492s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.320524s, 431492 KB] g=31, 1078 evaluated, 515 expanded, 35 reopened
[t=0.321684s, 431492 KB] Solution found!
[t=0.321716s, 431492 KB] Actual search time: 0.222845s
unstack f h (1)
stack f e (1)
unstack h g (1)
stack h f (1)
unstack g a (1)
put-down g (1)
unstack d i (1)
put-down d (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack l j (1)
stack l b (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.321741s, 431492 KB] Plan length: 34 step(s).
[t=0.321741s, 431492 KB] Plan cost: 34
[t=0.321741s, 431492 KB] Expanded 522 state(s).
[t=0.321741s, 431492 KB] Reopened 35 state(s).
[t=0.321741s, 431492 KB] Evaluated 1085 state(s).
[t=0.321741s, 431492 KB] Evaluations: 1085
[t=0.321741s, 431492 KB] Generated 1768 state(s).
[t=0.321741s, 431492 KB] Dead ends: 0 state(s).
[t=0.321741s, 431492 KB] Expanded until last jump: 0 state(s).
[t=0.321741s, 431492 KB] Reopened until last jump: 0 state(s).
[t=0.321741s, 431492 KB] Evaluated until last jump: 1 state(s).
[t=0.321741s, 431492 KB] Generated until last jump: 0 state(s).
[t=0.321741s, 431492 KB] Number of registered states: 1085
[t=0.321741s, 431492 KB] Int hash set load factor: 1085/2048 = 0.529785
[t=0.321741s, 431492 KB] Int hash set resizes: 11
[t=0.321741s, 431492 KB] Search time: 0.295248s
[t=0.321741s, 431492 KB] Total time: 0.321741s
Solution found.
Peak memory: 431492 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p19.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6057e-05s, 424928 KB] reading input...
[t=0.00225761s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261505s, 427532 KB] Building successor generator...done!
[t=0.0264256s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264492s, 427532 KB] time for successor generation creation: 0.000164939s
[t=0.0264786s, 427532 KB] Variables: 25
[t=0.0265013s, 427532 KB] FactPairs: 182
[t=0.0265236s, 427532 KB] Bytes per state: 8
[t=0.0267195s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991583s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.099211s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.099237s, 430124 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0992646s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0992888s, 430124 KB] pruning method: none
[t=0.111211s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.111264s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.117722s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.117765s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.118352s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.118383s, 431096 KB] g=2, 6 evaluated, 2 expanded
[t=0.120225s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.120256s, 431096 KB] g=3, 16 evaluated, 6 expanded
[t=0.124637s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.12467s, 431096 KB] g=8, 40 evaluated, 13 expanded
[t=0.135062s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.135109s, 431096 KB] g=16, 97 evaluated, 29 expanded
[t=0.142406s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.14244s, 431096 KB] g=17, 137 evaluated, 39 expanded
[t=0.146995s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.147029s, 431096 KB] g=20, 162 evaluated, 44 expanded
[t=0.14961s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.149643s, 431096 KB] g=23, 176 evaluated, 49 expanded
[t=0.15258s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.152612s, 431228 KB] g=26, 192 evaluated, 53 expanded
[t=0.15356s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.153595s, 431228 KB] g=27, 197 evaluated, 54 expanded
[t=0.154526s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.154556s, 431228 KB] g=28, 202 evaluated, 55 expanded
[t=0.154768s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.1548s, 431228 KB] g=28, 203 evaluated, 55 expanded
[t=0.155557s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.155589s, 431228 KB] g=29, 207 evaluated, 56 expanded
[t=0.156348s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.15638s, 431228 KB] g=30, 211 evaluated, 57 expanded
[t=0.158051s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.158083s, 431228 KB] g=32, 220 evaluated, 59 expanded
[t=0.158845s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.158878s, 431228 KB] g=33, 224 evaluated, 60 expanded
[t=0.159273s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.159302s, 431228 KB] g=34, 226 evaluated, 61 expanded
[t=0.16934s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.169381s, 431228 KB] g=37, 281 evaluated, 77 expanded
[t=0.171961s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.171993s, 431228 KB] g=39, 295 evaluated, 81 expanded
[t=0.172572s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.172602s, 431228 KB] g=40, 298 evaluated, 82 expanded
[t=0.173374s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.173408s, 431228 KB] g=41, 302 evaluated, 83 expanded
[t=0.175091s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.175126s, 431228 KB] g=43, 311 evaluated, 86 expanded
[t=0.176608s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.176641s, 431228 KB] g=44, 319 evaluated, 87 expanded
[t=0.177038s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.177067s, 431228 KB] g=45, 321 evaluated, 88 expanded
[t=0.180197s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.180231s, 431228 KB] g=48, 338 evaluated, 92 expanded
[t=0.18137s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.181404s, 431228 KB] g=49, 344 evaluated, 93 expanded
[t=0.181803s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.181832s, 431228 KB] g=50, 346 evaluated, 94 expanded
[t=0.182781s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.182812s, 431228 KB] g=52, 351 evaluated, 96 expanded
[t=0.18321s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.18324s, 431228 KB] g=53, 353 evaluated, 97 expanded
[t=0.184001s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.184034s, 431228 KB] g=55, 357 evaluated, 99 expanded
[t=0.184067s, 431228 KB] Solution found!
[t=0.184094s, 431228 KB] Actual search time: 0.0848005s
unstack h k (1)
stack h a (1)
unstack k g (1)
put-down k (1)
unstack b f (1)
put-down b (1)
pick-up g (1)
stack g b (1)
unstack f e (1)
put-down f (1)
unstack h a (1)
stack h f (1)
unstack a c (1)
stack a k (1)
unstack h f (1)
stack h a (1)
unstack g b (1)
stack g h (1)
pick-up f (1)
stack f e (1)
unstack c j (1)
stack c b (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f c (1)
pick-up k (1)
stack k e (1)
unstack f c (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i d (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
pick-up b (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.184119s, 431228 KB] Plan length: 56 step(s).
[t=0.184119s, 431228 KB] Plan cost: 56
[t=0.184119s, 431228 KB] Expanded 101 state(s).
[t=0.184119s, 431228 KB] Reopened 0 state(s).
[t=0.184119s, 431228 KB] Evaluated 358 state(s).
[t=0.184119s, 431228 KB] Evaluations: 358
[t=0.184119s, 431228 KB] Generated 461 state(s).
[t=0.184119s, 431228 KB] Dead ends: 0 state(s).
[t=0.184119s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.184119s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.184119s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.184119s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.184119s, 431228 KB] Number of registered states: 358
[t=0.184119s, 431228 KB] Int hash set load factor: 358/512 = 0.699219
[t=0.184119s, 431228 KB] Int hash set resizes: 9
[t=0.184119s, 431228 KB] Search time: 0.1574s
[t=0.184119s, 431228 KB] Total time: 0.184119s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p20.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9115e-05s, 424928 KB] reading input...
[t=0.00213509s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025956s, 427532 KB] Building successor generator...done!
[t=0.0262386s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262618s, 427532 KB] time for successor generation creation: 0.000170804s
[t=0.02629s, 427532 KB] Variables: 25
[t=0.0263125s, 427532 KB] FactPairs: 182
[t=0.0263342s, 427532 KB] Bytes per state: 8
[t=0.0265294s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978138s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0978748s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979006s, 430124 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0979278s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0979512s, 430124 KB] pruning method: none
[t=0.109807s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.109857s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.116739s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.116783s, 431096 KB] g=1, 5 evaluated, 1 expanded
[t=0.117166s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.117195s, 431096 KB] g=1, 7 evaluated, 1 expanded
[t=0.11898s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.11901s, 431096 KB] g=3, 17 evaluated, 3 expanded
[t=0.119762s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.119794s, 431096 KB] g=4, 21 evaluated, 4 expanded
[t=0.120174s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.120203s, 431096 KB] g=4, 23 evaluated, 4 expanded
[t=0.122152s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.122181s, 431096 KB] g=6, 34 evaluated, 6 expanded
[t=0.122393s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.122421s, 431096 KB] g=7, 35 evaluated, 7 expanded
[t=0.122626s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.122654s, 431096 KB] g=7, 36 evaluated, 7 expanded
[t=0.124188s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.124222s, 431096 KB] g=9, 44 evaluated, 9 expanded
[t=0.124444s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.124482s, 431096 KB] g=9, 45 evaluated, 9 expanded
[t=0.125382s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.125415s, 431096 KB] g=10, 50 evaluated, 10 expanded
[t=0.12739s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.127422s, 431096 KB] g=12, 61 evaluated, 12 expanded
[t=0.127982s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.128015s, 431096 KB] g=13, 64 evaluated, 13 expanded
[t=0.132109s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.132151s, 431096 KB] g=15, 87 evaluated, 21 expanded
[t=0.315091s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.315151s, 431496 KB] g=32, 1127 evaluated, 310 expanded, 7 reopened
[t=0.31589s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.315923s, 431496 KB] g=33, 1131 evaluated, 311 expanded, 7 reopened
[t=0.316833s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.316862s, 431496 KB] g=34, 1136 evaluated, 312 expanded, 7 reopened
[t=0.318658s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.318688s, 431496 KB] g=36, 1146 evaluated, 315 expanded, 7 reopened
[t=0.320957s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.320993s, 431496 KB] g=39, 1158 evaluated, 319 expanded, 7 reopened
[t=0.321201s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.32123s, 431496 KB] g=39, 1159 evaluated, 319 expanded, 7 reopened
[t=0.321792s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.321824s, 431496 KB] g=40, 1162 evaluated, 320 expanded, 7 reopened
[t=0.323277s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.323312s, 431496 KB] g=41, 1170 evaluated, 322 expanded, 7 reopened
[t=0.325813s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.325846s, 431496 KB] g=42, 1184 evaluated, 327 expanded, 7 reopened
[t=0.327127s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.327159s, 431496 KB] g=44, 1191 evaluated, 329 expanded, 7 reopened
[t=0.327722s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.327753s, 431496 KB] g=45, 1194 evaluated, 330 expanded, 7 reopened
[t=0.328485s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.328514s, 431496 KB] g=46, 1198 evaluated, 331 expanded, 7 reopened
[t=0.330655s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.330686s, 431496 KB] g=49, 1210 evaluated, 335 expanded, 7 reopened
[t=0.332482s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.332518s, 431496 KB] g=48, 1220 evaluated, 339 expanded, 7 reopened
[t=0.334661s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.334698s, 431496 KB] g=50, 1232 evaluated, 344 expanded, 7 reopened
[t=0.335986s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.336018s, 431496 KB] g=53, 1239 evaluated, 347 expanded, 7 reopened
[t=0.336224s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.336252s, 431496 KB] g=53, 1240 evaluated, 347 expanded, 7 reopened
[t=0.34443s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.344468s, 431496 KB] g=54, 1286 evaluated, 363 expanded, 7 reopened
[t=0.345207s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.345237s, 431496 KB] g=56, 1290 evaluated, 365 expanded, 7 reopened
[t=0.347401s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.34744s, 431628 KB] g=58, 1302 evaluated, 370 expanded, 7 reopened
[t=0.349775s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.349806s, 431628 KB] g=61, 1315 evaluated, 375 expanded, 7 reopened
[t=0.350192s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.350224s, 431628 KB] g=62, 1317 evaluated, 376 expanded, 7 reopened
[t=0.350257s, 431628 KB] Solution found!
[t=0.350284s, 431628 KB] Actual search time: 0.252328s
put-down b (1)
unstack a l (1)
stack a k (1)
unstack l e (1)
stack l j (1)
pick-up f (1)
stack f b (1)
unstack l j (1)
stack l d (1)
unstack e g (1)
stack e l (1)
pick-up g (1)
stack g f (1)
unstack e l (1)
put-down e (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack a k (1)
stack a i (1)
unstack k h (1)
stack k l (1)
unstack g f (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a i (1)
stack a h (1)
unstack k l (1)
stack k i (1)
unstack f b (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d i (1)
unstack j e (1)
stack j l (1)
pick-up e (1)
stack e k (1)
unstack d i (1)
put-down d (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.350308s, 431628 KB] Plan length: 63 step(s).
[t=0.350308s, 431628 KB] Plan cost: 63
[t=0.350308s, 431628 KB] Expanded 378 state(s).
[t=0.350308s, 431628 KB] Reopened 7 state(s).
[t=0.350308s, 431628 KB] Evaluated 1318 state(s).
[t=0.350308s, 431628 KB] Evaluations: 1318
[t=0.350308s, 431628 KB] Generated 1778 state(s).
[t=0.350308s, 431628 KB] Dead ends: 0 state(s).
[t=0.350308s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.350308s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.350308s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.350308s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.350308s, 431628 KB] Number of registered states: 1318
[t=0.350308s, 431628 KB] Int hash set load factor: 1318/2048 = 0.643555
[t=0.350308s, 431628 KB] Int hash set resizes: 11
[t=0.350308s, 431628 KB] Search time: 0.323779s
[t=0.350308s, 431628 KB] Total time: 0.350308s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.022905
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 0 test success: 20 of 20 (100.0%)

---------- FOLD 2/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 19 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.21955381333827972 (0.2705465853214264 vs. 0.05099277198314667), which occurred at index 17.
  _module_class,
 | avg_train_loss=0.098749 | avg_val_loss=0.090753
Epoch 2 | avg_train_loss=0.070418 | avg_val_loss=0.042758
Epoch 3 | avg_train_loss=0.040360 | avg_val_loss=0.036972
Epoch 4 | avg_train_loss=0.036972 | avg_val_loss=0.035166
Epoch 5 | avg_train_loss=0.035763 | avg_val_loss=0.034455
Epoch 6 | avg_train_loss=0.034787 | avg_val_loss=0.033765
Epoch 7 | avg_train_loss=0.034015 | avg_val_loss=0.033102
Epoch 8 | avg_train_loss=0.033329 | avg_val_loss=0.032452
Epoch 9 | avg_train_loss=0.032873 | avg_val_loss=0.031863
Epoch 10 | avg_train_loss=0.032271 | avg_val_loss=0.031427
Epoch 11 | avg_train_loss=0.031743 | avg_val_loss=0.030803
Epoch 12 | avg_train_loss=0.031266 | avg_val_loss=0.030523
Epoch 13 | avg_train_loss=0.030823 | avg_val_loss=0.030343
Epoch 14 | avg_train_loss=0.030439 | avg_val_loss=0.029855
Epoch 15 | avg_train_loss=0.030024 | avg_val_loss=0.029362
Epoch 16 | avg_train_loss=0.029822 | avg_val_loss=0.029194
Epoch 17 | avg_train_loss=0.029449 | avg_val_loss=0.028940
Epoch 18 | avg_train_loss=0.028959 | avg_val_loss=0.028472
Epoch 19 | avg_train_loss=0.028621 | avg_val_loss=0.028592
Epoch 20 | avg_train_loss=0.028254 | avg_val_loss=0.028218
Epoch 21 | avg_train_loss=0.027968 | avg_val_loss=0.027593
Epoch 22 | avg_train_loss=0.027671 | avg_val_loss=0.027752
Epoch 23 | avg_train_loss=0.027318 | avg_val_loss=0.027697
Epoch 24 | avg_train_loss=0.026985 | avg_val_loss=0.027024
Epoch 25 | avg_train_loss=0.026592 | avg_val_loss=0.026468
Epoch 26 | avg_train_loss=0.026312 | avg_val_loss=0.026737
Epoch 27 | avg_train_loss=0.025945 | avg_val_loss=0.026449
Epoch 28 | avg_train_loss=0.025685 | avg_val_loss=0.026243
Epoch 29 | avg_train_loss=0.025498 | avg_val_loss=0.025724
Epoch 30 | avg_train_loss=0.025047 | avg_val_loss=0.025614
Epoch 31 | avg_train_loss=0.024845 | avg_val_loss=0.025474
Epoch 32 | avg_train_loss=0.024668 | avg_val_loss=0.025299
Epoch 33 | avg_train_loss=0.024541 | avg_val_loss=0.025549
Epoch 34 | avg_train_loss=0.024171 | avg_val_loss=0.025391
Epoch 35 | avg_train_loss=0.023951 | avg_val_loss=0.025243
Epoch 36 | avg_train_loss=0.023841 | avg_val_loss=0.025230
Epoch 37 | avg_train_loss=0.023627 | avg_val_loss=0.024949
Epoch 38 | avg_train_loss=0.023479 | avg_val_loss=0.024498
Epoch 39 | avg_train_loss=0.023192 | avg_val_loss=0.024459
Epoch 40 | avg_train_loss=0.023017 | avg_val_loss=0.024363
Epoch 41 | avg_train_loss=0.022791 | avg_val_loss=0.024429
Epoch 42 | avg_train_loss=0.022746 | avg_val_loss=0.024091
Epoch 43 | avg_train_loss=0.022499 | avg_val_loss=0.024446
Epoch 44 | avg_train_loss=0.022386 | avg_val_loss=0.023731
Epoch 45 | avg_train_loss=0.022416 | avg_val_loss=0.024215
Epoch 46 | avg_train_loss=0.022126 | avg_val_loss=0.023870
Epoch 47 | avg_train_loss=0.022056 | avg_val_loss=0.023678
Epoch 48 | avg_train_loss=0.021816 | avg_val_loss=0.023995
Epoch 49 | avg_train_loss=0.021820 | avg_val_loss=0.023690
Epoch 50 | avg_train_loss=0.021540 | avg_val_loss=0.024049
Epoch 51 | avg_train_loss=0.021288 | avg_val_loss=0.023468
Epoch 52 | avg_train_loss=0.021378 | avg_val_loss=0.023347
Epoch 53 | avg_train_loss=0.021167 | avg_val_loss=0.023435
Epoch 54 | avg_train_loss=0.020998 | avg_val_loss=0.023843
Epoch 55 | avg_train_loss=0.021000 | avg_val_loss=0.023723
Epoch 56 | avg_train_loss=0.020816 | avg_val_loss=0.023759
Epoch 57 | avg_train_loss=0.020650 | avg_val_loss=0.023090
Epoch 58 | avg_train_loss=0.020446 | avg_val_loss=0.023380
Epoch 59 | avg_train_loss=0.020218 | avg_val_loss=0.023337
Epoch 60 | avg_train_loss=0.020306 | avg_val_loss=0.023263
Epoch 61 | avg_train_loss=0.020213 | avg_val_loss=0.023120
Epoch 62 | avg_train_loss=0.020013 | avg_val_loss=0.023463
Epoch 63 | avg_train_loss=0.019990 | avg_val_loss=0.023467
Epoch 64 | avg_train_loss=0.019743 | avg_val_loss=0.023157
Epoch 65 | avg_train_loss=0.019682 | avg_val_loss=0.023613
Epoch 66 | avg_train_loss=0.019675 | avg_val_loss=0.022965
Epoch 67 | avg_train_loss=0.019395 | avg_val_loss=0.023174
Epoch 68 | avg_train_loss=0.019299 | avg_val_loss=0.023231
Epoch 69 | avg_train_loss=0.019213 | avg_val_loss=0.023218
Epoch 70 | avg_train_loss=0.019077 | avg_val_loss=0.023168
Epoch 71 | avg_train_loss=0.018911 | avg_val_loss=0.023295
Epoch 72 | avg_train_loss=0.018720 | avg_val_loss=0.023485
Epoch 73 | avg_train_loss=0.018759 | avg_val_loss=0.023451
Epoch 74 | avg_train_loss=0.018672 | avg_val_loss=0.023107
Epoch 75 | avg_train_loss=0.018500 | avg_val_loss=0.023127
Epoch 76 | avg_train_loss=0.018470 | avg_val_loss=0.023169
Epoch 77 | avg_train_loss=0.018370 | avg_val_loss=0.023069
Epoch 78 | avg_train_loss=0.018316 | avg_val_loss=0.023404
Epoch 79 | avg_train_loss=0.018079 | avg_val_loss=0.023353
Epoch 80 | avg_train_loss=0.018132 | avg_val_loss=0.022804
Epoch 81 | avg_train_loss=0.017811 | avg_val_loss=0.022990
Epoch 82 | avg_train_loss=0.017742 | avg_val_loss=0.023198
Epoch 83 | avg_train_loss=0.017655 | avg_val_loss=0.023241
Epoch 84 | avg_train_loss=0.017592 | avg_val_loss=0.022613
Epoch 85 | avg_train_loss=0.017396 | avg_val_loss=0.023078
Epoch 86 | avg_train_loss=0.017288 | avg_val_loss=0.022748
Epoch 87 | avg_train_loss=0.017315 | avg_val_loss=0.023241
Epoch 88 | avg_train_loss=0.017225 | avg_val_loss=0.022982
Epoch 89 | avg_train_loss=0.017116 | avg_val_loss=0.023495
Epoch 90 | avg_train_loss=0.017064 | avg_val_loss=0.023023
Epoch 91 | avg_train_loss=0.016876 | avg_val_loss=0.022960
Epoch 92 | avg_train_loss=0.016869 | avg_val_loss=0.023346
Epoch 93 | avg_train_loss=0.016648 | avg_val_loss=0.023394
Epoch 94 | avg_train_loss=0.016637 | avg_val_loss=0.023409
Epoch 95 | avg_train_loss=0.016480 | avg_val_loss=0.023330
Epoch 96 | avg_train_loss=0.016418 | avg_val_loss=0.022977
Epoch 97 | avg_train_loss=0.016311 | avg_val_loss=0.023284
Epoch 98 | avg_train_loss=0.016154 | avg_val_loss=0.023409
Epoch 99 | avg_train_loss=0.016030 | avg_val_loss=0.023335
Epoch 100 | avg_train_loss=0.016103 | avg_val_loss=0.023488
Epoch 101 | avg_train_loss=0.015918 | avg_val_loss=0.023358
Epoch 102 | avg_train_loss=0.015754INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p21.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9957e-05s, 424928 KB] reading input...
[t=0.00215726s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259396s, 427536 KB] Building successor generator...done!
[t=0.0262226s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262461s, 427536 KB] time for successor generation creation: 0.000169653s
[t=0.0262745s, 427536 KB] Variables: 25
[t=0.0262974s, 427536 KB] FactPairs: 182
[t=0.0263193s, 427536 KB] Bytes per state: 8
[t=0.0265148s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106235s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.106287s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106313s, 430128 KB] f = 152, 1 evaluated, 0 expanded
[t=0.106341s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.106365s, 430128 KB] pruning method: none
[t=0.118156s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.118208s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.124633s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.124675s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.124892s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.124921s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.126025s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.126066s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.127883s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.127915s, 431100 KB] g=2, 20 evaluated, 5 expanded
[t=0.128658s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.128687s, 431100 KB] g=3, 24 evaluated, 6 expanded
[t=0.129606s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.129636s, 431100 KB] g=4, 29 evaluated, 7 expanded
[t=0.129847s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.129875s, 431100 KB] g=5, 30 evaluated, 8 expanded
[t=0.132909s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.132942s, 431100 KB] g=9, 47 evaluated, 12 expanded
[t=0.133332s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.133361s, 431100 KB] g=10, 49 evaluated, 13 expanded
[t=0.139248s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.139281s, 431100 KB] g=12, 82 evaluated, 20 expanded
[t=0.146574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.14661s, 431100 KB] g=17, 123 evaluated, 33 expanded
[t=0.147006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.14704s, 431100 KB] g=18, 125 evaluated, 34 expanded
[t=0.185708s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.185745s, 431232 KB] g=24, 343 evaluated, 87 expanded
[t=0.191358s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.1914s, 431232 KB] g=22, 374 evaluated, 95 expanded
[t=0.192369s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.192399s, 431232 KB] g=23, 379 evaluated, 96 expanded
[t=0.194017s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.19405s, 431232 KB] g=24, 388 evaluated, 97 expanded
[t=0.195682s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.195717s, 431232 KB] g=26, 397 evaluated, 99 expanded
[t=0.202635s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.20267s, 431364 KB] g=26, 436 evaluated, 107 expanded
[t=0.203605s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.203643s, 431364 KB] g=27, 441 evaluated, 108 expanded
[t=0.208976s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.209011s, 431364 KB] g=30, 471 evaluated, 114 expanded
[t=0.22325s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.223289s, 431364 KB] g=34, 550 evaluated, 137 expanded, 4 reopened
[t=0.223895s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.22393s, 431364 KB] g=34, 553 evaluated, 137 expanded, 4 reopened
[t=0.224338s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.224368s, 431364 KB] g=35, 555 evaluated, 138 expanded, 4 reopened
[t=0.225815s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.225846s, 431364 KB] g=36, 563 evaluated, 139 expanded, 4 reopened
[t=0.22748s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.227516s, 431364 KB] g=37, 572 evaluated, 141 expanded, 4 reopened
[t=0.235333s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.23537s, 431364 KB] g=39, 616 evaluated, 150 expanded, 4 reopened
[t=0.246543s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.246579s, 431496 KB] g=41, 679 evaluated, 165 expanded, 4 reopened
[t=0.248399s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.248432s, 431496 KB] g=43, 689 evaluated, 167 expanded, 4 reopened
[t=0.251141s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.251173s, 431496 KB] g=46, 704 evaluated, 171 expanded, 4 reopened
[t=0.255634s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.255667s, 431496 KB] g=47, 729 evaluated, 177 expanded, 4 reopened
[t=0.256233s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.256262s, 431496 KB] g=48, 732 evaluated, 178 expanded, 4 reopened
[t=0.257358s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.257388s, 431496 KB] g=50, 738 evaluated, 180 expanded, 4 reopened
[t=0.258133s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.258162s, 431496 KB] g=51, 742 evaluated, 181 expanded, 4 reopened
[t=0.258912s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.258944s, 431496 KB] g=52, 746 evaluated, 182 expanded, 4 reopened
[t=0.259698s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.25973s, 431496 KB] g=54, 750 evaluated, 184 expanded, 4 reopened
[t=0.260827s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.26086s, 431496 KB] g=56, 756 evaluated, 186 expanded, 4 reopened
[t=0.261072s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.2611s, 431496 KB] g=57, 757 evaluated, 187 expanded, 4 reopened
[t=0.261668s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.261699s, 431496 KB] g=59, 760 evaluated, 189 expanded, 4 reopened
[t=0.261911s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.261939s, 431496 KB] g=60, 761 evaluated, 190 expanded, 4 reopened
[t=0.262882s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.262913s, 431496 KB] g=62, 767 evaluated, 195 expanded, 4 reopened
[t=0.26294s, 431496 KB] Solution found!
[t=0.262967s, 431496 KB] Actual search time: 0.156599s
unstack i e (1)
stack i j (1)
unstack e f (1)
put-down e (1)
pick-up b (1)
stack b e (1)
unstack k d (1)
put-down k (1)
unstack f l (1)
stack f b (1)
pick-up k (1)
stack k f (1)
unstack l g (1)
stack l d (1)
unstack i j (1)
stack i g (1)
unstack j a (1)
put-down j (1)
unstack i g (1)
put-down i (1)
unstack a h (1)
stack a j (1)
unstack h c (1)
stack h g (1)
unstack a j (1)
stack a h (1)
pick-up c (1)
stack c j (1)
unstack k f (1)
stack k l (1)
unstack f b (1)
stack f k (1)
unstack b e (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack c j (1)
put-down c (1)
pick-up i (1)
stack i c (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.262992s, 431496 KB] Plan length: 62 step(s).
[t=0.262992s, 431496 KB] Plan cost: 62
[t=0.262992s, 431496 KB] Expanded 196 state(s).
[t=0.262992s, 431496 KB] Reopened 4 state(s).
[t=0.262992s, 431496 KB] Evaluated 767 state(s).
[t=0.262992s, 431496 KB] Evaluations: 767
[t=0.262992s, 431496 KB] Generated 990 state(s).
[t=0.262992s, 431496 KB] Dead ends: 0 state(s).
[t=0.262992s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.262992s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.262992s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.262992s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.262992s, 431496 KB] Number of registered states: 767
[t=0.262992s, 431496 KB] Int hash set load factor: 767/1024 = 0.749023
[t=0.262992s, 431496 KB] Int hash set resizes: 10
[t=0.262992s, 431496 KB] Search time: 0.236478s
[t=0.262992s, 431496 KB] Total time: 0.262992s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p22.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6748e-05s, 424928 KB] reading input...
[t=0.00225053s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261652s, 427536 KB] Building successor generator...done!
[t=0.0264455s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264689s, 427536 KB] time for successor generation creation: 0.000169006s
[t=0.0264973s, 427536 KB] Variables: 25
[t=0.0265199s, 427536 KB] FactPairs: 182
[t=0.0265423s, 427536 KB] Bytes per state: 8
[t=0.0267393s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992853s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0993363s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993622s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0993904s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0994147s, 430128 KB] pruning method: none
[t=0.117811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.117871s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119007s, 431100 KB] f = 149, 9 evaluated, 2 expanded
[t=0.119772s, 431100 KB] f = 150, 13 evaluated, 3 expanded
[t=0.120351s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.120381s, 431100 KB] g=3, 16 evaluated, 4 expanded
[t=0.121342s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.121375s, 431100 KB] g=5, 21 evaluated, 6 expanded
[t=0.121589s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.121618s, 431100 KB] g=5, 22 evaluated, 6 expanded
[t=0.125106s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.125139s, 431100 KB] g=8, 41 evaluated, 10 expanded
[t=0.129759s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.129798s, 431100 KB] g=13, 66 evaluated, 16 expanded
[t=0.130008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.130037s, 431100 KB] g=13, 67 evaluated, 16 expanded
[t=0.149059s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.149095s, 431100 KB] g=16, 171 evaluated, 40 expanded
[t=0.149855s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.149885s, 431100 KB] g=17, 175 evaluated, 41 expanded
[t=0.157415s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.15745s, 431232 KB] g=23, 216 evaluated, 52 expanded
[t=0.171222s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.171258s, 431232 KB] g=26, 291 evaluated, 73 expanded
[t=0.190282s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.190319s, 431232 KB] g=24, 394 evaluated, 104 expanded
[t=0.216744s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.216786s, 431364 KB] g=34, 537 evaluated, 135 expanded
[t=0.219194s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.219227s, 431364 KB] g=35, 550 evaluated, 137 expanded
[t=0.246721s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.246763s, 431496 KB] g=41, 700 evaluated, 167 expanded
[t=0.258171s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.258207s, 431496 KB] g=40, 762 evaluated, 179 expanded
[t=0.297623s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.297665s, 431496 KB] g=31, 977 evaluated, 226 expanded
[t=0.320791s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.320842s, 431628 KB] g=34, 1102 evaluated, 263 expanded, 2 reopened
[t=0.379082s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.379128s, 431628 KB] g=39, 1419 evaluated, 361 expanded, 13 reopened
[t=0.379712s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.379742s, 431628 KB] g=40, 1422 evaluated, 362 expanded, 13 reopened
[t=0.382164s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.382198s, 431628 KB] g=42, 1435 evaluated, 365 expanded, 13 reopened
[t=0.385146s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.38518s, 431628 KB] g=46, 1451 evaluated, 370 expanded, 13 reopened
[t=0.435659s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.435702s, 431760 KB] g=57, 1728 evaluated, 451 expanded, 13 reopened
[t=0.436489s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.436522s, 431760 KB] g=58, 1732 evaluated, 452 expanded, 13 reopened
[t=0.459719s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.459758s, 431892 KB] g=60, 1859 evaluated, 488 expanded, 13 reopened
[t=0.464934s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.46497s, 431892 KB] g=63, 1887 evaluated, 494 expanded, 13 reopened
[t=0.466463s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.466494s, 431892 KB] g=65, 1895 evaluated, 496 expanded, 13 reopened
[t=0.469584s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.469618s, 431892 KB] g=65, 1911 evaluated, 500 expanded, 13 reopened
[t=0.470736s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.470766s, 431892 KB] g=66, 1917 evaluated, 501 expanded, 13 reopened
[t=0.475169s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.475207s, 431892 KB] g=68, 1941 evaluated, 508 expanded, 13 reopened
[t=0.477986s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.478022s, 431892 KB] g=71, 1956 evaluated, 512 expanded, 13 reopened
[t=0.478608s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.478639s, 431892 KB] g=72, 1959 evaluated, 513 expanded, 13 reopened
[t=0.480129s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.480161s, 431892 KB] g=73, 1967 evaluated, 515 expanded, 13 reopened
[t=0.480566s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.480598s, 431892 KB] g=74, 1969 evaluated, 516 expanded, 13 reopened
[t=0.483192s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.483226s, 431892 KB] g=77, 1983 evaluated, 522 expanded, 13 reopened
[t=0.483437s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.483467s, 431892 KB] g=77, 1984 evaluated, 522 expanded, 13 reopened
[t=0.490854s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.49089s, 431892 KB] g=79, 2024 evaluated, 542 expanded, 13 reopened
[t=0.491288s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.491318s, 431892 KB] g=80, 2026 evaluated, 543 expanded, 13 reopened
[t=0.491726s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.491759s, 431892 KB] g=82, 2029 evaluated, 545 expanded, 13 reopened
[t=0.491787s, 431892 KB] Solution found!
[t=0.491814s, 431892 KB] Actual search time: 0.392395s
unstack i c (1)
stack i a (1)
unstack d e (1)
stack d c (1)
unstack e g (1)
put-down e (1)
unstack b f (1)
put-down b (1)
pick-up g (1)
stack g e (1)
unstack i a (1)
put-down i (1)
unstack g e (1)
stack g d (1)
pick-up b (1)
stack b e (1)
pick-up a (1)
stack a i (1)
unstack f j (1)
stack f b (1)
unstack j l (1)
put-down j (1)
unstack a i (1)
stack a j (1)
unstack l k (1)
stack l f (1)
unstack k h (1)
stack k i (1)
pick-up h (1)
stack h a (1)
unstack l f (1)
stack l k (1)
unstack f b (1)
stack f l (1)
unstack b e (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack g d (1)
put-down g (1)
unstack f l (1)
stack f e (1)
pick-up g (1)
stack g d (1)
unstack l k (1)
put-down l (1)
unstack h a (1)
stack h f (1)
unstack a j (1)
stack a l (1)
pick-up j (1)
stack j k (1)
unstack g d (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack j k (1)
stack j d (1)
unstack a l (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up b (1)
stack b l (1)
unstack j d (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.491839s, 431892 KB] Plan length: 82 step(s).
[t=0.491839s, 431892 KB] Plan cost: 82
[t=0.491839s, 431892 KB] Expanded 546 state(s).
[t=0.491839s, 431892 KB] Reopened 13 state(s).
[t=0.491839s, 431892 KB] Evaluated 2029 state(s).
[t=0.491839s, 431892 KB] Evaluations: 2029
[t=0.491839s, 431892 KB] Generated 2706 state(s).
[t=0.491839s, 431892 KB] Dead ends: 0 state(s).
[t=0.491839s, 431892 KB] Expanded until last jump: 3 state(s).
[t=0.491839s, 431892 KB] Reopened until last jump: 0 state(s).
[t=0.491839s, 431892 KB] Evaluated until last jump: 13 state(s).
[t=0.491839s, 431892 KB] Generated until last jump: 14 state(s).
[t=0.491839s, 431892 KB] Number of registered states: 2029
[t=0.491839s, 431892 KB] Int hash set load factor: 2029/4096 = 0.495361
[t=0.491839s, 431892 KB] Int hash set resizes: 12
[t=0.491839s, 431892 KB] Search time: 0.4651s
[t=0.491839s, 431892 KB] Total time: 0.491839s
Solution found.
Peak memory: 431892 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p23.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7601e-05s, 424928 KB] reading input...
[t=0.00219303s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260399s, 427536 KB] Building successor generator...done!
[t=0.0263146s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263377s, 427536 KB] time for successor generation creation: 0.000166188s
[t=0.0263661s, 427536 KB] Variables: 25
[t=0.0263978s, 427536 KB] FactPairs: 182
[t=0.0264198s, 427536 KB] Bytes per state: 8
[t=0.0266172s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107014s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.107072s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107098s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.107126s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.10715s, 430128 KB] pruning method: none
[t=0.119065s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.119117s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.125574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.125616s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.126007s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.126037s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.126774s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.126814s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.128076s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.128106s, 431100 KB] g=3, 16 evaluated, 3 expanded
[t=0.128319s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.128348s, 431100 KB] g=4, 17 evaluated, 4 expanded
[t=0.12925s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.12928s, 431100 KB] g=5, 22 evaluated, 5 expanded
[t=0.129484s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.129512s, 431100 KB] g=5, 23 evaluated, 5 expanded
[t=0.130415s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.130445s, 431100 KB] g=6, 28 evaluated, 6 expanded
[t=0.134698s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.134735s, 431100 KB] g=6, 52 evaluated, 12 expanded
[t=0.138833s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.138867s, 431100 KB] g=9, 75 evaluated, 18 expanded
[t=0.141718s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.141751s, 431100 KB] g=11, 91 evaluated, 21 expanded
[t=0.144258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.144291s, 431100 KB] g=12, 105 evaluated, 24 expanded
[t=0.1475s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.147544s, 431100 KB] g=11, 123 evaluated, 28 expanded
[t=0.169803s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.169847s, 431232 KB] g=14, 249 evaluated, 59 expanded
[t=0.228008s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.228044s, 431232 KB] g=14, 580 evaluated, 142 expanded, 2 reopened
[t=0.228251s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.22828s, 431232 KB] g=14, 581 evaluated, 142 expanded, 2 reopened
[t=0.231449s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.231483s, 431232 KB] g=16, 599 evaluated, 145 expanded, 2 reopened
[t=0.232387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.23242s, 431232 KB] g=17, 604 evaluated, 146 expanded, 2 reopened
[t=0.235432s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.235465s, 431232 KB] g=20, 621 evaluated, 149 expanded, 2 reopened
[t=0.239353s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.239391s, 431364 KB] g=19, 643 evaluated, 154 expanded, 2 reopened
[t=0.241886s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.241919s, 431364 KB] g=21, 657 evaluated, 156 expanded, 2 reopened
[t=0.244071s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.244103s, 431364 KB] g=23, 669 evaluated, 158 expanded, 2 reopened
[t=0.244311s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.244342s, 431364 KB] g=23, 670 evaluated, 158 expanded, 2 reopened
[t=0.244903s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.244933s, 431364 KB] g=24, 673 evaluated, 159 expanded, 2 reopened
[t=0.24761s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.247646s, 431364 KB] g=25, 688 evaluated, 162 expanded, 2 reopened
[t=0.251541s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.251573s, 431364 KB] g=28, 710 evaluated, 166 expanded, 2 reopened
[t=0.254782s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.254815s, 431364 KB] g=29, 728 evaluated, 170 expanded, 2 reopened
[t=0.256777s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.256813s, 431364 KB] g=31, 739 evaluated, 172 expanded, 2 reopened
[t=0.267068s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.267103s, 431364 KB] g=37, 797 evaluated, 187 expanded, 2 reopened
[t=0.29207s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.292111s, 431496 KB] g=40, 938 evaluated, 224 expanded, 3 reopened
[t=0.294827s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.294859s, 431496 KB] g=39, 953 evaluated, 229 expanded, 3 reopened
[t=0.295604s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.295638s, 431496 KB] g=40, 957 evaluated, 230 expanded, 3 reopened
[t=0.296919s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.296949s, 431496 KB] g=42, 964 evaluated, 232 expanded, 3 reopened
[t=0.299907s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.29994s, 431496 KB] g=45, 980 evaluated, 236 expanded, 3 reopened
[t=0.300148s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.300182s, 431496 KB] g=45, 981 evaluated, 236 expanded, 3 reopened
[t=0.300752s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.300781s, 431496 KB] g=46, 984 evaluated, 237 expanded, 3 reopened
[t=0.303671s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.303703s, 431496 KB] g=50, 1000 evaluated, 243 expanded, 3 reopened
[t=0.304265s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.304298s, 431496 KB] g=51, 1003 evaluated, 244 expanded, 3 reopened
[t=0.304864s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.304894s, 431496 KB] g=52, 1006 evaluated, 245 expanded, 3 reopened
[t=0.307601s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.307637s, 431496 KB] g=54, 1021 evaluated, 251 expanded, 3 reopened
[t=0.309281s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.309313s, 431496 KB] g=56, 1030 evaluated, 253 expanded, 3 reopened
[t=0.309703s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.309733s, 431496 KB] g=57, 1032 evaluated, 254 expanded, 3 reopened
[t=0.31227s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.31231s, 431496 KB] g=61, 1046 evaluated, 261 expanded, 3 reopened
[t=0.312701s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.31273s, 431496 KB] g=62, 1048 evaluated, 262 expanded, 3 reopened
[t=0.312763s, 431496 KB] Solution found!
[t=0.312791s, 431496 KB] Actual search time: 0.205638s
stack h i (1)
unstack e g (1)
put-down e (1)
pick-up g (1)
stack g d (1)
unstack h i (1)
stack h f (1)
unstack l j (1)
put-down l (1)
unstack j a (1)
stack j e (1)
unstack g d (1)
stack g h (1)
unstack d b (1)
stack d j (1)
unstack b k (1)
stack b l (1)
unstack g h (1)
put-down g (1)
pick-up i (1)
stack i b (1)
unstack a c (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f k (1)
unstack d j (1)
put-down d (1)
unstack i b (1)
stack i j (1)
pick-up c (1)
stack c b (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack i j (1)
put-down i (1)
unstack j e (1)
stack j c (1)
pick-up e (1)
stack e k (1)
pick-up d (1)
stack d i (1)
unstack j c (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.312816s, 431496 KB] Plan length: 63 step(s).
[t=0.312816s, 431496 KB] Plan cost: 63
[t=0.312816s, 431496 KB] Expanded 264 state(s).
[t=0.312816s, 431496 KB] Reopened 3 state(s).
[t=0.312816s, 431496 KB] Evaluated 1049 state(s).
[t=0.312816s, 431496 KB] Evaluations: 1049
[t=0.312816s, 431496 KB] Generated 1353 state(s).
[t=0.312816s, 431496 KB] Dead ends: 0 state(s).
[t=0.312816s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.312816s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.312816s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.312816s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.312816s, 431496 KB] Number of registered states: 1049
[t=0.312816s, 431496 KB] Int hash set load factor: 1049/2048 = 0.512207
[t=0.312816s, 431496 KB] Int hash set resizes: 11
[t=0.312816s, 431496 KB] Search time: 0.2862s
[t=0.312816s, 431496 KB] Total time: 0.312816s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p24.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.010s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6715e-05s, 424928 KB] reading input...
[t=0.00211138s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259068s, 427536 KB] Building successor generator...done!
[t=0.0261884s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262118s, 427536 KB] time for successor generation creation: 0.000170311s
[t=0.0262398s, 427536 KB] Variables: 25
[t=0.0262625s, 427536 KB] FactPairs: 182
[t=0.0262843s, 427536 KB] Bytes per state: 8
[t=0.0265071s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980552s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0981066s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981322s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0981597s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0981837s, 430128 KB] pruning method: none
[t=0.116755s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.116805s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.117605s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.120739s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.120772s, 431100 KB] g=5, 26 evaluated, 8 expanded
[t=0.125437s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.125472s, 431100 KB] g=8, 51 evaluated, 14 expanded
[t=0.127684s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.127721s, 431100 KB] g=10, 63 evaluated, 16 expanded
[t=0.130278s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.130323s, 431100 KB] g=12, 77 evaluated, 18 expanded
[t=0.135049s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.135083s, 431100 KB] g=13, 103 evaluated, 22 expanded
[t=0.175278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.175319s, 431232 KB] g=22, 326 evaluated, 70 expanded
[t=0.243074s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.243113s, 431368 KB] g=22, 704 evaluated, 145 expanded
[t=0.254068s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.254105s, 431368 KB] g=26, 765 evaluated, 156 expanded
[t=0.318758s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.318797s, 431500 KB] g=30, 1126 evaluated, 229 expanded
[t=0.322991s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.323028s, 431500 KB] g=33, 1149 evaluated, 235 expanded
[t=0.324877s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.324908s, 431500 KB] g=34, 1159 evaluated, 239 expanded
[t=0.326389s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.326424s, 431500 KB] g=36, 1167 evaluated, 241 expanded
[t=0.32682s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.32685s, 431500 KB] g=37, 1169 evaluated, 242 expanded
[t=0.32778s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.32781s, 431500 KB] g=38, 1174 evaluated, 243 expanded
[t=0.32874s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.328773s, 431500 KB] g=39, 1179 evaluated, 244 expanded
[t=0.329705s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.329735s, 431500 KB] g=40, 1184 evaluated, 245 expanded
[t=0.33069s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.330725s, 431500 KB] g=41, 1189 evaluated, 246 expanded
[t=0.330935s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.330964s, 431500 KB] g=41, 1190 evaluated, 246 expanded
[t=0.334778s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.334814s, 431500 KB] g=43, 1211 evaluated, 251 expanded
[t=0.337003s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.337044s, 431500 KB] g=45, 1223 evaluated, 254 expanded
[t=0.349368s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.349407s, 431500 KB] g=49, 1291 evaluated, 272 expanded, 1 reopened
[t=0.358482s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.358518s, 431500 KB] g=52, 1341 evaluated, 284 expanded, 1 reopened
[t=0.376458s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.376499s, 431632 KB] g=53, 1440 evaluated, 309 expanded, 1 reopened
[t=0.376713s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.376742s, 431632 KB] g=53, 1441 evaluated, 309 expanded, 1 reopened
[t=0.377503s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.377533s, 431632 KB] g=55, 1445 evaluated, 311 expanded, 1 reopened
[t=0.379205s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.379239s, 431632 KB] g=57, 1454 evaluated, 313 expanded, 1 reopened
[t=0.381811s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.381846s, 431632 KB] g=59, 1468 evaluated, 318 expanded, 1 reopened
[t=0.389778s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.389814s, 431632 KB] g=56, 1511 evaluated, 343 expanded, 14 reopened
[t=0.390584s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.390619s, 431632 KB] g=58, 1515 evaluated, 345 expanded, 14 reopened
[t=0.391197s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.391227s, 431632 KB] g=59, 1518 evaluated, 346 expanded, 14 reopened
[t=0.392895s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.392926s, 431632 KB] g=61, 1527 evaluated, 348 expanded, 14 reopened
[t=0.396797s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.396831s, 431632 KB] g=63, 1548 evaluated, 356 expanded, 14 reopened
[t=0.398505s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.398538s, 431632 KB] g=66, 1557 evaluated, 360 expanded, 14 reopened
[t=0.399113s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.399147s, 431632 KB] g=67, 1560 evaluated, 361 expanded, 14 reopened
[t=0.400457s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.400497s, 431632 KB] g=69, 1567 evaluated, 365 expanded, 14 reopened
[t=0.400895s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.400925s, 431632 KB] g=70, 1569 evaluated, 366 expanded, 14 reopened
[t=0.400958s, 431632 KB] Solution found!
[t=0.400986s, 431632 KB] Actual search time: 0.302799s
put-down a (1)
unstack f c (1)
put-down f (1)
unstack c i (1)
put-down c (1)
unstack i b (1)
put-down i (1)
unstack b g (1)
stack b i (1)
unstack g l (1)
stack g d (1)
unstack b i (1)
stack b c (1)
pick-up l (1)
stack l i (1)
unstack g d (1)
stack g f (1)
unstack l i (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack g f (1)
put-down g (1)
pick-up f (1)
stack f i (1)
unstack k e (1)
put-down k (1)
pick-up a (1)
stack a f (1)
unstack e h (1)
put-down e (1)
unstack h j (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f i (1)
stack f k (1)
unstack i c (1)
put-down i (1)
pick-up j (1)
stack j i (1)
unstack c b (1)
put-down c (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
stack b c (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.40101s, 431632 KB] Plan length: 71 step(s).
[t=0.40101s, 431632 KB] Plan cost: 71
[t=0.40101s, 431632 KB] Expanded 368 state(s).
[t=0.40101s, 431632 KB] Reopened 14 state(s).
[t=0.40101s, 431632 KB] Evaluated 1570 state(s).
[t=0.40101s, 431632 KB] Evaluations: 1570
[t=0.40101s, 431632 KB] Generated 2019 state(s).
[t=0.40101s, 431632 KB] Dead ends: 0 state(s).
[t=0.40101s, 431632 KB] Expanded until last jump: 0 state(s).
[t=0.40101s, 431632 KB] Reopened until last jump: 0 state(s).
[t=0.40101s, 431632 KB] Evaluated until last jump: 1 state(s).
[t=0.40101s, 431632 KB] Generated until last jump: 0 state(s).
[t=0.40101s, 431632 KB] Number of registered states: 1570
[t=0.40101s, 431632 KB] Int hash set load factor: 1570/2048 = 0.766602
[t=0.40101s, 431632 KB] Int hash set resizes: 11
[t=0.40101s, 431632 KB] Search time: 0.374504s
[t=0.40101s, 431632 KB] Total time: 0.40101s
Solution found.
Peak memory: 431632 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p25.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5918e-05s, 424928 KB] reading input...
[t=0.00212459s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257473s, 427536 KB] Building successor generator...done!
[t=0.0260264s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260497s, 427536 KB] time for successor generation creation: 0.000168898s
[t=0.0260778s, 427536 KB] Variables: 25
[t=0.0261011s, 427536 KB] FactPairs: 182
[t=0.0261235s, 427536 KB] Bytes per state: 8
[t=0.0263168s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979488s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0979994s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980255s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0980527s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0980762s, 430128 KB] pruning method: none
[t=0.109855s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.109907s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.117093s, 431100 KB] g=5, 7 evaluated, 5 expanded
[t=0.11871s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.118741s, 431100 KB] g=9, 16 evaluated, 9 expanded
[t=0.119659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.119692s, 431100 KB] g=11, 21 evaluated, 11 expanded
[t=0.123609s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.123652s, 431100 KB] g=17, 43 evaluated, 20 expanded
[t=0.157681s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.157718s, 431232 KB] g=22, 236 evaluated, 97 expanded
[t=0.158106s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.158136s, 431232 KB] g=23, 238 evaluated, 98 expanded
[t=0.164213s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.164247s, 431232 KB] g=31, 272 evaluated, 109 expanded
[t=0.176043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.176081s, 431232 KB] g=30, 338 evaluated, 135 expanded, 9 reopened
[t=0.177171s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.177204s, 431232 KB] g=31, 344 evaluated, 136 expanded, 9 reopened
[t=0.177591s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.177621s, 431232 KB] g=32, 346 evaluated, 137 expanded, 9 reopened
[t=0.178357s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.178392s, 431232 KB] g=33, 350 evaluated, 138 expanded, 9 reopened
[t=0.178599s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.178628s, 431232 KB] g=33, 351 evaluated, 138 expanded, 9 reopened
[t=0.178839s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.178868s, 431232 KB] g=34, 352 evaluated, 139 expanded, 9 reopened
[t=0.179789s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.179821s, 431232 KB] g=35, 357 evaluated, 140 expanded, 9 reopened
[t=0.180562s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.180592s, 431232 KB] g=36, 361 evaluated, 141 expanded, 9 reopened
[t=0.181156s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.181189s, 431232 KB] g=37, 364 evaluated, 142 expanded, 9 reopened
[t=0.18175s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.181779s, 431232 KB] g=38, 367 evaluated, 143 expanded, 9 reopened
[t=0.183229s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.183264s, 431232 KB] g=40, 375 evaluated, 145 expanded, 9 reopened
[t=0.184183s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.184213s, 431232 KB] g=41, 380 evaluated, 147 expanded, 9 reopened
[t=0.184596s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.184631s, 431232 KB] g=41, 382 evaluated, 147 expanded, 9 reopened
[t=0.185374s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.185406s, 431232 KB] g=43, 386 evaluated, 149 expanded, 9 reopened
[t=0.185966s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.185996s, 431232 KB] g=44, 389 evaluated, 150 expanded, 9 reopened
[t=0.186384s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.186414s, 431232 KB] g=46, 391 evaluated, 152 expanded, 9 reopened
[t=0.186797s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.186827s, 431232 KB] g=47, 393 evaluated, 153 expanded, 9 reopened
[t=0.18847s, 431232 KB] Solution found!
[t=0.188508s, 431232 KB] Actual search time: 0.0904307s
unstack f h (1)
put-down f (1)
unstack h e (1)
stack h f (1)
unstack e l (1)
put-down e (1)
unstack l g (1)
put-down l (1)
pick-up e (1)
stack e l (1)
unstack g j (1)
stack g h (1)
unstack j b (1)
stack j e (1)
unstack g h (1)
stack g j (1)
unstack b a (1)
put-down b (1)
unstack h f (1)
stack h a (1)
pick-up f (1)
stack f b (1)
unstack g j (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f b (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack j e (1)
stack j b (1)
unstack e l (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.188535s, 431232 KB] Plan length: 50 step(s).
[t=0.188535s, 431232 KB] Plan cost: 50
[t=0.188535s, 431232 KB] Expanded 162 state(s).
[t=0.188535s, 431232 KB] Reopened 9 state(s).
[t=0.188535s, 431232 KB] Evaluated 403 state(s).
[t=0.188535s, 431232 KB] Evaluations: 403
[t=0.188535s, 431232 KB] Generated 608 state(s).
[t=0.188535s, 431232 KB] Dead ends: 0 state(s).
[t=0.188535s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.188535s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.188535s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.188535s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.188535s, 431232 KB] Number of registered states: 403
[t=0.188535s, 431232 KB] Int hash set load factor: 403/512 = 0.787109
[t=0.188535s, 431232 KB] Int hash set resizes: 9
[t=0.188535s, 431232 KB] Search time: 0.162219s
[t=0.188535s, 431232 KB] Total time: 0.188535s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p26.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.020s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6652e-05s, 424928 KB] reading input...
[t=0.00216064s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256129s, 427536 KB] Building successor generator...done!
[t=0.0258951s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259183s, 427536 KB] time for successor generation creation: 0.000169132s
[t=0.0259463s, 427536 KB] Variables: 25
[t=0.0259683s, 427536 KB] FactPairs: 182
[t=0.02599s, 427536 KB] Bytes per state: 8
[t=0.0261848s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0975586s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0976103s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0976361s, 430128 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0976629s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0976867s, 430128 KB] pruning method: none
[t=0.116022s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.116074s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117184s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.117218s, 431100 KB] g=2, 10 evaluated, 3 expanded
[t=0.117424s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.117464s, 431100 KB] g=2, 11 evaluated, 3 expanded
[t=0.119244s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.119275s, 431100 KB] g=3, 21 evaluated, 5 expanded
[t=0.120182s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.120212s, 431100 KB] g=4, 26 evaluated, 6 expanded
[t=0.121852s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.121884s, 431100 KB] g=7, 35 evaluated, 9 expanded
[t=0.122618s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.122648s, 431100 KB] g=8, 39 evaluated, 10 expanded
[t=0.12462s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.124653s, 431100 KB] g=11, 50 evaluated, 13 expanded
[t=0.146984s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.14702s, 431232 KB] g=23, 177 evaluated, 44 expanded
[t=0.150055s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.150089s, 431232 KB] g=27, 194 evaluated, 49 expanded
[t=0.150473s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.150501s, 431232 KB] g=27, 196 evaluated, 49 expanded
[t=0.150887s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.150916s, 431232 KB] g=28, 198 evaluated, 50 expanded
[t=0.151649s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.151679s, 431232 KB] g=29, 202 evaluated, 51 expanded
[t=0.152418s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.152453s, 431232 KB] g=30, 206 evaluated, 52 expanded
[t=0.153184s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.153214s, 431232 KB] g=31, 210 evaluated, 53 expanded
[t=0.159956s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.159992s, 431232 KB] g=35, 248 evaluated, 70 expanded
[t=0.183673s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.18371s, 431232 KB] g=43, 382 evaluated, 118 expanded
[t=0.187099s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.187134s, 431232 KB] g=47, 401 evaluated, 123 expanded
[t=0.191946s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.191987s, 431364 KB] g=49, 428 evaluated, 130 expanded
[t=0.192398s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.19243s, 431364 KB] g=50, 430 evaluated, 131 expanded
[t=0.206427s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.206465s, 431364 KB] g=52, 509 evaluated, 153 expanded
[t=0.20703s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.20706s, 431364 KB] g=53, 512 evaluated, 154 expanded
[t=0.212179s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.212215s, 431364 KB] g=58, 541 evaluated, 162 expanded
[t=0.212613s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.212644s, 431364 KB] g=59, 543 evaluated, 163 expanded
[t=0.213202s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.213232s, 431364 KB] g=60, 546 evaluated, 164 expanded
[t=0.213961s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.213993s, 431364 KB] g=61, 550 evaluated, 165 expanded
[t=0.222617s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.222654s, 431364 KB] g=62, 599 evaluated, 182 expanded
[t=0.223388s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.223417s, 431364 KB] g=63, 603 evaluated, 183 expanded
[t=0.223979s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.224011s, 431364 KB] g=64, 606 evaluated, 184 expanded
[t=0.224404s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.224435s, 431364 KB] g=65, 608 evaluated, 185 expanded
[t=0.224826s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.224855s, 431364 KB] g=67, 610 evaluated, 187 expanded
[t=0.225237s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.225266s, 431364 KB] g=68, 612 evaluated, 188 expanded
[t=0.225827s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.225856s, 431364 KB] g=70, 615 evaluated, 190 expanded
[t=0.226957s, 431364 KB] Solution found!
[t=0.22699s, 431364 KB] Actual search time: 0.129301s
put-down b (1)
unstack a e (1)
stack a f (1)
pick-up e (1)
stack e d (1)
unstack k g (1)
stack k a (1)
unstack g j (1)
stack g k (1)
unstack j l (1)
stack j b (1)
unstack e d (1)
put-down e (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack g k (1)
stack g d (1)
unstack l h (1)
stack l k (1)
pick-up h (1)
stack h g (1)
unstack l k (1)
stack l i (1)
unstack k a (1)
stack k l (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f k (1)
unstack a h (1)
stack a b (1)
unstack h g (1)
stack h f (1)
unstack g d (1)
put-down g (1)
unstack a b (1)
stack a d (1)
unstack h f (1)
stack h g (1)
unstack a d (1)
stack a h (1)
unstack d j (1)
stack d b (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e j (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack l i (1)
put-down l (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up b (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.227016s, 431364 KB] Plan length: 73 step(s).
[t=0.227016s, 431364 KB] Plan cost: 73
[t=0.227016s, 431364 KB] Expanded 197 state(s).
[t=0.227016s, 431364 KB] Reopened 0 state(s).
[t=0.227016s, 431364 KB] Evaluated 622 state(s).
[t=0.227016s, 431364 KB] Evaluations: 622
[t=0.227016s, 431364 KB] Generated 828 state(s).
[t=0.227016s, 431364 KB] Dead ends: 0 state(s).
[t=0.227016s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.227016s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.227016s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.227016s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.227016s, 431364 KB] Number of registered states: 622
[t=0.227016s, 431364 KB] Int hash set load factor: 622/1024 = 0.607422
[t=0.227016s, 431364 KB] Int hash set resizes: 10
[t=0.227016s, 431364 KB] Search time: 0.200832s
[t=0.227016s, 431364 KB] Total time: 0.227016s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p27.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6172e-05s, 424928 KB] reading input...
[t=0.00220623s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025988s, 427536 KB] Building successor generator...done!
[t=0.0262703s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262941s, 427536 KB] time for successor generation creation: 0.000170495s
[t=0.0263228s, 427536 KB] Variables: 25
[t=0.0263455s, 427536 KB] FactPairs: 182
[t=0.0263678s, 427536 KB] Bytes per state: 8
[t=0.0265633s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985586s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0986098s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986357s, 430128 KB] f = 131, 1 evaluated, 0 expanded
[t=0.0986634s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0986871s, 430128 KB] pruning method: none
[t=0.116984s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.117034s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117621s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.117651s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.121137s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.12117s, 431100 KB] g=8, 25 evaluated, 9 expanded
[t=0.121386s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.121415s, 431100 KB] g=9, 26 evaluated, 10 expanded
[t=0.121989s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.122019s, 431100 KB] g=10, 29 evaluated, 11 expanded
[t=0.123314s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.123344s, 431100 KB] g=11, 36 evaluated, 13 expanded
[t=0.128262s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.128298s, 431100 KB] g=15, 63 evaluated, 23 expanded
[t=0.132899s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.132947s, 431100 KB] g=18, 88 evaluated, 33 expanded, 1 reopened
[t=0.133345s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.133374s, 431100 KB] g=19, 90 evaluated, 34 expanded, 1 reopened
[t=0.133951s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.13398s, 431100 KB] g=20, 93 evaluated, 35 expanded, 1 reopened
[t=0.139812s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.139845s, 431100 KB] g=25, 125 evaluated, 50 expanded, 1 reopened
[t=0.142428s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.142461s, 431100 KB] g=30, 139 evaluated, 57 expanded, 1 reopened
[t=0.142858s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.142888s, 431100 KB] g=31, 141 evaluated, 58 expanded, 1 reopened
[t=0.144001s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.14403s, 431100 KB] g=31, 147 evaluated, 61 expanded, 1 reopened
[t=0.14896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.148995s, 431100 KB] g=31, 174 evaluated, 71 expanded, 1 reopened
[t=0.15119s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.151222s, 431100 KB] g=33, 186 evaluated, 76 expanded, 1 reopened
[t=0.169204s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.169242s, 431232 KB] g=35, 285 evaluated, 110 expanded, 1 reopened
[t=0.211454s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.211492s, 431364 KB] g=40, 518 evaluated, 186 expanded, 5 reopened
[t=0.212997s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.213029s, 431364 KB] g=43, 526 evaluated, 189 expanded, 5 reopened
[t=0.214499s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.214532s, 431364 KB] g=45, 534 evaluated, 191 expanded, 5 reopened
[t=0.215822s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.215852s, 431364 KB] g=47, 541 evaluated, 193 expanded, 5 reopened
[t=0.218948s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.218981s, 431364 KB] g=49, 558 evaluated, 197 expanded, 5 reopened
[t=0.220278s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.220314s, 431364 KB] g=50, 565 evaluated, 199 expanded, 5 reopened
[t=0.221977s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.222009s, 431364 KB] g=52, 574 evaluated, 201 expanded, 5 reopened
[t=0.222225s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.222253s, 431364 KB] g=53, 575 evaluated, 202 expanded, 5 reopened
[t=0.222462s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.22249s, 431364 KB] g=53, 576 evaluated, 202 expanded, 5 reopened
[t=0.223241s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.22327s, 431364 KB] g=54, 580 evaluated, 203 expanded, 5 reopened
[t=0.224025s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.224058s, 431364 KB] g=55, 584 evaluated, 204 expanded, 5 reopened
[t=0.226081s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.226114s, 431364 KB] g=58, 595 evaluated, 207 expanded, 5 reopened
[t=0.238913s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.238948s, 431364 KB] g=61, 666 evaluated, 231 expanded, 5 reopened
[t=0.240243s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.240273s, 431364 KB] g=63, 673 evaluated, 233 expanded, 5 reopened
[t=0.241218s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.24125s, 431364 KB] g=65, 678 evaluated, 235 expanded, 5 reopened
[t=0.241825s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.241858s, 431364 KB] g=67, 681 evaluated, 237 expanded, 5 reopened
[t=0.242435s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.242465s, 431364 KB] g=69, 684 evaluated, 239 expanded, 5 reopened
[t=0.243046s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.243076s, 431364 KB] g=71, 688 evaluated, 242 expanded, 5 reopened
[t=0.243103s, 431364 KB] Solution found!
[t=0.243129s, 431364 KB] Actual search time: 0.144438s
stack b k (1)
unstack e d (1)
stack e b (1)
unstack d i (1)
stack d e (1)
unstack l j (1)
stack l i (1)
unstack j g (1)
stack j d (1)
unstack l i (1)
stack l j (1)
unstack g a (1)
put-down g (1)
unstack a f (1)
stack a l (1)
unstack f h (1)
stack f i (1)
pick-up h (1)
stack h g (1)
unstack a l (1)
stack a f (1)
unstack l j (1)
put-down l (1)
unstack j d (1)
stack j l (1)
unstack d e (1)
stack d j (1)
unstack a f (1)
stack a e (1)
unstack f i (1)
stack f d (1)
unstack a e (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack e b (1)
stack e i (1)
unstack b k (1)
put-down b (1)
pick-up k (1)
stack k b (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack e i (1)
put-down e (1)
unstack f d (1)
stack f a (1)
pick-up e (1)
stack e d (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d b (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.243154s, 431364 KB] Plan length: 71 step(s).
[t=0.243154s, 431364 KB] Plan cost: 71
[t=0.243154s, 431364 KB] Expanded 243 state(s).
[t=0.243154s, 431364 KB] Reopened 5 state(s).
[t=0.243154s, 431364 KB] Evaluated 688 state(s).
[t=0.243154s, 431364 KB] Evaluations: 688
[t=0.243154s, 431364 KB] Generated 986 state(s).
[t=0.243154s, 431364 KB] Dead ends: 0 state(s).
[t=0.243154s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.243154s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.243154s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.243154s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.243154s, 431364 KB] Number of registered states: 688
[t=0.243154s, 431364 KB] Int hash set load factor: 688/1024 = 0.671875
[t=0.243154s, 431364 KB] Int hash set resizes: 10
[t=0.243154s, 431364 KB] Search time: 0.216591s
[t=0.243154s, 431364 KB] Total time: 0.243154s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p28.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.010s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6333e-05s, 424928 KB] reading input...
[t=0.00212856s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257942s, 427536 KB] Building successor generator...done!
[t=0.0260798s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026103s, 427536 KB] time for successor generation creation: 0.000172997s
[t=0.026131s, 427536 KB] Variables: 25
[t=0.0261531s, 427536 KB] FactPairs: 182
[t=0.0261749s, 427536 KB] Bytes per state: 8
[t=0.026367s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986941s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0987463s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987718s, 430128 KB] f = 152, 1 evaluated, 0 expanded
[t=0.0987998s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0988235s, 430128 KB] pruning method: none
[t=0.117531s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.117581s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117809s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.117839s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.122s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.122032s, 431100 KB] g=6, 28 evaluated, 7 expanded
[t=0.123944s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.123976s, 431100 KB] g=8, 38 evaluated, 9 expanded
[t=0.124755s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.124784s, 431100 KB] g=9, 42 evaluated, 10 expanded
[t=0.125377s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.125406s, 431100 KB] g=10, 45 evaluated, 11 expanded
[t=0.128069s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.128101s, 431100 KB] g=14, 59 evaluated, 15 expanded
[t=0.1287s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.128733s, 431100 KB] g=15, 62 evaluated, 16 expanded
[t=0.12952s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.129549s, 431100 KB] g=16, 66 evaluated, 17 expanded
[t=0.130884s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.130923s, 431100 KB] g=17, 73 evaluated, 18 expanded
[t=0.131712s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.131744s, 431100 KB] g=18, 77 evaluated, 19 expanded
[t=0.134751s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.134781s, 431100 KB] g=20, 93 evaluated, 22 expanded
[t=0.135945s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.135979s, 431100 KB] g=22, 99 evaluated, 24 expanded
[t=0.142578s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.142611s, 431100 KB] g=26, 134 evaluated, 34 expanded
[t=0.143224s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.143259s, 431100 KB] g=27, 137 evaluated, 35 expanded
[t=0.157198s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.157232s, 431232 KB] g=27, 211 evaluated, 53 expanded
[t=0.158387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.158418s, 431232 KB] g=28, 217 evaluated, 54 expanded
[t=0.159968s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.159999s, 431232 KB] g=29, 225 evaluated, 56 expanded
[t=0.160219s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.160246s, 431232 KB] g=29, 226 evaluated, 56 expanded
[t=0.160837s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.160866s, 431232 KB] g=30, 229 evaluated, 57 expanded
[t=0.163912s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.163947s, 431232 KB] g=32, 245 evaluated, 61 expanded
[t=0.17268s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.172714s, 431232 KB] g=37, 291 evaluated, 73 expanded
[t=0.188781s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.188815s, 431232 KB] g=36, 376 evaluated, 95 expanded
[t=0.191312s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.191347s, 431232 KB] g=35, 389 evaluated, 98 expanded
[t=0.195694s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.195726s, 431232 KB] g=38, 412 evaluated, 103 expanded
[t=0.23493s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.234977s, 431364 KB] g=42, 621 evaluated, 156 expanded
[t=0.236693s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.236726s, 431364 KB] g=43, 630 evaluated, 158 expanded
[t=0.237692s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.237721s, 431364 KB] g=44, 635 evaluated, 159 expanded
[t=0.240006s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.240038s, 431364 KB] g=46, 647 evaluated, 161 expanded
[t=0.240259s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.240287s, 431364 KB] g=47, 648 evaluated, 162 expanded
[t=0.241067s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.241097s, 431364 KB] g=48, 652 evaluated, 163 expanded
[t=0.243191s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.243228s, 431364 KB] g=49, 663 evaluated, 166 expanded
[t=0.24475s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.244783s, 431364 KB] g=50, 671 evaluated, 168 expanded
[t=0.245193s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.245222s, 431364 KB] g=51, 673 evaluated, 169 expanded
[t=0.246745s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.246777s, 431364 KB] g=53, 681 evaluated, 171 expanded
[t=0.247378s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.247409s, 431364 KB] g=54, 684 evaluated, 172 expanded
[t=0.252514s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.25255s, 431364 KB] g=58, 711 evaluated, 180 expanded
[t=0.252956s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.252985s, 431364 KB] g=59, 713 evaluated, 181 expanded
[t=0.253957s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.253986s, 431364 KB] g=61, 718 evaluated, 183 expanded
[t=0.254394s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.254423s, 431364 KB] g=62, 720 evaluated, 184 expanded
[t=0.25483s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.254858s, 431364 KB] g=63, 722 evaluated, 185 expanded
[t=0.255278s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.255313s, 431364 KB] g=64, 724 evaluated, 186 expanded
[t=0.255345s, 431364 KB] Solution found!
[t=0.255372s, 431364 KB] Actual search time: 0.156545s
put-down l (1)
unstack c d (1)
put-down c (1)
unstack d g (1)
stack d l (1)
unstack i e (1)
stack i k (1)
unstack e h (1)
stack e i (1)
pick-up c (1)
stack c e (1)
unstack d l (1)
stack d c (1)
unstack g b (1)
put-down g (1)
unstack b f (1)
stack b l (1)
unstack d c (1)
put-down d (1)
pick-up h (1)
stack h b (1)
unstack f j (1)
stack f g (1)
unstack h b (1)
stack h f (1)
unstack c e (1)
stack c b (1)
unstack j a (1)
stack j d (1)
unstack e i (1)
stack e c (1)
unstack i k (1)
put-down i (1)
pick-up a (1)
stack a k (1)
unstack h f (1)
stack h a (1)
unstack f g (1)
put-down f (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.255397s, 431364 KB] Plan length: 65 step(s).
[t=0.255397s, 431364 KB] Plan cost: 65
[t=0.255397s, 431364 KB] Expanded 188 state(s).
[t=0.255397s, 431364 KB] Reopened 0 state(s).
[t=0.255397s, 431364 KB] Evaluated 725 state(s).
[t=0.255397s, 431364 KB] Evaluations: 725
[t=0.255397s, 431364 KB] Generated 928 state(s).
[t=0.255397s, 431364 KB] Dead ends: 0 state(s).
[t=0.255397s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.255397s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.255397s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.255397s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.255397s, 431364 KB] Number of registered states: 725
[t=0.255397s, 431364 KB] Int hash set load factor: 725/1024 = 0.708008
[t=0.255397s, 431364 KB] Int hash set resizes: 10
[t=0.255397s, 431364 KB] Search time: 0.229031s
[t=0.255397s, 431364 KB] Total time: 0.255397s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p29.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6585e-05s, 424928 KB] reading input...
[t=0.00215305s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261171s, 427536 KB] Building successor generator...done!
[t=0.0263997s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264231s, 427536 KB] time for successor generation creation: 0.000170099s
[t=0.0264513s, 427536 KB] Variables: 25
[t=0.0264739s, 427536 KB] FactPairs: 182
[t=0.0264962s, 427536 KB] Bytes per state: 8
[t=0.0266904s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099062s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0991145s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991402s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0991684s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0991928s, 430128 KB] pruning method: none
[t=0.117736s, 431100 KB] f = 151, 4 evaluated, 1 expanded
[t=0.117972s, 431100 KB] f = 152, 5 evaluated, 2 expanded
[t=0.118185s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.118214s, 431100 KB] g=3, 6 evaluated, 3 expanded
[t=0.118598s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.118628s, 431100 KB] g=4, 8 evaluated, 4 expanded
[t=0.119364s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.119394s, 431100 KB] g=2, 12 evaluated, 6 expanded
[t=0.120501s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.120533s, 431100 KB] g=3, 18 evaluated, 8 expanded
[t=0.122143s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.122173s, 431100 KB] g=6, 27 evaluated, 11 expanded
[t=0.126083s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.126126s, 431100 KB] g=11, 49 evaluated, 16 expanded
[t=0.126863s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.126897s, 431100 KB] g=12, 53 evaluated, 17 expanded
[t=0.128885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.128916s, 431100 KB] g=13, 64 evaluated, 19 expanded
[t=0.132121s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.132153s, 431100 KB] g=17, 82 evaluated, 23 expanded
[t=0.135526s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.135558s, 431100 KB] g=18, 101 evaluated, 27 expanded
[t=0.136825s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.136857s, 431100 KB] g=19, 108 evaluated, 28 expanded
[t=0.137587s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.137617s, 431100 KB] g=20, 112 evaluated, 29 expanded
[t=0.14713s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.147169s, 431232 KB] g=23, 166 evaluated, 38 expanded
[t=0.152486s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.152519s, 431232 KB] g=23, 196 evaluated, 44 expanded
[t=0.153254s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.153288s, 431232 KB] g=24, 200 evaluated, 45 expanded
[t=0.154719s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.154749s, 431232 KB] g=25, 208 evaluated, 46 expanded
[t=0.15654s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.156575s, 431232 KB] g=27, 218 evaluated, 48 expanded
[t=0.157661s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.157693s, 431232 KB] g=28, 224 evaluated, 49 expanded
[t=0.164456s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.164489s, 431232 KB] g=29, 262 evaluated, 57 expanded
[t=0.169821s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.169853s, 431232 KB] g=33, 292 evaluated, 63 expanded
[t=0.170936s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.170966s, 431232 KB] g=34, 298 evaluated, 64 expanded
[t=0.171882s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.171918s, 431232 KB] g=35, 303 evaluated, 65 expanded
[t=0.177797s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.177833s, 431232 KB] g=38, 336 evaluated, 73 expanded
[t=0.179447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.179477s, 431232 KB] g=40, 345 evaluated, 75 expanded
[t=0.179682s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.179711s, 431232 KB] g=40, 346 evaluated, 75 expanded
[t=0.180283s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.180315s, 431232 KB] g=41, 349 evaluated, 76 expanded
[t=0.184764s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.184801s, 431232 KB] g=43, 374 evaluated, 81 expanded
[t=0.188708s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.188744s, 431232 KB] g=44, 396 evaluated, 86 expanded
[t=0.190358s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.190391s, 431232 KB] g=46, 405 evaluated, 88 expanded
[t=0.192547s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.192581s, 431232 KB] g=48, 417 evaluated, 91 expanded
[t=0.194027s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.194059s, 431232 KB] g=49, 425 evaluated, 92 expanded
[t=0.194973s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.195003s, 431232 KB] g=50, 430 evaluated, 93 expanded
[t=0.198394s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.198427s, 431364 KB] g=54, 449 evaluated, 98 expanded
[t=0.199164s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.199195s, 431364 KB] g=55, 453 evaluated, 99 expanded
[t=0.199403s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.199432s, 431364 KB] g=56, 454 evaluated, 100 expanded
[t=0.199818s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.199848s, 431364 KB] g=57, 456 evaluated, 101 expanded
[t=0.200064s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.200094s, 431364 KB] g=57, 457 evaluated, 101 expanded
[t=0.201012s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.201048s, 431364 KB] g=58, 462 evaluated, 103 expanded
[t=0.202323s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.202355s, 431364 KB] g=61, 469 evaluated, 108 expanded
[t=0.203808s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.20384s, 431364 KB] g=65, 477 evaluated, 113 expanded
[t=0.204063s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.204095s, 431364 KB] g=65, 478 evaluated, 115 expanded
[t=0.204481s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.20451s, 431364 KB] g=66, 480 evaluated, 116 expanded
[t=0.204542s, 431364 KB] Solution found!
[t=0.204569s, 431364 KB] Actual search time: 0.105372s
put-down l (1)
unstack e a (1)
put-down e (1)
unstack f j (1)
stack f a (1)
unstack j b (1)
put-down j (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
stack b c (1)
unstack f a (1)
stack f i (1)
unstack a g (1)
stack a e (1)
unstack g k (1)
stack g a (1)
unstack k h (1)
stack k f (1)
unstack b c (1)
stack b l (1)
unstack g a (1)
put-down g (1)
pick-up c (1)
stack c b (1)
pick-up h (1)
stack h a (1)
unstack k f (1)
stack k c (1)
unstack f i (1)
stack f d (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack d j (1)
put-down d (1)
unstack k c (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
pick-up j (1)
stack j e (1)
pick-up i (1)
stack i c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.204594s, 431364 KB] Plan length: 67 step(s).
[t=0.204594s, 431364 KB] Plan cost: 67
[t=0.204594s, 431364 KB] Expanded 118 state(s).
[t=0.204594s, 431364 KB] Reopened 0 state(s).
[t=0.204594s, 431364 KB] Evaluated 481 state(s).
[t=0.204594s, 431364 KB] Evaluations: 481
[t=0.204594s, 431364 KB] Generated 597 state(s).
[t=0.204594s, 431364 KB] Dead ends: 0 state(s).
[t=0.204594s, 431364 KB] Expanded until last jump: 2 state(s).
[t=0.204594s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.204594s, 431364 KB] Evaluated until last jump: 5 state(s).
[t=0.204594s, 431364 KB] Generated until last jump: 5 state(s).
[t=0.204594s, 431364 KB] Number of registered states: 481
[t=0.204594s, 431364 KB] Int hash set load factor: 481/512 = 0.939453
[t=0.204594s, 431364 KB] Int hash set resizes: 9
[t=0.204594s, 431364 KB] Search time: 0.177904s
[t=0.204594s, 431364 KB] Total time: 0.204594s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p30.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8332e-05s, 424928 KB] reading input...
[t=0.00216856s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025864s, 427536 KB] Building successor generator...done!
[t=0.0261461s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261697s, 427536 KB] time for successor generation creation: 0.000170526s
[t=0.0261985s, 427536 KB] Variables: 25
[t=0.0262212s, 427536 KB] FactPairs: 182
[t=0.0262435s, 427536 KB] Bytes per state: 8
[t=0.0264372s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983549s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0984064s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984324s, 430128 KB] f = 111, 1 evaluated, 0 expanded
[t=0.09846s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0984841s, 430128 KB] pruning method: none
[t=0.117259s, 431100 KB] f = 131, 6 evaluated, 1 expanded
[t=0.118399s, 431100 KB] f = 136, 12 evaluated, 3 expanded
[t=0.119707s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.119741s, 431100 KB] g=4, 19 evaluated, 5 expanded
[t=0.122097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.122138s, 431100 KB] g=6, 32 evaluated, 10 expanded
[t=0.122712s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.122742s, 431100 KB] g=7, 35 evaluated, 11 expanded
[t=0.123507s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.123538s, 431100 KB] g=8, 39 evaluated, 12 expanded
[t=0.141905s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.141941s, 431100 KB] g=15, 141 evaluated, 56 expanded
[t=0.148242s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.148276s, 431100 KB] g=20, 176 evaluated, 68 expanded
[t=0.19036s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.190397s, 431232 KB] g=26, 410 evaluated, 159 expanded
[t=0.190612s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.190641s, 431232 KB] g=27, 411 evaluated, 160 expanded
[t=0.19283s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.192863s, 431232 KB] g=29, 423 evaluated, 163 expanded
[t=0.193427s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.193457s, 431232 KB] g=29, 426 evaluated, 163 expanded
[t=0.193845s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.193876s, 431232 KB] g=30, 428 evaluated, 164 expanded
[t=0.218109s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.218145s, 431364 KB] g=30, 563 evaluated, 195 expanded
[t=0.218714s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.218743s, 431364 KB] g=31, 566 evaluated, 196 expanded
[t=0.22433s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.224364s, 431364 KB] g=33, 597 evaluated, 205 expanded
[t=0.25542s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.255459s, 431364 KB] g=35, 771 evaluated, 251 expanded, 1 reopened
[t=0.260489s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.260523s, 431364 KB] g=37, 799 evaluated, 257 expanded, 1 reopened
[t=0.261626s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.261656s, 431364 KB] g=38, 805 evaluated, 258 expanded, 1 reopened
[t=0.262223s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.262261s, 431364 KB] g=39, 808 evaluated, 259 expanded, 1 reopened
[t=0.268387s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.268422s, 431364 KB] g=43, 842 evaluated, 268 expanded, 1 reopened
[t=0.271141s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.271175s, 431496 KB] g=43, 857 evaluated, 272 expanded, 1 reopened
[t=0.273528s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.273564s, 431496 KB] g=45, 870 evaluated, 275 expanded, 1 reopened
[t=0.275742s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.275775s, 431496 KB] g=47, 882 evaluated, 277 expanded, 1 reopened
[t=0.312341s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.312384s, 431628 KB] g=50, 1085 evaluated, 330 expanded, 2 reopened
[t=0.560005s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.560051s, 431892 KB] g=41, 2466 evaluated, 808 expanded, 88 reopened
[t=0.619466s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.61951s, 431892 KB] g=49, 2798 evaluated, 918 expanded, 89 reopened
[t=0.620798s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.620829s, 431892 KB] g=51, 2805 evaluated, 920 expanded, 89 reopened
[t=0.809334s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.809382s, 432336 KB] g=59, 3858 evaluated, 1289 expanded, 108 reopened
[t=0.80995s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.80998s, 432336 KB] g=59, 3861 evaluated, 1289 expanded, 108 reopened
[t=0.810726s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.810755s, 432336 KB] g=60, 3865 evaluated, 1290 expanded, 108 reopened
[t=0.815624s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.815659s, 432336 KB] g=62, 3892 evaluated, 1297 expanded, 108 reopened
[t=0.816759s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.816789s, 432336 KB] g=64, 3898 evaluated, 1299 expanded, 108 reopened
[t=0.820214s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.820252s, 432336 KB] g=66, 3917 evaluated, 1305 expanded, 108 reopened
[t=0.821717s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.821755s, 432336 KB] g=68, 3925 evaluated, 1308 expanded, 108 reopened
[t=0.823043s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.823075s, 432336 KB] g=70, 3932 evaluated, 1310 expanded, 108 reopened
[t=0.823288s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.823316s, 432336 KB] g=71, 3933 evaluated, 1311 expanded, 108 reopened
[t=0.824241s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.824271s, 432336 KB] g=72, 3938 evaluated, 1313 expanded, 108 reopened
[t=0.824837s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.824866s, 432336 KB] g=73, 3941 evaluated, 1314 expanded, 108 reopened
[t=0.825254s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.825286s, 432336 KB] g=74, 3943 evaluated, 1315 expanded, 108 reopened
[t=0.825675s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.825704s, 432336 KB] g=75, 3945 evaluated, 1316 expanded, 108 reopened
[t=0.826094s, 432336 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.826123s, 432336 KB] g=76, 3947 evaluated, 1317 expanded, 108 reopened
[t=0.826155s, 432336 KB] Solution found!
[t=0.826183s, 432336 KB] Actual search time: 0.727696s
stack e d (1)
unstack b a (1)
stack b e (1)
unstack a g (1)
stack a c (1)
pick-up g (1)
stack g a (1)
unstack b e (1)
stack b g (1)
unstack e d (1)
put-down e (1)
unstack b g (1)
stack b e (1)
unstack g a (1)
stack g d (1)
unstack a c (1)
stack a f (1)
unstack c i (1)
stack c b (1)
unstack a f (1)
stack a c (1)
unstack i k (1)
put-down i (1)
unstack k l (1)
stack k f (1)
unstack l h (1)
stack l i (1)
pick-up h (1)
stack h g (1)
unstack a c (1)
stack a h (1)
unstack c b (1)
put-down c (1)
unstack k f (1)
stack k c (1)
pick-up f (1)
stack f k (1)
unstack b e (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack a h (1)
stack a l (1)
unstack f k (1)
stack f e (1)
unstack h g (1)
stack h a (1)
unstack g d (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j d (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up b (1)
stack b c (1)
unstack l i (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.826208s, 432336 KB] Plan length: 77 step(s).
[t=0.826208s, 432336 KB] Plan cost: 77
[t=0.826208s, 432336 KB] Expanded 1319 state(s).
[t=0.826208s, 432336 KB] Reopened 108 state(s).
[t=0.826208s, 432336 KB] Evaluated 3948 state(s).
[t=0.826208s, 432336 KB] Evaluations: 3948
[t=0.826208s, 432336 KB] Generated 5965 state(s).
[t=0.826208s, 432336 KB] Dead ends: 0 state(s).
[t=0.826208s, 432336 KB] Expanded until last jump: 3 state(s).
[t=0.826208s, 432336 KB] Reopened until last jump: 0 state(s).
[t=0.826208s, 432336 KB] Evaluated until last jump: 12 state(s).
[t=0.826208s, 432336 KB] Generated until last jump: 13 state(s).
[t=0.826208s, 432336 KB] Number of registered states: 3948
[t=0.826208s, 432336 KB] Int hash set load factor: 3948/8192 = 0.481934
[t=0.826208s, 432336 KB] Int hash set resizes: 13
[t=0.826208s, 432336 KB] Search time: 0.799772s
[t=0.826208s, 432336 KB] Total time: 0.826208s
Solution found.
Peak memory: 432336 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p31.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8858e-05s, 424928 KB] reading input...
[t=0.00224716s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258729s, 427536 KB] Building successor generator...done!
[t=0.0261569s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261808s, 427536 KB] time for successor generation creation: 0.000167707s
[t=0.0262102s, 427536 KB] Variables: 25
[t=0.0262331s, 427536 KB] FactPairs: 182
[t=0.026256s, 427536 KB] Bytes per state: 8
[t=0.0264512s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107369s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.107425s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107451s, 430128 KB] f = 117, 1 evaluated, 0 expanded
[t=0.107478s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.107503s, 430128 KB] pruning method: none
[t=0.119456s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.119507s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.126014s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.126056s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.12664s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.126688s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.127623s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.127654s, 431100 KB] g=3, 11 evaluated, 4 expanded
[t=0.143568s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.143605s, 431100 KB] g=10, 100 evaluated, 29 expanded
[t=0.150983s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.151017s, 431100 KB] g=16, 141 evaluated, 40 expanded
[t=0.159637s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.159674s, 431232 KB] g=22, 189 evaluated, 51 expanded
[t=0.16418s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.164214s, 431232 KB] g=24, 214 evaluated, 56 expanded
[t=0.165317s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.16535s, 431232 KB] g=25, 220 evaluated, 58 expanded
[t=0.173604s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.17364s, 431232 KB] g=28, 266 evaluated, 69 expanded
[t=0.178492s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.178526s, 431232 KB] g=30, 293 evaluated, 75 expanded
[t=0.179097s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.179129s, 431232 KB] g=30, 296 evaluated, 75 expanded
[t=0.186125s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.186161s, 431232 KB] g=32, 335 evaluated, 85 expanded
[t=0.186371s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.18641s, 431232 KB] g=32, 336 evaluated, 85 expanded
[t=0.18877s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.188803s, 431232 KB] g=36, 349 evaluated, 89 expanded
[t=0.189904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.189936s, 431232 KB] g=37, 355 evaluated, 90 expanded
[t=0.190151s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.190183s, 431232 KB] g=38, 356 evaluated, 91 expanded
[t=0.191299s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.191334s, 431232 KB] g=39, 362 evaluated, 92 expanded
[t=0.191906s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.191936s, 431232 KB] g=40, 365 evaluated, 93 expanded
[t=0.192508s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.192542s, 431232 KB] g=42, 368 evaluated, 95 expanded
[t=0.19401s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.194044s, 431232 KB] g=44, 376 evaluated, 98 expanded
[t=0.196772s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.196807s, 431232 KB] g=45, 391 evaluated, 104 expanded
[t=0.197198s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.197228s, 431232 KB] g=46, 393 evaluated, 105 expanded
[t=0.19762s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.197649s, 431232 KB] g=47, 395 evaluated, 106 expanded
[t=0.198217s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.198247s, 431232 KB] g=48, 398 evaluated, 107 expanded
[t=0.201515s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.201548s, 431232 KB] g=50, 416 evaluated, 114 expanded
[t=0.202117s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.20215s, 431232 KB] g=51, 419 evaluated, 115 expanded
[t=0.202539s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.202568s, 431232 KB] g=52, 421 evaluated, 116 expanded
[t=0.202792s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.202823s, 431232 KB] g=53, 422 evaluated, 117 expanded
[t=0.203037s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.203071s, 431232 KB] g=54, 423 evaluated, 118 expanded
[t=0.204s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.20403s, 431232 KB] g=57, 428 evaluated, 121 expanded
[t=0.204242s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.204271s, 431232 KB] g=58, 429 evaluated, 122 expanded
[t=0.20521s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.205246s, 431364 KB] g=60, 435 evaluated, 127 expanded
[t=0.205274s, 431364 KB] Solution found!
[t=0.205301s, 431364 KB] Actual search time: 0.0977953s
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d b (1)
unstack g f (1)
stack g d (1)
unstack f j (1)
stack f i (1)
unstack g d (1)
stack g h (1)
unstack j l (1)
stack j d (1)
unstack g h (1)
put-down g (1)
unstack l a (1)
put-down l (1)
pick-up a (1)
stack a l (1)
unstack f i (1)
stack f j (1)
unstack h e (1)
stack h a (1)
unstack f j (1)
stack f e (1)
unstack j d (1)
stack j i (1)
unstack d b (1)
stack d j (1)
unstack h a (1)
stack h g (1)
unstack a l (1)
stack a h (1)
pick-up b (1)
stack b l (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d j (1)
stack d b (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.205327s, 431364 KB] Plan length: 60 step(s).
[t=0.205327s, 431364 KB] Plan cost: 60
[t=0.205327s, 431364 KB] Expanded 128 state(s).
[t=0.205327s, 431364 KB] Reopened 0 state(s).
[t=0.205327s, 431364 KB] Evaluated 435 state(s).
[t=0.205327s, 431364 KB] Evaluations: 435
[t=0.205327s, 431364 KB] Generated 569 state(s).
[t=0.205327s, 431364 KB] Dead ends: 0 state(s).
[t=0.205327s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.205327s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.205327s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.205327s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.205327s, 431364 KB] Number of registered states: 435
[t=0.205327s, 431364 KB] Int hash set load factor: 435/512 = 0.849609
[t=0.205327s, 431364 KB] Int hash set resizes: 9
[t=0.205327s, 431364 KB] Search time: 0.178876s
[t=0.205327s, 431364 KB] Total time: 0.205327s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p32.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9983e-05s, 424928 KB] reading input...
[t=0.00219706s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261421s, 427536 KB] Building successor generator...done!
[t=0.026423s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264466s, 427536 KB] time for successor generation creation: 0.000167739s
[t=0.0264754s, 427536 KB] Variables: 25
[t=0.0264982s, 427536 KB] FactPairs: 182
[t=0.0265206s, 427536 KB] Bytes per state: 8
[t=0.0267142s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994977s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0995595s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995865s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0996138s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0996381s, 430128 KB] pruning method: none
[t=0.118412s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.118462s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.119038s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.119069s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.120364s, 431100 KB] f = 150, 15 evaluated, 3 expanded
[t=0.12112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.12115s, 431100 KB] g=3, 19 evaluated, 4 expanded
[t=0.125481s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.125525s, 431100 KB] g=6, 43 evaluated, 10 expanded
[t=0.132882s, 431100 KB] f = 151, 84 evaluated, 19 expanded
[t=0.152658s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.152692s, 431100 KB] g=11, 194 evaluated, 48 expanded
[t=0.15362s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.153652s, 431100 KB] g=12, 199 evaluated, 49 expanded
[t=0.154043s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.154073s, 431100 KB] g=13, 201 evaluated, 50 expanded
[t=0.169897s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.169935s, 431232 KB] g=24, 289 evaluated, 76 expanded
[t=0.171041s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.171073s, 431232 KB] g=25, 295 evaluated, 77 expanded
[t=0.174171s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.174204s, 431232 KB] g=23, 312 evaluated, 81 expanded
[t=0.176573s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.176607s, 431232 KB] g=27, 325 evaluated, 85 expanded
[t=0.186125s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.18616s, 431232 KB] g=28, 378 evaluated, 97 expanded
[t=0.250281s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.250322s, 431496 KB] g=39, 735 evaluated, 166 expanded
[t=0.250538s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.250567s, 431496 KB] g=39, 736 evaluated, 166 expanded
[t=0.25972s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.259754s, 431496 KB] g=42, 787 evaluated, 175 expanded
[t=0.269603s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.26964s, 431496 KB] g=46, 842 evaluated, 185 expanded
[t=0.273773s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.273807s, 431496 KB] g=48, 865 evaluated, 190 expanded
[t=0.274725s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.274758s, 431496 KB] g=49, 870 evaluated, 191 expanded
[t=0.278356s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.278391s, 431496 KB] g=53, 890 evaluated, 195 expanded
[t=0.28198s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.282022s, 431496 KB] g=55, 910 evaluated, 201 expanded
[t=0.282411s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.282441s, 431496 KB] g=55, 912 evaluated, 201 expanded
[t=0.284639s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.284671s, 431496 KB] g=57, 924 evaluated, 205 expanded
[t=0.286851s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.286885s, 431496 KB] g=59, 936 evaluated, 209 expanded
[t=0.287641s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.287673s, 431496 KB] g=60, 940 evaluated, 210 expanded
[t=0.287882s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.28791s, 431496 KB] g=60, 941 evaluated, 210 expanded
[t=0.288476s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.288509s, 431496 KB] g=61, 944 evaluated, 211 expanded
[t=0.291387s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.29143s, 431628 KB] g=65, 960 evaluated, 215 expanded
[t=0.297369s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.297403s, 431628 KB] g=67, 993 evaluated, 224 expanded
[t=0.304166s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.304204s, 431628 KB] g=69, 1030 evaluated, 233 expanded
[t=0.308705s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.30874s, 431628 KB] g=72, 1055 evaluated, 238 expanded
[t=0.309485s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.309517s, 431628 KB] g=73, 1059 evaluated, 239 expanded
[t=0.311325s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.311358s, 431628 KB] g=75, 1069 evaluated, 242 expanded
[t=0.311759s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.31179s, 431628 KB] g=76, 1071 evaluated, 243 expanded
[t=0.313251s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.313285s, 431628 KB] g=79, 1079 evaluated, 246 expanded
[t=0.313676s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.313705s, 431628 KB] g=80, 1081 evaluated, 247 expanded
[t=0.313743s, 431628 KB] Solution found!
[t=0.313771s, 431628 KB] Actual search time: 0.21413s
stack c i (1)
unstack e d (1)
stack e j (1)
pick-up a (1)
stack a h (1)
unstack e j (1)
put-down e (1)
unstack a h (1)
stack a j (1)
pick-up h (1)
stack h a (1)
unstack c i (1)
put-down c (1)
pick-up d (1)
stack d c (1)
unstack i l (1)
stack i e (1)
unstack h a (1)
stack h d (1)
unstack i e (1)
put-down i (1)
unstack l f (1)
put-down l (1)
unstack a j (1)
stack a l (1)
unstack j b (1)
put-down j (1)
unstack a l (1)
put-down a (1)
unstack b k (1)
put-down b (1)
unstack k g (1)
stack k h (1)
pick-up g (1)
stack g e (1)
pick-up b (1)
stack b j (1)
unstack k h (1)
stack k i (1)
pick-up f (1)
stack f b (1)
unstack g e (1)
stack g f (1)
pick-up e (1)
stack e k (1)
unstack g f (1)
put-down g (1)
unstack h d (1)
stack h f (1)
pick-up l (1)
stack l d (1)
unstack h f (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f b (1)
stack f a (1)
unstack e k (1)
stack e b (1)
unstack k i (1)
stack k f (1)
unstack l d (1)
stack l i (1)
unstack d c (1)
put-down d (1)
unstack e b (1)
stack e k (1)
unstack b j (1)
put-down b (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.313796s, 431628 KB] Plan length: 81 step(s).
[t=0.313796s, 431628 KB] Plan cost: 81
[t=0.313796s, 431628 KB] Expanded 249 state(s).
[t=0.313796s, 431628 KB] Reopened 0 state(s).
[t=0.313796s, 431628 KB] Evaluated 1082 state(s).
[t=0.313796s, 431628 KB] Evaluations: 1082
[t=0.313796s, 431628 KB] Generated 1352 state(s).
[t=0.313796s, 431628 KB] Dead ends: 0 state(s).
[t=0.313796s, 431628 KB] Expanded until last jump: 19 state(s).
[t=0.313796s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.313796s, 431628 KB] Evaluated until last jump: 84 state(s).
[t=0.313796s, 431628 KB] Generated until last jump: 102 state(s).
[t=0.313796s, 431628 KB] Number of registered states: 1082
[t=0.313796s, 431628 KB] Int hash set load factor: 1082/2048 = 0.52832
[t=0.313796s, 431628 KB] Int hash set resizes: 11
[t=0.313796s, 431628 KB] Search time: 0.287083s
[t=0.313796s, 431628 KB] Total time: 0.313796s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p33.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5223e-05s, 424928 KB] reading input...
[t=0.00216295s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257789s, 427536 KB] Building successor generator...done!
[t=0.0260626s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026087s, 427536 KB] time for successor generation creation: 0.000169286s
[t=0.0261164s, 427536 KB] Variables: 25
[t=0.0261402s, 427536 KB] FactPairs: 182
[t=0.026163s, 427536 KB] Bytes per state: 8
[t=0.026357s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980606s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.098112s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981382s, 430128 KB] f = 125, 1 evaluated, 0 expanded
[t=0.098166s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0981904s, 430128 KB] pruning method: none
[t=0.110012s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.110065s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.119182s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.119227s, 431100 KB] g=5, 18 evaluated, 6 expanded
[t=0.121389s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.121421s, 431100 KB] g=7, 30 evaluated, 9 expanded
[t=0.125368s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.125401s, 431100 KB] g=10, 52 evaluated, 15 expanded
[t=0.126321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.126352s, 431100 KB] g=12, 57 evaluated, 17 expanded
[t=0.127639s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.127685s, 431100 KB] g=15, 64 evaluated, 20 expanded
[t=0.163647s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.163686s, 431232 KB] g=19, 264 evaluated, 161 expanded, 56 reopened
[t=0.164614s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.164644s, 431232 KB] g=21, 269 evaluated, 163 expanded, 56 reopened
[t=0.167344s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.167379s, 431232 KB] g=25, 284 evaluated, 168 expanded, 56 reopened
[t=0.167771s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.167801s, 431232 KB] g=26, 286 evaluated, 169 expanded, 56 reopened
[t=0.168724s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.168755s, 431232 KB] g=26, 291 evaluated, 171 expanded, 56 reopened
[t=0.173029s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.173061s, 431232 KB] g=30, 315 evaluated, 178 expanded, 56 reopened
[t=0.175758s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.175792s, 431232 KB] g=30, 330 evaluated, 182 expanded, 56 reopened
[t=0.18858s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.188617s, 431232 KB] g=34, 402 evaluated, 203 expanded, 56 reopened
[t=0.196499s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.196536s, 431364 KB] g=33, 446 evaluated, 221 expanded, 58 reopened
[t=0.199424s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.199457s, 431364 KB] g=34, 462 evaluated, 225 expanded, 58 reopened
[t=0.2002s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.200232s, 431364 KB] g=35, 466 evaluated, 226 expanded, 58 reopened
[t=0.200624s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.200653s, 431364 KB] g=36, 468 evaluated, 227 expanded, 58 reopened
[t=0.201397s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.20143s, 431364 KB] g=37, 472 evaluated, 228 expanded, 58 reopened
[t=0.201996s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.202025s, 431364 KB] g=38, 475 evaluated, 229 expanded, 58 reopened
[t=0.203129s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.203159s, 431364 KB] g=40, 481 evaluated, 231 expanded, 58 reopened
[t=0.204272s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.204307s, 431364 KB] g=41, 487 evaluated, 232 expanded, 58 reopened
[t=0.204698s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.204727s, 431364 KB] g=42, 489 evaluated, 233 expanded, 58 reopened
[t=0.206539s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.206569s, 431364 KB] g=44, 499 evaluated, 236 expanded, 58 reopened
[t=0.208245s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.20828s, 431364 KB] g=46, 508 evaluated, 238 expanded, 58 reopened
[t=0.211345s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.211381s, 431364 KB] g=47, 525 evaluated, 244 expanded, 58 reopened
[t=0.221009s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.221048s, 431364 KB] g=45, 579 evaluated, 259 expanded, 58 reopened
[t=0.22144s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.22147s, 431364 KB] g=46, 581 evaluated, 260 expanded, 58 reopened
[t=0.222744s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.222774s, 431364 KB] g=48, 588 evaluated, 262 expanded, 58 reopened
[t=0.223707s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.223741s, 431364 KB] g=49, 593 evaluated, 263 expanded, 58 reopened
[t=0.22413s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.22416s, 431364 KB] g=50, 595 evaluated, 264 expanded, 58 reopened
[t=0.225448s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.225478s, 431364 KB] g=53, 602 evaluated, 267 expanded, 58 reopened
[t=0.226412s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.226441s, 431364 KB] g=54, 607 evaluated, 268 expanded, 58 reopened
[t=0.227011s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.22704s, 431364 KB] g=56, 610 evaluated, 270 expanded, 58 reopened
[t=0.227439s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.227471s, 431364 KB] g=57, 612 evaluated, 271 expanded, 58 reopened
[t=0.227504s, 431364 KB] Solution found!
[t=0.227531s, 431364 KB] Actual search time: 0.129337s
unstack h e (1)
put-down h (1)
unstack d g (1)
stack d e (1)
unstack g i (1)
stack g k (1)
unstack d e (1)
put-down d (1)
pick-up e (1)
stack e i (1)
pick-up d (1)
stack d e (1)
unstack g k (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack k a (1)
stack k d (1)
unstack a b (1)
stack a k (1)
unstack h g (1)
stack h a (1)
unstack b f (1)
put-down b (1)
unstack f j (1)
stack f b (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k d (1)
stack k j (1)
unstack f b (1)
stack f k (1)
unstack d e (1)
stack d b (1)
unstack e i (1)
stack e d (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.227556s, 431364 KB] Plan length: 58 step(s).
[t=0.227556s, 431364 KB] Plan cost: 58
[t=0.227556s, 431364 KB] Expanded 273 state(s).
[t=0.227556s, 431364 KB] Reopened 58 state(s).
[t=0.227556s, 431364 KB] Evaluated 613 state(s).
[t=0.227556s, 431364 KB] Evaluations: 613
[t=0.227556s, 431364 KB] Generated 1034 state(s).
[t=0.227556s, 431364 KB] Dead ends: 0 state(s).
[t=0.227556s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.227556s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.227556s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.227556s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.227556s, 431364 KB] Number of registered states: 613
[t=0.227556s, 431364 KB] Int hash set load factor: 613/1024 = 0.598633
[t=0.227556s, 431364 KB] Int hash set resizes: 10
[t=0.227556s, 431364 KB] Search time: 0.2012s
[t=0.227556s, 431364 KB] Total time: 0.227556s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p34.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6444e-05s, 424928 KB] reading input...
[t=0.00216185s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259048s, 427536 KB] Building successor generator...done!
[t=0.0261857s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262101s, 427536 KB] time for successor generation creation: 0.000168287s
[t=0.0262391s, 427536 KB] Variables: 25
[t=0.0262621s, 427536 KB] FactPairs: 182
[t=0.0262844s, 427536 KB] Bytes per state: 8
[t=0.0264788s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990304s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0990832s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991093s, 430128 KB] f = 149, 1 evaluated, 0 expanded
[t=0.0991366s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0991609s, 430128 KB] pruning method: none
[t=0.117833s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.117884s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118878s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.118911s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.11913s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.119159s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.121262s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.121293s, 431100 KB] g=4, 22 evaluated, 6 expanded
[t=0.121703s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.121732s, 431100 KB] g=5, 24 evaluated, 7 expanded
[t=0.123278s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.12331s, 431100 KB] g=6, 32 evaluated, 8 expanded
[t=0.124661s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.124692s, 431100 KB] g=8, 39 evaluated, 10 expanded
[t=0.125288s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.125318s, 431100 KB] g=9, 42 evaluated, 11 expanded
[t=0.127046s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.127089s, 431100 KB] g=11, 51 evaluated, 13 expanded
[t=0.139965s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.140004s, 431100 KB] g=16, 119 evaluated, 33 expanded
[t=0.140978s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.141011s, 431100 KB] g=17, 124 evaluated, 34 expanded
[t=0.14276s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.142796s, 431100 KB] g=19, 133 evaluated, 37 expanded
[t=0.14358s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.143612s, 431100 KB] g=20, 137 evaluated, 38 expanded
[t=0.144017s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.144046s, 431100 KB] g=21, 139 evaluated, 39 expanded
[t=0.145581s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.145615s, 431100 KB] g=23, 147 evaluated, 41 expanded
[t=0.146398s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.146432s, 431100 KB] g=24, 151 evaluated, 42 expanded
[t=0.15327s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.153304s, 431232 KB] g=30, 187 evaluated, 53 expanded
[t=0.154276s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.154309s, 431232 KB] g=31, 192 evaluated, 54 expanded
[t=0.155109s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.155144s, 431232 KB] g=32, 196 evaluated, 55 expanded
[t=0.155742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.155772s, 431232 KB] g=33, 199 evaluated, 56 expanded
[t=0.157504s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.157534s, 431232 KB] g=36, 208 evaluated, 60 expanded
[t=0.158516s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.15855s, 431232 KB] g=38, 213 evaluated, 62 expanded
[t=0.158959s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.158988s, 431232 KB] g=39, 215 evaluated, 63 expanded
[t=0.159773s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.159802s, 431232 KB] g=41, 219 evaluated, 65 expanded
[t=0.16021s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.160244s, 431232 KB] g=41, 221 evaluated, 65 expanded
[t=0.16122s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.161253s, 431232 KB] g=43, 226 evaluated, 67 expanded
[t=0.162226s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.162256s, 431232 KB] g=45, 231 evaluated, 69 expanded
[t=0.162491s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.162522s, 431232 KB] g=46, 232 evaluated, 70 expanded
[t=0.162746s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.162774s, 431232 KB] g=47, 233 evaluated, 71 expanded
[t=0.163188s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.163217s, 431232 KB] g=48, 235 evaluated, 72 expanded
[t=0.164401s, 431232 KB] Solution found!
[t=0.164435s, 431232 KB] Actual search time: 0.0652704s
stack d k (1)
unstack e h (1)
put-down e (1)
unstack h j (1)
stack h a (1)
unstack j f (1)
stack j i (1)
pick-up e (1)
stack e d (1)
unstack f l (1)
stack f e (1)
unstack h a (1)
stack h f (1)
unstack a b (1)
stack a h (1)
unstack b g (1)
stack b l (1)
unstack a h (1)
stack a b (1)
unstack h f (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack j i (1)
stack j b (1)
unstack e d (1)
stack e j (1)
unstack d k (1)
stack d i (1)
pick-up k (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.16446s, 431232 KB] Plan length: 51 step(s).
[t=0.16446s, 431232 KB] Plan cost: 51
[t=0.16446s, 431232 KB] Expanded 78 state(s).
[t=0.16446s, 431232 KB] Reopened 0 state(s).
[t=0.16446s, 431232 KB] Evaluated 242 state(s).
[t=0.16446s, 431232 KB] Evaluations: 242
[t=0.16446s, 431232 KB] Generated 318 state(s).
[t=0.16446s, 431232 KB] Dead ends: 0 state(s).
[t=0.16446s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.16446s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.16446s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.16446s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.16446s, 431232 KB] Number of registered states: 242
[t=0.16446s, 431232 KB] Int hash set load factor: 242/256 = 0.945312
[t=0.16446s, 431232 KB] Int hash set resizes: 8
[t=0.16446s, 431232 KB] Search time: 0.137982s
[t=0.16446s, 431232 KB] Total time: 0.16446s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p35.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6755e-05s, 424928 KB] reading input...
[t=0.00216762s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260108s, 427536 KB] Building successor generator...done!
[t=0.0262897s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263137s, 427536 KB] time for successor generation creation: 0.000168107s
[t=0.0263419s, 427536 KB] Variables: 25
[t=0.0263643s, 427536 KB] FactPairs: 182
[t=0.0263864s, 427536 KB] Bytes per state: 8
[t=0.0265809s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984353s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.0984855s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985117s, 430128 KB] f = 115, 1 evaluated, 0 expanded
[t=0.0985389s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.0985628s, 430128 KB] pruning method: none
[t=0.110368s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.11042s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116889s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.116943s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117529s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.11756s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.119031s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.119061s, 431100 KB] g=4, 14 evaluated, 5 expanded
[t=0.124318s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.124351s, 431100 KB] g=7, 43 evaluated, 12 expanded
[t=0.12475s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.12478s, 431100 KB] g=8, 45 evaluated, 13 expanded
[t=0.126251s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.126281s, 431100 KB] g=9, 53 evaluated, 14 expanded
[t=0.128127s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.128157s, 431100 KB] g=11, 63 evaluated, 17 expanded
[t=0.12965s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.129682s, 431100 KB] g=13, 71 evaluated, 19 expanded
[t=0.129892s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.129921s, 431100 KB] g=13, 72 evaluated, 19 expanded
[t=0.135038s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.135071s, 431100 KB] g=16, 100 evaluated, 26 expanded
[t=0.144501s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.144537s, 431100 KB] g=21, 152 evaluated, 41 expanded
[t=0.148174s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.148222s, 431100 KB] g=24, 172 evaluated, 45 expanded
[t=0.150787s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.150818s, 431232 KB] g=27, 186 evaluated, 48 expanded
[t=0.15339s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.153426s, 431232 KB] g=30, 200 evaluated, 52 expanded
[t=0.156537s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.156571s, 431232 KB] g=23, 217 evaluated, 57 expanded
[t=0.165674s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.165711s, 431232 KB] g=33, 267 evaluated, 74 expanded, 1 reopened
[t=0.165923s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.165957s, 431232 KB] g=33, 268 evaluated, 74 expanded, 1 reopened
[t=0.166713s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.166743s, 431232 KB] g=34, 272 evaluated, 75 expanded, 1 reopened
[t=0.167494s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.167523s, 431232 KB] g=35, 276 evaluated, 76 expanded, 1 reopened
[t=0.167737s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.167766s, 431232 KB] g=36, 277 evaluated, 77 expanded, 1 reopened
[t=0.168904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.16894s, 431232 KB] g=37, 283 evaluated, 81 expanded, 1 reopened
[t=0.171872s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.171903s, 431232 KB] g=40, 299 evaluated, 86 expanded, 1 reopened
[t=0.177935s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.177968s, 431232 KB] g=43, 332 evaluated, 97 expanded, 1 reopened
[t=0.18728s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.187318s, 431232 KB] g=43, 383 evaluated, 124 expanded, 9 reopened
[t=0.189872s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.189905s, 431232 KB] g=46, 397 evaluated, 127 expanded, 9 reopened
[t=0.190478s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.190508s, 431232 KB] g=46, 400 evaluated, 127 expanded, 9 reopened
[t=0.19072s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.190749s, 431232 KB] g=47, 401 evaluated, 128 expanded, 9 reopened
[t=0.195816s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.195849s, 431364 KB] g=47, 429 evaluated, 136 expanded, 9 reopened
[t=0.228335s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.228373s, 431364 KB] g=46, 609 evaluated, 204 expanded, 21 reopened
[t=0.230019s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.230049s, 431364 KB] g=46, 618 evaluated, 207 expanded, 21 reopened
[t=0.230441s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.23047s, 431364 KB] g=47, 620 evaluated, 208 expanded, 21 reopened
[t=0.233204s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.233237s, 431364 KB] g=49, 635 evaluated, 212 expanded, 21 reopened
[t=0.239888s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.239923s, 431364 KB] g=50, 672 evaluated, 222 expanded, 21 reopened
[t=0.240131s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.24017s, 431364 KB] g=50, 673 evaluated, 222 expanded, 21 reopened
[t=0.240917s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.240949s, 431364 KB] g=51, 677 evaluated, 223 expanded, 21 reopened
[t=0.241163s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.241192s, 431364 KB] g=52, 678 evaluated, 224 expanded, 21 reopened
[t=0.242657s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.242689s, 431364 KB] g=55, 686 evaluated, 227 expanded, 21 reopened
[t=0.243083s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.243112s, 431364 KB] g=57, 688 evaluated, 229 expanded, 21 reopened
[t=0.243502s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.243531s, 431364 KB] g=58, 690 evaluated, 230 expanded, 21 reopened
[t=0.243741s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.243769s, 431364 KB] g=59, 691 evaluated, 231 expanded, 21 reopened
[t=0.244893s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.244928s, 431364 KB] g=61, 697 evaluated, 236 expanded, 21 reopened
[t=0.245321s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.245351s, 431364 KB] g=62, 699 evaluated, 237 expanded, 21 reopened
[t=0.245384s, 431364 KB] Solution found!
[t=0.245411s, 431364 KB] Actual search time: 0.146845s
stack l b (1)
unstack i h (1)
put-down i (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack g a (1)
stack g d (1)
unstack h e (1)
stack h a (1)
unstack g d (1)
put-down g (1)
pick-up e (1)
stack e d (1)
pick-up i (1)
stack i b (1)
unstack e d (1)
put-down e (1)
unstack h a (1)
stack h g (1)
unstack d c (1)
put-down d (1)
pick-up c (1)
stack c i (1)
pick-up e (1)
stack e c (1)
unstack a k (1)
stack a h (1)
unstack k j (1)
stack k a (1)
unstack j f (1)
stack j d (1)
pick-up f (1)
stack f e (1)
unstack k a (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack c i (1)
put-down c (1)
unstack i b (1)
stack i c (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.245436s, 431364 KB] Plan length: 63 step(s).
[t=0.245436s, 431364 KB] Plan cost: 63
[t=0.245436s, 431364 KB] Expanded 239 state(s).
[t=0.245436s, 431364 KB] Reopened 21 state(s).
[t=0.245436s, 431364 KB] Evaluated 700 state(s).
[t=0.245436s, 431364 KB] Evaluations: 700
[t=0.245436s, 431364 KB] Generated 1033 state(s).
[t=0.245436s, 431364 KB] Dead ends: 0 state(s).
[t=0.245436s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.245436s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.245436s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.245436s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.245436s, 431364 KB] Number of registered states: 700
[t=0.245436s, 431364 KB] Int hash set load factor: 700/1024 = 0.683594
[t=0.245436s, 431364 KB] Int hash set resizes: 10
[t=0.245436s, 431364 KB] Search time: 0.218856s
[t=0.245436s, 431364 KB] Total time: 0.245436s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p36.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5812e-05s, 424928 KB] reading input...
[t=0.0021508s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257076s, 427536 KB] Building successor generator...done!
[t=0.0259892s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026013s, 427536 KB] time for successor generation creation: 0.000170667s
[t=0.0260415s, 427536 KB] Variables: 25
[t=0.0260643s, 427536 KB] FactPairs: 182
[t=0.0260865s, 427536 KB] Bytes per state: 8
[t=0.0262825s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980172s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0980689s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980955s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0981228s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0981465s, 430128 KB] pruning method: none
[t=0.116692s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.116742s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117677s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.117708s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.119719s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.11975s, 431100 KB] g=5, 20 evaluated, 5 expanded
[t=0.12142s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.121451s, 431100 KB] g=7, 29 evaluated, 7 expanded
[t=0.123834s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.123867s, 431100 KB] g=7, 42 evaluated, 10 expanded
[t=0.131094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.13113s, 431100 KB] g=9, 82 evaluated, 17 expanded
[t=0.133862s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.133898s, 431100 KB] g=12, 97 evaluated, 20 expanded
[t=0.134289s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.134321s, 431100 KB] g=12, 99 evaluated, 20 expanded
[t=0.136159s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.136193s, 431100 KB] g=14, 109 evaluated, 22 expanded
[t=0.138017s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.138049s, 431100 KB] g=16, 119 evaluated, 24 expanded
[t=0.138619s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.138649s, 431100 KB] g=17, 122 evaluated, 25 expanded
[t=0.139965s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.140001s, 431100 KB] g=17, 129 evaluated, 27 expanded
[t=0.140213s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.140255s, 431100 KB] g=17, 130 evaluated, 27 expanded
[t=0.149624s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.149658s, 431232 KB] g=22, 182 evaluated, 41 expanded
[t=0.174783s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.174819s, 431232 KB] g=20, 322 evaluated, 82 expanded
[t=0.184525s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.184563s, 431232 KB] g=23, 376 evaluated, 100 expanded
[t=0.189067s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.189101s, 431232 KB] g=29, 401 evaluated, 106 expanded
[t=0.206572s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.206607s, 431364 KB] g=35, 498 evaluated, 135 expanded, 2 reopened
[t=0.207911s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.207948s, 431364 KB] g=37, 505 evaluated, 137 expanded, 2 reopened
[t=0.208345s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.208375s, 431364 KB] g=38, 507 evaluated, 138 expanded, 2 reopened
[t=0.209719s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.209752s, 431364 KB] g=39, 514 evaluated, 141 expanded, 2 reopened
[t=0.211764s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.2118s, 431364 KB] g=44, 525 evaluated, 146 expanded, 2 reopened
[t=0.212011s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.21204s, 431364 KB] g=44, 526 evaluated, 146 expanded, 2 reopened
[t=0.212796s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.212828s, 431364 KB] g=46, 530 evaluated, 148 expanded, 2 reopened
[t=0.213397s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.213429s, 431364 KB] g=47, 533 evaluated, 149 expanded, 2 reopened
[t=0.214539s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.214569s, 431364 KB] g=49, 539 evaluated, 151 expanded, 2 reopened
[t=0.21532s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.215353s, 431364 KB] g=51, 543 evaluated, 153 expanded, 2 reopened
[t=0.218453s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.218492s, 431364 KB] g=54, 560 evaluated, 160 expanded, 2 reopened
[t=0.21906s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.21909s, 431364 KB] g=55, 563 evaluated, 161 expanded, 2 reopened
[t=0.219848s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.219883s, 431364 KB] g=57, 567 evaluated, 163 expanded, 2 reopened
[t=0.220278s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.220307s, 431364 KB] g=58, 569 evaluated, 164 expanded, 2 reopened
[t=0.220878s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.220908s, 431364 KB] g=60, 572 evaluated, 166 expanded, 2 reopened
[t=0.221302s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.221331s, 431364 KB] g=61, 574 evaluated, 167 expanded, 2 reopened
[t=0.221364s, 431364 KB] Solution found!
[t=0.221391s, 431364 KB] Actual search time: 0.123241s
unstack j k (1)
put-down j (1)
unstack e b (1)
stack e j (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d k (1)
unstack e j (1)
stack e i (1)
pick-up j (1)
stack j e (1)
unstack l h (1)
put-down l (1)
pick-up h (1)
stack h d (1)
pick-up l (1)
stack l b (1)
unstack h d (1)
stack h l (1)
unstack g a (1)
put-down g (1)
unstack d k (1)
stack d j (1)
unstack h l (1)
stack h d (1)
pick-up a (1)
stack a k (1)
unstack h d (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack l b (1)
stack l d (1)
unstack k f (1)
stack k l (1)
pick-up f (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d l (1)
unstack j e (1)
stack j d (1)
unstack e i (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.221416s, 431364 KB] Plan length: 62 step(s).
[t=0.221416s, 431364 KB] Plan cost: 62
[t=0.221416s, 431364 KB] Expanded 169 state(s).
[t=0.221416s, 431364 KB] Reopened 2 state(s).
[t=0.221416s, 431364 KB] Evaluated 575 state(s).
[t=0.221416s, 431364 KB] Evaluations: 575
[t=0.221416s, 431364 KB] Generated 766 state(s).
[t=0.221416s, 431364 KB] Dead ends: 0 state(s).
[t=0.221416s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.221416s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.221416s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.221416s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.221416s, 431364 KB] Number of registered states: 575
[t=0.221416s, 431364 KB] Int hash set load factor: 575/1024 = 0.561523
[t=0.221416s, 431364 KB] Int hash set resizes: 10
[t=0.221416s, 431364 KB] Search time: 0.195134s
[t=0.221416s, 431364 KB] Total time: 0.221416s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p37.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5797e-05s, 424928 KB] reading input...
[t=0.00211101s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025603s, 427536 KB] Building successor generator...done!
[t=0.0258829s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259054s, 427536 KB] time for successor generation creation: 0.000171031s
[t=0.025933s, 427536 KB] Variables: 25
[t=0.0259552s, 427536 KB] FactPairs: 182
[t=0.0259771s, 427536 KB] Bytes per state: 8
[t=0.0261876s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0973833s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.0974343s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0974596s, 430128 KB] f = 100, 1 evaluated, 0 expanded
[t=0.0974866s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.0975099s, 430128 KB] pruning method: none
[t=0.116022s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.116072s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.116655s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.116686s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118688s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.118722s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.119105s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.119134s, 431100 KB] g=5, 21 evaluated, 5 expanded
[t=0.119522s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.119553s, 431100 KB] g=6, 23 evaluated, 6 expanded
[t=0.121169s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.121199s, 431100 KB] g=8, 32 evaluated, 8 expanded
[t=0.121415s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.121444s, 431100 KB] g=9, 33 evaluated, 9 expanded
[t=0.122724s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.122757s, 431100 KB] g=11, 40 evaluated, 11 expanded
[t=0.12367s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.123701s, 431100 KB] g=12, 45 evaluated, 12 expanded
[t=0.124438s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.124468s, 431100 KB] g=13, 49 evaluated, 13 expanded
[t=0.136353s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.136391s, 431100 KB] g=18, 116 evaluated, 35 expanded
[t=0.138195s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.13823s, 431100 KB] g=20, 126 evaluated, 37 expanded
[t=0.138806s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.138837s, 431100 KB] g=21, 129 evaluated, 38 expanded
[t=0.140283s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.140316s, 431100 KB] g=23, 137 evaluated, 40 expanded
[t=0.141055s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.141088s, 431100 KB] g=24, 141 evaluated, 41 expanded
[t=0.143618s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.143654s, 431100 KB] g=27, 155 evaluated, 47 expanded
[t=0.144042s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.144072s, 431100 KB] g=28, 157 evaluated, 48 expanded
[t=0.144636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.144676s, 431100 KB] g=29, 160 evaluated, 49 expanded
[t=0.145416s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.145449s, 431100 KB] g=30, 164 evaluated, 50 expanded
[t=0.149205s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.149238s, 431232 KB] g=32, 185 evaluated, 57 expanded
[t=0.151402s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.151439s, 431232 KB] g=34, 197 evaluated, 60 expanded
[t=0.152534s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.152564s, 431232 KB] g=36, 203 evaluated, 63 expanded
[t=0.153124s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.153156s, 431232 KB] g=37, 206 evaluated, 64 expanded
[t=0.153546s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.153575s, 431232 KB] g=39, 208 evaluated, 66 expanded
[t=0.153963s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.153992s, 431232 KB] g=40, 210 evaluated, 67 expanded
[t=0.155632s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.155664s, 431232 KB] g=42, 219 evaluated, 73 expanded
[t=0.155696s, 431232 KB] Solution found!
[t=0.155723s, 431232 KB] Actual search time: 0.0582098s
stack j i (1)
pick-up a (1)
stack a k (1)
unstack d g (1)
stack d j (1)
unstack g b (1)
stack g d (1)
unstack h l (1)
stack h a (1)
unstack g d (1)
stack g h (1)
unstack l f (1)
stack l d (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.155747s, 431232 KB] Plan length: 43 step(s).
[t=0.155747s, 431232 KB] Plan cost: 43
[t=0.155747s, 431232 KB] Expanded 75 state(s).
[t=0.155747s, 431232 KB] Reopened 0 state(s).
[t=0.155747s, 431232 KB] Evaluated 220 state(s).
[t=0.155747s, 431232 KB] Evaluations: 220
[t=0.155747s, 431232 KB] Generated 294 state(s).
[t=0.155747s, 431232 KB] Dead ends: 0 state(s).
[t=0.155747s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.155747s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.155747s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.155747s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.155747s, 431232 KB] Number of registered states: 220
[t=0.155747s, 431232 KB] Int hash set load factor: 220/256 = 0.859375
[t=0.155747s, 431232 KB] Int hash set resizes: 8
[t=0.155747s, 431232 KB] Search time: 0.12956s
[t=0.155747s, 431232 KB] Total time: 0.155747s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5874e-05s, 424928 KB] reading input...
[t=0.00215568s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258882s, 427536 KB] Building successor generator...done!
[t=0.0261703s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261932s, 427536 KB] time for successor generation creation: 0.00017057s
[t=0.0262214s, 427536 KB] Variables: 25
[t=0.0262441s, 427536 KB] FactPairs: 182
[t=0.0262654s, 427536 KB] Bytes per state: 8
[t=0.0264819s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985602s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.0986121s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098638s, 430128 KB] f = 106, 1 evaluated, 0 expanded
[t=0.0986756s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.0987002s, 430128 KB] pruning method: none
[t=0.116963s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.117012s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119118s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119151s, 431100 KB] g=3, 14 evaluated, 4 expanded
[t=0.119555s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.119585s, 431100 KB] g=3, 16 evaluated, 4 expanded
[t=0.121661s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.12169s, 431100 KB] g=4, 27 evaluated, 7 expanded
[t=0.121911s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.121939s, 431100 KB] g=5, 28 evaluated, 8 expanded
[t=0.124216s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.124248s, 431100 KB] g=7, 40 evaluated, 10 expanded
[t=0.126706s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.126737s, 431100 KB] g=9, 53 evaluated, 13 expanded
[t=0.127143s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.127172s, 431100 KB] g=10, 55 evaluated, 14 expanded
[t=0.128327s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.128356s, 431100 KB] g=11, 61 evaluated, 15 expanded
[t=0.13401s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.134045s, 431100 KB] g=16, 91 evaluated, 23 expanded
[t=0.142885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.142918s, 431100 KB] g=18, 138 evaluated, 37 expanded
[t=0.143694s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.143723s, 431100 KB] g=19, 142 evaluated, 38 expanded
[t=0.146629s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.146666s, 431100 KB] g=21, 157 evaluated, 43 expanded
[t=0.147705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.147734s, 431100 KB] g=22, 162 evaluated, 44 expanded
[t=0.150405s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.150441s, 431232 KB] g=24, 176 evaluated, 48 expanded
[t=0.161169s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.161206s, 431232 KB] g=28, 233 evaluated, 64 expanded
[t=0.162374s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.162406s, 431232 KB] g=30, 239 evaluated, 66 expanded
[t=0.163185s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.163214s, 431232 KB] g=31, 243 evaluated, 67 expanded
[t=0.163434s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.163465s, 431232 KB] g=32, 244 evaluated, 68 expanded
[t=0.164056s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.164088s, 431232 KB] g=33, 247 evaluated, 69 expanded
[t=0.165426s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.165455s, 431232 KB] g=36, 254 evaluated, 72 expanded
[t=0.166071s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.1661s, 431232 KB] g=37, 257 evaluated, 73 expanded
[t=0.166513s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.166547s, 431232 KB] g=38, 259 evaluated, 74 expanded
[t=0.167326s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.167358s, 431232 KB] g=39, 263 evaluated, 75 expanded
[t=0.168697s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.168726s, 431232 KB] g=42, 270 evaluated, 78 expanded
[t=0.169133s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.169162s, 431232 KB] g=44, 272 evaluated, 80 expanded
[t=0.169568s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.169597s, 431232 KB] g=45, 274 evaluated, 81 expanded
[t=0.170768s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.1708s, 431232 KB] g=47, 280 evaluated, 85 expanded
[t=0.170833s, 431232 KB] Solution found!
[t=0.17086s, 431232 KB] Actual search time: 0.0721558s
unstack e d (1)
stack e k (1)
unstack b a (1)
put-down b (1)
unstack a g (1)
stack a e (1)
unstack h l (1)
stack h a (1)
unstack l f (1)
stack l b (1)
unstack h a (1)
stack h l (1)
pick-up f (1)
stack f d (1)
unstack a e (1)
put-down a (1)
unstack h l (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack e k (1)
stack e l (1)
unstack f d (1)
stack f a (1)
unstack k i (1)
stack k e (1)
unstack d j (1)
stack d i (1)
pick-up j (1)
stack j d (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.170885s, 431232 KB] Plan length: 48 step(s).
[t=0.170885s, 431232 KB] Plan cost: 48
[t=0.170885s, 431232 KB] Expanded 87 state(s).
[t=0.170885s, 431232 KB] Reopened 0 state(s).
[t=0.170885s, 431232 KB] Evaluated 281 state(s).
[t=0.170885s, 431232 KB] Evaluations: 281
[t=0.170885s, 431232 KB] Generated 372 state(s).
[t=0.170885s, 431232 KB] Dead ends: 0 state(s).
[t=0.170885s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.170885s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.170885s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.170885s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.170885s, 431232 KB] Number of registered states: 281
[t=0.170885s, 431232 KB] Int hash set load factor: 281/512 = 0.548828
[t=0.170885s, 431232 KB] Int hash set resizes: 9
[t=0.170885s, 431232 KB] Search time: 0.144404s
[t=0.170885s, 431232 KB] Total time: 0.170885s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p39.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7026e-05s, 424928 KB] reading input...
[t=0.00212255s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256587s, 427536 KB] Building successor generator...done!
[t=0.0259375s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.025961s, 427536 KB] time for successor generation creation: 0.000166527s
[t=0.0259894s, 427536 KB] Variables: 25
[t=0.0260126s, 427536 KB] FactPairs: 182
[t=0.026035s, 427536 KB] Bytes per state: 8
[t=0.0262314s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0975777s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.0976288s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0976547s, 430128 KB] f = 91, 1 evaluated, 0 expanded
[t=0.0976823s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.0977064s, 430128 KB] pruning method: none
[t=0.116234s, 431100 KB] f = 105, 5 evaluated, 1 expanded
[t=0.118068s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.118101s, 431100 KB] g=4, 15 evaluated, 5 expanded
[t=0.119021s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.119051s, 431100 KB] g=6, 20 evaluated, 7 expanded
[t=0.119259s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.119289s, 431100 KB] g=7, 21 evaluated, 8 expanded
[t=0.119853s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.119884s, 431100 KB] g=8, 24 evaluated, 9 expanded
[t=0.120801s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.120831s, 431100 KB] g=8, 29 evaluated, 11 expanded
[t=0.123172s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.123205s, 431100 KB] g=9, 42 evaluated, 14 expanded
[t=0.124122s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.124153s, 431100 KB] g=11, 47 evaluated, 16 expanded
[t=0.126135s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.126171s, 431100 KB] g=13, 58 evaluated, 19 expanded
[t=0.135252s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.135287s, 431100 KB] g=18, 109 evaluated, 34 expanded
[t=0.136031s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.136061s, 431100 KB] g=19, 113 evaluated, 35 expanded
[t=0.149243s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.149288s, 431232 KB] g=20, 187 evaluated, 53 expanded
[t=0.158388s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.158425s, 431232 KB] g=22, 238 evaluated, 70 expanded, 3 reopened
[t=0.1694s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.169436s, 431232 KB] g=23, 300 evaluated, 83 expanded, 3 reopened
[t=0.170175s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.170204s, 431232 KB] g=24, 304 evaluated, 84 expanded, 3 reopened
[t=0.173944s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.173977s, 431232 KB] g=26, 325 evaluated, 88 expanded, 3 reopened
[t=0.193079s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.193115s, 431232 KB] g=32, 433 evaluated, 113 expanded, 3 reopened
[t=0.198302s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.198339s, 431364 KB] g=37, 462 evaluated, 122 expanded, 3 reopened
[t=0.280695s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.280739s, 431496 KB] g=39, 927 evaluated, 280 expanded, 28 reopened
[t=0.282033s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.282066s, 431496 KB] g=39, 934 evaluated, 282 expanded, 28 reopened
[t=0.284574s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.284605s, 431496 KB] g=42, 948 evaluated, 287 expanded, 28 reopened
[t=0.285532s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.285568s, 431496 KB] g=43, 953 evaluated, 288 expanded, 28 reopened
[t=0.285958s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.28599s, 431496 KB] g=44, 955 evaluated, 289 expanded, 28 reopened
[t=0.290096s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.29013s, 431496 KB] g=48, 978 evaluated, 294 expanded, 28 reopened
[t=0.297623s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.297658s, 431496 KB] g=49, 1020 evaluated, 306 expanded, 28 reopened
[t=0.309286s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.309326s, 431628 KB] g=50, 1085 evaluated, 322 expanded, 28 reopened
[t=0.309718s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.309755s, 431628 KB] g=51, 1087 evaluated, 323 expanded, 28 reopened
[t=0.311736s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.311767s, 431628 KB] g=54, 1098 evaluated, 326 expanded, 28 reopened
[t=0.313222s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.313259s, 431628 KB] g=56, 1106 evaluated, 328 expanded, 28 reopened
[t=0.313471s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.3135s, 431628 KB] g=57, 1107 evaluated, 329 expanded, 28 reopened
[t=0.3153s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.315333s, 431628 KB] g=60, 1117 evaluated, 333 expanded, 28 reopened
[t=0.315894s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.315924s, 431628 KB] g=61, 1120 evaluated, 334 expanded, 28 reopened
[t=0.317389s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.317424s, 431628 KB] g=63, 1128 evaluated, 339 expanded, 28 reopened
[t=0.325793s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.325831s, 431628 KB] g=64, 1175 evaluated, 356 expanded, 28 reopened
[t=0.326222s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.326251s, 431628 KB] g=65, 1177 evaluated, 357 expanded, 28 reopened
[t=0.327171s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.327205s, 431628 KB] g=68, 1182 evaluated, 360 expanded, 28 reopened
[t=0.342672s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.342711s, 431628 KB] g=74, 1269 evaluated, 397 expanded, 29 reopened
[t=0.344004s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.344034s, 431628 KB] g=77, 1277 evaluated, 404 expanded, 29 reopened
[t=0.344062s, 431628 KB] Solution found!
[t=0.344089s, 431628 KB] Actual search time: 0.246378s
stack d j (1)
unstack c a (1)
stack c g (1)
unstack d j (1)
stack d c (1)
unstack j h (1)
put-down j (1)
unstack d c (1)
stack d j (1)
unstack a i (1)
stack a c (1)
unstack h l (1)
stack h d (1)
unstack a c (1)
put-down a (1)
unstack c g (1)
put-down c (1)
unstack h d (1)
stack h a (1)
unstack l f (1)
stack l c (1)
pick-up f (1)
stack f d (1)
unstack g e (1)
put-down g (1)
unstack f d (1)
stack f e (1)
unstack h a (1)
stack h l (1)
pick-up a (1)
stack a f (1)
pick-up i (1)
stack i a (1)
unstack h l (1)
stack h g (1)
unstack i a (1)
stack i l (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f d (1)
unstack e k (1)
put-down e (1)
unstack f d (1)
stack f k (1)
pick-up e (1)
stack e d (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack i l (1)
stack i d (1)
unstack l c (1)
put-down l (1)
unstack i d (1)
stack i c (1)
pick-up b (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.344113s, 431628 KB] Plan length: 77 step(s).
[t=0.344113s, 431628 KB] Plan cost: 77
[t=0.344113s, 431628 KB] Expanded 405 state(s).
[t=0.344113s, 431628 KB] Reopened 29 state(s).
[t=0.344113s, 431628 KB] Evaluated 1277 state(s).
[t=0.344113s, 431628 KB] Evaluations: 1277
[t=0.344113s, 431628 KB] Generated 1833 state(s).
[t=0.344113s, 431628 KB] Dead ends: 0 state(s).
[t=0.344113s, 431628 KB] Expanded until last jump: 1 state(s).
[t=0.344113s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.344113s, 431628 KB] Evaluated until last jump: 5 state(s).
[t=0.344113s, 431628 KB] Generated until last jump: 4 state(s).
[t=0.344113s, 431628 KB] Number of registered states: 1277
[t=0.344113s, 431628 KB] Int hash set load factor: 1277/2048 = 0.623535
[t=0.344113s, 431628 KB] Int hash set resizes: 11
[t=0.344113s, 431628 KB] Search time: 0.317882s
[t=0.344113s, 431628 KB] Total time: 0.344113s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p40.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6957e-05s, 424928 KB] reading input...
[t=0.00212293s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0289171s, 427536 KB] Building successor generator...done!
[t=0.0291996s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.029223s, 427536 KB] time for successor generation creation: 0.000169821s
[t=0.0292508s, 427536 KB] Variables: 25
[t=0.0292734s, 427536 KB] FactPairs: 182
[t=0.0292953s, 427536 KB] Bytes per state: 8
[t=0.0294912s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.102722s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.102781s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.102808s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.102835s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.102859s, 430128 KB] pruning method: none
[t=0.115136s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.115193s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.124787s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.124831s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.125048s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.125078s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.125861s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.12589s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.127711s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.127748s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.134741s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.134779s, 431100 KB] g=12, 55 evaluated, 16 expanded
[t=0.143331s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.143371s, 431100 KB] g=15, 100 evaluated, 28 expanded
[t=0.148715s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.148749s, 431100 KB] g=17, 128 evaluated, 34 expanded
[t=0.170194s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.170235s, 431232 KB] g=16, 226 evaluated, 56 expanded
[t=0.185073s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.185115s, 431232 KB] g=19, 304 evaluated, 75 expanded
[t=0.20799s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.208031s, 431232 KB] g=13, 410 evaluated, 102 expanded
[t=0.208633s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.208663s, 431232 KB] g=14, 413 evaluated, 103 expanded
[t=0.213216s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.213251s, 431232 KB] g=16, 437 evaluated, 108 expanded
[t=0.232539s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.23258s, 431364 KB] g=24, 539 evaluated, 131 expanded
[t=0.327557s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.327601s, 431496 KB] g=28, 1044 evaluated, 239 expanded
[t=0.328203s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.328233s, 431496 KB] g=29, 1047 evaluated, 240 expanded
[t=0.329207s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.329239s, 431496 KB] g=30, 1052 evaluated, 241 expanded
[t=0.329839s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.329868s, 431496 KB] g=31, 1055 evaluated, 242 expanded
[t=0.331628s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.331662s, 431496 KB] g=33, 1064 evaluated, 244 expanded
[t=0.332819s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.332851s, 431496 KB] g=34, 1070 evaluated, 245 expanded
[t=0.344049s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.34409s, 431496 KB] g=36, 1129 evaluated, 263 expanded
[t=0.346382s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.346412s, 431496 KB] g=38, 1141 evaluated, 266 expanded
[t=0.358524s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.358573s, 431496 KB] g=45, 1205 evaluated, 279 expanded
[t=0.363151s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.363186s, 431628 KB] g=46, 1229 evaluated, 284 expanded
[t=0.371159s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.371196s, 431628 KB] g=37, 1271 evaluated, 294 expanded
[t=0.371611s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.37164s, 431628 KB] g=38, 1273 evaluated, 295 expanded
[t=0.372242s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.372272s, 431628 KB] g=39, 1276 evaluated, 296 expanded
[t=0.373253s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.373283s, 431628 KB] g=41, 1281 evaluated, 298 expanded
[t=0.37369s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.373719s, 431628 KB] g=42, 1283 evaluated, 299 expanded
[t=0.374131s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.37416s, 431628 KB] g=43, 1285 evaluated, 300 expanded
[t=0.386427s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.386467s, 431628 KB] g=49, 1350 evaluated, 319 expanded
[t=0.388223s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.388257s, 431628 KB] g=50, 1359 evaluated, 323 expanded
[t=0.400984s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.401026s, 431628 KB] g=52, 1426 evaluated, 341 expanded
[t=0.401816s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.401849s, 431628 KB] g=54, 1430 evaluated, 343 expanded
[t=0.40207s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.402099s, 431628 KB] g=54, 1431 evaluated, 343 expanded
[t=0.410113s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.41015s, 431628 KB] g=55, 1462 evaluated, 357 expanded, 1 reopened
[t=0.410375s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.410407s, 431628 KB] g=56, 1463 evaluated, 358 expanded, 1 reopened
[t=0.410643s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.410675s, 431628 KB] g=57, 1464 evaluated, 359 expanded, 1 reopened
[t=0.41109s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.411119s, 431628 KB] g=58, 1466 evaluated, 360 expanded, 1 reopened
[t=0.412302s, 431628 KB] Solution found!
[t=0.412336s, 431628 KB] Actual search time: 0.309475s
stack h j (1)
unstack d g (1)
stack d c (1)
unstack h j (1)
stack h a (1)
unstack j l (1)
stack j d (1)
unstack l i (1)
stack l j (1)
unstack i e (1)
put-down i (1)
unstack l j (1)
put-down l (1)
unstack e b (1)
stack e l (1)
unstack j d (1)
stack j b (1)
unstack d c (1)
stack d j (1)
unstack c f (1)
stack c d (1)
pick-up f (1)
stack f h (1)
pick-up i (1)
stack i c (1)
unstack f h (1)
stack f e (1)
unstack g k (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack i c (1)
stack i l (1)
unstack c d (1)
put-down c (1)
unstack d j (1)
put-down d (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
stack i c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.412362s, 431628 KB] Plan length: 61 step(s).
[t=0.412362s, 431628 KB] Plan cost: 61
[t=0.412362s, 431628 KB] Expanded 367 state(s).
[t=0.412362s, 431628 KB] Reopened 1 state(s).
[t=0.412362s, 431628 KB] Evaluated 1473 state(s).
[t=0.412362s, 431628 KB] Evaluations: 1473
[t=0.412362s, 431628 KB] Generated 1877 state(s).
[t=0.412362s, 431628 KB] Dead ends: 0 state(s).
[t=0.412362s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.412362s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.412362s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.412362s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.412362s, 431628 KB] Number of registered states: 1473
[t=0.412362s, 431628 KB] Int hash set load factor: 1473/2048 = 0.719238
[t=0.412362s, 431628 KB] Int hash set resizes: 11
[t=0.412362s, 431628 KB] Search time: 0.382871s
[t=0.412362s, 431628 KB] Total time: 0.412362s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023542
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 1 test success: 20 of 20 (100.0%)

---------- FOLD 3/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 74 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.13142699003219604 (0.5355978012084961 vs. 0.40417081117630005), which occurred at index 50.
  _module_class,
 | avg_train_loss=0.098874 | avg_val_loss=0.090956
Epoch 2 | avg_train_loss=0.069072 | avg_val_loss=0.045144
Epoch 3 | avg_train_loss=0.040632 | avg_val_loss=0.038439
Epoch 4 | avg_train_loss=0.037261 | avg_val_loss=0.035940
Epoch 5 | avg_train_loss=0.035770 | avg_val_loss=0.035467
Epoch 6 | avg_train_loss=0.034970 | avg_val_loss=0.034801
Epoch 7 | avg_train_loss=0.034396 | avg_val_loss=0.034003
Epoch 8 | avg_train_loss=0.033673 | avg_val_loss=0.033206
Epoch 9 | avg_train_loss=0.033029 | avg_val_loss=0.032706
Epoch 10 | avg_train_loss=0.032634 | avg_val_loss=0.031927
Epoch 11 | avg_train_loss=0.031987 | avg_val_loss=0.031988
Epoch 12 | avg_train_loss=0.031574 | avg_val_loss=0.031173
Epoch 13 | avg_train_loss=0.031211 | avg_val_loss=0.030789
Epoch 14 | avg_train_loss=0.030887 | avg_val_loss=0.030218
Epoch 15 | avg_train_loss=0.030311 | avg_val_loss=0.030055
Epoch 16 | avg_train_loss=0.030009 | avg_val_loss=0.030195
Epoch 17 | avg_train_loss=0.029618 | avg_val_loss=0.029195
Epoch 18 | avg_train_loss=0.029369 | avg_val_loss=0.029102
Epoch 19 | avg_train_loss=0.029045 | avg_val_loss=0.028644
Epoch 20 | avg_train_loss=0.028522 | avg_val_loss=0.028705
Epoch 21 | avg_train_loss=0.028239 | avg_val_loss=0.028010
Epoch 22 | avg_train_loss=0.027963 | avg_val_loss=0.027564
Epoch 23 | avg_train_loss=0.027445 | avg_val_loss=0.027105
Epoch 24 | avg_train_loss=0.027180 | avg_val_loss=0.026903
Epoch 25 | avg_train_loss=0.026925 | avg_val_loss=0.026712
Epoch 26 | avg_train_loss=0.026581 | avg_val_loss=0.026455
Epoch 27 | avg_train_loss=0.026440 | avg_val_loss=0.025900
Epoch 28 | avg_train_loss=0.026054 | avg_val_loss=0.026258
Epoch 29 | avg_train_loss=0.025725 | avg_val_loss=0.025791
Epoch 30 | avg_train_loss=0.025528 | avg_val_loss=0.025776
Epoch 31 | avg_train_loss=0.025345 | avg_val_loss=0.025385
Epoch 32 | avg_train_loss=0.025101 | avg_val_loss=0.025218
Epoch 33 | avg_train_loss=0.024817 | avg_val_loss=0.025057
Epoch 34 | avg_train_loss=0.024634 | avg_val_loss=0.024952
Epoch 35 | avg_train_loss=0.024295 | avg_val_loss=0.024799
Epoch 36 | avg_train_loss=0.024212 | avg_val_loss=0.024720
Epoch 37 | avg_train_loss=0.024081 | avg_val_loss=0.024633
Epoch 38 | avg_train_loss=0.023902 | avg_val_loss=0.024474
Epoch 39 | avg_train_loss=0.023612 | avg_val_loss=0.024342
Epoch 40 | avg_train_loss=0.023428 | avg_val_loss=0.024451
Epoch 41 | avg_train_loss=0.023311 | avg_val_loss=0.024164
Epoch 42 | avg_train_loss=0.023183 | avg_val_loss=0.023757
Epoch 43 | avg_train_loss=0.022946 | avg_val_loss=0.024081
Epoch 44 | avg_train_loss=0.022869 | avg_val_loss=0.024010
Epoch 45 | avg_train_loss=0.022607 | avg_val_loss=0.023658
Epoch 46 | avg_train_loss=0.022648 | avg_val_loss=0.023744
Epoch 47 | avg_train_loss=0.022346 | avg_val_loss=0.023504
Epoch 48 | avg_train_loss=0.022281 | avg_val_loss=0.023369
Epoch 49 | avg_train_loss=0.022174 | avg_val_loss=0.023266
Epoch 50 | avg_train_loss=0.021947 | avg_val_loss=0.023566
Epoch 51 | avg_train_loss=0.021907 | avg_val_loss=0.023675
Epoch 52 | avg_train_loss=0.021622 | avg_val_loss=0.023253
Epoch 53 | avg_train_loss=0.021474 | avg_val_loss=0.023459
Epoch 54 | avg_train_loss=0.021631 | avg_val_loss=0.023097
Epoch 55 | avg_train_loss=0.021321 | avg_val_loss=0.023113
Epoch 56 | avg_train_loss=0.021141 | avg_val_loss=0.022690
Epoch 57 | avg_train_loss=0.021079 | avg_val_loss=0.022840
Epoch 58 | avg_train_loss=0.021032 | avg_val_loss=0.023286
Epoch 59 | avg_train_loss=0.020793 | avg_val_loss=0.022876
Epoch 60 | avg_train_loss=0.020774 | avg_val_loss=0.022439
Epoch 61 | avg_train_loss=0.020540 | avg_val_loss=0.022488
Epoch 62 | avg_train_loss=0.020489 | avg_val_loss=0.023058
Epoch 63 | avg_train_loss=0.020407 | avg_val_loss=0.023266
Epoch 64 | avg_train_loss=0.020291 | avg_val_loss=0.022675
Epoch 65 | avg_train_loss=0.020302 | avg_val_loss=0.022725
Epoch 66 | avg_train_loss=0.020102 | avg_val_loss=0.022304
Epoch 67 | avg_train_loss=0.019986 | avg_val_loss=0.022720
Epoch 68 | avg_train_loss=0.019827 | avg_val_loss=0.022705
Epoch 69 | avg_train_loss=0.019681 | avg_val_loss=0.022612
Epoch 70 | avg_train_loss=0.019448 | avg_val_loss=0.022702
Epoch 71 | avg_train_loss=0.019479 | avg_val_loss=0.022495
Epoch 72 | avg_train_loss=0.019414 | avg_val_loss=0.022497
Epoch 73 | avg_train_loss=0.019184 | avg_val_loss=0.022694
Epoch 74 | avg_train_loss=0.019200 | avg_val_loss=0.022998
Epoch 75 | avg_train_loss=0.019075 | avg_val_loss=0.022753
Epoch 76 | avg_train_loss=0.018937 | avg_val_loss=0.022179
Epoch 77 | avg_train_loss=0.018732 | avg_val_loss=0.023058
Epoch 78 | avg_train_loss=0.018695 | avg_val_loss=0.022190
Epoch 79 | avg_train_loss=0.018509 | avg_val_loss=0.022924
Epoch 80 | avg_train_loss=0.018468 | avg_val_loss=0.022719
Epoch 81 | avg_train_loss=0.018381 | avg_val_loss=0.022333
Epoch 82 | avg_train_loss=0.018333 | avg_val_loss=0.022098
Epoch 83 | avg_train_loss=0.018144 | avg_val_loss=0.022512
Epoch 84 | avg_train_loss=0.018170 | avg_val_loss=0.022410
Epoch 85 | avg_train_loss=0.018105 | avg_val_loss=0.022613
Epoch 86 | avg_train_loss=0.017901 | avg_val_loss=0.022263
Epoch 87 | avg_train_loss=0.017932 | avg_val_loss=0.021947
Epoch 88 | avg_train_loss=0.017655 | avg_val_loss=0.022455
Epoch 89 | avg_train_loss=0.017619 | avg_val_loss=0.021804
Epoch 90 | avg_train_loss=0.017496 | avg_val_loss=0.022269
Epoch 91 | avg_train_loss=0.017377 | avg_val_loss=0.022242
Epoch 92 | avg_train_loss=0.017369 | avg_val_loss=0.022441
Epoch 93 | avg_train_loss=0.017250 | avg_val_loss=0.022340
Epoch 94 | avg_train_loss=0.017278 | avg_val_loss=0.022700
Epoch 95 | avg_train_loss=0.017167 | avg_val_loss=0.022242
Epoch 96 | avg_train_loss=0.016926 | avg_val_loss=0.022676
Epoch 97 | avg_train_loss=0.016902 | avg_val_loss=0.022084
Epoch 98 | avg_train_loss=0.016688 | avg_val_loss=0.022656
Epoch 99 | avg_train_loss=0.016686 | avg_val_loss=0.021979
Epoch 100 | avg_train_loss=0.016651 | avg_val_loss=0.022176
Epoch 101 | avg_train_loss=0.016564 | avg_val_loss=0.022203
Epoch 102 | avg_train_loss=0.016295INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p41.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6824e-05s, 424928 KB] reading input...
[t=0.00216562s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259949s, 427536 KB] Building successor generator...done!
[t=0.0262783s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026302s, 427536 KB] time for successor generation creation: 0.000171497s
[t=0.0263309s, 427536 KB] Variables: 25
[t=0.0263538s, 427536 KB] FactPairs: 182
[t=0.026376s, 427536 KB] Bytes per state: 8
[t=0.0265706s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106452s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.106518s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106544s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.106572s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.106597s, 430128 KB] pruning method: none
[t=0.124878s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.12493s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.125325s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.125355s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.126106s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.126137s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.12725s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.127284s, 431100 KB] g=3, 15 evaluated, 3 expanded
[t=0.128571s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.128601s, 431100 KB] g=5, 22 evaluated, 5 expanded
[t=0.128988s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.129018s, 431100 KB] g=5, 24 evaluated, 5 expanded
[t=0.129582s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.129611s, 431100 KB] g=6, 27 evaluated, 6 expanded
[t=0.132166s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.132201s, 431100 KB] g=6, 41 evaluated, 9 expanded
[t=0.13348s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.133515s, 431100 KB] g=8, 48 evaluated, 11 expanded
[t=0.142533s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.142569s, 431100 KB] g=12, 98 evaluated, 23 expanded
[t=0.144332s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.144366s, 431100 KB] g=14, 107 evaluated, 25 expanded
[t=0.146008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.146041s, 431100 KB] g=15, 116 evaluated, 26 expanded
[t=0.146613s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.146645s, 431100 KB] g=16, 119 evaluated, 27 expanded
[t=0.147227s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.147259s, 431100 KB] g=16, 122 evaluated, 27 expanded
[t=0.14765s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.147687s, 431100 KB] g=17, 124 evaluated, 28 expanded
[t=0.149155s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.149188s, 431100 KB] g=18, 132 evaluated, 29 expanded
[t=0.153791s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.153827s, 431232 KB] g=19, 157 evaluated, 34 expanded
[t=0.159065s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.159102s, 431232 KB] g=21, 186 evaluated, 41 expanded
[t=0.169332s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.169369s, 431232 KB] g=22, 243 evaluated, 56 expanded
[t=0.170663s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.170694s, 431232 KB] g=24, 250 evaluated, 59 expanded
[t=0.171273s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.171308s, 431232 KB] g=25, 253 evaluated, 60 expanded
[t=0.174228s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.174262s, 431232 KB] g=26, 269 evaluated, 64 expanded
[t=0.175566s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.175599s, 431232 KB] g=28, 276 evaluated, 66 expanded
[t=0.175814s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.175843s, 431232 KB] g=29, 277 evaluated, 67 expanded
[t=0.177314s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.177345s, 431232 KB] g=32, 285 evaluated, 70 expanded
[t=0.179891s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.179927s, 431232 KB] g=35, 299 evaluated, 75 expanded
[t=0.182486s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.18252s, 431232 KB] g=37, 313 evaluated, 84 expanded
[t=0.182928s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.182961s, 431232 KB] g=39, 315 evaluated, 86 expanded
[t=0.183355s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.183385s, 431232 KB] g=40, 317 evaluated, 87 expanded
[t=0.184513s, 431232 KB] Solution found!
[t=0.184546s, 431232 KB] Actual search time: 0.0779473s
stack j i (1)
unstack b g (1)
stack b l (1)
unstack d e (1)
stack d a (1)
unstack e h (1)
stack e d (1)
unstack h c (1)
stack h g (1)
unstack e d (1)
put-down e (1)
unstack d a (1)
stack d j (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k b (1)
pick-up f (1)
stack f a (1)
unstack k b (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack d j (1)
stack d b (1)
unstack j i (1)
stack j e (1)
pick-up i (1)
stack i c (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.184573s, 431232 KB] Plan length: 43 step(s).
[t=0.184573s, 431232 KB] Plan cost: 43
[t=0.184573s, 431232 KB] Expanded 94 state(s).
[t=0.184573s, 431232 KB] Reopened 0 state(s).
[t=0.184573s, 431232 KB] Evaluated 324 state(s).
[t=0.184573s, 431232 KB] Evaluations: 324
[t=0.184573s, 431232 KB] Generated 427 state(s).
[t=0.184573s, 431232 KB] Dead ends: 0 state(s).
[t=0.184573s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.184573s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.184573s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.184573s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.184573s, 431232 KB] Number of registered states: 324
[t=0.184573s, 431232 KB] Int hash set load factor: 324/512 = 0.632812
[t=0.184573s, 431232 KB] Int hash set resizes: 9
[t=0.184573s, 431232 KB] Search time: 0.158003s
[t=0.184573s, 431232 KB] Total time: 0.184573s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p42.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6277e-05s, 424928 KB] reading input...
[t=0.00216017s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258064s, 427536 KB] Building successor generator...done!
[t=0.0260886s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261115s, 427536 KB] time for successor generation creation: 0.000171068s
[t=0.0261396s, 427536 KB] Variables: 25
[t=0.0261619s, 427536 KB] FactPairs: 182
[t=0.0261837s, 427536 KB] Bytes per state: 8
[t=0.0263788s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979875s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0980395s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980653s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0980923s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0981162s, 430128 KB] pruning method: none
[t=0.116716s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.116766s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.117197s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117595s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.117624s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.121831s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.121865s, 431100 KB] g=7, 32 evaluated, 9 expanded
[t=0.127329s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.127361s, 431100 KB] g=10, 62 evaluated, 17 expanded
[t=0.132659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.132693s, 431100 KB] g=15, 91 evaluated, 24 expanded
[t=0.133266s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.133296s, 431100 KB] g=15, 94 evaluated, 24 expanded
[t=0.13351s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.133539s, 431100 KB] g=16, 95 evaluated, 25 expanded
[t=0.137201s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.137237s, 431100 KB] g=19, 115 evaluated, 31 expanded
[t=0.151272s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.151317s, 431232 KB] g=15, 192 evaluated, 55 expanded
[t=0.15535s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.155383s, 431232 KB] g=17, 214 evaluated, 62 expanded
[t=0.199783s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.199819s, 431232 KB] g=26, 459 evaluated, 156 expanded, 2 reopened
[t=0.206931s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.206966s, 431364 KB] g=28, 498 evaluated, 164 expanded, 2 reopened
[t=0.214835s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.214869s, 431364 KB] g=30, 541 evaluated, 172 expanded, 2 reopened
[t=0.218713s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.218749s, 431364 KB] g=32, 562 evaluated, 176 expanded, 2 reopened
[t=0.221511s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.221543s, 431364 KB] g=34, 577 evaluated, 178 expanded, 2 reopened
[t=0.222839s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.222872s, 431364 KB] g=35, 584 evaluated, 179 expanded, 2 reopened
[t=0.223812s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.223843s, 431364 KB] g=36, 589 evaluated, 180 expanded, 2 reopened
[t=0.228043s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.228087s, 431364 KB] g=39, 612 evaluated, 184 expanded, 2 reopened
[t=0.228851s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.228883s, 431364 KB] g=40, 616 evaluated, 185 expanded, 2 reopened
[t=0.234118s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.234153s, 431364 KB] g=43, 644 evaluated, 191 expanded, 2 reopened
[t=0.236924s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.23696s, 431364 KB] g=46, 659 evaluated, 195 expanded, 2 reopened
[t=0.2379s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.237933s, 431364 KB] g=47, 664 evaluated, 196 expanded, 2 reopened
[t=0.279302s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.279343s, 431496 KB] g=50, 892 evaluated, 253 expanded, 3 reopened
[t=0.304786s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.304834s, 431628 KB] g=54, 1031 evaluated, 311 expanded, 8 reopened
[t=0.423922s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.423969s, 431760 KB] g=60, 1688 evaluated, 577 expanded, 54 reopened
[t=0.424553s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.424584s, 431760 KB] g=61, 1691 evaluated, 578 expanded, 54 reopened
[t=0.426423s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.426454s, 431760 KB] g=64, 1701 evaluated, 582 expanded, 54 reopened
[t=0.426846s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.426875s, 431760 KB] g=65, 1703 evaluated, 583 expanded, 54 reopened
[t=0.427811s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.427845s, 431760 KB] g=67, 1708 evaluated, 585 expanded, 54 reopened
[t=0.429147s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.429178s, 431760 KB] g=69, 1715 evaluated, 588 expanded, 54 reopened
[t=0.429386s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.429417s, 431760 KB] g=69, 1716 evaluated, 588 expanded, 54 reopened
[t=0.430351s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.430384s, 431760 KB] g=71, 1721 evaluated, 590 expanded, 54 reopened
[t=0.430781s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.430811s, 431760 KB] g=73, 1723 evaluated, 592 expanded, 54 reopened
[t=0.431203s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.431232s, 431760 KB] g=74, 1725 evaluated, 593 expanded, 54 reopened
[t=0.431808s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.431837s, 431760 KB] g=76, 1728 evaluated, 595 expanded, 54 reopened
[t=0.432975s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.433007s, 431760 KB] g=78, 1734 evaluated, 600 expanded, 54 reopened
[t=0.43304s, 431760 KB] Solution found!
[t=0.433067s, 431760 KB] Actual search time: 0.334947s
put-down b (1)
unstack e g (1)
stack e b (1)
unstack g k (1)
put-down g (1)
unstack k l (1)
stack k c (1)
unstack e b (1)
stack e k (1)
unstack l f (1)
put-down l (1)
pick-up b (1)
stack b l (1)
pick-up f (1)
stack f i (1)
pick-up g (1)
stack g b (1)
unstack f i (1)
put-down f (1)
unstack e k (1)
put-down e (1)
unstack k c (1)
put-down k (1)
unstack c h (1)
stack c k (1)
unstack h d (1)
stack h e (1)
unstack d a (1)
put-down d (1)
unstack h e (1)
stack h g (1)
unstack c k (1)
put-down c (1)
pick-up f (1)
stack f e (1)
pick-up i (1)
stack i c (1)
unstack a j (1)
stack a h (1)
pick-up j (1)
stack j i (1)
unstack f e (1)
stack f k (1)
unstack a h (1)
stack a f (1)
pick-up d (1)
stack d j (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack d j (1)
stack d b (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.433092s, 431760 KB] Plan length: 79 step(s).
[t=0.433092s, 431760 KB] Plan cost: 79
[t=0.433092s, 431760 KB] Expanded 602 state(s).
[t=0.433092s, 431760 KB] Reopened 54 state(s).
[t=0.433092s, 431760 KB] Evaluated 1735 state(s).
[t=0.433092s, 431760 KB] Evaluations: 1735
[t=0.433092s, 431760 KB] Generated 2574 state(s).
[t=0.433092s, 431760 KB] Dead ends: 0 state(s).
[t=0.433092s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.433092s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.433092s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.433092s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.433092s, 431760 KB] Number of registered states: 1735
[t=0.433092s, 431760 KB] Int hash set load factor: 1735/2048 = 0.847168
[t=0.433092s, 431760 KB] Int hash set resizes: 11
[t=0.433092s, 431760 KB] Search time: 0.406714s
[t=0.433092s, 431760 KB] Total time: 0.433092s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p43.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5114e-05s, 424928 KB] reading input...
[t=0.00211716s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260272s, 427536 KB] Building successor generator...done!
[t=0.0263121s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026336s, 427536 KB] time for successor generation creation: 0.000172406s
[t=0.0263645s, 427536 KB] Variables: 25
[t=0.0263877s, 427536 KB] FactPairs: 182
[t=0.02641s, 427536 KB] Bytes per state: 8
[t=0.0266057s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990136s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0990661s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990925s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0991204s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0991447s, 430128 KB] pruning method: none
[t=0.111049s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.111102s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118332s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.118375s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118775s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.118805s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.12013s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.120163s, 431100 KB] g=5, 16 evaluated, 5 expanded
[t=0.121102s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.121133s, 431100 KB] g=6, 21 evaluated, 6 expanded
[t=0.121889s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.121919s, 431100 KB] g=7, 25 evaluated, 7 expanded
[t=0.122311s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.12234s, 431100 KB] g=7, 27 evaluated, 7 expanded
[t=0.122554s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.122583s, 431100 KB] g=8, 28 evaluated, 8 expanded
[t=0.123711s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.123753s, 431100 KB] g=9, 34 evaluated, 9 expanded
[t=0.124699s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.124729s, 431100 KB] g=10, 39 evaluated, 10 expanded
[t=0.12549s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.12552s, 431100 KB] g=11, 43 evaluated, 11 expanded
[t=0.130112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.130145s, 431100 KB] g=16, 68 evaluated, 18 expanded
[t=0.130544s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.130573s, 431100 KB] g=17, 70 evaluated, 19 expanded
[t=0.131148s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.131181s, 431100 KB] g=18, 73 evaluated, 20 expanded
[t=0.133399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.133432s, 431100 KB] g=20, 85 evaluated, 23 expanded
[t=0.134376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.134409s, 431100 KB] g=21, 90 evaluated, 24 expanded
[t=0.135909s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.135942s, 431100 KB] g=22, 98 evaluated, 26 expanded
[t=0.137972s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.138005s, 431100 KB] g=24, 109 evaluated, 29 expanded
[t=0.139877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.139914s, 431100 KB] g=26, 119 evaluated, 32 expanded
[t=0.140859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.140888s, 431100 KB] g=27, 124 evaluated, 33 expanded
[t=0.141284s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.141313s, 431100 KB] g=28, 126 evaluated, 34 expanded
[t=0.142271s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.142303s, 431100 KB] g=29, 131 evaluated, 35 expanded
[t=0.142881s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.142912s, 431100 KB] g=30, 134 evaluated, 36 expanded
[t=0.144963s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.144998s, 431100 KB] g=31, 145 evaluated, 39 expanded
[t=0.145398s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.145433s, 431100 KB] g=32, 147 evaluated, 40 expanded
[t=0.146921s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.146951s, 431100 KB] g=34, 155 evaluated, 42 expanded
[t=0.150455s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.15049s, 431232 KB] g=38, 174 evaluated, 47 expanded
[t=0.151262s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.151293s, 431232 KB] g=40, 178 evaluated, 49 expanded
[t=0.158632s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.15867s, 431232 KB] g=46, 218 evaluated, 63 expanded
[t=0.159071s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.1591s, 431232 KB] g=47, 220 evaluated, 64 expanded
[t=0.161885s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.161918s, 431232 KB] g=50, 235 evaluated, 69 expanded
[t=0.162495s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.162524s, 431232 KB] g=51, 238 evaluated, 70 expanded
[t=0.16347s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.163502s, 431232 KB] g=52, 243 evaluated, 71 expanded
[t=0.164093s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.164123s, 431232 KB] g=54, 246 evaluated, 73 expanded
[t=0.164528s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.164558s, 431232 KB] g=56, 249 evaluated, 75 expanded
[t=0.164585s, 431232 KB] Solution found!
[t=0.164612s, 431232 KB] Actual search time: 0.0654635s
unstack c i (1)
put-down c (1)
unstack i k (1)
put-down i (1)
unstack d e (1)
stack d j (1)
unstack k l (1)
stack k c (1)
unstack e f (1)
stack e k (1)
pick-up f (1)
stack f i (1)
unstack l b (1)
stack l d (1)
unstack b g (1)
stack b l (1)
unstack g a (1)
put-down g (1)
unstack a h (1)
stack a b (1)
pick-up h (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack e k (1)
stack e b (1)
unstack k c (1)
stack k e (1)
unstack f i (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
put-down b (1)
pick-up i (1)
stack i c (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.164637s, 431232 KB] Plan length: 56 step(s).
[t=0.164637s, 431232 KB] Plan cost: 56
[t=0.164637s, 431232 KB] Expanded 76 state(s).
[t=0.164637s, 431232 KB] Reopened 0 state(s).
[t=0.164637s, 431232 KB] Evaluated 249 state(s).
[t=0.164637s, 431232 KB] Evaluations: 249
[t=0.164637s, 431232 KB] Generated 324 state(s).
[t=0.164637s, 431232 KB] Dead ends: 0 state(s).
[t=0.164637s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.164637s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.164637s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.164637s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.164637s, 431232 KB] Number of registered states: 249
[t=0.164637s, 431232 KB] Int hash set load factor: 249/256 = 0.972656
[t=0.164637s, 431232 KB] Int hash set resizes: 8
[t=0.164637s, 431232 KB] Search time: 0.138032s
[t=0.164637s, 431232 KB] Total time: 0.164637s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p44.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6139e-05s, 424928 KB] reading input...
[t=0.00215607s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258697s, 427536 KB] Building successor generator...done!
[t=0.0261477s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261708s, 427536 KB] time for successor generation creation: 0.000167181s
[t=0.0262084s, 427536 KB] Variables: 25
[t=0.0262311s, 427536 KB] FactPairs: 182
[t=0.0262531s, 427536 KB] Bytes per state: 8
[t=0.026448s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980532s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0981061s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981318s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0981595s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0981836s, 430128 KB] pruning method: none
[t=0.109996s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.110048s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117669s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.117713s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.118107s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.118139s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.118344s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.118373s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.119644s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.119674s, 431100 KB] g=5, 20 evaluated, 5 expanded
[t=0.121306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.121337s, 431100 KB] g=7, 29 evaluated, 7 expanded
[t=0.122086s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.122116s, 431100 KB] g=6, 33 evaluated, 9 expanded
[t=0.123556s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.123586s, 431100 KB] g=8, 41 evaluated, 11 expanded
[t=0.141714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.14175s, 431100 KB] g=11, 142 evaluated, 58 expanded, 7 reopened
[t=0.142141s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.142173s, 431100 KB] g=12, 144 evaluated, 59 expanded, 7 reopened
[t=0.143276s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.143309s, 431100 KB] g=14, 150 evaluated, 61 expanded, 7 reopened
[t=0.147788s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.147821s, 431100 KB] g=16, 175 evaluated, 67 expanded, 7 reopened
[t=0.181286s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.181332s, 431232 KB] g=24, 363 evaluated, 112 expanded, 10 reopened
[t=0.181544s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.181573s, 431232 KB] g=24, 364 evaluated, 112 expanded, 10 reopened
[t=0.183557s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.18359s, 431232 KB] g=26, 375 evaluated, 114 expanded, 10 reopened
[t=0.183976s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.184004s, 431232 KB] g=26, 377 evaluated, 114 expanded, 10 reopened
[t=0.187253s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.187287s, 431232 KB] g=28, 395 evaluated, 119 expanded, 10 reopened
[t=0.187672s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.187704s, 431232 KB] g=28, 397 evaluated, 119 expanded, 10 reopened
[t=0.192553s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.192586s, 431232 KB] g=32, 424 evaluated, 127 expanded, 10 reopened
[t=0.24002s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.240063s, 431364 KB] g=35, 689 evaluated, 200 expanded, 10 reopened
[t=0.240464s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.240497s, 431364 KB] g=35, 691 evaluated, 200 expanded, 10 reopened
[t=0.244469s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.244503s, 431496 KB] g=38, 713 evaluated, 206 expanded, 10 reopened
[t=0.244713s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.244742s, 431496 KB] g=38, 714 evaluated, 206 expanded, 10 reopened
[t=0.246025s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.24606s, 431496 KB] g=40, 721 evaluated, 208 expanded, 10 reopened
[t=0.246454s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.246484s, 431496 KB] g=41, 723 evaluated, 209 expanded, 10 reopened
[t=0.247052s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.247082s, 431496 KB] g=42, 726 evaluated, 210 expanded, 10 reopened
[t=0.262867s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.262905s, 431496 KB] g=50, 814 evaluated, 240 expanded, 10 reopened
[t=0.264552s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.264584s, 431496 KB] g=52, 823 evaluated, 243 expanded, 10 reopened
[t=0.268173s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.268213s, 431496 KB] g=51, 843 evaluated, 251 expanded, 10 reopened
[t=0.270737s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.270771s, 431496 KB] g=54, 857 evaluated, 257 expanded, 10 reopened
[t=0.271166s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.271195s, 431496 KB] g=56, 859 evaluated, 259 expanded, 10 reopened
[t=0.271583s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.271613s, 431496 KB] g=57, 861 evaluated, 260 expanded, 10 reopened
[t=0.272735s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.272767s, 431496 KB] g=60, 868 evaluated, 266 expanded, 10 reopened
[t=0.272794s, 431496 KB] Solution found!
[t=0.27282s, 431496 KB] Actual search time: 0.174632s
unstack a b (1)
stack a k (1)
pick-up d (1)
stack d j (1)
unstack b g (1)
put-down b (1)
pick-up g (1)
stack g b (1)
unstack h e (1)
stack h a (1)
unstack e i (1)
stack e d (1)
unstack g b (1)
put-down g (1)
unstack e d (1)
stack e b (1)
unstack i c (1)
put-down i (1)
unstack c l (1)
put-down c (1)
pick-up g (1)
stack g h (1)
unstack l f (1)
stack l d (1)
pick-up f (1)
stack f e (1)
pick-up i (1)
stack i l (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack i l (1)
stack i c (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.272845s, 431496 KB] Plan length: 60 step(s).
[t=0.272845s, 431496 KB] Plan cost: 60
[t=0.272845s, 431496 KB] Expanded 267 state(s).
[t=0.272845s, 431496 KB] Reopened 10 state(s).
[t=0.272845s, 431496 KB] Evaluated 868 state(s).
[t=0.272845s, 431496 KB] Evaluations: 868
[t=0.272845s, 431496 KB] Generated 1195 state(s).
[t=0.272845s, 431496 KB] Dead ends: 0 state(s).
[t=0.272845s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.272845s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.272845s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.272845s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.272845s, 431496 KB] Number of registered states: 868
[t=0.272845s, 431496 KB] Int hash set load factor: 868/1024 = 0.847656
[t=0.272845s, 431496 KB] Int hash set resizes: 10
[t=0.272845s, 431496 KB] Search time: 0.246397s
[t=0.272845s, 431496 KB] Total time: 0.272845s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p45.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5974e-05s, 424928 KB] reading input...
[t=0.00212816s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258732s, 427536 KB] Building successor generator...done!
[t=0.0261499s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261735s, 427536 KB] time for successor generation creation: 0.000165371s
[t=0.0262024s, 427536 KB] Variables: 25
[t=0.0262252s, 427536 KB] FactPairs: 182
[t=0.0262473s, 427536 KB] Bytes per state: 8
[t=0.0264387s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981178s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0981688s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981948s, 430128 KB] f = 130, 1 evaluated, 0 expanded
[t=0.0982221s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0982464s, 430128 KB] pruning method: none
[t=0.11692s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.11697s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118972s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.119014s, 431100 KB] g=3, 16 evaluated, 4 expanded
[t=0.120006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.120042s, 431100 KB] g=4, 21 evaluated, 5 expanded
[t=0.161546s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.161586s, 431232 KB] g=16, 251 evaluated, 53 expanded
[t=0.192838s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.192879s, 431232 KB] g=21, 425 evaluated, 98 expanded
[t=0.215605s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.215644s, 431364 KB] g=16, 551 evaluated, 129 expanded
[t=0.285934s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.285976s, 431364 KB] g=23, 944 evaluated, 240 expanded, 4 reopened
[t=0.287633s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.287669s, 431364 KB] g=25, 953 evaluated, 242 expanded, 4 reopened
[t=0.288777s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.288813s, 431496 KB] g=26, 959 evaluated, 243 expanded, 4 reopened
[t=0.290098s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.290132s, 431496 KB] g=27, 966 evaluated, 244 expanded, 4 reopened
[t=0.291786s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.291822s, 431496 KB] g=29, 975 evaluated, 246 expanded, 4 reopened
[t=0.292755s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.292787s, 431496 KB] g=30, 980 evaluated, 247 expanded, 4 reopened
[t=0.295691s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.295726s, 431496 KB] g=33, 996 evaluated, 250 expanded, 4 reopened
[t=0.29612s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.296153s, 431496 KB] g=33, 998 evaluated, 250 expanded, 4 reopened
[t=0.29986s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.299894s, 431496 KB] g=33, 1018 evaluated, 254 expanded, 4 reopened
[t=0.300105s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.300134s, 431496 KB] g=33, 1019 evaluated, 254 expanded, 4 reopened
[t=0.309348s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.309384s, 431496 KB] g=35, 1070 evaluated, 264 expanded, 4 reopened
[t=0.310322s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.310353s, 431496 KB] g=36, 1075 evaluated, 265 expanded, 4 reopened
[t=0.315793s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.315831s, 431496 KB] g=40, 1105 evaluated, 271 expanded, 4 reopened
[t=0.31946s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.319492s, 431496 KB] g=44, 1125 evaluated, 275 expanded, 4 reopened
[t=0.323073s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.323108s, 431628 KB] g=48, 1144 evaluated, 279 expanded, 4 reopened
[t=0.337549s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.337588s, 431628 KB] g=43, 1223 evaluated, 298 expanded, 4 reopened
[t=0.337799s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.337828s, 431628 KB] g=43, 1224 evaluated, 298 expanded, 4 reopened
[t=0.342712s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.342746s, 431628 KB] g=46, 1251 evaluated, 305 expanded, 4 reopened
[t=0.343138s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.34317s, 431628 KB] g=47, 1253 evaluated, 306 expanded, 4 reopened
[t=0.343781s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.343816s, 431628 KB] g=48, 1256 evaluated, 307 expanded, 4 reopened
[t=0.345176s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.345206s, 431628 KB] g=50, 1263 evaluated, 309 expanded, 4 reopened
[t=0.347023s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.347055s, 431628 KB] g=53, 1273 evaluated, 312 expanded, 4 reopened
[t=0.347638s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.34767s, 431628 KB] g=54, 1276 evaluated, 313 expanded, 4 reopened
[t=0.348058s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.34809s, 431628 KB] g=55, 1278 evaluated, 314 expanded, 4 reopened
[t=0.350626s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.350659s, 431628 KB] g=59, 1292 evaluated, 320 expanded, 4 reopened
[t=0.35087s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.3509s, 431628 KB] g=59, 1293 evaluated, 320 expanded, 4 reopened
[t=0.351697s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.351732s, 431628 KB] g=62, 1297 evaluated, 323 expanded, 4 reopened
[t=0.354907s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.354938s, 431628 KB] g=61, 1315 evaluated, 335 expanded, 4 reopened
[t=0.354966s, 431628 KB] Solution found!
[t=0.354993s, 431628 KB] Actual search time: 0.256744s
put-down e (1)
unstack k d (1)
stack k e (1)
unstack d f (1)
stack d c (1)
unstack f b (1)
stack f d (1)
unstack b l (1)
stack b i (1)
unstack a g (1)
stack a k (1)
pick-up g (1)
stack g a (1)
unstack f d (1)
stack f l (1)
unstack d c (1)
put-down d (1)
unstack b i (1)
stack b d (1)
unstack g a (1)
put-down g (1)
unstack c h (1)
stack c b (1)
pick-up h (1)
stack h g (1)
unstack c b (1)
put-down c (1)
unstack a k (1)
stack a h (1)
unstack f l (1)
stack f k (1)
unstack l j (1)
stack l i (1)
pick-up j (1)
stack j b (1)
unstack f k (1)
stack f a (1)
unstack l i (1)
put-down l (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up i (1)
stack i l (1)
unstack j b (1)
stack j e (1)
unstack b d (1)
stack b c (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.355018s, 431628 KB] Plan length: 61 step(s).
[t=0.355018s, 431628 KB] Plan cost: 61
[t=0.355018s, 431628 KB] Expanded 336 state(s).
[t=0.355018s, 431628 KB] Reopened 4 state(s).
[t=0.355018s, 431628 KB] Evaluated 1315 state(s).
[t=0.355018s, 431628 KB] Evaluations: 1315
[t=0.355018s, 431628 KB] Generated 1703 state(s).
[t=0.355018s, 431628 KB] Dead ends: 0 state(s).
[t=0.355018s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.355018s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.355018s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.355018s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.355018s, 431628 KB] Number of registered states: 1315
[t=0.355018s, 431628 KB] Int hash set load factor: 1315/2048 = 0.64209
[t=0.355018s, 431628 KB] Int hash set resizes: 11
[t=0.355018s, 431628 KB] Search time: 0.32858s
[t=0.355018s, 431628 KB] Total time: 0.355018s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p46.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7153e-05s, 424928 KB] reading input...
[t=0.00214867s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260852s, 427536 KB] Building successor generator...done!
[t=0.0263652s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263889s, 427536 KB] time for successor generation creation: 0.000167213s
[t=0.0264177s, 427536 KB] Variables: 25
[t=0.0264409s, 427536 KB] FactPairs: 182
[t=0.0264636s, 427536 KB] Bytes per state: 8
[t=0.0266597s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993592s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0994113s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994371s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0994648s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0994886s, 430128 KB] pruning method: none
[t=0.111418s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.11147s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.119052s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.119096s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.12039s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.120422s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.120816s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.120847s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.122488s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.122529s, 431100 KB] g=7, 27 evaluated, 7 expanded
[t=0.122743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.122772s, 431100 KB] g=8, 28 evaluated, 8 expanded
[t=0.123157s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.123186s, 431100 KB] g=8, 30 evaluated, 8 expanded
[t=0.123393s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.123422s, 431100 KB] g=8, 31 evaluated, 8 expanded
[t=0.127562s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.127595s, 431100 KB] g=9, 54 evaluated, 13 expanded
[t=0.128525s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.128559s, 431100 KB] g=10, 59 evaluated, 14 expanded
[t=0.130744s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.130774s, 431100 KB] g=12, 71 evaluated, 17 expanded
[t=0.130984s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.131013s, 431100 KB] g=12, 72 evaluated, 17 expanded
[t=0.133921s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.133955s, 431100 KB] g=15, 88 evaluated, 21 expanded
[t=0.136851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.136886s, 431100 KB] g=17, 104 evaluated, 24 expanded
[t=0.138696s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.138729s, 431100 KB] g=18, 114 evaluated, 25 expanded
[t=0.139119s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.139149s, 431100 KB] g=19, 116 evaluated, 26 expanded
[t=0.141155s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.14119s, 431100 KB] g=21, 127 evaluated, 28 expanded
[t=0.147675s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.147714s, 431232 KB] g=21, 163 evaluated, 34 expanded
[t=0.148843s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.148878s, 431232 KB] g=23, 169 evaluated, 36 expanded
[t=0.14998s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.15001s, 431232 KB] g=24, 175 evaluated, 37 expanded
[t=0.151298s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.151336s, 431232 KB] g=25, 182 evaluated, 38 expanded
[t=0.152455s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.152488s, 431232 KB] g=26, 188 evaluated, 39 expanded
[t=0.153953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.153983s, 431232 KB] g=27, 196 evaluated, 40 expanded
[t=0.157068s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.1571s, 431232 KB] g=30, 213 evaluated, 43 expanded
[t=0.157676s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.157708s, 431232 KB] g=31, 216 evaluated, 44 expanded
[t=0.159886s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.159916s, 431232 KB] g=33, 228 evaluated, 47 expanded
[t=0.164246s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.16428s, 431232 KB] g=35, 252 evaluated, 53 expanded
[t=0.173506s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.17354s, 431232 KB] g=36, 303 evaluated, 66 expanded
[t=0.174292s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.174322s, 431232 KB] g=37, 307 evaluated, 67 expanded
[t=0.175074s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.175105s, 431232 KB] g=38, 311 evaluated, 68 expanded
[t=0.176035s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.176065s, 431232 KB] g=39, 316 evaluated, 69 expanded
[t=0.177002s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.177037s, 431232 KB] g=41, 321 evaluated, 71 expanded
[t=0.17796s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.17799s, 431232 KB] g=42, 326 evaluated, 72 expanded
[t=0.178742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.178772s, 431232 KB] g=44, 330 evaluated, 74 expanded
[t=0.181868s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.181903s, 431232 KB] g=45, 347 evaluated, 82 expanded
[t=0.182653s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.182683s, 431232 KB] g=47, 351 evaluated, 84 expanded
[t=0.18308s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.183109s, 431232 KB] g=49, 354 evaluated, 86 expanded
[t=0.183142s, 431232 KB] Solution found!
[t=0.183169s, 431232 KB] Actual search time: 0.0836768s
stack k a (1)
unstack h j (1)
stack h k (1)
unstack j l (1)
stack j c (1)
unstack l f (1)
put-down l (1)
unstack b e (1)
stack b l (1)
unstack h k (1)
stack h f (1)
unstack j c (1)
put-down j (1)
unstack c i (1)
stack c b (1)
unstack e g (1)
stack e c (1)
unstack k a (1)
put-down k (1)
pick-up a (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack i d (1)
put-down i (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack c b (1)
put-down c (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.183194s, 431232 KB] Plan length: 49 step(s).
[t=0.183194s, 431232 KB] Plan cost: 49
[t=0.183194s, 431232 KB] Expanded 87 state(s).
[t=0.183194s, 431232 KB] Reopened 0 state(s).
[t=0.183194s, 431232 KB] Evaluated 354 state(s).
[t=0.183194s, 431232 KB] Evaluations: 354
[t=0.183194s, 431232 KB] Generated 443 state(s).
[t=0.183194s, 431232 KB] Dead ends: 0 state(s).
[t=0.183194s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.183194s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.183194s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.183194s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.183194s, 431232 KB] Number of registered states: 354
[t=0.183194s, 431232 KB] Int hash set load factor: 354/512 = 0.691406
[t=0.183194s, 431232 KB] Int hash set resizes: 9
[t=0.183194s, 431232 KB] Search time: 0.156535s
[t=0.183194s, 431232 KB] Total time: 0.183194s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p47.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.010s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6906e-05s, 424928 KB] reading input...
[t=0.00213974s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257283s, 427536 KB] Building successor generator...done!
[t=0.026004s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260279s, 427536 KB] time for successor generation creation: 0.000165455s
[t=0.0260568s, 427536 KB] Variables: 25
[t=0.02608s, 427536 KB] FactPairs: 182
[t=0.0261022s, 427536 KB] Bytes per state: 8
[t=0.0262969s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.097778s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0978301s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978558s, 430128 KB] f = 142, 1 evaluated, 0 expanded
[t=0.0978826s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0979069s, 430128 KB] pruning method: none
[t=0.109685s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.109735s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116539s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.116596s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.116811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.11684s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118842s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.118873s, 431100 KB] g=3, 17 evaluated, 4 expanded
[t=0.119447s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.119477s, 431100 KB] g=4, 20 evaluated, 5 expanded
[t=0.11969s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.119719s, 431100 KB] g=5, 21 evaluated, 6 expanded
[t=0.121925s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.121957s, 431100 KB] g=9, 33 evaluated, 10 expanded
[t=0.122346s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.122385s, 431100 KB] g=9, 35 evaluated, 10 expanded
[t=0.122958s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.122988s, 431100 KB] g=10, 38 evaluated, 11 expanded
[t=0.123734s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.123764s, 431100 KB] g=11, 42 evaluated, 12 expanded
[t=0.126859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.126892s, 431100 KB] g=13, 59 evaluated, 16 expanded
[t=0.128005s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.128039s, 431100 KB] g=14, 65 evaluated, 17 expanded
[t=0.128796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.128826s, 431100 KB] g=15, 69 evaluated, 18 expanded
[t=0.129399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.12943s, 431100 KB] g=16, 72 evaluated, 19 expanded
[t=0.130713s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.130742s, 431100 KB] g=17, 79 evaluated, 20 expanded
[t=0.134736s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.134769s, 431100 KB] g=21, 101 evaluated, 26 expanded
[t=0.134979s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.135008s, 431100 KB] g=21, 102 evaluated, 26 expanded
[t=0.135402s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.135431s, 431100 KB] g=22, 104 evaluated, 27 expanded
[t=0.136731s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.136765s, 431100 KB] g=24, 111 evaluated, 29 expanded
[t=0.139138s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.139171s, 431100 KB] g=26, 124 evaluated, 34 expanded
[t=0.139919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.139948s, 431100 KB] g=27, 128 evaluated, 35 expanded
[t=0.140526s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.140572s, 431100 KB] g=28, 131 evaluated, 36 expanded
[t=0.140967s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.140999s, 431100 KB] g=29, 133 evaluated, 37 expanded
[t=0.147896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.147938s, 431100 KB] g=33, 171 evaluated, 50 expanded
[t=0.149436s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.149473s, 431100 KB] g=36, 179 evaluated, 53 expanded
[t=0.149872s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.149901s, 431100 KB] g=38, 181 evaluated, 55 expanded
[t=0.150295s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.150324s, 431100 KB] g=39, 183 evaluated, 56 expanded
[t=0.150902s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.150932s, 431100 KB] g=41, 186 evaluated, 58 expanded
[t=0.152059s, 431100 KB] Solution found!
[t=0.152095s, 431100 KB] Actual search time: 0.054186s
pick-up k (1)
stack k j (1)
pick-up h (1)
stack h k (1)
unstack g e (1)
put-down g (1)
unstack b f (1)
put-down b (1)
unstack f a (1)
stack f b (1)
unstack h k (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack f b (1)
stack f a (1)
unstack k j (1)
stack k e (1)
pick-up j (1)
stack j b (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d l (1)
pick-up b (1)
stack b i (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.152121s, 431100 KB] Plan length: 44 step(s).
[t=0.152121s, 431100 KB] Plan cost: 44
[t=0.152121s, 431100 KB] Expanded 64 state(s).
[t=0.152121s, 431100 KB] Reopened 0 state(s).
[t=0.152121s, 431100 KB] Evaluated 193 state(s).
[t=0.152121s, 431100 KB] Evaluations: 193
[t=0.152121s, 431100 KB] Generated 254 state(s).
[t=0.152121s, 431100 KB] Dead ends: 0 state(s).
[t=0.152121s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.152121s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.152121s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.152121s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.152121s, 431100 KB] Number of registered states: 193
[t=0.152121s, 431100 KB] Int hash set load factor: 193/256 = 0.753906
[t=0.152121s, 431100 KB] Int hash set resizes: 8
[t=0.152121s, 431100 KB] Search time: 0.125825s
[t=0.152121s, 431100 KB] Total time: 0.152121s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p48.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6971e-05s, 424928 KB] reading input...
[t=0.00214453s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260772s, 427536 KB] Building successor generator...done!
[t=0.026357s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.02638s, 427536 KB] time for successor generation creation: 0.000167875s
[t=0.0264084s, 427536 KB] Variables: 25
[t=0.0264313s, 427536 KB] FactPairs: 182
[t=0.0264533s, 427536 KB] Bytes per state: 8
[t=0.026646s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0995659s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0996182s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.099644s, 430128 KB] f = 151, 1 evaluated, 0 expanded
[t=0.0996715s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0996954s, 430128 KB] pruning method: none
[t=0.11833s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.11838s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118605s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.118635s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.119604s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.119634s, 431100 KB] g=4, 10 evaluated, 4 expanded
[t=0.120966s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.121007s, 431100 KB] g=6, 17 evaluated, 6 expanded
[t=0.121602s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.121634s, 431100 KB] g=6, 20 evaluated, 6 expanded
[t=0.126695s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.126728s, 431100 KB] g=6, 47 evaluated, 13 expanded
[t=0.127688s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.127717s, 431100 KB] g=7, 52 evaluated, 15 expanded
[t=0.130745s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.13078s, 431100 KB] g=10, 68 evaluated, 21 expanded
[t=0.13118s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.13121s, 431100 KB] g=10, 70 evaluated, 21 expanded
[t=0.133484s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.133517s, 431100 KB] g=12, 82 evaluated, 25 expanded
[t=0.134477s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.134511s, 431100 KB] g=13, 87 evaluated, 27 expanded
[t=0.137341s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.137374s, 431100 KB] g=17, 102 evaluated, 32 expanded
[t=0.140194s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.140227s, 431100 KB] g=20, 117 evaluated, 37 expanded
[t=0.156478s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.156515s, 431232 KB] g=25, 204 evaluated, 67 expanded
[t=0.214529s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.21457s, 431364 KB] g=32, 514 evaluated, 191 expanded, 15 reopened
[t=0.219834s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.219868s, 431364 KB] g=28, 542 evaluated, 201 expanded, 15 reopened
[t=0.291774s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.291816s, 431496 KB] g=30, 926 evaluated, 355 expanded, 21 reopened
[t=0.303584s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.30362s, 431496 KB] g=35, 989 evaluated, 373 expanded, 21 reopened
[t=0.304022s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.304054s, 431496 KB] g=35, 991 evaluated, 373 expanded, 21 reopened
[t=0.310145s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.310183s, 431496 KB] g=38, 1023 evaluated, 381 expanded, 21 reopened
[t=0.311905s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.311936s, 431496 KB] g=40, 1032 evaluated, 383 expanded, 21 reopened
[t=0.31645s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.316485s, 431496 KB] g=44, 1056 evaluated, 389 expanded, 21 reopened
[t=0.320626s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.320663s, 431496 KB] g=44, 1078 evaluated, 394 expanded, 21 reopened
[t=0.327069s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.327104s, 431496 KB] g=46, 1112 evaluated, 403 expanded, 21 reopened
[t=0.329011s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.32905s, 431496 KB] g=47, 1122 evaluated, 405 expanded, 21 reopened
[t=0.331893s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.331926s, 431628 KB] g=49, 1137 evaluated, 408 expanded, 21 reopened
[t=0.332522s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.332555s, 431628 KB] g=50, 1140 evaluated, 409 expanded, 21 reopened
[t=0.333901s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.333936s, 431628 KB] g=51, 1147 evaluated, 410 expanded, 21 reopened
[t=0.334715s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.334745s, 431628 KB] g=52, 1151 evaluated, 411 expanded, 21 reopened
[t=0.335151s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.335181s, 431628 KB] g=53, 1153 evaluated, 412 expanded, 21 reopened
[t=0.337103s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.337136s, 431628 KB] g=54, 1163 evaluated, 413 expanded, 21 reopened
[t=0.338669s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.338702s, 431628 KB] g=56, 1171 evaluated, 415 expanded, 21 reopened
[t=0.340792s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.340823s, 431628 KB] g=59, 1182 evaluated, 418 expanded, 21 reopened
[t=0.345377s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.345411s, 431628 KB] g=62, 1206 evaluated, 424 expanded, 21 reopened
[t=0.346006s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.346042s, 431628 KB] g=63, 1209 evaluated, 425 expanded, 21 reopened
[t=0.347205s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.347238s, 431628 KB] g=65, 1215 evaluated, 427 expanded, 21 reopened
[t=0.350087s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.35012s, 431628 KB] g=68, 1230 evaluated, 432 expanded, 21 reopened
[t=0.357639s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.357676s, 431628 KB] g=72, 1270 evaluated, 444 expanded, 21 reopened
[t=0.3652s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.365236s, 431628 KB] g=71, 1310 evaluated, 457 expanded, 21 reopened
[t=0.365643s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.365672s, 431628 KB] g=72, 1312 evaluated, 458 expanded, 21 reopened
[t=0.366641s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.366674s, 431628 KB] g=74, 1317 evaluated, 460 expanded, 21 reopened
[t=0.367082s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.367111s, 431628 KB] g=75, 1319 evaluated, 461 expanded, 21 reopened
[t=0.367519s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.367553s, 431628 KB] g=76, 1321 evaluated, 462 expanded, 21 reopened
[t=0.367584s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.367608s, 431628 KB] g=77, 1322 evaluated, 463 expanded, 21 reopened
[t=0.367633s, 431628 KB] Solution found!
[t=0.36766s, 431628 KB] Actual search time: 0.267961s
put-down e (1)
unstack g b (1)
put-down g (1)
unstack b f (1)
stack b c (1)
unstack f a (1)
stack f g (1)
unstack a i (1)
stack a b (1)
unstack i d (1)
stack i a (1)
unstack f g (1)
stack f d (1)
pick-up g (1)
stack g i (1)
unstack f d (1)
put-down f (1)
unstack g i (1)
stack g d (1)
unstack i a (1)
put-down i (1)
pick-up f (1)
stack f i (1)
unstack g d (1)
stack g a (1)
unstack d l (1)
put-down d (1)
pick-up e (1)
stack e g (1)
unstack l j (1)
stack l d (1)
unstack j h (1)
put-down j (1)
pick-up h (1)
stack h f (1)
unstack e g (1)
stack e l (1)
unstack g a (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack f i (1)
stack f j (1)
unstack a b (1)
stack a h (1)
unstack e l (1)
stack e i (1)
unstack b c (1)
stack b l (1)
unstack c k (1)
put-down c (1)
unstack f j (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e b (1)
pick-up j (1)
stack j i (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.367685s, 431628 KB] Plan length: 77 step(s).
[t=0.367685s, 431628 KB] Plan cost: 77
[t=0.367685s, 431628 KB] Expanded 464 state(s).
[t=0.367685s, 431628 KB] Reopened 21 state(s).
[t=0.367685s, 431628 KB] Evaluated 1322 state(s).
[t=0.367685s, 431628 KB] Evaluations: 1322
[t=0.367685s, 431628 KB] Generated 1961 state(s).
[t=0.367685s, 431628 KB] Dead ends: 0 state(s).
[t=0.367685s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.367685s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.367685s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.367685s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.367685s, 431628 KB] Number of registered states: 1322
[t=0.367685s, 431628 KB] Int hash set load factor: 1322/2048 = 0.645508
[t=0.367685s, 431628 KB] Int hash set resizes: 11
[t=0.367685s, 431628 KB] Search time: 0.341039s
[t=0.367685s, 431628 KB] Total time: 0.367685s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p49.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5815e-05s, 424928 KB] reading input...
[t=0.00213304s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025698s, 427536 KB] Building successor generator...done!
[t=0.025979s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260023s, 427536 KB] time for successor generation creation: 0.000167744s
[t=0.0260305s, 427536 KB] Variables: 25
[t=0.0260534s, 427536 KB] FactPairs: 182
[t=0.026075s, 427536 KB] Bytes per state: 8
[t=0.0262677s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977526s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.0978056s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978316s, 430128 KB] f = 120, 1 evaluated, 0 expanded
[t=0.0978584s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.0978818s, 430128 KB] pruning method: none
[t=0.109644s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.109695s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117121s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.117164s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.120361s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.120394s, 431100 KB] g=5, 27 evaluated, 6 expanded
[t=0.121302s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.121332s, 431100 KB] g=6, 32 evaluated, 7 expanded
[t=0.134919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.134954s, 431100 KB] g=12, 109 evaluated, 28 expanded
[t=0.143713s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.143748s, 431100 KB] g=12, 159 evaluated, 42 expanded
[t=0.155262s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.155297s, 431232 KB] g=14, 225 evaluated, 59 expanded
[t=0.336401s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.336442s, 431364 KB] g=16, 1265 evaluated, 352 expanded, 32 reopened
[t=0.432964s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.433006s, 431496 KB] g=18, 1819 evaluated, 567 expanded, 86 reopened
[t=0.480427s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.480468s, 431496 KB] g=26, 2091 evaluated, 646 expanded, 86 reopened
[t=0.483844s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.483878s, 431496 KB] g=28, 2110 evaluated, 652 expanded, 86 reopened
[t=0.484607s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.484649s, 431496 KB] g=29, 2114 evaluated, 653 expanded, 86 reopened
[t=0.485378s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.485408s, 431496 KB] g=30, 2118 evaluated, 654 expanded, 86 reopened
[t=0.48596s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.48599s, 431496 KB] g=31, 2121 evaluated, 655 expanded, 86 reopened
[t=0.486718s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.486748s, 431496 KB] g=32, 2125 evaluated, 656 expanded, 86 reopened
[t=0.487487s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.487522s, 431496 KB] g=33, 2129 evaluated, 657 expanded, 86 reopened
[t=0.4886s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.488633s, 431496 KB] g=35, 2135 evaluated, 659 expanded, 86 reopened
[t=0.489889s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.489919s, 431496 KB] g=37, 2142 evaluated, 662 expanded, 86 reopened
[t=0.490303s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.490336s, 431496 KB] g=38, 2144 evaluated, 663 expanded, 86 reopened
[t=0.491066s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.491102s, 431628 KB] g=39, 2148 evaluated, 664 expanded, 86 reopened
[t=0.491312s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.491341s, 431628 KB] g=40, 2149 evaluated, 665 expanded, 86 reopened
[t=0.491732s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.491763s, 431628 KB] g=41, 2151 evaluated, 666 expanded, 86 reopened
[t=0.494247s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.49428s, 431628 KB] g=45, 2165 evaluated, 674 expanded, 86 reopened
[t=0.494841s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.494874s, 431628 KB] g=46, 2168 evaluated, 675 expanded, 86 reopened
[t=0.49508s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.495108s, 431628 KB] g=46, 2169 evaluated, 675 expanded, 86 reopened
[t=0.495671s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.495702s, 431628 KB] g=47, 2172 evaluated, 676 expanded, 86 reopened
[t=0.496086s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.496121s, 431628 KB] g=48, 2174 evaluated, 677 expanded, 86 reopened
[t=0.497376s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.497406s, 431628 KB] g=50, 2181 evaluated, 680 expanded, 86 reopened
[t=0.514247s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.514286s, 431628 KB] g=62, 2277 evaluated, 718 expanded, 86 reopened
[t=0.514672s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.514702s, 431628 KB] g=63, 2279 evaluated, 719 expanded, 86 reopened
[t=0.514734s, 431628 KB] Solution found!
[t=0.514761s, 431628 KB] Actual search time: 0.416875s
unstack g e (1)
stack g d (1)
unstack k h (1)
stack k f (1)
unstack e c (1)
stack e k (1)
pick-up h (1)
stack h e (1)
unstack g d (1)
stack g h (1)
unstack c l (1)
stack c g (1)
unstack l b (1)
stack l d (1)
unstack c g (1)
stack c a (1)
unstack b i (1)
stack b l (1)
unstack c a (1)
stack c b (1)
pick-up i (1)
stack i a (1)
unstack g h (1)
put-down g (1)
unstack h e (1)
stack h g (1)
unstack i a (1)
stack i c (1)
unstack a j (1)
stack a h (1)
unstack e k (1)
stack e i (1)
pick-up j (1)
stack j e (1)
unstack k f (1)
put-down k (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack j e (1)
put-down j (1)
unstack e i (1)
stack e k (1)
unstack i c (1)
put-down i (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.514785s, 431628 KB] Plan length: 64 step(s).
[t=0.514785s, 431628 KB] Plan cost: 64
[t=0.514785s, 431628 KB] Expanded 721 state(s).
[t=0.514785s, 431628 KB] Reopened 86 state(s).
[t=0.514785s, 431628 KB] Evaluated 2280 state(s).
[t=0.514785s, 431628 KB] Evaluations: 2280
[t=0.514785s, 431628 KB] Generated 3504 state(s).
[t=0.514785s, 431628 KB] Dead ends: 0 state(s).
[t=0.514785s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.514785s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.514785s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.514785s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.514785s, 431628 KB] Number of registered states: 2280
[t=0.514785s, 431628 KB] Int hash set load factor: 2280/4096 = 0.556641
[t=0.514785s, 431628 KB] Int hash set resizes: 12
[t=0.514785s, 431628 KB] Search time: 0.488518s
[t=0.514785s, 431628 KB] Total time: 0.514785s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p50.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6955e-05s, 424928 KB] reading input...
[t=0.00215672s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262393s, 427536 KB] Building successor generator...done!
[t=0.02654s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265647s, 427536 KB] time for successor generation creation: 0.000188353s
[t=0.0265941s, 427536 KB] Variables: 25
[t=0.0266181s, 427536 KB] FactPairs: 182
[t=0.0266407s, 427536 KB] Bytes per state: 8
[t=0.0268371s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.108307s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.108361s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.108387s, 430128 KB] f = 116, 1 evaluated, 0 expanded
[t=0.108415s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.108439s, 430128 KB] pruning method: none
[t=0.127274s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.127324s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.128096s, 431100 KB] f = 119, 9 evaluated, 2 expanded
[t=0.128495s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.128524s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.128734s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.128773s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.131733s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.131767s, 431100 KB] g=6, 28 evaluated, 7 expanded
[t=0.133436s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.133466s, 431100 KB] g=8, 37 evaluated, 9 expanded
[t=0.133867s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.133896s, 431100 KB] g=9, 39 evaluated, 10 expanded
[t=0.139787s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.139821s, 431100 KB] g=11, 71 evaluated, 17 expanded
[t=0.15462s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.154657s, 431100 KB] g=20, 152 evaluated, 39 expanded
[t=0.155249s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.155281s, 431100 KB] g=21, 155 evaluated, 40 expanded
[t=0.156598s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.156632s, 431100 KB] g=23, 162 evaluated, 42 expanded
[t=0.1594s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.159439s, 431232 KB] g=22, 177 evaluated, 45 expanded
[t=0.161299s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.161332s, 431232 KB] g=24, 187 evaluated, 48 expanded
[t=0.162455s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.162485s, 431232 KB] g=25, 193 evaluated, 49 expanded
[t=0.166349s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.166382s, 431232 KB] g=26, 214 evaluated, 54 expanded
[t=0.167154s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.167189s, 431232 KB] g=27, 218 evaluated, 55 expanded
[t=0.167952s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.167982s, 431232 KB] g=28, 222 evaluated, 56 expanded
[t=0.170939s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.17097s, 431232 KB] g=29, 238 evaluated, 61 expanded
[t=0.171747s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.171781s, 431232 KB] g=30, 242 evaluated, 62 expanded
[t=0.19285s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.192895s, 431232 KB] g=35, 357 evaluated, 93 expanded
[t=0.193111s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.19314s, 431232 KB] g=35, 358 evaluated, 93 expanded
[t=0.227307s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.227345s, 431364 KB] g=35, 545 evaluated, 149 expanded, 2 reopened
[t=0.228826s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.228859s, 431364 KB] g=37, 553 evaluated, 151 expanded, 2 reopened
[t=0.230345s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.230378s, 431364 KB] g=39, 561 evaluated, 153 expanded, 2 reopened
[t=0.230951s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.230981s, 431364 KB] g=39, 564 evaluated, 153 expanded, 2 reopened
[t=0.23193s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.231966s, 431364 KB] g=41, 569 evaluated, 155 expanded, 2 reopened
[t=0.233629s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.23366s, 431364 KB] g=42, 578 evaluated, 157 expanded, 2 reopened
[t=0.237687s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.237722s, 431364 KB] g=41, 600 evaluated, 163 expanded, 2 reopened
[t=0.240301s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.240334s, 431364 KB] g=44, 614 evaluated, 167 expanded, 2 reopened
[t=0.240911s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.240942s, 431364 KB] g=46, 617 evaluated, 169 expanded, 2 reopened
[t=0.253843s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.25388s, 431364 KB] g=49, 688 evaluated, 193 expanded, 2 reopened
[t=0.256475s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.256511s, 431364 KB] g=49, 702 evaluated, 201 expanded, 2 reopened
[t=0.256728s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.256757s, 431364 KB] g=50, 703 evaluated, 202 expanded, 2 reopened
[t=0.257152s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.257184s, 431364 KB] g=51, 705 evaluated, 203 expanded, 2 reopened
[t=0.258329s, 431364 KB] Solution found!
[t=0.258362s, 431364 KB] Actual search time: 0.14992s
unstack i g (1)
put-down i (1)
unstack c h (1)
stack c d (1)
pick-up h (1)
stack h a (1)
unstack c d (1)
put-down c (1)
unstack d j (1)
stack d c (1)
pick-up g (1)
stack g h (1)
unstack j f (1)
put-down j (1)
unstack d c (1)
stack d j (1)
pick-up i (1)
stack i c (1)
unstack f b (1)
stack f d (1)
unstack b k (1)
put-down b (1)
unstack k e (1)
stack k i (1)
pick-up e (1)
stack e b (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.258388s, 431364 KB] Plan length: 54 step(s).
[t=0.258388s, 431364 KB] Plan cost: 54
[t=0.258388s, 431364 KB] Expanded 210 state(s).
[t=0.258388s, 431364 KB] Reopened 2 state(s).
[t=0.258388s, 431364 KB] Evaluated 712 state(s).
[t=0.258388s, 431364 KB] Evaluations: 712
[t=0.258388s, 431364 KB] Generated 946 state(s).
[t=0.258388s, 431364 KB] Dead ends: 0 state(s).
[t=0.258388s, 431364 KB] Expanded until last jump: 2 state(s).
[t=0.258388s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.258388s, 431364 KB] Evaluated until last jump: 9 state(s).
[t=0.258388s, 431364 KB] Generated until last jump: 9 state(s).
[t=0.258388s, 431364 KB] Number of registered states: 712
[t=0.258388s, 431364 KB] Int hash set load factor: 712/1024 = 0.695312
[t=0.258388s, 431364 KB] Int hash set resizes: 10
[t=0.258388s, 431364 KB] Search time: 0.231551s
[t=0.258388s, 431364 KB] Total time: 0.258388s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p51.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7852e-05s, 424928 KB] reading input...
[t=0.00212841s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261263s, 427536 KB] Building successor generator...done!
[t=0.0264278s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264524s, 427536 KB] time for successor generation creation: 0.000167638s
[t=0.026481s, 427536 KB] Variables: 25
[t=0.0265041s, 427536 KB] FactPairs: 182
[t=0.0265269s, 427536 KB] Bytes per state: 8
[t=0.0267225s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.10012s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.100171s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.100197s, 430128 KB] f = 120, 1 evaluated, 0 expanded
[t=0.100225s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.10025s, 430128 KB] pruning method: none
[t=0.112224s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.112275s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.119002s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.119219s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.119248s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.119467s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.119496s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.120079s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.120109s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.121425s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.121455s, 431100 KB] g=4, 16 evaluated, 5 expanded
[t=0.121667s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.121696s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.122287s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.122319s, 431100 KB] g=5, 20 evaluated, 6 expanded
[t=0.123445s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.123485s, 431100 KB] g=6, 26 evaluated, 8 expanded
[t=0.124069s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.124099s, 431100 KB] g=7, 29 evaluated, 9 expanded
[t=0.124863s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.124893s, 431100 KB] g=8, 33 evaluated, 10 expanded
[t=0.126588s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.126621s, 431100 KB] g=10, 42 evaluated, 12 expanded
[t=0.128678s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.128708s, 431100 KB] g=10, 53 evaluated, 15 expanded
[t=0.129109s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.129139s, 431100 KB] g=11, 55 evaluated, 16 expanded
[t=0.130094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.130136s, 431100 KB] g=12, 60 evaluated, 18 expanded
[t=0.132755s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.132785s, 431100 KB] g=16, 74 evaluated, 24 expanded
[t=0.133366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.133398s, 431100 KB] g=17, 77 evaluated, 25 expanded
[t=0.133982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.134014s, 431100 KB] g=18, 80 evaluated, 26 expanded
[t=0.135171s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.135207s, 431100 KB] g=21, 86 evaluated, 29 expanded
[t=0.135793s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.135822s, 431100 KB] g=22, 89 evaluated, 30 expanded
[t=0.136406s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.136436s, 431100 KB] g=23, 92 evaluated, 31 expanded
[t=0.139613s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.139646s, 431100 KB] g=25, 109 evaluated, 39 expanded
[t=0.1406s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.140631s, 431100 KB] g=27, 114 evaluated, 41 expanded
[t=0.141404s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.141434s, 431100 KB] g=30, 118 evaluated, 44 expanded
[t=0.14165s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.141684s, 431100 KB] g=31, 119 evaluated, 45 expanded
[t=0.142084s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.14213s, 431100 KB] g=32, 121 evaluated, 46 expanded
[t=0.143285s, 431100 KB] Solution found!
[t=0.143318s, 431100 KB] Actual search time: 0.0430653s
put-down k (1)
unstack a g (1)
stack a k (1)
unstack h l (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack j f (1)
stack j l (1)
pick-up k (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.143345s, 431100 KB] Plan length: 35 step(s).
[t=0.143345s, 431100 KB] Plan cost: 35
[t=0.143345s, 431100 KB] Expanded 53 state(s).
[t=0.143345s, 431100 KB] Reopened 0 state(s).
[t=0.143345s, 431100 KB] Evaluated 128 state(s).
[t=0.143345s, 431100 KB] Evaluations: 128
[t=0.143345s, 431100 KB] Generated 178 state(s).
[t=0.143345s, 431100 KB] Dead ends: 0 state(s).
[t=0.143345s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.143345s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.143345s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.143345s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.143345s, 431100 KB] Number of registered states: 128
[t=0.143345s, 431100 KB] Int hash set load factor: 128/128 = 1
[t=0.143345s, 431100 KB] Int hash set resizes: 7
[t=0.143345s, 431100 KB] Search time: 0.116623s
[t=0.143345s, 431100 KB] Total time: 0.143345s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p52.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9166e-05s, 424928 KB] reading input...
[t=0.00217911s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259275s, 427536 KB] Building successor generator...done!
[t=0.0262047s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262283s, 427536 KB] time for successor generation creation: 0.000166842s
[t=0.026257s, 427536 KB] Variables: 25
[t=0.02628s, 427536 KB] FactPairs: 182
[t=0.0263241s, 427536 KB] Bytes per state: 8
[t=0.0265192s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982741s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.0983257s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983519s, 430128 KB] f = 95, 1 evaluated, 0 expanded
[t=0.0983792s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.0984033s, 430128 KB] pruning method: none
[t=0.110182s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.110234s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117725s, 431100 KB] f = 97, 9 evaluated, 3 expanded
[t=0.117955s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.117985s, 431100 KB] g=3, 10 evaluated, 4 expanded
[t=0.118559s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.11859s, 431100 KB] g=4, 13 evaluated, 5 expanded
[t=0.118983s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.119012s, 431100 KB] g=5, 15 evaluated, 6 expanded
[t=0.119584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.119614s, 431100 KB] g=6, 18 evaluated, 7 expanded
[t=0.119999s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.120028s, 431100 KB] g=6, 20 evaluated, 7 expanded
[t=0.123093s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.123136s, 431100 KB] g=10, 37 evaluated, 12 expanded
[t=0.124057s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.124088s, 431100 KB] g=11, 42 evaluated, 13 expanded
[t=0.167714s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.167753s, 431232 KB] g=14, 286 evaluated, 87 expanded, 4 reopened
[t=0.323005s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.323045s, 431364 KB] g=18, 1159 evaluated, 363 expanded, 34 reopened
[t=0.331267s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.331304s, 431364 KB] g=21, 1205 evaluated, 375 expanded, 35 reopened
[t=0.33152s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.331549s, 431364 KB] g=22, 1206 evaluated, 376 expanded, 35 reopened
[t=0.333705s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.333736s, 431364 KB] g=22, 1218 evaluated, 378 expanded, 35 reopened
[t=0.340174s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.340208s, 431364 KB] g=25, 1254 evaluated, 388 expanded, 35 reopened
[t=0.342017s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.342048s, 431364 KB] g=28, 1264 evaluated, 391 expanded, 35 reopened
[t=0.343168s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.343203s, 431364 KB] g=29, 1270 evaluated, 393 expanded, 35 reopened
[t=0.345358s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.345391s, 431364 KB] g=31, 1282 evaluated, 396 expanded, 35 reopened
[t=0.346132s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.346169s, 431364 KB] g=32, 1286 evaluated, 397 expanded, 35 reopened
[t=0.346383s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.346412s, 431364 KB] g=33, 1287 evaluated, 398 expanded, 35 reopened
[t=0.347337s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.347369s, 431364 KB] g=34, 1292 evaluated, 399 expanded, 35 reopened
[t=0.349888s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.349918s, 431364 KB] g=37, 1306 evaluated, 402 expanded, 35 reopened
[t=0.351741s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.351784s, 431496 KB] g=39, 1316 evaluated, 404 expanded, 35 reopened
[t=0.359108s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.359145s, 431496 KB] g=42, 1357 evaluated, 413 expanded, 35 reopened
[t=0.359715s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.359747s, 431496 KB] g=43, 1360 evaluated, 414 expanded, 35 reopened
[t=0.359955s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.359983s, 431496 KB] g=43, 1361 evaluated, 414 expanded, 35 reopened
[t=0.36394s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.363975s, 431496 KB] g=46, 1383 evaluated, 420 expanded, 35 reopened
[t=0.36652s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.366552s, 431496 KB] g=48, 1397 evaluated, 426 expanded, 35 reopened
[t=0.45845s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.458489s, 431496 KB] g=46, 1913 evaluated, 624 expanded, 60 reopened
[t=0.518211s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.518251s, 431628 KB] g=54, 2247 evaluated, 787 expanded, 73 reopened
[t=0.519006s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.519038s, 431628 KB] g=56, 2251 evaluated, 789 expanded, 73 reopened
[t=0.519069s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.519093s, 431628 KB] g=57, 2252 evaluated, 790 expanded, 73 reopened
[t=0.519119s, 431628 KB] Solution found!
[t=0.519145s, 431628 KB] Actual search time: 0.420737s
stack d a (1)
unstack f g (1)
stack f c (1)
unstack g h (1)
put-down g (1)
unstack h i (1)
stack h f (1)
unstack d a (1)
put-down d (1)
unstack i e (1)
stack i a (1)
unstack h f (1)
put-down h (1)
unstack f c (1)
stack f d (1)
pick-up h (1)
stack h f (1)
unstack i a (1)
stack i c (1)
unstack e k (1)
stack e i (1)
pick-up k (1)
stack k e (1)
unstack h f (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up d (1)
stack d e (1)
unstack i c (1)
put-down i (1)
unstack c j (1)
put-down c (1)
pick-up b (1)
stack b c (1)
unstack d e (1)
stack d b (1)
unstack j l (1)
stack j e (1)
pick-up l (1)
stack l i (1)
unstack d b (1)
stack d j (1)
unstack l i (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.519169s, 431628 KB] Plan length: 57 step(s).
[t=0.519169s, 431628 KB] Plan cost: 57
[t=0.519169s, 431628 KB] Expanded 791 state(s).
[t=0.519169s, 431628 KB] Reopened 73 state(s).
[t=0.519169s, 431628 KB] Evaluated 2252 state(s).
[t=0.519169s, 431628 KB] Evaluations: 2252
[t=0.519169s, 431628 KB] Generated 3515 state(s).
[t=0.519169s, 431628 KB] Dead ends: 0 state(s).
[t=0.519169s, 431628 KB] Expanded until last jump: 3 state(s).
[t=0.519169s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.519169s, 431628 KB] Evaluated until last jump: 9 state(s).
[t=0.519169s, 431628 KB] Generated until last jump: 10 state(s).
[t=0.519169s, 431628 KB] Number of registered states: 2252
[t=0.519169s, 431628 KB] Int hash set load factor: 2252/4096 = 0.549805
[t=0.519169s, 431628 KB] Int hash set resizes: 12
[t=0.519169s, 431628 KB] Search time: 0.492651s
[t=0.519169s, 431628 KB] Total time: 0.519169s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p53.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9488e-05s, 424928 KB] reading input...
[t=0.00216056s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258957s, 427536 KB] Building successor generator...done!
[t=0.0261915s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262159s, 427536 KB] time for successor generation creation: 0.000181748s
[t=0.0262454s, 427536 KB] Variables: 25
[t=0.0262683s, 427536 KB] FactPairs: 182
[t=0.0263002s, 427536 KB] Bytes per state: 8
[t=0.0264938s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106193s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.106246s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106272s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.1063s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.106324s, 430128 KB] pruning method: none
[t=0.124935s, 431100 KB] f = 144, 5 evaluated, 1 expanded
[t=0.125181s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.125213s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.127074s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.12711s, 431100 KB] g=5, 16 evaluated, 6 expanded
[t=0.131486s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.131518s, 431100 KB] g=8, 40 evaluated, 13 expanded
[t=0.132082s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.132113s, 431100 KB] g=9, 43 evaluated, 14 expanded
[t=0.135786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.135825s, 431100 KB] g=12, 63 evaluated, 20 expanded
[t=0.141231s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.141264s, 431100 KB] g=16, 93 evaluated, 28 expanded
[t=0.145371s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.145403s, 431100 KB] g=17, 116 evaluated, 33 expanded
[t=0.152703s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.152737s, 431100 KB] g=18, 157 evaluated, 42 expanded
[t=0.155072s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.155105s, 431100 KB] g=20, 170 evaluated, 45 expanded
[t=0.168422s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.168457s, 431232 KB] g=18, 245 evaluated, 62 expanded
[t=0.172054s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.172087s, 431232 KB] g=21, 265 evaluated, 67 expanded
[t=0.173002s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.173035s, 431232 KB] g=22, 270 evaluated, 68 expanded
[t=0.174125s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.174157s, 431232 KB] g=23, 276 evaluated, 69 expanded
[t=0.175265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.175308s, 431232 KB] g=24, 282 evaluated, 70 expanded
[t=0.176049s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.176079s, 431232 KB] g=25, 286 evaluated, 71 expanded
[t=0.185461s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.1855s, 431232 KB] g=29, 338 evaluated, 82 expanded
[t=0.189619s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.189653s, 431232 KB] g=32, 361 evaluated, 87 expanded
[t=0.190397s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.19043s, 431232 KB] g=33, 365 evaluated, 88 expanded
[t=0.191537s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.191573s, 431232 KB] g=34, 371 evaluated, 89 expanded
[t=0.19374s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.193773s, 431232 KB] g=36, 383 evaluated, 91 expanded
[t=0.194342s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.194372s, 431232 KB] g=37, 386 evaluated, 92 expanded
[t=0.196735s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.196772s, 431232 KB] g=39, 399 evaluated, 95 expanded
[t=0.215334s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.215373s, 431364 KB] g=41, 503 evaluated, 122 expanded, 2 reopened
[t=0.216295s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.216326s, 431364 KB] g=42, 508 evaluated, 123 expanded, 2 reopened
[t=0.21729s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.217325s, 431364 KB] g=43, 513 evaluated, 124 expanded, 2 reopened
[t=0.21807s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.218101s, 431364 KB] g=44, 517 evaluated, 125 expanded, 2 reopened
[t=0.218314s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.218343s, 431364 KB] g=45, 518 evaluated, 126 expanded, 2 reopened
[t=0.218552s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.218581s, 431364 KB] g=45, 519 evaluated, 126 expanded, 2 reopened
[t=0.220051s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.220092s, 431364 KB] g=47, 527 evaluated, 128 expanded, 2 reopened
[t=0.220304s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.220333s, 431364 KB] g=48, 528 evaluated, 129 expanded, 2 reopened
[t=0.220722s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.22075s, 431364 KB] g=49, 530 evaluated, 130 expanded, 2 reopened
[t=0.221135s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.221164s, 431364 KB] g=50, 532 evaluated, 131 expanded, 2 reopened
[t=0.221196s, 431364 KB] Solution found!
[t=0.221223s, 431364 KB] Actual search time: 0.114896s
stack a e (1)
unstack d b (1)
put-down d (1)
unstack k c (1)
stack k a (1)
unstack c l (1)
stack c k (1)
unstack l f (1)
stack l d (1)
unstack f j (1)
stack f l (1)
unstack c k (1)
put-down c (1)
unstack b g (1)
stack b j (1)
unstack k a (1)
stack k f (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack k f (1)
stack k e (1)
unstack f l (1)
stack f k (1)
unstack b j (1)
put-down b (1)
unstack f k (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j c (1)
unstack l d (1)
stack l b (1)
unstack j c (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.221248s, 431364 KB] Plan length: 51 step(s).
[t=0.221248s, 431364 KB] Plan cost: 51
[t=0.221248s, 431364 KB] Expanded 133 state(s).
[t=0.221248s, 431364 KB] Reopened 2 state(s).
[t=0.221248s, 431364 KB] Evaluated 533 state(s).
[t=0.221248s, 431364 KB] Evaluations: 533
[t=0.221248s, 431364 KB] Generated 681 state(s).
[t=0.221248s, 431364 KB] Dead ends: 0 state(s).
[t=0.221248s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.221248s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.221248s, 431364 KB] Evaluated until last jump: 5 state(s).
[t=0.221248s, 431364 KB] Generated until last jump: 4 state(s).
[t=0.221248s, 431364 KB] Number of registered states: 533
[t=0.221248s, 431364 KB] Int hash set load factor: 533/1024 = 0.520508
[t=0.221248s, 431364 KB] Int hash set resizes: 10
[t=0.221248s, 431364 KB] Search time: 0.194755s
[t=0.221248s, 431364 KB] Total time: 0.221248s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p54.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6496e-05s, 424928 KB] reading input...
[t=0.00217424s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260466s, 427536 KB] Building successor generator...done!
[t=0.0263258s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026349s, 427536 KB] time for successor generation creation: 0.000168293s
[t=0.0263772s, 427536 KB] Variables: 25
[t=0.0263995s, 427536 KB] FactPairs: 182
[t=0.0264223s, 427536 KB] Bytes per state: 8
[t=0.0266174s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991193s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0991699s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.099196s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0992236s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0992481s, 430128 KB] pruning method: none
[t=0.117862s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.117913s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.11938s, 431100 KB] f = 149, 12 evaluated, 3 expanded
[t=0.120517s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.12055s, 431100 KB] g=4, 18 evaluated, 5 expanded
[t=0.120947s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.120977s, 431100 KB] g=5, 20 evaluated, 6 expanded
[t=0.125668s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.125711s, 431100 KB] g=7, 46 evaluated, 13 expanded
[t=0.126994s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.127024s, 431100 KB] g=9, 53 evaluated, 15 expanded
[t=0.127952s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.127982s, 431100 KB] g=11, 58 evaluated, 17 expanded
[t=0.12892s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.128952s, 431100 KB] g=13, 63 evaluated, 19 expanded
[t=0.129162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.129192s, 431100 KB] g=13, 64 evaluated, 19 expanded
[t=0.130122s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.130153s, 431100 KB] g=14, 69 evaluated, 21 expanded
[t=0.130539s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.13058s, 431100 KB] g=14, 71 evaluated, 21 expanded
[t=0.131323s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.131352s, 431100 KB] g=15, 75 evaluated, 22 expanded
[t=0.131742s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.131772s, 431100 KB] g=16, 77 evaluated, 23 expanded
[t=0.131982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.13201s, 431100 KB] g=16, 78 evaluated, 23 expanded
[t=0.133658s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.133693s, 431100 KB] g=18, 87 evaluated, 26 expanded
[t=0.138372s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.138404s, 431100 KB] g=20, 113 evaluated, 35 expanded
[t=0.148655s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.14869s, 431100 KB] g=25, 170 evaluated, 55 expanded
[t=0.462226s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.462271s, 431496 KB] g=23, 1915 evaluated, 897 expanded, 206 reopened
[t=0.930139s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.930189s, 431804 KB] g=30, 4536 evaluated, 2049 expanded, 366 reopened
[t=0.930944s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.930975s, 431804 KB] g=31, 4540 evaluated, 2050 expanded, 366 reopened
[t=0.932803s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.932845s, 431804 KB] g=34, 4550 evaluated, 2053 expanded, 366 reopened
[t=0.938401s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.938438s, 431804 KB] g=38, 4581 evaluated, 2062 expanded, 366 reopened
[t=0.943656s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.943693s, 431804 KB] g=36, 4610 evaluated, 2071 expanded, 366 reopened
[t=0.944804s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.944837s, 431804 KB] g=38, 4616 evaluated, 2073 expanded, 366 reopened
[t=0.945044s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.945073s, 431804 KB] g=38, 4617 evaluated, 2073 expanded, 366 reopened
[t=0.949052s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.949087s, 431804 KB] g=41, 4639 evaluated, 2085 expanded, 366 reopened
[t=0.950006s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.950038s, 431804 KB] g=42, 4644 evaluated, 2086 expanded, 366 reopened
[t=0.950611s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.950641s, 431804 KB] g=44, 4647 evaluated, 2088 expanded, 366 reopened
[t=0.951037s, 431804 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.951066s, 431804 KB] g=46, 4650 evaluated, 2090 expanded, 366 reopened
[t=0.951093s, 431804 KB] Solution found!
[t=0.951119s, 431804 KB] Actual search time: 0.851867s
unstack f g (1)
stack f k (1)
unstack a d (1)
stack a f (1)
unstack g l (1)
stack g d (1)
unstack e h (1)
stack e g (1)
pick-up h (1)
stack h a (1)
unstack e g (1)
put-down e (1)
unstack g d (1)
stack g h (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j l (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up e (1)
stack e d (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.951144s, 431804 KB] Plan length: 46 step(s).
[t=0.951144s, 431804 KB] Plan cost: 46
[t=0.951144s, 431804 KB] Expanded 2091 state(s).
[t=0.951144s, 431804 KB] Reopened 366 state(s).
[t=0.951144s, 431804 KB] Evaluated 4650 state(s).
[t=0.951144s, 431804 KB] Evaluations: 4650
[t=0.951144s, 431804 KB] Generated 8906 state(s).
[t=0.951144s, 431804 KB] Dead ends: 0 state(s).
[t=0.951144s, 431804 KB] Expanded until last jump: 3 state(s).
[t=0.951144s, 431804 KB] Reopened until last jump: 0 state(s).
[t=0.951144s, 431804 KB] Evaluated until last jump: 12 state(s).
[t=0.951144s, 431804 KB] Generated until last jump: 13 state(s).
[t=0.951144s, 431804 KB] Number of registered states: 4650
[t=0.951144s, 431804 KB] Int hash set load factor: 4650/8192 = 0.567627
[t=0.951144s, 431804 KB] Int hash set resizes: 13
[t=0.951144s, 431804 KB] Search time: 0.924528s
[t=0.951144s, 431804 KB] Total time: 0.951144s
Solution found.
Peak memory: 431804 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p55.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5432e-05s, 424928 KB] reading input...
[t=0.00210517s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260117s, 427536 KB] Building successor generator...done!
[t=0.0262916s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263151s, 427536 KB] time for successor generation creation: 0.000167266s
[t=0.0263439s, 427536 KB] Variables: 25
[t=0.0263672s, 427536 KB] FactPairs: 182
[t=0.0263896s, 427536 KB] Bytes per state: 8
[t=0.0265825s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107903s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.107968s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107995s, 430128 KB] f = 122, 1 evaluated, 0 expanded
[t=0.108023s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.108048s, 430128 KB] pruning method: none
[t=0.126583s, 431100 KB] f = 140, 4 evaluated, 1 expanded
[t=0.126824s, 431100 KB] f = 144, 5 evaluated, 2 expanded
[t=0.129207s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.12924s, 431100 KB] g=5, 18 evaluated, 7 expanded
[t=0.129449s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.129479s, 431100 KB] g=5, 19 evaluated, 7 expanded
[t=0.130954s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.130987s, 431100 KB] g=7, 27 evaluated, 10 expanded
[t=0.131906s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.131937s, 431100 KB] g=8, 32 evaluated, 11 expanded
[t=0.132863s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.132893s, 431100 KB] g=10, 37 evaluated, 13 expanded
[t=0.1331s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.13313s, 431100 KB] g=10, 38 evaluated, 13 expanded
[t=0.134588s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.134618s, 431100 KB] g=12, 46 evaluated, 16 expanded
[t=0.136432s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.136465s, 431100 KB] g=12, 56 evaluated, 19 expanded
[t=0.138456s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.138487s, 431100 KB] g=16, 67 evaluated, 24 expanded
[t=0.144063s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.144097s, 431100 KB] g=23, 98 evaluated, 36 expanded
[t=0.144837s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.144867s, 431100 KB] g=24, 102 evaluated, 37 expanded
[t=0.145792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.145823s, 431100 KB] g=26, 107 evaluated, 39 expanded
[t=0.154458s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.154496s, 431100 KB] g=27, 155 evaluated, 52 expanded
[t=0.155435s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.155472s, 431100 KB] g=28, 160 evaluated, 53 expanded
[t=0.156756s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.156795s, 431100 KB] g=30, 167 evaluated, 55 expanded
[t=0.157007s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.157036s, 431100 KB] g=30, 168 evaluated, 55 expanded
[t=0.15743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.15746s, 431100 KB] g=31, 170 evaluated, 56 expanded
[t=0.164839s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.164876s, 431232 KB] g=33, 211 evaluated, 66 expanded
[t=0.166876s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.166909s, 431232 KB] g=35, 222 evaluated, 68 expanded
[t=0.173037s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.173072s, 431232 KB] g=40, 256 evaluated, 77 expanded
[t=0.174921s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.174957s, 431232 KB] g=42, 266 evaluated, 80 expanded
[t=0.17678s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.17681s, 431232 KB] g=45, 276 evaluated, 83 expanded
[t=0.178095s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.178125s, 431232 KB] g=47, 283 evaluated, 85 expanded
[t=0.180854s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.180889s, 431232 KB] g=51, 298 evaluated, 89 expanded
[t=0.204889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.204925s, 431232 KB] g=56, 432 evaluated, 128 expanded
[t=0.205132s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.205161s, 431232 KB] g=56, 433 evaluated, 128 expanded
[t=0.206619s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.206652s, 431232 KB] g=58, 441 evaluated, 130 expanded
[t=0.207951s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.207987s, 431232 KB] g=61, 448 evaluated, 133 expanded
[t=0.208378s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.208407s, 431232 KB] g=62, 450 evaluated, 134 expanded
[t=0.209153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.209183s, 431232 KB] g=64, 454 evaluated, 136 expanded
[t=0.209216s, 431232 KB] Solution found!
[t=0.209244s, 431232 KB] Actual search time: 0.101193s
put-down h (1)
unstack e b (1)
put-down e (1)
unstack b d (1)
stack b k (1)
unstack d i (1)
stack d b (1)
pick-up h (1)
stack h e (1)
unstack i c (1)
stack i h (1)
pick-up c (1)
stack c i (1)
unstack d b (1)
put-down d (1)
unstack b k (1)
stack b d (1)
unstack k a (1)
put-down k (1)
unstack a l (1)
stack a k (1)
unstack c i (1)
stack c b (1)
unstack l j (1)
put-down l (1)
unstack j f (1)
stack j l (1)
unstack i h (1)
stack i c (1)
unstack f g (1)
stack f j (1)
unstack h e (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k e (1)
unstack f j (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b c (1)
pick-up d (1)
stack d i (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.209275s, 431232 KB] Plan length: 65 step(s).
[t=0.209275s, 431232 KB] Plan cost: 65
[t=0.209275s, 431232 KB] Expanded 138 state(s).
[t=0.209275s, 431232 KB] Reopened 0 state(s).
[t=0.209275s, 431232 KB] Evaluated 455 state(s).
[t=0.209275s, 431232 KB] Evaluations: 455
[t=0.209275s, 431232 KB] Generated 596 state(s).
[t=0.209275s, 431232 KB] Dead ends: 0 state(s).
[t=0.209275s, 431232 KB] Expanded until last jump: 2 state(s).
[t=0.209275s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.209275s, 431232 KB] Evaluated until last jump: 5 state(s).
[t=0.209275s, 431232 KB] Generated until last jump: 5 state(s).
[t=0.209275s, 431232 KB] Number of registered states: 455
[t=0.209275s, 431232 KB] Int hash set load factor: 455/512 = 0.888672
[t=0.209275s, 431232 KB] Int hash set resizes: 9
[t=0.209275s, 431232 KB] Search time: 0.182693s
[t=0.209275s, 431232 KB] Total time: 0.209275s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p56.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6185e-05s, 424928 KB] reading input...
[t=0.00224529s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262339s, 427536 KB] Building successor generator...done!
[t=0.026511s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265344s, 427536 KB] time for successor generation creation: 0.000167462s
[t=0.026563s, 427536 KB] Variables: 25
[t=0.0265861s, 427536 KB] FactPairs: 182
[t=0.0266079s, 427536 KB] Bytes per state: 8
[t=0.0268026s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098723s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0987752s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988014s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0988293s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0988537s, 430128 KB] pruning method: none
[t=0.117082s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.117131s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117526s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.117556s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118303s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.118333s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.119069s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.119099s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.119311s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 123
[t=0.11934s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.120078s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.120108s, 431100 KB] g=4, 18 evaluated, 4 expanded
[t=0.120335s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.120377s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.121816s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.121847s, 431100 KB] g=6, 27 evaluated, 6 expanded
[t=0.122412s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.122442s, 431100 KB] g=7, 30 evaluated, 7 expanded
[t=0.124061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.124091s, 431100 KB] g=8, 39 evaluated, 8 expanded
[t=0.124672s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.124703s, 431100 KB] g=9, 42 evaluated, 9 expanded
[t=0.125618s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.125647s, 431100 KB] g=10, 47 evaluated, 10 expanded
[t=0.126387s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.126417s, 431100 KB] g=11, 51 evaluated, 11 expanded
[t=0.126625s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.126654s, 431100 KB] g=11, 52 evaluated, 11 expanded
[t=0.12686s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.126889s, 431100 KB] g=11, 53 evaluated, 11 expanded
[t=0.128525s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.128563s, 431100 KB] g=13, 62 evaluated, 13 expanded
[t=0.128957s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.128986s, 431100 KB] g=14, 64 evaluated, 14 expanded
[t=0.131321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.131355s, 431100 KB] g=16, 77 evaluated, 17 expanded
[t=0.13228s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.132315s, 431100 KB] g=17, 82 evaluated, 18 expanded
[t=0.133237s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.133267s, 431100 KB] g=18, 87 evaluated, 19 expanded
[t=0.133653s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.133683s, 431100 KB] g=18, 89 evaluated, 19 expanded
[t=0.134247s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.13428s, 431100 KB] g=19, 92 evaluated, 20 expanded
[t=0.136452s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.136486s, 431100 KB] g=20, 104 evaluated, 23 expanded
[t=0.136701s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.136733s, 431100 KB] g=20, 105 evaluated, 23 expanded
[t=0.14031s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.140346s, 431100 KB] g=22, 125 evaluated, 27 expanded
[t=0.15469s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.154727s, 431232 KB] g=25, 206 evaluated, 41 expanded
[t=0.155473s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.155503s, 431232 KB] g=26, 210 evaluated, 42 expanded
[t=0.15643s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.156463s, 431232 KB] g=27, 215 evaluated, 43 expanded
[t=0.156847s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.156876s, 431232 KB] g=27, 217 evaluated, 43 expanded
[t=0.15833s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.158363s, 431232 KB] g=29, 225 evaluated, 45 expanded
[t=0.165515s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.165549s, 431232 KB] g=30, 265 evaluated, 54 expanded
[t=0.166469s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.166502s, 431232 KB] g=31, 270 evaluated, 55 expanded
[t=0.168497s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.168532s, 431232 KB] g=33, 281 evaluated, 58 expanded
[t=0.168743s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.168772s, 431232 KB] g=33, 282 evaluated, 58 expanded
[t=0.170406s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.170439s, 431232 KB] g=36, 291 evaluated, 61 expanded
[t=0.171533s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.171568s, 431232 KB] g=37, 297 evaluated, 62 expanded
[t=0.171957s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.171987s, 431232 KB] g=38, 299 evaluated, 63 expanded
[t=0.172566s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.172601s, 431232 KB] g=39, 302 evaluated, 64 expanded
[t=0.173887s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.173917s, 431232 KB] g=40, 309 evaluated, 68 expanded
[t=0.174676s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.174707s, 431232 KB] g=42, 313 evaluated, 70 expanded
[t=0.1751s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.17513s, 431232 KB] g=43, 315 evaluated, 71 expanded
[t=0.175163s, 431232 KB] Solution found!
[t=0.175191s, 431232 KB] Actual search time: 0.0763329s
unstack j l (1)
put-down j (1)
unstack l a (1)
put-down l (1)
unstack a e (1)
stack a j (1)
unstack b h (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack h d (1)
stack h a (1)
unstack e g (1)
stack e i (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack e i (1)
put-down e (1)
unstack i f (1)
put-down i (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.175215s, 431232 KB] Plan length: 44 step(s).
[t=0.175215s, 431232 KB] Plan cost: 44
[t=0.175215s, 431232 KB] Expanded 73 state(s).
[t=0.175215s, 431232 KB] Reopened 0 state(s).
[t=0.175215s, 431232 KB] Evaluated 316 state(s).
[t=0.175215s, 431232 KB] Evaluations: 316
[t=0.175215s, 431232 KB] Generated 386 state(s).
[t=0.175215s, 431232 KB] Dead ends: 0 state(s).
[t=0.175215s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.175215s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.175215s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.175215s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.175215s, 431232 KB] Number of registered states: 316
[t=0.175215s, 431232 KB] Int hash set load factor: 316/512 = 0.617188
[t=0.175215s, 431232 KB] Int hash set resizes: 9
[t=0.175215s, 431232 KB] Search time: 0.148413s
[t=0.175215s, 431232 KB] Total time: 0.175215s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p57.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5826e-05s, 424928 KB] reading input...
[t=0.00217299s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257532s, 427536 KB] Building successor generator...done!
[t=0.0260316s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260551s, 427536 KB] time for successor generation creation: 0.000167125s
[t=0.0260839s, 427536 KB] Variables: 25
[t=0.0261069s, 427536 KB] FactPairs: 182
[t=0.0261288s, 427536 KB] Bytes per state: 8
[t=0.0263219s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978424s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0978932s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979199s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0979471s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0979712s, 430128 KB] pruning method: none
[t=0.109754s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.109804s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116378s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.116423s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117738s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.117768s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.12017s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.120204s, 431100 KB] g=4, 23 evaluated, 5 expanded
[t=0.120421s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.120451s, 431100 KB] g=5, 24 evaluated, 6 expanded
[t=0.124834s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.124878s, 431100 KB] g=10, 48 evaluated, 12 expanded
[t=0.126361s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.126391s, 431100 KB] g=11, 56 evaluated, 13 expanded
[t=0.12915s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.129185s, 431100 KB] g=14, 71 evaluated, 16 expanded
[t=0.130124s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.130156s, 431100 KB] g=15, 76 evaluated, 18 expanded
[t=0.136892s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.136925s, 431100 KB] g=20, 113 evaluated, 29 expanded
[t=0.137323s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.137352s, 431100 KB] g=21, 115 evaluated, 30 expanded
[t=0.145905s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.145939s, 431100 KB] g=23, 162 evaluated, 45 expanded
[t=0.150143s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.150177s, 431232 KB] g=25, 185 evaluated, 51 expanded
[t=0.153657s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.153689s, 431232 KB] g=29, 204 evaluated, 56 expanded
[t=0.154448s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.154477s, 431232 KB] g=30, 208 evaluated, 57 expanded
[t=0.168677s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.168711s, 431232 KB] g=33, 286 evaluated, 74 expanded
[t=0.168923s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.168953s, 431232 KB] g=33, 287 evaluated, 74 expanded
[t=0.170423s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.170453s, 431232 KB] g=34, 295 evaluated, 75 expanded
[t=0.170846s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.170878s, 431232 KB] g=35, 297 evaluated, 76 expanded
[t=0.17544s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.175474s, 431232 KB] g=38, 322 evaluated, 82 expanded
[t=0.180202s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.180239s, 431232 KB] g=38, 348 evaluated, 89 expanded
[t=0.181714s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.181752s, 431232 KB] g=40, 356 evaluated, 91 expanded
[t=0.219804s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.219842s, 431364 KB] g=46, 566 evaluated, 147 expanded, 2 reopened
[t=0.220063s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.220095s, 431364 KB] g=47, 567 evaluated, 148 expanded, 2 reopened
[t=0.223571s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.223605s, 431364 KB] g=50, 586 evaluated, 151 expanded, 2 reopened
[t=0.224901s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.224935s, 431364 KB] g=51, 593 evaluated, 152 expanded, 2 reopened
[t=0.225689s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.225721s, 431364 KB] g=52, 597 evaluated, 153 expanded, 2 reopened
[t=0.226835s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.226865s, 431364 KB] g=54, 603 evaluated, 155 expanded, 2 reopened
[t=0.227078s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.227108s, 431364 KB] g=54, 604 evaluated, 155 expanded, 2 reopened
[t=0.228581s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.228613s, 431364 KB] g=56, 612 evaluated, 157 expanded, 2 reopened
[t=0.230267s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.230297s, 431364 KB] g=58, 621 evaluated, 160 expanded, 2 reopened
[t=0.231062s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.231096s, 431364 KB] g=59, 625 evaluated, 161 expanded, 2 reopened
[t=0.231676s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.231705s, 431364 KB] g=60, 628 evaluated, 162 expanded, 2 reopened
[t=0.232634s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.232666s, 431364 KB] g=61, 633 evaluated, 163 expanded, 2 reopened
[t=0.233061s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.233089s, 431364 KB] g=62, 635 evaluated, 164 expanded, 2 reopened
[t=0.234385s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.234414s, 431364 KB] g=65, 642 evaluated, 167 expanded, 2 reopened
[t=0.238277s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.23831s, 431496 KB] g=69, 663 evaluated, 179 expanded, 2 reopened
[t=0.238344s, 431496 KB] Solution found!
[t=0.238376s, 431496 KB] Actual search time: 0.140402s
unstack a j (1)
stack a d (1)
pick-up b (1)
stack b j (1)
unstack g k (1)
put-down g (1)
unstack i c (1)
put-down i (1)
pick-up g (1)
stack g a (1)
unstack k f (1)
put-down k (1)
pick-up f (1)
stack f g (1)
pick-up c (1)
stack c k (1)
pick-up i (1)
stack i f (1)
unstack b j (1)
stack b c (1)
unstack j e (1)
put-down j (1)
unstack e h (1)
put-down e (1)
unstack i f (1)
stack i b (1)
unstack f g (1)
stack f j (1)
unstack g a (1)
put-down g (1)
unstack h l (1)
stack h g (1)
pick-up e (1)
stack e l (1)
unstack f j (1)
stack f e (1)
unstack a d (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack i b (1)
put-down i (1)
pick-up d (1)
stack d j (1)
unstack b c (1)
put-down b (1)
unstack c k (1)
stack c b (1)
unstack d j (1)
stack d i (1)
pick-up k (1)
stack k f (1)
pick-up j (1)
stack j d (1)
unstack e l (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.238402s, 431496 KB] Plan length: 70 step(s).
[t=0.238402s, 431496 KB] Plan cost: 70
[t=0.238402s, 431496 KB] Expanded 181 state(s).
[t=0.238402s, 431496 KB] Reopened 2 state(s).
[t=0.238402s, 431496 KB] Evaluated 664 state(s).
[t=0.238402s, 431496 KB] Evaluations: 664
[t=0.238402s, 431496 KB] Generated 867 state(s).
[t=0.238402s, 431496 KB] Dead ends: 0 state(s).
[t=0.238402s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.238402s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.238402s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.238402s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.238402s, 431496 KB] Number of registered states: 664
[t=0.238402s, 431496 KB] Int hash set load factor: 664/1024 = 0.648438
[t=0.238402s, 431496 KB] Int hash set resizes: 10
[t=0.238402s, 431496 KB] Search time: 0.212081s
[t=0.238402s, 431496 KB] Total time: 0.238402s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p58.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6202e-05s, 424928 KB] reading input...
[t=0.00216298s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0263116s, 427536 KB] Building successor generator...done!
[t=0.0265931s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266167s, 427536 KB] time for successor generation creation: 0.000169464s
[t=0.0266447s, 427536 KB] Variables: 25
[t=0.0266676s, 427536 KB] FactPairs: 182
[t=0.0266896s, 427536 KB] Bytes per state: 8
[t=0.0268854s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994707s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0995216s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995472s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0995749s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0995986s, 430128 KB] pruning method: none
[t=0.11827s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.118321s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118722s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.118753s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.119142s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.119172s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.120663s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.120696s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.122355s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.122385s, 431100 KB] g=8, 26 evaluated, 12 expanded
[t=0.185383s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.185422s, 431232 KB] g=13, 374 evaluated, 188 expanded, 47 reopened
[t=0.186184s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.186224s, 431232 KB] g=15, 378 evaluated, 190 expanded, 47 reopened
[t=0.186433s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.186461s, 431232 KB] g=15, 379 evaluated, 190 expanded, 47 reopened
[t=0.289978s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.290023s, 431496 KB] g=33, 956 evaluated, 450 expanded, 84 reopened
[t=0.290424s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.290454s, 431496 KB] g=34, 958 evaluated, 452 expanded, 84 reopened
[t=0.345104s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.345147s, 431628 KB] g=34, 1260 evaluated, 629 expanded, 140 reopened
[t=0.346436s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.346468s, 431628 KB] g=36, 1267 evaluated, 631 expanded, 140 reopened
[t=0.347403s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.347435s, 431628 KB] g=38, 1272 evaluated, 633 expanded, 140 reopened
[t=0.349451s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.349488s, 431628 KB] g=39, 1283 evaluated, 636 expanded, 140 reopened
[t=0.351126s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.35116s, 431628 KB] g=41, 1292 evaluated, 638 expanded, 140 reopened
[t=0.362848s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.362884s, 431628 KB] g=42, 1357 evaluated, 657 expanded, 140 reopened
[t=0.364915s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.364949s, 431628 KB] g=44, 1368 evaluated, 660 expanded, 140 reopened
[t=0.369652s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.369689s, 431628 KB] g=46, 1394 evaluated, 667 expanded, 140 reopened
[t=0.370438s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.370472s, 431628 KB] g=47, 1398 evaluated, 668 expanded, 140 reopened
[t=0.371045s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.371075s, 431628 KB] g=48, 1401 evaluated, 669 expanded, 140 reopened
[t=0.37255s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.372583s, 431628 KB] g=50, 1409 evaluated, 671 expanded, 140 reopened
[t=0.374058s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.374096s, 431628 KB] g=53, 1417 evaluated, 674 expanded, 140 reopened
[t=0.381146s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.381187s, 431760 KB] g=52, 1456 evaluated, 688 expanded, 140 reopened
[t=0.381935s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.381968s, 431760 KB] g=54, 1460 evaluated, 690 expanded, 140 reopened
[t=0.382536s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.382566s, 431760 KB] g=55, 1463 evaluated, 691 expanded, 140 reopened
[t=0.382779s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.382808s, 431760 KB] g=56, 1464 evaluated, 692 expanded, 140 reopened
[t=0.383017s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.383046s, 431760 KB] g=57, 1465 evaluated, 693 expanded, 140 reopened
[t=0.383434s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.383463s, 431760 KB] g=58, 1467 evaluated, 694 expanded, 140 reopened
[t=0.384602s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.384639s, 431760 KB] g=61, 1474 evaluated, 700 expanded, 140 reopened
[t=0.384667s, 431760 KB] Solution found!
[t=0.384693s, 431760 KB] Actual search time: 0.285092s
put-down a (1)
unstack k b (1)
put-down k (1)
pick-up e (1)
stack e a (1)
unstack b f (1)
put-down b (1)
pick-up k (1)
stack k f (1)
unstack e a (1)
stack e d (1)
pick-up g (1)
stack g e (1)
unstack k f (1)
stack k a (1)
unstack g e (1)
stack g f (1)
unstack k a (1)
stack k e (1)
pick-up a (1)
stack a k (1)
unstack g f (1)
stack g a (1)
unstack f j (1)
stack f b (1)
unstack j l (1)
put-down j (1)
unstack l h (1)
stack l f (1)
pick-up h (1)
stack h l (1)
unstack g a (1)
put-down g (1)
unstack h l (1)
stack h g (1)
unstack l f (1)
put-down l (1)
unstack a k (1)
stack a h (1)
unstack f b (1)
stack f a (1)
pick-up j (1)
stack j l (1)
unstack k e (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.384718s, 431760 KB] Plan length: 61 step(s).
[t=0.384718s, 431760 KB] Plan cost: 61
[t=0.384718s, 431760 KB] Expanded 701 state(s).
[t=0.384718s, 431760 KB] Reopened 140 state(s).
[t=0.384718s, 431760 KB] Evaluated 1474 state(s).
[t=0.384718s, 431760 KB] Evaluations: 1474
[t=0.384718s, 431760 KB] Generated 2699 state(s).
[t=0.384718s, 431760 KB] Dead ends: 0 state(s).
[t=0.384718s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.384718s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.384718s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.384718s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.384718s, 431760 KB] Number of registered states: 1474
[t=0.384718s, 431760 KB] Int hash set load factor: 1474/2048 = 0.719727
[t=0.384718s, 431760 KB] Int hash set resizes: 11
[t=0.384718s, 431760 KB] Search time: 0.357834s
[t=0.384718s, 431760 KB] Total time: 0.384718s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p59.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5377e-05s, 424928 KB] reading input...
[t=0.00224216s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260745s, 427536 KB] Building successor generator...done!
[t=0.0263698s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263951s, 427536 KB] time for successor generation creation: 0.000179479s
[t=0.0264281s, 427536 KB] Variables: 25
[t=0.0264575s, 427536 KB] FactPairs: 182
[t=0.0264799s, 427536 KB] Bytes per state: 8
[t=0.0266733s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985152s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.098566s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985995s, 430128 KB] f = 127, 1 evaluated, 0 expanded
[t=0.0986267s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.09865s, 430128 KB] pruning method: none
[t=0.117033s, 431100 KB] f = 136, 4 evaluated, 1 expanded
[t=0.117283s, 431100 KB] f = 146, 5 evaluated, 2 expanded
[t=0.118029s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.118059s, 431100 KB] g=4, 9 evaluated, 4 expanded
[t=0.118272s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.118301s, 431100 KB] g=5, 10 evaluated, 5 expanded
[t=0.123301s, 431100 KB] f = 148, 38 evaluated, 20 expanded
[t=0.136975s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.137008s, 431100 KB] g=12, 115 evaluated, 52 expanded
[t=0.140064s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.140097s, 431100 KB] g=15, 132 evaluated, 55 expanded
[t=0.141198s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.14123s, 431100 KB] g=16, 138 evaluated, 57 expanded
[t=0.14534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.145376s, 431100 KB] g=19, 161 evaluated, 63 expanded
[t=0.146467s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.146497s, 431100 KB] g=20, 167 evaluated, 64 expanded
[t=0.147061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.147093s, 431100 KB] g=21, 170 evaluated, 65 expanded
[t=0.152441s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.152473s, 431100 KB] g=27, 200 evaluated, 74 expanded
[t=0.154291s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.154324s, 431100 KB] g=30, 210 evaluated, 78 expanded
[t=0.155069s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.155102s, 431232 KB] g=31, 214 evaluated, 79 expanded
[t=0.160788s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.160821s, 431232 KB] g=36, 246 evaluated, 91 expanded
[t=0.161576s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.161611s, 431232 KB] g=37, 250 evaluated, 92 expanded
[t=0.16235s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.162379s, 431232 KB] g=38, 254 evaluated, 93 expanded
[t=0.163141s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.163172s, 431232 KB] g=39, 258 evaluated, 94 expanded
[t=0.166397s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.166432s, 431232 KB] g=42, 276 evaluated, 99 expanded
[t=0.167528s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.167558s, 431232 KB] g=42, 282 evaluated, 101 expanded
[t=0.167943s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.167972s, 431232 KB] g=43, 284 evaluated, 102 expanded
[t=0.170142s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.170174s, 431232 KB] g=45, 296 evaluated, 107 expanded
[t=0.171266s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.171298s, 431232 KB] g=47, 302 evaluated, 109 expanded
[t=0.17151s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.171539s, 431232 KB] g=48, 303 evaluated, 110 expanded
[t=0.172453s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.172483s, 431232 KB] g=49, 308 evaluated, 111 expanded
[t=0.178914s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.17895s, 431232 KB] g=51, 344 evaluated, 124 expanded
[t=0.18058s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.180611s, 431232 KB] g=53, 353 evaluated, 127 expanded
[t=0.180815s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.180847s, 431232 KB] g=53, 354 evaluated, 127 expanded
[t=0.18178s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.181812s, 431232 KB] g=55, 359 evaluated, 129 expanded
[t=0.182204s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.182233s, 431232 KB] g=57, 361 evaluated, 131 expanded
[t=0.182441s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.182469s, 431232 KB] g=57, 362 evaluated, 131 expanded
[t=0.182856s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.182886s, 431232 KB] g=58, 364 evaluated, 132 expanded
[t=0.183453s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.183485s, 431232 KB] g=60, 367 evaluated, 134 expanded
[t=0.183522s, 431232 KB] Solution found!
[t=0.183548s, 431232 KB] Actual search time: 0.0848944s
stack a f (1)
unstack l j (1)
put-down l (1)
unstack a f (1)
put-down a (1)
unstack j h (1)
stack j a (1)
unstack f k (1)
stack f j (1)
unstack k g (1)
put-down k (1)
unstack g e (1)
put-down g (1)
pick-up h (1)
stack h k (1)
unstack e b (1)
stack e l (1)
pick-up g (1)
stack g b (1)
unstack h k (1)
stack h g (1)
unstack f j (1)
stack f k (1)
unstack j a (1)
stack j f (1)
pick-up a (1)
stack a j (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
put-down g (1)
unstack e l (1)
stack e b (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack j f (1)
stack j l (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.183573s, 431232 KB] Plan length: 61 step(s).
[t=0.183573s, 431232 KB] Plan cost: 61
[t=0.183573s, 431232 KB] Expanded 136 state(s).
[t=0.183573s, 431232 KB] Reopened 0 state(s).
[t=0.183573s, 431232 KB] Evaluated 368 state(s).
[t=0.183573s, 431232 KB] Evaluations: 368
[t=0.183573s, 431232 KB] Generated 512 state(s).
[t=0.183573s, 431232 KB] Dead ends: 0 state(s).
[t=0.183573s, 431232 KB] Expanded until last jump: 20 state(s).
[t=0.183573s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.183573s, 431232 KB] Evaluated until last jump: 38 state(s).
[t=0.183573s, 431232 KB] Generated until last jump: 56 state(s).
[t=0.183573s, 431232 KB] Number of registered states: 368
[t=0.183573s, 431232 KB] Int hash set load factor: 368/512 = 0.71875
[t=0.183573s, 431232 KB] Int hash set resizes: 9
[t=0.183573s, 431232 KB] Search time: 0.1569s
[t=0.183573s, 431232 KB] Total time: 0.183573s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p60.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.020s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8512e-05s, 424928 KB] reading input...
[t=0.00221654s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262538s, 427536 KB] Building successor generator...done!
[t=0.0265338s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265585s, 427536 KB] time for successor generation creation: 0.000166995s
[t=0.0265879s, 427536 KB] Variables: 25
[t=0.026611s, 427536 KB] FactPairs: 182
[t=0.0266339s, 427536 KB] Bytes per state: 8
[t=0.0268299s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994865s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0995393s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995657s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0995938s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0996181s, 430128 KB] pruning method: none
[t=0.111505s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.111556s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118738s, 431100 KB] f = 145, 7 evaluated, 2 expanded
[t=0.119315s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.119346s, 431100 KB] g=2, 10 evaluated, 3 expanded
[t=0.119556s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.119586s, 431100 KB] g=3, 11 evaluated, 4 expanded
[t=0.119792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.119821s, 431100 KB] g=3, 12 evaluated, 4 expanded
[t=0.135139s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.135174s, 431100 KB] g=7, 98 evaluated, 37 expanded, 7 reopened
[t=0.149567s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.149601s, 431100 KB] g=9, 179 evaluated, 63 expanded, 7 reopened
[t=0.162766s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.162813s, 431232 KB] g=20, 253 evaluated, 83 expanded, 7 reopened
[t=0.214464s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.214503s, 431364 KB] g=25, 543 evaluated, 199 expanded, 27 reopened
[t=0.24131s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.241348s, 431364 KB] g=23, 694 evaluated, 250 expanded, 27 reopened
[t=0.260622s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.260659s, 431496 KB] g=25, 803 evaluated, 277 expanded, 27 reopened
[t=0.26194s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.261978s, 431496 KB] g=27, 810 evaluated, 279 expanded, 27 reopened
[t=0.262893s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.262925s, 431496 KB] g=28, 815 evaluated, 280 expanded, 27 reopened
[t=0.264187s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.264218s, 431496 KB] g=29, 822 evaluated, 281 expanded, 27 reopened
[t=0.264954s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.264983s, 431496 KB] g=30, 826 evaluated, 282 expanded, 27 reopened
[t=0.266259s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.266292s, 431496 KB] g=31, 833 evaluated, 284 expanded, 27 reopened
[t=0.267379s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.267412s, 431496 KB] g=32, 839 evaluated, 285 expanded, 27 reopened
[t=0.269039s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.26907s, 431496 KB] g=33, 848 evaluated, 287 expanded, 27 reopened
[t=0.269802s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.269848s, 431496 KB] g=33, 852 evaluated, 287 expanded, 27 reopened
[t=0.270938s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.270971s, 431496 KB] g=34, 858 evaluated, 288 expanded, 27 reopened
[t=0.273475s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.273508s, 431496 KB] g=37, 872 evaluated, 291 expanded, 27 reopened
[t=0.274091s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.274123s, 431496 KB] g=38, 875 evaluated, 292 expanded, 27 reopened
[t=0.279956s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.279996s, 431496 KB] g=41, 908 evaluated, 298 expanded, 27 reopened
[t=0.280381s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.280411s, 431496 KB] g=41, 910 evaluated, 298 expanded, 27 reopened
[t=0.281667s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.2817s, 431496 KB] g=42, 917 evaluated, 299 expanded, 27 reopened
[t=0.282976s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.283009s, 431496 KB] g=43, 924 evaluated, 301 expanded, 27 reopened
[t=0.283746s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.283779s, 431496 KB] g=44, 928 evaluated, 302 expanded, 27 reopened
[t=0.284686s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.284716s, 431496 KB] g=45, 933 evaluated, 303 expanded, 27 reopened
[t=0.285815s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.285854s, 431496 KB] g=46, 939 evaluated, 305 expanded, 27 reopened
[t=0.286941s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.286972s, 431496 KB] g=47, 945 evaluated, 306 expanded, 27 reopened
[t=0.288764s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.288798s, 431496 KB] g=50, 955 evaluated, 309 expanded, 27 reopened
[t=0.289006s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.289035s, 431496 KB] g=50, 956 evaluated, 309 expanded, 27 reopened
[t=0.290492s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.290528s, 431496 KB] g=52, 964 evaluated, 311 expanded, 27 reopened
[t=0.290741s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.29077s, 431496 KB] g=53, 965 evaluated, 312 expanded, 27 reopened
[t=0.29159s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.29162s, 431496 KB] g=56, 970 evaluated, 315 expanded, 27 reopened
[t=0.291648s, 431496 KB] Solution found!
[t=0.291675s, 431496 KB] Actual search time: 0.192054s
unstack i d (1)
put-down i (1)
unstack h c (1)
put-down h (1)
unstack d b (1)
put-down d (1)
unstack c g (1)
put-down c (1)
pick-up g (1)
stack g h (1)
pick-up d (1)
stack d c (1)
pick-up b (1)
stack b g (1)
unstack d c (1)
put-down d (1)
unstack l f (1)
stack l d (1)
unstack f a (1)
stack f l (1)
unstack b g (1)
stack b c (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a j (1)
stack a f (1)
unstack j k (1)
put-down j (1)
unstack b c (1)
put-down b (1)
pick-up j (1)
stack j i (1)
unstack a f (1)
stack a h (1)
unstack f l (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.291701s, 431496 KB] Plan length: 56 step(s).
[t=0.291701s, 431496 KB] Plan cost: 56
[t=0.291701s, 431496 KB] Expanded 316 state(s).
[t=0.291701s, 431496 KB] Reopened 27 state(s).
[t=0.291701s, 431496 KB] Evaluated 970 state(s).
[t=0.291701s, 431496 KB] Evaluations: 970
[t=0.291701s, 431496 KB] Generated 1434 state(s).
[t=0.291701s, 431496 KB] Dead ends: 0 state(s).
[t=0.291701s, 431496 KB] Expanded until last jump: 2 state(s).
[t=0.291701s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.291701s, 431496 KB] Evaluated until last jump: 7 state(s).
[t=0.291701s, 431496 KB] Generated until last jump: 7 state(s).
[t=0.291701s, 431496 KB] Number of registered states: 970
[t=0.291701s, 431496 KB] Int hash set load factor: 970/2048 = 0.473633
[t=0.291701s, 431496 KB] Int hash set resizes: 11
[t=0.291701s, 431496 KB] Search time: 0.264871s
[t=0.291701s, 431496 KB] Total time: 0.291701s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.022626
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 2 test success: 20 of 20 (100.0%)

---------- FOLD 4/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 67 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.5267243981361389 (0.20285958051681519 vs. 0.7295839786529541), which occurred at index 49.
  _module_class,
 | avg_train_loss=0.098527 | avg_val_loss=0.091132
Epoch 2 | avg_train_loss=0.068439 | avg_val_loss=0.044714
Epoch 3 | avg_train_loss=0.040337 | avg_val_loss=0.038611
Epoch 4 | avg_train_loss=0.036976 | avg_val_loss=0.037192
Epoch 5 | avg_train_loss=0.035773 | avg_val_loss=0.035880
Epoch 6 | avg_train_loss=0.034541 | avg_val_loss=0.035368
Epoch 7 | avg_train_loss=0.033891 | avg_val_loss=0.034451
Epoch 8 | avg_train_loss=0.033357 | avg_val_loss=0.034507
Epoch 9 | avg_train_loss=0.032784 | avg_val_loss=0.033579
Epoch 10 | avg_train_loss=0.032221 | avg_val_loss=0.033388
Epoch 11 | avg_train_loss=0.031741 | avg_val_loss=0.032362
Epoch 12 | avg_train_loss=0.031223 | avg_val_loss=0.032341
Epoch 13 | avg_train_loss=0.030814 | avg_val_loss=0.031659
Epoch 14 | avg_train_loss=0.030530 | avg_val_loss=0.031078
Epoch 15 | avg_train_loss=0.030115 | avg_val_loss=0.030921
Epoch 16 | avg_train_loss=0.029853 | avg_val_loss=0.030434
Epoch 17 | avg_train_loss=0.029509 | avg_val_loss=0.029854
Epoch 18 | avg_train_loss=0.029130 | avg_val_loss=0.030091
Epoch 19 | avg_train_loss=0.028847 | avg_val_loss=0.029671
Epoch 20 | avg_train_loss=0.028549 | avg_val_loss=0.028781
Epoch 21 | avg_train_loss=0.028108 | avg_val_loss=0.028831
Epoch 22 | avg_train_loss=0.027890 | avg_val_loss=0.028651
Epoch 23 | avg_train_loss=0.027460 | avg_val_loss=0.028472
Epoch 24 | avg_train_loss=0.027239 | avg_val_loss=0.027955
Epoch 25 | avg_train_loss=0.027002 | avg_val_loss=0.027465
Epoch 26 | avg_train_loss=0.026719 | avg_val_loss=0.027167
Epoch 27 | avg_train_loss=0.026443 | avg_val_loss=0.026897
Epoch 28 | avg_train_loss=0.026208 | avg_val_loss=0.026948
Epoch 29 | avg_train_loss=0.025918 | avg_val_loss=0.026911
Epoch 30 | avg_train_loss=0.025626 | avg_val_loss=0.026469
Epoch 31 | avg_train_loss=0.025358 | avg_val_loss=0.026257
Epoch 32 | avg_train_loss=0.025177 | avg_val_loss=0.025996
Epoch 33 | avg_train_loss=0.024797 | avg_val_loss=0.025471
Epoch 34 | avg_train_loss=0.024651 | avg_val_loss=0.026138
Epoch 35 | avg_train_loss=0.024465 | avg_val_loss=0.025218
Epoch 36 | avg_train_loss=0.024201 | avg_val_loss=0.025367
Epoch 37 | avg_train_loss=0.024104 | avg_val_loss=0.025060
Epoch 38 | avg_train_loss=0.023862 | avg_val_loss=0.025048
Epoch 39 | avg_train_loss=0.023522 | avg_val_loss=0.025005
Epoch 40 | avg_train_loss=0.023417 | avg_val_loss=0.024649
Epoch 41 | avg_train_loss=0.023265 | avg_val_loss=0.025003
Epoch 42 | avg_train_loss=0.023018 | avg_val_loss=0.024660
Epoch 43 | avg_train_loss=0.022970 | avg_val_loss=0.024839
Epoch 44 | avg_train_loss=0.022676 | avg_val_loss=0.024372
Epoch 45 | avg_train_loss=0.022728 | avg_val_loss=0.024385
Epoch 46 | avg_train_loss=0.022615 | avg_val_loss=0.023897
Epoch 47 | avg_train_loss=0.022378 | avg_val_loss=0.023967
Epoch 48 | avg_train_loss=0.022242 | avg_val_loss=0.023644
Epoch 49 | avg_train_loss=0.022082 | avg_val_loss=0.023459
Epoch 50 | avg_train_loss=0.022057 | avg_val_loss=0.023567
Epoch 51 | avg_train_loss=0.021763 | avg_val_loss=0.023643
Epoch 52 | avg_train_loss=0.021623 | avg_val_loss=0.023694
Epoch 53 | avg_train_loss=0.021617 | avg_val_loss=0.023214
Epoch 54 | avg_train_loss=0.021385 | avg_val_loss=0.024091
Epoch 55 | avg_train_loss=0.021284 | avg_val_loss=0.023591
Epoch 56 | avg_train_loss=0.021228 | avg_val_loss=0.023154
Epoch 57 | avg_train_loss=0.021077 | avg_val_loss=0.023244
Epoch 58 | avg_train_loss=0.020969 | avg_val_loss=0.023271
Epoch 59 | avg_train_loss=0.020880 | avg_val_loss=0.023689
Epoch 60 | avg_train_loss=0.020858 | avg_val_loss=0.023053
Epoch 61 | avg_train_loss=0.020455 | avg_val_loss=0.023133
Epoch 62 | avg_train_loss=0.020536 | avg_val_loss=0.023497
Epoch 63 | avg_train_loss=0.020294 | avg_val_loss=0.023287
Epoch 64 | avg_train_loss=0.020284 | avg_val_loss=0.022912
Epoch 65 | avg_train_loss=0.020078 | avg_val_loss=0.023001
Epoch 66 | avg_train_loss=0.019980 | avg_val_loss=0.022539
Epoch 67 | avg_train_loss=0.019981 | avg_val_loss=0.022854
Epoch 68 | avg_train_loss=0.019842 | avg_val_loss=0.022690
Epoch 69 | avg_train_loss=0.019709 | avg_val_loss=0.022968
Epoch 70 | avg_train_loss=0.019499 | avg_val_loss=0.022671
Epoch 71 | avg_train_loss=0.019522 | avg_val_loss=0.022975
Epoch 72 | avg_train_loss=0.019320 | avg_val_loss=0.022967
Epoch 73 | avg_train_loss=0.018993 | avg_val_loss=0.022742
Epoch 74 | avg_train_loss=0.019142 | avg_val_loss=0.022757
Epoch 75 | avg_train_loss=0.019060 | avg_val_loss=0.022476
Epoch 76 | avg_train_loss=0.018930 | avg_val_loss=0.022260
Epoch 77 | avg_train_loss=0.018852 | avg_val_loss=0.022014
Epoch 78 | avg_train_loss=0.018757 | avg_val_loss=0.022318
Epoch 79 | avg_train_loss=0.018639 | avg_val_loss=0.021950
Epoch 80 | avg_train_loss=0.018581 | avg_val_loss=0.022183
Epoch 81 | avg_train_loss=0.018213 | avg_val_loss=0.022639
Epoch 82 | avg_train_loss=0.018198 | avg_val_loss=0.022296
Epoch 83 | avg_train_loss=0.018274 | avg_val_loss=0.021968
Epoch 84 | avg_train_loss=0.018049 | avg_val_loss=0.022165
Epoch 85 | avg_train_loss=0.017976 | avg_val_loss=0.022091
Epoch 86 | avg_train_loss=0.018048 | avg_val_loss=0.022812
Epoch 87 | avg_train_loss=0.017751 | avg_val_loss=0.022750
Epoch 88 | avg_train_loss=0.017493 | avg_val_loss=0.022416
Epoch 89 | avg_train_loss=0.017485 | avg_val_loss=0.021865
Epoch 90 | avg_train_loss=0.017341 | avg_val_loss=0.022344
Epoch 91 | avg_train_loss=0.017366 | avg_val_loss=0.023081
Epoch 92 | avg_train_loss=0.017272 | avg_val_loss=0.022498
Epoch 93 | avg_train_loss=0.017251 | avg_val_loss=0.022789
Epoch 94 | avg_train_loss=0.017101 | avg_val_loss=0.022544
Epoch 95 | avg_train_loss=0.016993 | avg_val_loss=0.022655
Epoch 96 | avg_train_loss=0.016778 | avg_val_loss=0.022951
Epoch 97 | avg_train_loss=0.016752 | avg_val_loss=0.022380
Epoch 98 | avg_train_loss=0.016722 | avg_val_loss=0.022702
Epoch 99 | avg_train_loss=0.016620 | avg_val_loss=0.022732
Epoch 100 | avg_train_loss=0.016447 | avg_val_loss=0.022207
Epoch 101 | avg_train_loss=0.016519 | avg_val_loss=0.022636
Epoch 102 | avg_train_loss=0.016342INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p61.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.4772e-05s, 424928 KB] reading input...
[t=0.00216034s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258316s, 427536 KB] Building successor generator...done!
[t=0.0261259s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261494s, 427536 KB] time for successor generation creation: 0.000172666s
[t=0.026178s, 427536 KB] Variables: 25
[t=0.0262011s, 427536 KB] FactPairs: 182
[t=0.026223s, 427536 KB] Bytes per state: 8
[t=0.0264215s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106308s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.106361s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106387s, 430128 KB] f = 125, 1 evaluated, 0 expanded
[t=0.106424s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.106448s, 430128 KB] pruning method: none
[t=0.124858s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.124908s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.125673s, 431100 KB] f = 146, 7 evaluated, 3 expanded
[t=0.126252s, 431100 KB] f = 149, 10 evaluated, 5 expanded
[t=0.126469s, 431100 KB] f = 150, 11 evaluated, 6 expanded
[t=0.127404s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.127437s, 431100 KB] g=7, 16 evaluated, 8 expanded
[t=0.128006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.128036s, 431100 KB] g=8, 19 evaluated, 9 expanded
[t=0.128962s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.128992s, 431100 KB] g=10, 24 evaluated, 11 expanded
[t=0.130815s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.130846s, 431100 KB] g=11, 34 evaluated, 14 expanded
[t=0.14056s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.140597s, 431100 KB] g=16, 88 evaluated, 34 expanded
[t=0.142595s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.142628s, 431100 KB] g=19, 99 evaluated, 38 expanded
[t=0.14303s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.143061s, 431100 KB] g=19, 101 evaluated, 38 expanded
[t=0.144167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.144199s, 431100 KB] g=20, 107 evaluated, 40 expanded
[t=0.144588s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.144618s, 431100 KB] g=21, 109 evaluated, 41 expanded
[t=0.146071s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.146104s, 431100 KB] g=23, 117 evaluated, 43 expanded
[t=0.151524s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.15156s, 431100 KB] g=27, 147 evaluated, 52 expanded
[t=0.152307s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.152337s, 431100 KB] g=28, 151 evaluated, 53 expanded
[t=0.152723s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.152751s, 431100 KB] g=28, 153 evaluated, 53 expanded
[t=0.156382s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.156422s, 431232 KB] g=30, 173 evaluated, 59 expanded
[t=0.158075s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.158105s, 431232 KB] g=32, 182 evaluated, 62 expanded
[t=0.158868s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.158902s, 431232 KB] g=33, 186 evaluated, 63 expanded
[t=0.162882s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.162917s, 431232 KB] g=36, 208 evaluated, 69 expanded
[t=0.166171s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.166201s, 431232 KB] g=39, 226 evaluated, 75 expanded
[t=0.167494s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.167528s, 431232 KB] g=41, 233 evaluated, 77 expanded
[t=0.168816s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.168845s, 431232 KB] g=42, 240 evaluated, 80 expanded
[t=0.169781s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.16981s, 431232 KB] g=45, 245 evaluated, 83 expanded
[t=0.170205s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.170234s, 431232 KB] g=46, 247 evaluated, 84 expanded
[t=0.171367s, 431232 KB] Solution found!
[t=0.171402s, 431232 KB] Actual search time: 0.0649521s
stack i c (1)
unstack b g (1)
stack b i (1)
unstack g k (1)
put-down g (1)
unstack b i (1)
put-down b (1)
unstack k e (1)
stack k i (1)
unstack e d (1)
stack e k (1)
unstack d a (1)
stack d e (1)
unstack a f (1)
stack a b (1)
unstack f h (1)
stack f a (1)
unstack h l (1)
stack h g (1)
unstack f a (1)
stack f d (1)
unstack a b (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack d e (1)
stack d b (1)
unstack e k (1)
stack e d (1)
unstack k i (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.171428s, 431232 KB] Plan length: 49 step(s).
[t=0.171428s, 431232 KB] Plan cost: 49
[t=0.171428s, 431232 KB] Expanded 90 state(s).
[t=0.171428s, 431232 KB] Reopened 0 state(s).
[t=0.171428s, 431232 KB] Evaluated 254 state(s).
[t=0.171428s, 431232 KB] Evaluations: 254
[t=0.171428s, 431232 KB] Generated 344 state(s).
[t=0.171428s, 431232 KB] Dead ends: 0 state(s).
[t=0.171428s, 431232 KB] Expanded until last jump: 6 state(s).
[t=0.171428s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.171428s, 431232 KB] Evaluated until last jump: 11 state(s).
[t=0.171428s, 431232 KB] Generated until last jump: 15 state(s).
[t=0.171428s, 431232 KB] Number of registered states: 254
[t=0.171428s, 431232 KB] Int hash set load factor: 254/256 = 0.992188
[t=0.171428s, 431232 KB] Int hash set resizes: 8
[t=0.171428s, 431232 KB] Search time: 0.145008s
[t=0.171428s, 431232 KB] Total time: 0.171428s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p62.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5708e-05s, 424928 KB] reading input...
[t=0.00216666s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258619s, 427536 KB] Building successor generator...done!
[t=0.0261414s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261647s, 427536 KB] time for successor generation creation: 0.000168439s
[t=0.0261927s, 427536 KB] Variables: 25
[t=0.0262152s, 427536 KB] FactPairs: 182
[t=0.0262371s, 427536 KB] Bytes per state: 8
[t=0.0264325s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098197s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.0982488s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982843s, 430128 KB] f = 100, 1 evaluated, 0 expanded
[t=0.0983123s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.0983364s, 430128 KB] pruning method: none
[t=0.117172s, 431100 KB] f = 121, 6 evaluated, 1 expanded
[t=0.117772s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.117803s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.118014s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.118042s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.119162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.119192s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.127157s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.127194s, 431100 KB] g=6, 60 evaluated, 14 expanded
[t=0.140024s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.140061s, 431100 KB] g=17, 131 evaluated, 30 expanded
[t=0.141892s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.141925s, 431100 KB] g=19, 141 evaluated, 32 expanded
[t=0.15184s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.151874s, 431232 KB] g=22, 196 evaluated, 45 expanded
[t=0.39568s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.395728s, 431628 KB] g=35, 1550 evaluated, 365 expanded, 3 reopened
[t=0.402273s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.402311s, 431628 KB] g=38, 1586 evaluated, 372 expanded, 3 reopened
[t=0.405804s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.405844s, 431628 KB] g=42, 1605 evaluated, 376 expanded, 3 reopened
[t=0.407493s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.407526s, 431628 KB] g=43, 1614 evaluated, 378 expanded, 3 reopened
[t=0.409733s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.409765s, 431628 KB] g=44, 1626 evaluated, 381 expanded, 3 reopened
[t=0.41034s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.410375s, 431760 KB] g=45, 1629 evaluated, 382 expanded, 3 reopened
[t=0.413505s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.413538s, 431760 KB] g=49, 1646 evaluated, 386 expanded, 3 reopened
[t=0.413749s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.413784s, 431760 KB] g=49, 1647 evaluated, 386 expanded, 3 reopened
[t=0.414364s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.414394s, 431760 KB] g=50, 1650 evaluated, 387 expanded, 3 reopened
[t=0.415149s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.415182s, 431760 KB] g=51, 1654 evaluated, 388 expanded, 3 reopened
[t=0.416119s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.416152s, 431760 KB] g=52, 1659 evaluated, 389 expanded, 3 reopened
[t=0.431022s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.431061s, 431760 KB] g=56, 1741 evaluated, 413 expanded, 3 reopened
[t=0.432742s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.432776s, 431760 KB] g=58, 1750 evaluated, 415 expanded, 3 reopened
[t=0.433177s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.433209s, 431760 KB] g=59, 1752 evaluated, 416 expanded, 3 reopened
[t=0.43415s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.434179s, 431760 KB] g=61, 1757 evaluated, 418 expanded, 3 reopened
[t=0.434935s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.434964s, 431760 KB] g=63, 1761 evaluated, 420 expanded, 3 reopened
[t=0.43536s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.435391s, 431760 KB] g=64, 1763 evaluated, 421 expanded, 3 reopened
[t=0.435421s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.435444s, 431760 KB] g=65, 1764 evaluated, 422 expanded, 3 reopened
[t=0.43547s, 431760 KB] Solution found!
[t=0.435496s, 431760 KB] Actual search time: 0.337155s
put-down i (1)
unstack l g (1)
stack l i (1)
unstack c k (1)
stack c l (1)
unstack k h (1)
stack k c (1)
unstack a e (1)
put-down a (1)
unstack k c (1)
put-down k (1)
unstack e j (1)
put-down e (1)
pick-up h (1)
stack h g (1)
pick-up f (1)
stack f j (1)
unstack c l (1)
stack c k (1)
unstack l i (1)
put-down l (1)
unstack h g (1)
stack h a (1)
pick-up e (1)
stack e l (1)
unstack c k (1)
put-down c (1)
unstack g b (1)
put-down g (1)
pick-up c (1)
stack c b (1)
unstack f j (1)
stack f e (1)
pick-up k (1)
stack k c (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e l (1)
stack e j (1)
unstack k c (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b l (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.43552s, 431760 KB] Plan length: 65 step(s).
[t=0.43552s, 431760 KB] Plan cost: 65
[t=0.43552s, 431760 KB] Expanded 423 state(s).
[t=0.43552s, 431760 KB] Reopened 3 state(s).
[t=0.43552s, 431760 KB] Evaluated 1764 state(s).
[t=0.43552s, 431760 KB] Evaluations: 1764
[t=0.43552s, 431760 KB] Generated 2258 state(s).
[t=0.43552s, 431760 KB] Dead ends: 0 state(s).
[t=0.43552s, 431760 KB] Expanded until last jump: 1 state(s).
[t=0.43552s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.43552s, 431760 KB] Evaluated until last jump: 6 state(s).
[t=0.43552s, 431760 KB] Generated until last jump: 5 state(s).
[t=0.43552s, 431760 KB] Number of registered states: 1764
[t=0.43552s, 431760 KB] Int hash set load factor: 1764/2048 = 0.861328
[t=0.43552s, 431760 KB] Int hash set resizes: 11
[t=0.43552s, 431760 KB] Search time: 0.409088s
[t=0.43552s, 431760 KB] Total time: 0.43552s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p63.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6352e-05s, 424928 KB] reading input...
[t=0.00217451s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259513s, 427536 KB] Building successor generator...done!
[t=0.0262294s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262523s, 427536 KB] time for successor generation creation: 0.000165701s
[t=0.0262804s, 427536 KB] Variables: 25
[t=0.0263029s, 427536 KB] FactPairs: 182
[t=0.0263248s, 427536 KB] Bytes per state: 8
[t=0.026517s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981986s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0982507s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982764s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.098304s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.098328s, 430128 KB] pruning method: none
[t=0.110061s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.110114s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.1167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.116744s, 431100 KB] g=2, 4 evaluated, 2 expanded
[t=0.117507s, 431100 KB] f = 143, 8 evaluated, 4 expanded
[t=0.118973s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.119003s, 431100 KB] g=7, 16 evaluated, 8 expanded
[t=0.120279s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.120309s, 431100 KB] g=9, 23 evaluated, 11 expanded
[t=0.121596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.121629s, 431100 KB] g=12, 30 evaluated, 16 expanded
[t=0.123451s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.123482s, 431100 KB] g=10, 40 evaluated, 21 expanded
[t=0.124226s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.124256s, 431100 KB] g=12, 44 evaluated, 23 expanded
[t=0.143554s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.143593s, 431100 KB] g=26, 152 evaluated, 64 expanded
[t=0.1718s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.171837s, 431232 KB] g=29, 310 evaluated, 115 expanded
[t=0.172052s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.172081s, 431232 KB] g=30, 311 evaluated, 116 expanded
[t=0.172467s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.1725s, 431232 KB] g=30, 313 evaluated, 116 expanded
[t=0.176834s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.17687s, 431232 KB] g=33, 337 evaluated, 123 expanded
[t=0.180284s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.180316s, 431232 KB] g=35, 356 evaluated, 127 expanded
[t=0.181236s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.181283s, 431232 KB] g=36, 361 evaluated, 128 expanded
[t=0.184352s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.184386s, 431232 KB] g=38, 378 evaluated, 131 expanded
[t=0.184772s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.184802s, 431232 KB] g=38, 380 evaluated, 131 expanded
[t=0.185734s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.185766s, 431232 KB] g=39, 385 evaluated, 132 expanded
[t=0.190797s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.19083s, 431232 KB] g=41, 413 evaluated, 138 expanded
[t=0.191041s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.191069s, 431232 KB] g=41, 414 evaluated, 138 expanded
[t=0.193065s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.193098s, 431232 KB] g=43, 425 evaluated, 141 expanded
[t=0.19421s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.194244s, 431232 KB] g=44, 431 evaluated, 142 expanded
[t=0.194813s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.194843s, 431232 KB] g=45, 434 evaluated, 143 expanded
[t=0.195235s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.195265s, 431232 KB] g=46, 436 evaluated, 144 expanded
[t=0.196363s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.196397s, 431232 KB] g=47, 442 evaluated, 145 expanded
[t=0.196786s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.196816s, 431232 KB] g=48, 444 evaluated, 146 expanded
[t=0.197395s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.197431s, 431364 KB] g=49, 447 evaluated, 147 expanded
[t=0.201397s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.201433s, 431364 KB] g=52, 469 evaluated, 153 expanded
[t=0.202547s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.202578s, 431364 KB] g=54, 475 evaluated, 155 expanded
[t=0.203151s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.20318s, 431364 KB] g=55, 478 evaluated, 156 expanded
[t=0.207885s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.207918s, 431364 KB] g=55, 504 evaluated, 165 expanded
[t=0.208313s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.208343s, 431364 KB] g=56, 506 evaluated, 166 expanded
[t=0.209096s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.209126s, 431364 KB] g=57, 510 evaluated, 167 expanded
[t=0.210116s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.210151s, 431364 KB] g=60, 515 evaluated, 170 expanded
[t=0.210365s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.210394s, 431364 KB] g=61, 516 evaluated, 171 expanded
[t=0.210961s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.210991s, 431364 KB] g=62, 519 evaluated, 172 expanded
[t=0.213175s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.213206s, 431364 KB] g=61, 531 evaluated, 179 expanded
[t=0.21343s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.213461s, 431364 KB] g=62, 532 evaluated, 180 expanded
[t=0.213852s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.213882s, 431364 KB] g=63, 534 evaluated, 181 expanded
[t=0.214999s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.215029s, 431364 KB] g=65, 540 evaluated, 186 expanded
[t=0.215062s, 431364 KB] Solution found!
[t=0.215089s, 431364 KB] Actual search time: 0.116757s
unstack g c (1)
stack g l (1)
unstack c i (1)
put-down c (1)
unstack g l (1)
put-down g (1)
pick-up i (1)
stack i c (1)
unstack l f (1)
stack l i (1)
unstack f d (1)
put-down f (1)
pick-up g (1)
stack g l (1)
unstack d j (1)
put-down d (1)
unstack j k (1)
stack j g (1)
unstack k b (1)
stack k f (1)
unstack j g (1)
stack j d (1)
unstack b e (1)
stack b j (1)
unstack e h (1)
stack e k (1)
unstack g l (1)
stack g h (1)
unstack l i (1)
put-down l (1)
unstack b j (1)
stack b l (1)
unstack g h (1)
put-down g (1)
unstack e k (1)
stack e b (1)
unstack k f (1)
stack k i (1)
pick-up f (1)
stack f k (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.215114s, 431364 KB] Plan length: 66 step(s).
[t=0.215114s, 431364 KB] Plan cost: 66
[t=0.215114s, 431364 KB] Expanded 188 state(s).
[t=0.215114s, 431364 KB] Reopened 0 state(s).
[t=0.215114s, 431364 KB] Evaluated 541 state(s).
[t=0.215114s, 431364 KB] Evaluations: 541
[t=0.215114s, 431364 KB] Generated 733 state(s).
[t=0.215114s, 431364 KB] Dead ends: 0 state(s).
[t=0.215114s, 431364 KB] Expanded until last jump: 4 state(s).
[t=0.215114s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.215114s, 431364 KB] Evaluated until last jump: 8 state(s).
[t=0.215114s, 431364 KB] Generated until last jump: 10 state(s).
[t=0.215114s, 431364 KB] Number of registered states: 541
[t=0.215114s, 431364 KB] Int hash set load factor: 541/1024 = 0.52832
[t=0.215114s, 431364 KB] Int hash set resizes: 10
[t=0.215114s, 431364 KB] Search time: 0.188598s
[t=0.215114s, 431364 KB] Total time: 0.215114s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p64.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6028e-05s, 424928 KB] reading input...
[t=0.00213632s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258634s, 427536 KB] Building successor generator...done!
[t=0.026143s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261666s, 427536 KB] time for successor generation creation: 0.00016683s
[t=0.0261954s, 427536 KB] Variables: 25
[t=0.0262182s, 427536 KB] FactPairs: 182
[t=0.02624s, 427536 KB] Bytes per state: 8
[t=0.0264347s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980732s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.0981245s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981508s, 430128 KB] f = 61, 1 evaluated, 0 expanded
[t=0.0981782s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.0982025s, 430128 KB] pruning method: none
[t=0.109997s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.110048s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117716s, 431100 KB] f = 70, 10 evaluated, 2 expanded
[t=0.126488s, 431100 KB] f = 71, 59 evaluated, 15 expanded
[t=0.128141s, 431100 KB] f = 72, 68 evaluated, 18 expanded
[t=0.130688s, 431100 KB] f = 73, 82 evaluated, 22 expanded
[t=0.133393s, 431100 KB] f = 74, 97 evaluated, 26 expanded
[t=0.135392s, 431100 KB] f = 75, 108 evaluated, 29 expanded
[t=0.160127s, 431232 KB] f = 76, 246 evaluated, 77 expanded, 4 reopened
[t=0.161633s, 431232 KB] f = 77, 254 evaluated, 81 expanded, 4 reopened
[t=0.164026s, 431232 KB] f = 78, 267 evaluated, 86 expanded, 4 reopened
[t=0.1709s, 431232 KB] f = 79, 305 evaluated, 101 expanded, 4 reopened
[t=0.189463s, 431232 KB] f = 80, 408 evaluated, 145 expanded, 14 reopened
[t=0.205686s, 431232 KB] f = 81, 498 evaluated, 176 expanded, 15 reopened
[t=0.244181s, 431364 KB] f = 82, 713 evaluated, 254 expanded, 21 reopened
[t=0.262254s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.262292s, 431364 KB] g=19, 814 evaluated, 293 expanded, 27 reopened
[t=0.305106s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.305147s, 431496 KB] g=11, 1054 evaluated, 371 expanded, 31 reopened
[t=0.310167s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.310202s, 431496 KB] g=13, 1082 evaluated, 376 expanded, 31 reopened
[t=0.310951s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.310981s, 431496 KB] g=14, 1086 evaluated, 377 expanded, 31 reopened
[t=0.311551s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.311583s, 431496 KB] g=15, 1089 evaluated, 378 expanded, 31 reopened
[t=0.31268s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.31272s, 431496 KB] g=16, 1095 evaluated, 379 expanded, 31 reopened
[t=0.319694s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.319732s, 431496 KB] g=19, 1134 evaluated, 386 expanded, 31 reopened
[t=0.321371s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.321404s, 431496 KB] g=21, 1143 evaluated, 388 expanded, 31 reopened
[t=0.323403s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.323436s, 431496 KB] g=22, 1154 evaluated, 390 expanded, 31 reopened
[t=0.324184s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.324214s, 431496 KB] g=23, 1158 evaluated, 391 expanded, 31 reopened
[t=0.332159s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.332194s, 431496 KB] g=24, 1202 evaluated, 402 expanded, 31 reopened
[t=0.335081s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.335117s, 431496 KB] g=26, 1218 evaluated, 406 expanded, 31 reopened
[t=0.335507s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.335538s, 431496 KB] g=27, 1220 evaluated, 407 expanded, 31 reopened
[t=0.335746s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.335775s, 431496 KB] g=27, 1221 evaluated, 407 expanded, 31 reopened
[t=0.337047s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.337077s, 431496 KB] g=29, 1228 evaluated, 409 expanded, 31 reopened
[t=0.337492s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.337531s, 431628 KB] g=30, 1230 evaluated, 410 expanded, 31 reopened
[t=0.340497s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.34053s, 431628 KB] g=32, 1246 evaluated, 415 expanded, 31 reopened
[t=0.342547s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.342581s, 431628 KB] g=35, 1257 evaluated, 418 expanded, 31 reopened
[t=0.355182s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.355221s, 431628 KB] g=39, 1327 evaluated, 440 expanded, 31 reopened
[t=0.355435s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.355464s, 431628 KB] g=40, 1328 evaluated, 441 expanded, 31 reopened
[t=0.356386s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.356416s, 431628 KB] g=41, 1333 evaluated, 442 expanded, 31 reopened
[t=0.356638s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.356667s, 431628 KB] g=42, 1334 evaluated, 443 expanded, 31 reopened
[t=0.357423s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.357455s, 431628 KB] g=44, 1338 evaluated, 445 expanded, 31 reopened
[t=0.357488s, 431628 KB] Solution found!
[t=0.357515s, 431628 KB] Actual search time: 0.259309s
put-down g (1)
unstack h f (1)
stack h d (1)
unstack f k (1)
stack f e (1)
unstack k j (1)
put-down k (1)
unstack h d (1)
stack h f (1)
unstack j a (1)
stack j i (1)
unstack a l (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack d b (1)
stack d j (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k b (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e d (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
put-down d (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.357539s, 431628 KB] Plan length: 45 step(s).
[t=0.357539s, 431628 KB] Plan cost: 45
[t=0.357539s, 431628 KB] Expanded 447 state(s).
[t=0.357539s, 431628 KB] Reopened 31 state(s).
[t=0.357539s, 431628 KB] Evaluated 1339 state(s).
[t=0.357539s, 431628 KB] Evaluations: 1339
[t=0.357539s, 431628 KB] Generated 1995 state(s).
[t=0.357539s, 431628 KB] Dead ends: 0 state(s).
[t=0.357539s, 431628 KB] Expanded until last jump: 254 state(s).
[t=0.357539s, 431628 KB] Reopened until last jump: 21 state(s).
[t=0.357539s, 431628 KB] Evaluated until last jump: 713 state(s).
[t=0.357539s, 431628 KB] Generated until last jump: 1110 state(s).
[t=0.357539s, 431628 KB] Number of registered states: 1339
[t=0.357539s, 431628 KB] Int hash set load factor: 1339/2048 = 0.653809
[t=0.357539s, 431628 KB] Int hash set resizes: 11
[t=0.357539s, 431628 KB] Search time: 0.331106s
[t=0.357539s, 431628 KB] Total time: 0.357539s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p65.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7322e-05s, 424928 KB] reading input...
[t=0.00212792s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260448s, 427536 KB] Building successor generator...done!
[t=0.0263242s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263472s, 427536 KB] time for successor generation creation: 0.000167521s
[t=0.0263753s, 427536 KB] Variables: 25
[t=0.0263978s, 427536 KB] FactPairs: 182
[t=0.0264194s, 427536 KB] Bytes per state: 8
[t=0.0266149s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0996826s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0997341s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.09976s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0997872s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0998114s, 430128 KB] pruning method: none
[t=0.118226s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.118276s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118502s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.118531s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118747s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.118776s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.121279s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.121312s, 431100 KB] g=4, 18 evaluated, 4 expanded
[t=0.124905s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.124935s, 431100 KB] g=7, 37 evaluated, 8 expanded
[t=0.1274s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.127444s, 431100 KB] g=9, 50 evaluated, 10 expanded
[t=0.128042s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.128076s, 431100 KB] g=10, 53 evaluated, 11 expanded
[t=0.128861s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.12889s, 431100 KB] g=11, 57 evaluated, 12 expanded
[t=0.130248s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.130279s, 431100 KB] g=12, 64 evaluated, 13 expanded
[t=0.131257s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.131286s, 431100 KB] g=13, 69 evaluated, 14 expanded
[t=0.131695s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.131724s, 431100 KB] g=14, 71 evaluated, 15 expanded
[t=0.132504s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.132536s, 431100 KB] g=15, 75 evaluated, 16 expanded
[t=0.137055s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.137092s, 431100 KB] g=14, 99 evaluated, 21 expanded
[t=0.138814s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.138846s, 431100 KB] g=15, 108 evaluated, 24 expanded
[t=0.146005s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.146038s, 431100 KB] g=18, 146 evaluated, 35 expanded
[t=0.158444s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.158478s, 431232 KB] g=18, 212 evaluated, 53 expanded
[t=0.158887s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.15892s, 431232 KB] g=19, 214 evaluated, 54 expanded
[t=0.166468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.166504s, 431232 KB] g=22, 254 evaluated, 66 expanded
[t=0.169949s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.169986s, 431232 KB] g=23, 272 evaluated, 71 expanded
[t=0.184845s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.184883s, 431232 KB] g=22, 351 evaluated, 97 expanded
[t=0.194446s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.194483s, 431232 KB] g=25, 402 evaluated, 111 expanded
[t=0.19637s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.196409s, 431232 KB] g=26, 412 evaluated, 113 expanded
[t=0.197383s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.197419s, 431232 KB] g=27, 417 evaluated, 114 expanded
[t=0.19764s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.197669s, 431232 KB] g=28, 418 evaluated, 115 expanded
[t=0.200875s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.200906s, 431232 KB] g=32, 435 evaluated, 119 expanded
[t=0.201126s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.201154s, 431232 KB] g=33, 436 evaluated, 120 expanded
[t=0.201754s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.201787s, 431232 KB] g=33, 439 evaluated, 120 expanded
[t=0.202193s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.202222s, 431232 KB] g=34, 441 evaluated, 121 expanded
[t=0.203185s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.203218s, 431232 KB] g=35, 446 evaluated, 122 expanded
[t=0.204187s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.20422s, 431232 KB] g=36, 451 evaluated, 123 expanded
[t=0.205204s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.205237s, 431364 KB] g=37, 456 evaluated, 124 expanded
[t=0.206019s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.206049s, 431364 KB] g=38, 460 evaluated, 125 expanded
[t=0.206648s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.206676s, 431364 KB] g=39, 463 evaluated, 126 expanded
[t=0.207273s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.207304s, 431364 KB] g=40, 466 evaluated, 127 expanded
[t=0.207903s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.207933s, 431364 KB] g=41, 469 evaluated, 128 expanded
[t=0.208341s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.20837s, 431364 KB] g=42, 471 evaluated, 129 expanded
[t=0.208783s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.208811s, 431364 KB] g=44, 473 evaluated, 131 expanded
[t=0.209223s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.209258s, 431364 KB] g=45, 475 evaluated, 132 expanded
[t=0.209482s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.20951s, 431364 KB] g=46, 476 evaluated, 133 expanded
[t=0.209921s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.209952s, 431364 KB] g=47, 478 evaluated, 134 expanded
[t=0.211132s, 431364 KB] Solution found!
[t=0.211164s, 431364 KB] Actual search time: 0.11135s
unstack e k (1)
put-down e (1)
unstack k h (1)
put-down k (1)
unstack a d (1)
stack a b (1)
unstack d f (1)
stack d e (1)
pick-up h (1)
stack h a (1)
pick-up f (1)
stack f k (1)
unstack d e (1)
put-down d (1)
unstack g l (1)
put-down g (1)
pick-up e (1)
stack e l (1)
unstack f k (1)
stack f d (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a h (1)
pick-up k (1)
stack k b (1)
unstack f d (1)
stack f a (1)
unstack e l (1)
stack e d (1)
unstack l j (1)
put-down l (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.21119s, 431364 KB] Plan length: 50 step(s).
[t=0.21119s, 431364 KB] Plan cost: 50
[t=0.21119s, 431364 KB] Expanded 141 state(s).
[t=0.21119s, 431364 KB] Reopened 0 state(s).
[t=0.21119s, 431364 KB] Evaluated 485 state(s).
[t=0.21119s, 431364 KB] Evaluations: 485
[t=0.21119s, 431364 KB] Generated 632 state(s).
[t=0.21119s, 431364 KB] Dead ends: 0 state(s).
[t=0.21119s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.21119s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.21119s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.21119s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.21119s, 431364 KB] Number of registered states: 485
[t=0.21119s, 431364 KB] Int hash set load factor: 485/512 = 0.947266
[t=0.21119s, 431364 KB] Int hash set resizes: 9
[t=0.21119s, 431364 KB] Search time: 0.184576s
[t=0.21119s, 431364 KB] Total time: 0.21119s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p66.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6608e-05s, 424928 KB] reading input...
[t=0.00215457s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259745s, 427536 KB] Building successor generator...done!
[t=0.0262505s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262739s, 427536 KB] time for successor generation creation: 0.000163309s
[t=0.0263026s, 427536 KB] Variables: 25
[t=0.0263262s, 427536 KB] FactPairs: 182
[t=0.0263484s, 427536 KB] Bytes per state: 8
[t=0.026542s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984333s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0984854s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985122s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0985396s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0985639s, 430128 KB] pruning method: none
[t=0.116807s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.116857s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117077s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.117107s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118037s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.118067s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.119904s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.119937s, 431100 KB] g=3, 19 evaluated, 4 expanded
[t=0.121031s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.121062s, 431100 KB] g=4, 25 evaluated, 5 expanded
[t=0.122175s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.122206s, 431100 KB] g=5, 31 evaluated, 6 expanded
[t=0.122416s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.122445s, 431100 KB] g=5, 32 evaluated, 6 expanded
[t=0.124803s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.124841s, 431100 KB] g=8, 45 evaluated, 9 expanded
[t=0.126124s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.126155s, 431100 KB] g=10, 52 evaluated, 11 expanded
[t=0.126368s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.126397s, 431100 KB] g=11, 53 evaluated, 12 expanded
[t=0.126606s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.126635s, 431100 KB] g=11, 54 evaluated, 12 expanded
[t=0.128846s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.12888s, 431100 KB] g=14, 66 evaluated, 17 expanded
[t=0.129272s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.129301s, 431100 KB] g=15, 68 evaluated, 18 expanded
[t=0.130778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.130811s, 431100 KB] g=17, 76 evaluated, 21 expanded
[t=0.131034s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.131066s, 431100 KB] g=18, 77 evaluated, 22 expanded
[t=0.135235s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.135268s, 431100 KB] g=21, 100 evaluated, 29 expanded
[t=0.136382s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.136413s, 431100 KB] g=23, 106 evaluated, 31 expanded
[t=0.136626s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.136656s, 431100 KB] g=24, 107 evaluated, 32 expanded
[t=0.137759s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.137789s, 431100 KB] g=26, 113 evaluated, 34 expanded
[t=0.138184s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.138216s, 431100 KB] g=27, 115 evaluated, 35 expanded
[t=0.138613s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.138643s, 431100 KB] g=29, 118 evaluated, 37 expanded
[t=0.13867s, 431100 KB] Solution found!
[t=0.138702s, 431100 KB] Actual search time: 0.0401352s
stack e b (1)
unstack h j (1)
stack h g (1)
pick-up a (1)
stack a h (1)
pick-up j (1)
stack j l (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.138727s, 431100 KB] Plan length: 29 step(s).
[t=0.138727s, 431100 KB] Plan cost: 29
[t=0.138727s, 431100 KB] Expanded 38 state(s).
[t=0.138727s, 431100 KB] Reopened 0 state(s).
[t=0.138727s, 431100 KB] Evaluated 118 state(s).
[t=0.138727s, 431100 KB] Evaluations: 118
[t=0.138727s, 431100 KB] Generated 153 state(s).
[t=0.138727s, 431100 KB] Dead ends: 0 state(s).
[t=0.138727s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.138727s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.138727s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.138727s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.138727s, 431100 KB] Number of registered states: 118
[t=0.138727s, 431100 KB] Int hash set load factor: 118/128 = 0.921875
[t=0.138727s, 431100 KB] Int hash set resizes: 7
[t=0.138727s, 431100 KB] Search time: 0.112186s
[t=0.138727s, 431100 KB] Total time: 0.138727s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p67.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8684e-05s, 424928 KB] reading input...
[t=0.00215882s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259191s, 427536 KB] Building successor generator...done!
[t=0.0262014s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262252s, 427536 KB] time for successor generation creation: 0.000170296s
[t=0.0262537s, 427536 KB] Variables: 25
[t=0.0262767s, 427536 KB] FactPairs: 182
[t=0.0262987s, 427536 KB] Bytes per state: 8
[t=0.0264937s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982731s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0983247s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983503s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0983774s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.098401s, 430128 KB] pruning method: none
[t=0.110204s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.110256s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116883s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.116928s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117323s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.117353s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117924s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.117954s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.118346s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.118375s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.11894s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.11897s, 431100 KB] g=5, 14 evaluated, 5 expanded
[t=0.119357s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.119386s, 431100 KB] g=6, 16 evaluated, 6 expanded
[t=0.127686s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.12772s, 431100 KB] g=10, 62 evaluated, 21 expanded
[t=0.128113s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.128143s, 431100 KB] g=11, 64 evaluated, 22 expanded
[t=0.129264s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.129295s, 431100 KB] g=12, 70 evaluated, 23 expanded
[t=0.129861s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.129896s, 431100 KB] g=13, 73 evaluated, 24 expanded
[t=0.130464s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.130494s, 431100 KB] g=14, 76 evaluated, 25 expanded
[t=0.130707s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.130736s, 431100 KB] g=15, 77 evaluated, 26 expanded
[t=0.139329s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.139365s, 431100 KB] g=21, 125 evaluated, 42 expanded
[t=0.139942s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.139974s, 431100 KB] g=22, 128 evaluated, 43 expanded
[t=0.179208s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.179248s, 431232 KB] g=26, 346 evaluated, 146 expanded, 33 reopened
[t=0.217674s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.217715s, 431364 KB] g=29, 562 evaluated, 212 expanded, 33 reopened
[t=0.222015s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.222051s, 431364 KB] g=32, 586 evaluated, 216 expanded, 33 reopened
[t=0.222263s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.222292s, 431364 KB] g=33, 587 evaluated, 217 expanded, 33 reopened
[t=0.224993s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.225026s, 431364 KB] g=35, 602 evaluated, 219 expanded, 33 reopened
[t=0.228426s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.228459s, 431364 KB] g=37, 621 evaluated, 222 expanded, 33 reopened
[t=0.229023s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.229053s, 431364 KB] g=38, 624 evaluated, 223 expanded, 33 reopened
[t=0.229795s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.229824s, 431364 KB] g=39, 628 evaluated, 224 expanded, 33 reopened
[t=0.23145s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.23148s, 431364 KB] g=41, 637 evaluated, 226 expanded, 33 reopened
[t=0.232765s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.232804s, 431364 KB] g=44, 644 evaluated, 229 expanded, 33 reopened
[t=0.233193s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.233223s, 431364 KB] g=45, 646 evaluated, 230 expanded, 33 reopened
[t=0.234146s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.234176s, 431364 KB] g=46, 651 evaluated, 232 expanded, 33 reopened
[t=0.234919s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.234948s, 431364 KB] g=48, 655 evaluated, 234 expanded, 33 reopened
[t=0.236063s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.236095s, 431364 KB] g=51, 661 evaluated, 237 expanded, 33 reopened
[t=0.238258s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.23829s, 431364 KB] g=53, 673 evaluated, 243 expanded, 33 reopened
[t=0.238677s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.238706s, 431364 KB] g=54, 675 evaluated, 244 expanded, 33 reopened
[t=0.239101s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.23913s, 431364 KB] g=56, 678 evaluated, 246 expanded, 33 reopened
[t=0.239157s, 431364 KB] Solution found!
[t=0.239183s, 431364 KB] Actual search time: 0.140778s
unstack j g (1)
stack j c (1)
unstack b f (1)
stack b j (1)
unstack g e (1)
stack g b (1)
unstack e k (1)
put-down e (1)
unstack k h (1)
put-down k (1)
pick-up e (1)
stack e k (1)
pick-up h (1)
stack h f (1)
unstack g b (1)
put-down g (1)
unstack b j (1)
put-down b (1)
unstack j c (1)
stack j e (1)
pick-up c (1)
stack c b (1)
unstack h f (1)
stack h g (1)
unstack f i (1)
put-down f (1)
unstack i a (1)
stack i c (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
put-down e (1)
unstack a d (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.239208s, 431364 KB] Plan length: 56 step(s).
[t=0.239208s, 431364 KB] Plan cost: 56
[t=0.239208s, 431364 KB] Expanded 247 state(s).
[t=0.239208s, 431364 KB] Reopened 33 state(s).
[t=0.239208s, 431364 KB] Evaluated 678 state(s).
[t=0.239208s, 431364 KB] Evaluations: 678
[t=0.239208s, 431364 KB] Generated 1076 state(s).
[t=0.239208s, 431364 KB] Dead ends: 0 state(s).
[t=0.239208s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.239208s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.239208s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.239208s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.239208s, 431364 KB] Number of registered states: 678
[t=0.239208s, 431364 KB] Int hash set load factor: 678/1024 = 0.662109
[t=0.239208s, 431364 KB] Int hash set resizes: 10
[t=0.239208s, 431364 KB] Search time: 0.212715s
[t=0.239208s, 431364 KB] Total time: 0.239208s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p68.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8434e-05s, 424928 KB] reading input...
[t=0.00216851s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259116s, 427536 KB] Building successor generator...done!
[t=0.0262054s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262291s, 427536 KB] time for successor generation creation: 0.000182045s
[t=0.0262572s, 427536 KB] Variables: 25
[t=0.0262796s, 427536 KB] FactPairs: 182
[t=0.0263014s, 427536 KB] Bytes per state: 8
[t=0.0264926s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984313s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0984845s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985105s, 430128 KB] f = 130, 1 evaluated, 0 expanded
[t=0.0985482s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0985725s, 430128 KB] pruning method: none
[t=0.117217s, 431100 KB] f = 144, 5 evaluated, 1 expanded
[t=0.117983s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.118015s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.119467s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.119499s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.122724s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.122757s, 431100 KB] g=8, 35 evaluated, 10 expanded
[t=0.124728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.124758s, 431100 KB] g=10, 46 evaluated, 13 expanded
[t=0.125494s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.125524s, 431100 KB] g=11, 50 evaluated, 14 expanded
[t=0.12573s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.125759s, 431100 KB] g=11, 51 evaluated, 14 expanded
[t=0.129526s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.129562s, 431100 KB] g=11, 72 evaluated, 21 expanded
[t=0.130485s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.13052s, 431100 KB] g=12, 77 evaluated, 22 expanded
[t=0.130733s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.130762s, 431100 KB] g=13, 78 evaluated, 23 expanded
[t=0.131497s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.131526s, 431100 KB] g=14, 82 evaluated, 24 expanded
[t=0.132972s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.133002s, 431100 KB] g=16, 90 evaluated, 26 expanded
[t=0.133563s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.133592s, 431100 KB] g=17, 93 evaluated, 27 expanded
[t=0.135397s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.135432s, 431100 KB] g=19, 103 evaluated, 29 expanded
[t=0.136174s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.136203s, 431100 KB] g=20, 107 evaluated, 30 expanded
[t=0.136943s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.136975s, 431100 KB] g=21, 111 evaluated, 31 expanded
[t=0.143069s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.143104s, 431100 KB] g=27, 145 evaluated, 42 expanded
[t=0.143849s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.143879s, 431100 KB] g=28, 149 evaluated, 43 expanded
[t=0.144088s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.144117s, 431100 KB] g=29, 150 evaluated, 44 expanded
[t=0.146474s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.146507s, 431232 KB] g=31, 163 evaluated, 47 expanded
[t=0.165041s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.165076s, 431232 KB] g=37, 267 evaluated, 76 expanded
[t=0.169535s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.169572s, 431232 KB] g=36, 292 evaluated, 82 expanded
[t=0.171209s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.171241s, 431232 KB] g=38, 301 evaluated, 84 expanded
[t=0.174468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.174504s, 431232 KB] g=43, 319 evaluated, 89 expanded
[t=0.175246s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.175276s, 431232 KB] g=44, 323 evaluated, 90 expanded
[t=0.178315s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.17835s, 431232 KB] g=45, 340 evaluated, 94 expanded
[t=0.180143s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.180177s, 431232 KB] g=47, 350 evaluated, 97 expanded
[t=0.181087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.181117s, 431232 KB] g=48, 355 evaluated, 98 expanded
[t=0.182218s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.182251s, 431232 KB] g=50, 361 evaluated, 100 expanded
[t=0.182992s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.183023s, 431232 KB] g=51, 365 evaluated, 101 expanded
[t=0.183934s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.183967s, 431232 KB] g=52, 370 evaluated, 102 expanded
[t=0.185583s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.185615s, 431232 KB] g=55, 379 evaluated, 106 expanded
[t=0.190804s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.190838s, 431232 KB] g=56, 408 evaluated, 121 expanded
[t=0.191226s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.191255s, 431232 KB] g=57, 410 evaluated, 122 expanded
[t=0.191641s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.191674s, 431232 KB] g=58, 412 evaluated, 123 expanded
[t=0.191704s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.191728s, 431232 KB] g=59, 413 evaluated, 124 expanded
[t=0.191753s, 431232 KB] Solution found!
[t=0.191779s, 431232 KB] Actual search time: 0.0932023s
put-down e (1)
unstack c d (1)
stack c e (1)
unstack h j (1)
stack h a (1)
unstack d b (1)
stack d j (1)
unstack b i (1)
stack b d (1)
unstack i l (1)
stack i c (1)
unstack l g (1)
stack l b (1)
unstack g f (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack k f (1)
stack k b (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j d (1)
unstack i c (1)
put-down i (1)
unstack c e (1)
stack c i (1)
pick-up e (1)
stack e c (1)
unstack k b (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack c i (1)
put-down c (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.191804s, 431232 KB] Plan length: 59 step(s).
[t=0.191804s, 431232 KB] Plan cost: 59
[t=0.191804s, 431232 KB] Expanded 125 state(s).
[t=0.191804s, 431232 KB] Reopened 0 state(s).
[t=0.191804s, 431232 KB] Evaluated 413 state(s).
[t=0.191804s, 431232 KB] Evaluations: 413
[t=0.191804s, 431232 KB] Generated 543 state(s).
[t=0.191804s, 431232 KB] Dead ends: 0 state(s).
[t=0.191804s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.191804s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.191804s, 431232 KB] Evaluated until last jump: 5 state(s).
[t=0.191804s, 431232 KB] Generated until last jump: 4 state(s).
[t=0.191804s, 431232 KB] Number of registered states: 413
[t=0.191804s, 431232 KB] Int hash set load factor: 413/512 = 0.806641
[t=0.191804s, 431232 KB] Int hash set resizes: 9
[t=0.191804s, 431232 KB] Search time: 0.165312s
[t=0.191804s, 431232 KB] Total time: 0.191804s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p69.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.4869e-05s, 424928 KB] reading input...
[t=0.00226488s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262592s, 427536 KB] Building successor generator...done!
[t=0.0265308s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265546s, 427536 KB] time for successor generation creation: 0.000165181s
[t=0.0265838s, 427536 KB] Variables: 25
[t=0.0266067s, 427536 KB] FactPairs: 182
[t=0.0266292s, 427536 KB] Bytes per state: 8
[t=0.0268253s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993114s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.0993623s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993882s, 430128 KB] f = 105, 1 evaluated, 0 expanded
[t=0.0994165s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.0994405s, 430128 KB] pruning method: none
[t=0.111297s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.111349s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.119094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.119137s, 431100 KB] g=2, 10 evaluated, 3 expanded
[t=0.119719s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.11976s, 431100 KB] g=3, 13 evaluated, 4 expanded
[t=0.120531s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.120563s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.122967s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.122998s, 431100 KB] g=8, 30 evaluated, 9 expanded
[t=0.126323s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.126356s, 431100 KB] g=11, 48 evaluated, 14 expanded
[t=0.126569s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.126598s, 431100 KB] g=11, 49 evaluated, 14 expanded
[t=0.128089s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.128123s, 431100 KB] g=12, 57 evaluated, 16 expanded
[t=0.128336s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.128365s, 431100 KB] g=12, 58 evaluated, 16 expanded
[t=0.133892s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.133925s, 431100 KB] g=14, 88 evaluated, 24 expanded
[t=0.135046s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.135079s, 431100 KB] g=15, 94 evaluated, 25 expanded
[t=0.135841s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.135871s, 431100 KB] g=16, 98 evaluated, 26 expanded
[t=0.141037s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.141074s, 431100 KB] g=19, 126 evaluated, 32 expanded
[t=0.141468s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.141497s, 431100 KB] g=19, 128 evaluated, 32 expanded
[t=0.142088s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.142118s, 431100 KB] g=20, 131 evaluated, 33 expanded
[t=0.150566s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.150603s, 431232 KB] g=23, 177 evaluated, 43 expanded
[t=0.158544s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.15858s, 431232 KB] g=25, 220 evaluated, 55 expanded
[t=0.19667s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.196709s, 431232 KB] g=31, 427 evaluated, 111 expanded, 3 reopened
[t=0.221215s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.22126s, 431364 KB] g=31, 560 evaluated, 144 expanded, 3 reopened
[t=0.269313s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.269353s, 431364 KB] g=34, 820 evaluated, 218 expanded, 7 reopened
[t=0.270122s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.270153s, 431364 KB] g=35, 824 evaluated, 219 expanded, 7 reopened
[t=0.271103s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.271133s, 431364 KB] g=36, 829 evaluated, 220 expanded, 7 reopened
[t=0.272648s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.272683s, 431364 KB] g=38, 837 evaluated, 223 expanded, 7 reopened
[t=0.274373s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.274404s, 431364 KB] g=39, 846 evaluated, 225 expanded, 7 reopened
[t=0.275905s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.275938s, 431364 KB] g=40, 854 evaluated, 226 expanded, 7 reopened
[t=0.27653s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.276562s, 431364 KB] g=41, 857 evaluated, 227 expanded, 7 reopened
[t=0.277145s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.277178s, 431364 KB] g=42, 860 evaluated, 228 expanded, 7 reopened
[t=0.280349s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.280382s, 431496 KB] g=46, 877 evaluated, 233 expanded, 7 reopened
[t=0.281703s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.281736s, 431496 KB] g=46, 884 evaluated, 235 expanded, 7 reopened
[t=0.287648s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.287682s, 431496 KB] g=49, 916 evaluated, 245 expanded, 7 reopened
[t=0.288644s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.288678s, 431496 KB] g=50, 921 evaluated, 246 expanded, 7 reopened
[t=0.289081s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.28911s, 431496 KB] g=51, 923 evaluated, 247 expanded, 7 reopened
[t=0.289511s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.28954s, 431496 KB] g=52, 925 evaluated, 248 expanded, 7 reopened
[t=0.290492s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.290524s, 431496 KB] g=54, 930 evaluated, 250 expanded, 7 reopened
[t=0.29093s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.29096s, 431496 KB] g=55, 932 evaluated, 251 expanded, 7 reopened
[t=0.291365s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.291394s, 431496 KB] g=57, 935 evaluated, 253 expanded, 7 reopened
[t=0.291421s, 431496 KB] Solution found!
[t=0.291447s, 431496 KB] Actual search time: 0.192002s
stack i f (1)
pick-up b (1)
stack b c (1)
unstack i f (1)
put-down i (1)
unstack e d (1)
put-down e (1)
unstack f a (1)
stack f i (1)
unstack a k (1)
stack a e (1)
unstack k g (1)
stack k f (1)
unstack g h (1)
stack g b (1)
unstack k f (1)
put-down k (1)
pick-up h (1)
stack h f (1)
unstack a e (1)
stack a d (1)
unstack g b (1)
put-down g (1)
unstack h f (1)
stack h a (1)
unstack f i (1)
stack f k (1)
pick-up e (1)
stack e b (1)
pick-up i (1)
stack i f (1)
unstack h a (1)
stack h g (1)
unstack a d (1)
stack a h (1)
unstack i f (1)
put-down i (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d j (1)
stack d b (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.291472s, 431496 KB] Plan length: 57 step(s).
[t=0.291472s, 431496 KB] Plan cost: 57
[t=0.291472s, 431496 KB] Expanded 254 state(s).
[t=0.291472s, 431496 KB] Reopened 7 state(s).
[t=0.291472s, 431496 KB] Evaluated 935 state(s).
[t=0.291472s, 431496 KB] Evaluations: 935
[t=0.291472s, 431496 KB] Generated 1255 state(s).
[t=0.291472s, 431496 KB] Dead ends: 0 state(s).
[t=0.291472s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.291472s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.291472s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.291472s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.291472s, 431496 KB] Number of registered states: 935
[t=0.291472s, 431496 KB] Int hash set load factor: 935/1024 = 0.913086
[t=0.291472s, 431496 KB] Int hash set resizes: 10
[t=0.291472s, 431496 KB] Search time: 0.264647s
[t=0.291472s, 431496 KB] Total time: 0.291472s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p70.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6294e-05s, 424928 KB] reading input...
[t=0.00216826s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259553s, 427536 KB] Building successor generator...done!
[t=0.0262347s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262582s, 427536 KB] time for successor generation creation: 0.000166492s
[t=0.0262869s, 427536 KB] Variables: 25
[t=0.0263096s, 427536 KB] FactPairs: 182
[t=0.0263315s, 427536 KB] Bytes per state: 8
[t=0.0265264s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982158s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.098269s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982953s, 430128 KB] f = 103, 1 evaluated, 0 expanded
[t=0.0983225s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.0983465s, 430128 KB] pruning method: none
[t=0.116577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.116627s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.120467s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.120501s, 431100 KB] g=3, 24 evaluated, 6 expanded
[t=0.121255s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.121286s, 431100 KB] g=4, 28 evaluated, 7 expanded
[t=0.1224s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.122431s, 431100 KB] g=5, 34 evaluated, 8 expanded
[t=0.122825s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.122855s, 431100 KB] g=6, 36 evaluated, 9 expanded
[t=0.123077s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.123107s, 431100 KB] g=6, 37 evaluated, 9 expanded
[t=0.13621s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.136246s, 431100 KB] g=12, 109 evaluated, 39 expanded
[t=0.137011s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.137044s, 431100 KB] g=14, 113 evaluated, 42 expanded
[t=0.137805s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.137835s, 431100 KB] g=16, 117 evaluated, 44 expanded
[t=0.154185s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.154223s, 431232 KB] g=18, 207 evaluated, 77 expanded
[t=0.156605s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.156638s, 431232 KB] g=21, 220 evaluated, 81 expanded
[t=0.159017s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.15905s, 431232 KB] g=25, 233 evaluated, 86 expanded
[t=0.15926s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.159289s, 431232 KB] g=25, 234 evaluated, 86 expanded
[t=0.159686s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.159717s, 431232 KB] g=26, 236 evaluated, 87 expanded
[t=0.160311s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.160343s, 431232 KB] g=27, 239 evaluated, 88 expanded
[t=0.161641s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.161671s, 431232 KB] g=30, 246 evaluated, 91 expanded
[t=0.161884s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.161913s, 431232 KB] g=30, 247 evaluated, 91 expanded
[t=0.162489s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.162519s, 431232 KB] g=31, 250 evaluated, 92 expanded
[t=0.163278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.163311s, 431232 KB] g=33, 254 evaluated, 94 expanded
[t=0.163706s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163736s, 431232 KB] g=34, 256 evaluated, 95 expanded
[t=0.164338s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.164369s, 431232 KB] g=35, 259 evaluated, 96 expanded
[t=0.168223s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.168258s, 431232 KB] g=37, 280 evaluated, 103 expanded
[t=0.168659s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.168688s, 431232 KB] g=38, 282 evaluated, 104 expanded
[t=0.169084s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.169115s, 431232 KB] g=39, 284 evaluated, 105 expanded
[t=0.169694s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.169724s, 431232 KB] g=40, 287 evaluated, 106 expanded
[t=0.16994s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.169969s, 431232 KB] g=41, 288 evaluated, 107 expanded
[t=0.170184s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.170212s, 431232 KB] g=42, 289 evaluated, 108 expanded
[t=0.17061s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.170639s, 431232 KB] g=43, 291 evaluated, 109 expanded
[t=0.17178s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.17181s, 431232 KB] g=46, 298 evaluated, 115 expanded
[t=0.171837s, 431232 KB] Solution found!
[t=0.171863s, 431232 KB] Actual search time: 0.0735124s
unstack h k (1)
stack h a (1)
pick-up g (1)
stack g h (1)
unstack k f (1)
put-down k (1)
unstack g h (1)
stack g k (1)
pick-up f (1)
stack f j (1)
unstack g k (1)
stack g h (1)
pick-up l (1)
stack l k (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack l k (1)
put-down l (1)
unstack f j (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack j e (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.171888s, 431232 KB] Plan length: 46 step(s).
[t=0.171888s, 431232 KB] Plan cost: 46
[t=0.171888s, 431232 KB] Expanded 116 state(s).
[t=0.171888s, 431232 KB] Reopened 0 state(s).
[t=0.171888s, 431232 KB] Evaluated 298 state(s).
[t=0.171888s, 431232 KB] Evaluations: 298
[t=0.171888s, 431232 KB] Generated 415 state(s).
[t=0.171888s, 431232 KB] Dead ends: 0 state(s).
[t=0.171888s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.171888s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.171888s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.171888s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.171888s, 431232 KB] Number of registered states: 298
[t=0.171888s, 431232 KB] Int hash set load factor: 298/512 = 0.582031
[t=0.171888s, 431232 KB] Int hash set resizes: 9
[t=0.171888s, 431232 KB] Search time: 0.145362s
[t=0.171888s, 431232 KB] Total time: 0.171888s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p71.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6501e-05s, 424928 KB] reading input...
[t=0.00215514s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258344s, 427536 KB] Building successor generator...done!
[t=0.0261084s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261319s, 427536 KB] time for successor generation creation: 0.000163523s
[t=0.0261601s, 427536 KB] Variables: 25
[t=0.0261832s, 427536 KB] FactPairs: 182
[t=0.0262051s, 427536 KB] Bytes per state: 8
[t=0.0264006s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983301s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0983836s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984096s, 430128 KB] f = 130, 1 evaluated, 0 expanded
[t=0.0984369s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0984706s, 430128 KB] pruning method: none
[t=0.110272s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.110324s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117513s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.117556s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.121694s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.121726s, 431100 KB] g=4, 30 evaluated, 7 expanded
[t=0.123714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.123746s, 431100 KB] g=6, 41 evaluated, 9 expanded
[t=0.132367s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.132404s, 431100 KB] g=13, 89 evaluated, 19 expanded
[t=0.137629s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.137665s, 431100 KB] g=16, 118 evaluated, 25 expanded
[t=0.14038s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.140413s, 431100 KB] g=18, 133 evaluated, 28 expanded
[t=0.140621s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.14065s, 431100 KB] g=18, 134 evaluated, 28 expanded
[t=0.143557s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.14359s, 431100 KB] g=21, 150 evaluated, 32 expanded
[t=0.154807s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.154844s, 431232 KB] g=22, 212 evaluated, 47 expanded, 4 reopened
[t=0.155776s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.15581s, 431232 KB] g=23, 217 evaluated, 48 expanded, 4 reopened
[t=0.165192s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.165227s, 431232 KB] g=27, 269 evaluated, 57 expanded, 4 reopened
[t=0.180728s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.180766s, 431364 KB] g=32, 355 evaluated, 83 expanded, 11 reopened
[t=0.182239s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.182274s, 431364 KB] g=34, 363 evaluated, 85 expanded, 11 reopened
[t=0.183023s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.183056s, 431364 KB] g=34, 367 evaluated, 85 expanded, 11 reopened
[t=0.184517s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.184555s, 431364 KB] g=35, 375 evaluated, 87 expanded, 11 reopened
[t=0.186031s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.186066s, 431364 KB] g=37, 383 evaluated, 89 expanded, 11 reopened
[t=0.186997s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.187028s, 431364 KB] g=38, 388 evaluated, 90 expanded, 11 reopened
[t=0.18813s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.18816s, 431364 KB] g=39, 394 evaluated, 91 expanded, 11 reopened
[t=0.188552s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.18858s, 431364 KB] g=40, 396 evaluated, 92 expanded, 11 reopened
[t=0.191821s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.191857s, 431364 KB] g=42, 414 evaluated, 96 expanded, 11 reopened
[t=0.197807s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.197844s, 431364 KB] g=45, 447 evaluated, 104 expanded, 11 reopened
[t=0.200041s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.200071s, 431364 KB] g=49, 459 evaluated, 109 expanded, 11 reopened
[t=0.200463s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.200492s, 431364 KB] g=50, 461 evaluated, 110 expanded, 11 reopened
[t=0.201435s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.201466s, 431364 KB] g=52, 466 evaluated, 112 expanded, 11 reopened
[t=0.201681s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.20171s, 431364 KB] g=53, 467 evaluated, 113 expanded, 11 reopened
[t=0.201923s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.201954s, 431364 KB] g=54, 468 evaluated, 114 expanded, 11 reopened
[t=0.20235s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.202378s, 431364 KB] g=55, 470 evaluated, 115 expanded, 11 reopened
[t=0.203505s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.203535s, 431364 KB] g=58, 477 evaluated, 121 expanded, 11 reopened
[t=0.203563s, 431364 KB] Solution found!
[t=0.203589s, 431364 KB] Actual search time: 0.105115s
unstack h j (1)
stack h a (1)
unstack i g (1)
stack i c (1)
unstack j l (1)
put-down j (1)
unstack l f (1)
stack l j (1)
unstack g k (1)
stack g b (1)
pick-up f (1)
stack f l (1)
unstack i c (1)
put-down i (1)
pick-up k (1)
stack k c (1)
unstack g b (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a d (1)
stack a i (1)
unstack d e (1)
stack d b (1)
unstack a i (1)
stack a k (1)
pick-up e (1)
stack e d (1)
unstack f l (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack l j (1)
stack l d (1)
pick-up j (1)
stack j e (1)
pick-up i (1)
stack i c (1)
unstack l d (1)
stack l i (1)
unstack d b (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.203614s, 431364 KB] Plan length: 58 step(s).
[t=0.203614s, 431364 KB] Plan cost: 58
[t=0.203614s, 431364 KB] Expanded 122 state(s).
[t=0.203614s, 431364 KB] Reopened 11 state(s).
[t=0.203614s, 431364 KB] Evaluated 477 state(s).
[t=0.203614s, 431364 KB] Evaluations: 477
[t=0.203614s, 431364 KB] Generated 656 state(s).
[t=0.203614s, 431364 KB] Dead ends: 0 state(s).
[t=0.203614s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.203614s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.203614s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.203614s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.203614s, 431364 KB] Number of registered states: 477
[t=0.203614s, 431364 KB] Int hash set load factor: 477/512 = 0.931641
[t=0.203614s, 431364 KB] Int hash set resizes: 9
[t=0.203614s, 431364 KB] Search time: 0.177214s
[t=0.203614s, 431364 KB] Total time: 0.203614s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p72.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9616e-05s, 424928 KB] reading input...
[t=0.0021863s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258975s, 427536 KB] Building successor generator...done!
[t=0.0261811s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262048s, 427536 KB] time for successor generation creation: 0.000170429s
[t=0.0262334s, 427536 KB] Variables: 25
[t=0.0262566s, 427536 KB] FactPairs: 182
[t=0.0262788s, 427536 KB] Bytes per state: 8
[t=0.0264726s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979371s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.097989s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980152s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0980427s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0980664s, 430128 KB] pruning method: none
[t=0.109826s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.109879s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116839s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.116882s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117276s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.117306s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.117872s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.117902s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.126354s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.126389s, 431100 KB] g=16, 58 evaluated, 21 expanded
[t=0.130534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.130568s, 431100 KB] g=20, 81 evaluated, 28 expanded
[t=0.13167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.131701s, 431100 KB] g=21, 87 evaluated, 30 expanded
[t=0.135664s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.135697s, 431100 KB] g=26, 109 evaluated, 36 expanded
[t=0.136632s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.136674s, 431100 KB] g=25, 114 evaluated, 38 expanded
[t=0.223673s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.223714s, 431364 KB] g=24, 599 evaluated, 159 expanded
[t=0.229118s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.229152s, 431364 KB] g=26, 629 evaluated, 164 expanded
[t=0.242613s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.242649s, 431364 KB] g=34, 704 evaluated, 181 expanded
[t=0.260379s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.260415s, 431496 KB] g=42, 803 evaluated, 210 expanded
[t=0.281328s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.281366s, 431496 KB] g=31, 919 evaluated, 262 expanded, 12 reopened
[t=0.283002s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.283035s, 431496 KB] g=32, 928 evaluated, 263 expanded, 12 reopened
[t=0.283428s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.283457s, 431496 KB] g=33, 930 evaluated, 264 expanded, 12 reopened
[t=0.284391s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.284423s, 431496 KB] g=34, 935 evaluated, 265 expanded, 12 reopened
[t=0.286235s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.286268s, 431496 KB] g=35, 945 evaluated, 266 expanded, 12 reopened
[t=0.287187s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.287217s, 431496 KB] g=36, 950 evaluated, 267 expanded, 12 reopened
[t=0.290101s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.290134s, 431496 KB] g=39, 966 evaluated, 270 expanded, 12 reopened
[t=0.291767s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.2918s, 431496 KB] g=41, 975 evaluated, 272 expanded, 12 reopened
[t=0.292206s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.292237s, 431496 KB] g=42, 977 evaluated, 273 expanded, 12 reopened
[t=0.293686s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.293719s, 431496 KB] g=43, 985 evaluated, 274 expanded, 12 reopened
[t=0.296692s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.296726s, 431496 KB] g=45, 1001 evaluated, 279 expanded, 12 reopened
[t=0.296936s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.296976s, 431628 KB] g=45, 1002 evaluated, 279 expanded, 12 reopened
[t=0.298786s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.298818s, 431628 KB] g=47, 1012 evaluated, 282 expanded, 12 reopened
[t=0.299204s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.299234s, 431628 KB] g=47, 1014 evaluated, 282 expanded, 12 reopened
[t=0.302119s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.302152s, 431628 KB] g=49, 1030 evaluated, 287 expanded, 12 reopened
[t=0.302897s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.30293s, 431628 KB] g=50, 1034 evaluated, 288 expanded, 12 reopened
[t=0.303142s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.303171s, 431628 KB] g=51, 1035 evaluated, 289 expanded, 12 reopened
[t=0.303739s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.303769s, 431628 KB] g=52, 1038 evaluated, 290 expanded, 12 reopened
[t=0.306314s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.306347s, 431628 KB] g=54, 1052 evaluated, 296 expanded, 12 reopened
[t=0.307453s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.307483s, 431628 KB] g=56, 1058 evaluated, 298 expanded, 12 reopened
[t=0.30807s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.308105s, 431628 KB] g=57, 1061 evaluated, 299 expanded, 12 reopened
[t=0.308674s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.308704s, 431628 KB] g=58, 1064 evaluated, 300 expanded, 12 reopened
[t=0.313748s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.313784s, 431628 KB] g=60, 1092 evaluated, 314 expanded, 12 reopened
[t=0.314175s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.314205s, 431628 KB] g=61, 1094 evaluated, 315 expanded, 12 reopened
[t=0.314236s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.314261s, 431628 KB] g=62, 1095 evaluated, 316 expanded, 12 reopened
[t=0.314286s, 431628 KB] Solution found!
[t=0.314312s, 431628 KB] Actual search time: 0.216242s
unstack g c (1)
stack g a (1)
unstack c e (1)
stack c i (1)
unstack e l (1)
put-down e (1)
unstack c i (1)
stack c e (1)
unstack i d (1)
stack i g (1)
unstack d j (1)
put-down d (1)
unstack j h (1)
stack j l (1)
unstack c e (1)
put-down c (1)
unstack h k (1)
put-down h (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
stack j d (1)
unstack i g (1)
stack i c (1)
unstack g a (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a b (1)
stack a e (1)
unstack b f (1)
stack b l (1)
unstack a e (1)
stack a b (1)
unstack j d (1)
stack j i (1)
unstack a b (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.314336s, 431628 KB] Plan length: 62 step(s).
[t=0.314336s, 431628 KB] Plan cost: 62
[t=0.314336s, 431628 KB] Expanded 317 state(s).
[t=0.314336s, 431628 KB] Reopened 12 state(s).
[t=0.314336s, 431628 KB] Evaluated 1095 state(s).
[t=0.314336s, 431628 KB] Evaluations: 1095
[t=0.314336s, 431628 KB] Generated 1492 state(s).
[t=0.314336s, 431628 KB] Dead ends: 0 state(s).
[t=0.314336s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.314336s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.314336s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.314336s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.314336s, 431628 KB] Number of registered states: 1095
[t=0.314336s, 431628 KB] Int hash set load factor: 1095/2048 = 0.534668
[t=0.314336s, 431628 KB] Int hash set resizes: 11
[t=0.314336s, 431628 KB] Search time: 0.287865s
[t=0.314336s, 431628 KB] Total time: 0.314336s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p73.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9271e-05s, 424928 KB] reading input...
[t=0.00216321s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025935s, 427536 KB] Building successor generator...done!
[t=0.0262168s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262408s, 427536 KB] time for successor generation creation: 0.000169956s
[t=0.0262692s, 427536 KB] Variables: 25
[t=0.0262923s, 427536 KB] FactPairs: 182
[t=0.0263147s, 427536 KB] Bytes per state: 8
[t=0.0265088s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981821s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0982367s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982624s, 430128 KB] f = 129, 1 evaluated, 0 expanded
[t=0.0982901s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0983141s, 430128 KB] pruning method: none
[t=0.116942s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.116992s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117212s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.117243s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118185s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.118218s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.119326s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.119356s, 431100 KB] g=5, 17 evaluated, 5 expanded
[t=0.119924s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.119954s, 431100 KB] g=6, 20 evaluated, 6 expanded
[t=0.120874s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.120904s, 431100 KB] g=6, 25 evaluated, 8 expanded
[t=0.121112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.121141s, 431100 KB] g=6, 26 evaluated, 8 expanded
[t=0.122073s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.122104s, 431100 KB] g=7, 31 evaluated, 9 expanded
[t=0.122867s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.122897s, 431100 KB] g=8, 35 evaluated, 10 expanded
[t=0.125244s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.125274s, 431100 KB] g=12, 48 evaluated, 14 expanded
[t=0.127992s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.128024s, 431100 KB] g=17, 63 evaluated, 20 expanded
[t=0.128601s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.12863s, 431100 KB] g=18, 66 evaluated, 21 expanded
[t=0.130822s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.130854s, 431100 KB] g=19, 78 evaluated, 24 expanded
[t=0.144614s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.144649s, 431100 KB] g=21, 154 evaluated, 64 expanded, 5 reopened
[t=0.14596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.145991s, 431100 KB] g=24, 161 evaluated, 67 expanded, 5 reopened
[t=0.149977s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.150016s, 431232 KB] g=27, 183 evaluated, 75 expanded, 5 reopened
[t=0.150591s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.15062s, 431232 KB] g=28, 186 evaluated, 76 expanded, 5 reopened
[t=0.151013s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.151045s, 431232 KB] g=29, 188 evaluated, 77 expanded, 5 reopened
[t=0.15216s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.152192s, 431232 KB] g=32, 194 evaluated, 80 expanded, 5 reopened
[t=0.153679s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.15371s, 431232 KB] g=34, 202 evaluated, 84 expanded, 5 reopened
[t=0.153925s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.153954s, 431232 KB] g=35, 203 evaluated, 85 expanded, 5 reopened
[t=0.154709s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.154738s, 431232 KB] g=36, 207 evaluated, 86 expanded, 5 reopened
[t=0.155667s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.155697s, 431232 KB] g=37, 212 evaluated, 87 expanded, 5 reopened
[t=0.156091s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.156125s, 431232 KB] g=38, 214 evaluated, 88 expanded, 5 reopened
[t=0.15652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.156549s, 431232 KB] g=39, 216 evaluated, 89 expanded, 5 reopened
[t=0.157311s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.15734s, 431232 KB] g=41, 220 evaluated, 91 expanded, 5 reopened
[t=0.158282s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.158314s, 431232 KB] g=43, 225 evaluated, 94 expanded, 5 reopened
[t=0.158895s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.158928s, 431232 KB] g=46, 229 evaluated, 97 expanded, 5 reopened
[t=0.158955s, 431232 KB] Solution found!
[t=0.158981s, 431232 KB] Actual search time: 0.0606634s
unstack l g (1)
stack l b (1)
unstack e a (1)
stack e l (1)
unstack h k (1)
stack h a (1)
unstack k f (1)
put-down k (1)
pick-up g (1)
stack g h (1)
pick-up f (1)
stack f e (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a f (1)
pick-up k (1)
stack k j (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e l (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.159006s, 431232 KB] Plan length: 46 step(s).
[t=0.159006s, 431232 KB] Plan cost: 46
[t=0.159006s, 431232 KB] Expanded 98 state(s).
[t=0.159006s, 431232 KB] Reopened 5 state(s).
[t=0.159006s, 431232 KB] Evaluated 229 state(s).
[t=0.159006s, 431232 KB] Evaluations: 229
[t=0.159006s, 431232 KB] Generated 344 state(s).
[t=0.159006s, 431232 KB] Dead ends: 1 state(s).
[t=0.159006s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.159006s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.159006s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.159006s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.159006s, 431232 KB] Number of registered states: 229
[t=0.159006s, 431232 KB] Int hash set load factor: 229/256 = 0.894531
[t=0.159006s, 431232 KB] Int hash set resizes: 8
[t=0.159006s, 431232 KB] Search time: 0.132498s
[t=0.159006s, 431232 KB] Total time: 0.159006s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p74.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7379e-05s, 424928 KB] reading input...
[t=0.00220957s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260181s, 427536 KB] Building successor generator...done!
[t=0.026316s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263399s, 427536 KB] time for successor generation creation: 0.000166449s
[t=0.0263696s, 427536 KB] Variables: 25
[t=0.026393s, 427536 KB] FactPairs: 182
[t=0.0264154s, 427536 KB] Bytes per state: 8
[t=0.0266144s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0989189s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.0989702s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989966s, 430128 KB] f = 104, 1 evaluated, 0 expanded
[t=0.0990243s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.0990486s, 430128 KB] pruning method: none
[t=0.117742s, 431100 KB] f = 109, 5 evaluated, 1 expanded
[t=0.118533s, 431100 KB] f = 112, 9 evaluated, 2 expanded
[t=0.119111s, 431100 KB] f = 117, 12 evaluated, 3 expanded
[t=0.119684s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.119714s, 431100 KB] g=2, 15 evaluated, 4 expanded
[t=0.120996s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.121027s, 431100 KB] g=4, 22 evaluated, 6 expanded
[t=0.121421s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.121461s, 431100 KB] g=5, 24 evaluated, 7 expanded
[t=0.127205s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.127239s, 431100 KB] g=10, 56 evaluated, 17 expanded
[t=0.127449s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.127478s, 431100 KB] g=10, 57 evaluated, 17 expanded
[t=0.180862s, 431232 KB] f = 118, 355 evaluated, 109 expanded
[t=0.202326s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.202365s, 431364 KB] g=22, 474 evaluated, 139 expanded
[t=0.232044s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.232081s, 431364 KB] g=31, 639 evaluated, 178 expanded, 1 reopened
[t=0.238217s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.238252s, 431364 KB] g=36, 673 evaluated, 186 expanded, 1 reopened
[t=0.238643s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.238678s, 431496 KB] g=37, 675 evaluated, 187 expanded, 1 reopened
[t=0.251491s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.251527s, 431496 KB] g=25, 746 evaluated, 208 expanded, 1 reopened
[t=0.256762s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.256796s, 431496 KB] g=29, 775 evaluated, 215 expanded, 1 reopened
[t=0.305691s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.305734s, 431628 KB] g=32, 1047 evaluated, 293 expanded, 2 reopened
[t=0.528072s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.528121s, 432024 KB] g=40, 2276 evaluated, 1080 expanded, 382 reopened
[t=1.22098s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=1.22103s, 432552 KB] g=40, 6128 evaluated, 2883 expanded, 1009 reopened
[t=1.22375s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=1.22379s, 432552 KB] g=42, 6143 evaluated, 2887 expanded, 1009 reopened
[t=1.22618s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=1.22622s, 432552 KB] g=42, 6156 evaluated, 2891 expanded, 1009 reopened
[t=1.22732s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=1.22735s, 432552 KB] g=43, 6162 evaluated, 2892 expanded, 1009 reopened
[t=1.22774s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=1.22778s, 432552 KB] g=44, 6164 evaluated, 2893 expanded, 1009 reopened
[t=1.22817s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=1.2282s, 432552 KB] g=45, 6166 evaluated, 2894 expanded, 1009 reopened
[t=1.22878s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=1.22881s, 432552 KB] g=46, 6169 evaluated, 2895 expanded, 1009 reopened
[t=1.2292s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=1.22923s, 432552 KB] g=47, 6171 evaluated, 2896 expanded, 1009 reopened
[t=1.22998s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=1.23002s, 432552 KB] g=48, 6175 evaluated, 2897 expanded, 1009 reopened
[t=1.23059s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=1.23062s, 432552 KB] g=49, 6178 evaluated, 2898 expanded, 1009 reopened
[t=1.23316s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=1.23319s, 432552 KB] g=53, 6192 evaluated, 2902 expanded, 1009 reopened
[t=1.23969s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=1.23973s, 432552 KB] g=55, 6228 evaluated, 2916 expanded, 1009 reopened
[t=1.24012s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=1.24015s, 432552 KB] g=56, 6230 evaluated, 2917 expanded, 1009 reopened
[t=1.24054s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=1.24057s, 432552 KB] g=57, 6232 evaluated, 2918 expanded, 1009 reopened
[t=1.24186s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=1.2419s, 432552 KB] g=59, 6239 evaluated, 2921 expanded, 1009 reopened
[t=1.24229s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=1.24232s, 432552 KB] g=60, 6241 evaluated, 2922 expanded, 1009 reopened
[t=1.24271s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=1.24274s, 432552 KB] g=61, 6243 evaluated, 2923 expanded, 1009 reopened
[t=1.24277s, 432552 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=1.2428s, 432552 KB] g=62, 6244 evaluated, 2924 expanded, 1009 reopened
[t=1.24282s, 432552 KB] Solution found!
[t=1.24285s, 432552 KB] Actual search time: 1.1438s
unstack e i (1)
stack e k (1)
unstack f g (1)
stack f d (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c e (1)
unstack f d (1)
stack f g (1)
unstack c e (1)
stack c i (1)
unstack d b (1)
put-down d (1)
unstack c i (1)
stack c e (1)
unstack b l (1)
stack b c (1)
unstack l j (1)
stack l d (1)
unstack j h (1)
stack j l (1)
unstack f g (1)
stack f j (1)
unstack g a (1)
stack g h (1)
pick-up a (1)
stack a i (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a i (1)
stack a h (1)
unstack b c (1)
stack b i (1)
unstack c e (1)
stack c b (1)
unstack f j (1)
stack f a (1)
unstack e k (1)
stack e c (1)
pick-up k (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=1.24287s, 432552 KB] Plan length: 62 step(s).
[t=1.24287s, 432552 KB] Plan cost: 62
[t=1.24287s, 432552 KB] Expanded 2925 state(s).
[t=1.24287s, 432552 KB] Reopened 1009 state(s).
[t=1.24287s, 432552 KB] Evaluated 6244 state(s).
[t=1.24287s, 432552 KB] Evaluations: 6244
[t=1.24287s, 432552 KB] Generated 13851 state(s).
[t=1.24287s, 432552 KB] Dead ends: 0 state(s).
[t=1.24287s, 432552 KB] Expanded until last jump: 109 state(s).
[t=1.24287s, 432552 KB] Reopened until last jump: 0 state(s).
[t=1.24287s, 432552 KB] Evaluated until last jump: 355 state(s).
[t=1.24287s, 432552 KB] Generated until last jump: 478 state(s).
[t=1.24287s, 432552 KB] Number of registered states: 6244
[t=1.24287s, 432552 KB] Int hash set load factor: 6244/8192 = 0.762207
[t=1.24287s, 432552 KB] Int hash set resizes: 13
[t=1.24287s, 432552 KB] Search time: 1.21626s
[t=1.24287s, 432552 KB] Total time: 1.24287s
Solution found.
Peak memory: 432552 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p75.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.020s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.6222e-05s, 424928 KB] reading input...
[t=0.00221051s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262139s, 427536 KB] Building successor generator...done!
[t=0.0264972s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265202s, 427536 KB] time for successor generation creation: 0.00017097s
[t=0.0265484s, 427536 KB] Variables: 25
[t=0.0265709s, 427536 KB] FactPairs: 182
[t=0.0265929s, 427536 KB] Bytes per state: 8
[t=0.0267894s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.108099s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.108156s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.108182s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.108209s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.108233s, 430128 KB] pruning method: none
[t=0.126615s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.126665s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.127077s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.127109s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.127863s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.127893s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.131352s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.131384s, 431100 KB] g=6, 28 evaluated, 6 expanded
[t=0.134281s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.134311s, 431100 KB] g=10, 44 evaluated, 10 expanded
[t=0.140476s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.140513s, 431100 KB] g=7, 78 evaluated, 18 expanded
[t=0.141623s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.141656s, 431100 KB] g=8, 84 evaluated, 20 expanded
[t=0.145289s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.145324s, 431100 KB] g=11, 104 evaluated, 27 expanded
[t=0.23476s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.234809s, 431232 KB] g=18, 602 evaluated, 171 expanded, 3 reopened
[t=0.288672s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.288713s, 431364 KB] g=13, 902 evaluated, 256 expanded, 5 reopened
[t=0.290001s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.290034s, 431364 KB] g=15, 909 evaluated, 258 expanded, 5 reopened
[t=0.290424s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.290453s, 431364 KB] g=16, 911 evaluated, 259 expanded, 5 reopened
[t=0.293009s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.293042s, 431364 KB] g=16, 925 evaluated, 264 expanded, 5 reopened
[t=0.293435s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.293467s, 431364 KB] g=17, 927 evaluated, 265 expanded, 5 reopened
[t=0.296006s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.296039s, 431364 KB] g=19, 941 evaluated, 268 expanded, 5 reopened
[t=0.296789s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.296821s, 431364 KB] g=20, 945 evaluated, 269 expanded, 5 reopened
[t=0.323527s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.323567s, 431496 KB] g=25, 1093 evaluated, 316 expanded, 5 reopened
[t=0.329908s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.329946s, 431496 KB] g=26, 1128 evaluated, 327 expanded, 5 reopened
[t=0.335395s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.33543s, 431496 KB] g=31, 1158 evaluated, 337 expanded, 5 reopened
[t=0.336182s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.336212s, 431496 KB] g=32, 1162 evaluated, 338 expanded, 5 reopened
[t=0.336787s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.336817s, 431496 KB] g=33, 1165 evaluated, 339 expanded, 5 reopened
[t=0.337209s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.337238s, 431496 KB] g=33, 1167 evaluated, 339 expanded, 5 reopened
[t=0.340708s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.340742s, 431496 KB] g=36, 1186 evaluated, 344 expanded, 5 reopened
[t=0.342038s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.342076s, 431496 KB] g=38, 1193 evaluated, 346 expanded, 5 reopened
[t=0.344815s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.344847s, 431496 KB] g=41, 1208 evaluated, 351 expanded, 5 reopened
[t=0.345059s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.345088s, 431496 KB] g=41, 1209 evaluated, 351 expanded, 5 reopened
[t=0.3462s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.34623s, 431496 KB] g=43, 1215 evaluated, 353 expanded, 5 reopened
[t=0.348792s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.348829s, 431496 KB] g=46, 1229 evaluated, 357 expanded, 5 reopened
[t=0.350306s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.35034s, 431496 KB] g=49, 1237 evaluated, 360 expanded, 5 reopened
[t=0.351475s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.351507s, 431496 KB] g=48, 1243 evaluated, 363 expanded, 5 reopened
[t=0.35226s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.352293s, 431496 KB] g=50, 1247 evaluated, 365 expanded, 5 reopened
[t=0.353049s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.353078s, 431496 KB] g=52, 1251 evaluated, 367 expanded, 5 reopened
[t=0.353654s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.353684s, 431496 KB] g=54, 1254 evaluated, 369 expanded, 5 reopened
[t=0.356101s, 431496 KB] Solution found!
[t=0.356138s, 431496 KB] Actual search time: 0.247902s
stack b j (1)
unstack d i (1)
stack d k (1)
unstack f l (1)
stack f i (1)
pick-up l (1)
stack l b (1)
unstack d k (1)
stack d l (1)
unstack k h (1)
stack k f (1)
unstack a g (1)
stack a k (1)
unstack d l (1)
put-down d (1)
unstack h e (1)
stack h a (1)
unstack l b (1)
stack l d (1)
pick-up e (1)
stack e h (1)
unstack b j (1)
put-down b (1)
unstack e h (1)
stack e b (1)
pick-up j (1)
stack j e (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack j e (1)
stack j l (1)
unstack k f (1)
stack k j (1)
unstack f i (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.356164s, 431496 KB] Plan length: 57 step(s).
[t=0.356164s, 431496 KB] Plan cost: 57
[t=0.356164s, 431496 KB] Expanded 379 state(s).
[t=0.356164s, 431496 KB] Reopened 5 state(s).
[t=0.356164s, 431496 KB] Evaluated 1268 state(s).
[t=0.356164s, 431496 KB] Evaluations: 1268
[t=0.356164s, 431496 KB] Generated 1722 state(s).
[t=0.356164s, 431496 KB] Dead ends: 0 state(s).
[t=0.356164s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.356164s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.356164s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.356164s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.356164s, 431496 KB] Number of registered states: 1268
[t=0.356164s, 431496 KB] Int hash set load factor: 1268/2048 = 0.619141
[t=0.356164s, 431496 KB] Int hash set resizes: 11
[t=0.356164s, 431496 KB] Search time: 0.329375s
[t=0.356164s, 431496 KB] Total time: 0.356164s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p76.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6506e-05s, 424928 KB] reading input...
[t=0.00216957s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258755s, 427536 KB] Building successor generator...done!
[t=0.0261548s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261781s, 427536 KB] time for successor generation creation: 0.000167895s
[t=0.0262067s, 427536 KB] Variables: 25
[t=0.0262295s, 427536 KB] FactPairs: 182
[t=0.026261s, 427536 KB] Bytes per state: 8
[t=0.0264577s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098009s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0980599s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980858s, 430128 KB] f = 108, 1 evaluated, 0 expanded
[t=0.0981133s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0981372s, 430128 KB] pruning method: none
[t=0.116517s, 431100 KB] f = 111, 4 evaluated, 1 expanded
[t=0.116933s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.116965s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117537s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.117567s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.123893s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.123926s, 431100 KB] g=9, 44 evaluated, 18 expanded
[t=0.126645s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.126678s, 431100 KB] g=13, 59 evaluated, 22 expanded
[t=0.144658s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.144695s, 431100 KB] g=16, 159 evaluated, 47 expanded
[t=0.147761s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.147796s, 431100 KB] g=18, 176 evaluated, 50 expanded
[t=0.149798s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.149835s, 431100 KB] g=20, 187 evaluated, 52 expanded
[t=0.150937s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.150969s, 431100 KB] g=21, 193 evaluated, 53 expanded
[t=0.155107s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.15514s, 431232 KB] g=22, 216 evaluated, 56 expanded
[t=0.15553s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.155562s, 431232 KB] g=23, 218 evaluated, 57 expanded
[t=0.160785s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.160822s, 431232 KB] g=23, 247 evaluated, 63 expanded
[t=0.163907s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.163941s, 431232 KB] g=26, 264 evaluated, 66 expanded
[t=0.168462s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.168497s, 431232 KB] g=28, 289 evaluated, 69 expanded
[t=0.172292s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.172324s, 431232 KB] g=29, 310 evaluated, 73 expanded
[t=0.179687s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.179721s, 431232 KB] g=31, 351 evaluated, 80 expanded
[t=0.184584s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.184618s, 431232 KB] g=36, 378 evaluated, 85 expanded
[t=0.192134s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.192168s, 431232 KB] g=38, 420 evaluated, 94 expanded
[t=0.194715s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.194749s, 431232 KB] g=38, 434 evaluated, 99 expanded
[t=0.195496s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.195531s, 431364 KB] g=39, 438 evaluated, 100 expanded
[t=0.196825s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.196859s, 431364 KB] g=41, 445 evaluated, 102 expanded
[t=0.1985s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.198531s, 431364 KB] g=44, 454 evaluated, 105 expanded
[t=0.198741s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.19877s, 431364 KB] g=44, 455 evaluated, 105 expanded
[t=0.20131s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.201343s, 431364 KB] g=46, 469 evaluated, 109 expanded
[t=0.20245s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.202481s, 431364 KB] g=48, 475 evaluated, 111 expanded
[t=0.210286s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.210323s, 431364 KB] g=50, 518 evaluated, 125 expanded
[t=0.216302s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.216342s, 431364 KB] g=50, 551 evaluated, 136 expanded
[t=0.216916s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.216947s, 431364 KB] g=51, 554 evaluated, 137 expanded
[t=0.217871s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.217903s, 431364 KB] g=52, 559 evaluated, 138 expanded
[t=0.218119s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.218148s, 431364 KB] g=53, 560 evaluated, 139 expanded
[t=0.218546s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.218576s, 431364 KB] g=54, 562 evaluated, 140 expanded
[t=0.218978s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.219008s, 431364 KB] g=56, 565 evaluated, 142 expanded
[t=0.219035s, 431364 KB] Solution found!
[t=0.219061s, 431364 KB] Actual search time: 0.12092s
unstack d a (1)
put-down d (1)
unstack a c (1)
stack a j (1)
pick-up h (1)
stack h a (1)
unstack c i (1)
put-down c (1)
unstack i k (1)
put-down i (1)
unstack k b (1)
stack k c (1)
unstack b e (1)
put-down b (1)
unstack e g (1)
put-down e (1)
unstack g l (1)
stack g e (1)
unstack l f (1)
stack l b (1)
pick-up f (1)
stack f l (1)
unstack g e (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a k (1)
pick-up j (1)
stack j i (1)
unstack a k (1)
stack a h (1)
pick-up d (1)
stack d j (1)
unstack f l (1)
stack f a (1)
pick-up e (1)
stack e d (1)
unstack k c (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.219086s, 431364 KB] Plan length: 56 step(s).
[t=0.219086s, 431364 KB] Plan cost: 56
[t=0.219086s, 431364 KB] Expanded 143 state(s).
[t=0.219086s, 431364 KB] Reopened 0 state(s).
[t=0.219086s, 431364 KB] Evaluated 565 state(s).
[t=0.219086s, 431364 KB] Evaluations: 565
[t=0.219086s, 431364 KB] Generated 713 state(s).
[t=0.219086s, 431364 KB] Dead ends: 0 state(s).
[t=0.219086s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.219086s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.219086s, 431364 KB] Evaluated until last jump: 4 state(s).
[t=0.219086s, 431364 KB] Generated until last jump: 3 state(s).
[t=0.219086s, 431364 KB] Number of registered states: 565
[t=0.219086s, 431364 KB] Int hash set load factor: 565/1024 = 0.551758
[t=0.219086s, 431364 KB] Int hash set resizes: 10
[t=0.219086s, 431364 KB] Search time: 0.192629s
[t=0.219086s, 431364 KB] Total time: 0.219086s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p77.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9909e-05s, 424928 KB] reading input...
[t=0.00217195s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257996s, 427536 KB] Building successor generator...done!
[t=0.0260871s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261105s, 427536 KB] time for successor generation creation: 0.000175625s
[t=0.0261385s, 427536 KB] Variables: 25
[t=0.0261607s, 427536 KB] FactPairs: 182
[t=0.0261821s, 427536 KB] Bytes per state: 8
[t=0.026369s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.097843s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.0978945s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979207s, 430128 KB] f = 96, 1 evaluated, 0 expanded
[t=0.0979473s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.0979712s, 430128 KB] pruning method: none
[t=0.116752s, 431100 KB] f = 107, 7 evaluated, 1 expanded
[t=0.117513s, 431100 KB] f = 118, 11 evaluated, 2 expanded
[t=0.118439s, 431100 KB] f = 119, 16 evaluated, 3 expanded
[t=0.119521s, 431100 KB] f = 120, 22 evaluated, 4 expanded
[t=0.122171s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.122204s, 431100 KB] g=5, 37 evaluated, 7 expanded
[t=0.130281s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.130318s, 431100 KB] g=10, 83 evaluated, 20 expanded
[t=0.133861s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.133895s, 431100 KB] g=12, 103 evaluated, 26 expanded
[t=0.158726s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.158765s, 431232 KB] g=15, 244 evaluated, 88 expanded, 19 reopened
[t=0.167868s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.167914s, 431232 KB] g=21, 296 evaluated, 99 expanded, 19 reopened
[t=0.258253s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.258297s, 431496 KB] g=17, 815 evaluated, 225 expanded, 22 reopened
[t=0.280619s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.280656s, 431496 KB] g=18, 943 evaluated, 264 expanded, 22 reopened
[t=0.38428s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.384323s, 431628 KB] g=27, 1536 evaluated, 442 expanded, 30 reopened
[t=0.385961s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.385998s, 431628 KB] g=28, 1545 evaluated, 444 expanded, 30 reopened
[t=0.386385s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.386414s, 431628 KB] g=29, 1547 evaluated, 445 expanded, 30 reopened
[t=0.388017s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.388048s, 431628 KB] g=31, 1556 evaluated, 447 expanded, 30 reopened
[t=0.388782s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.388815s, 431628 KB] g=32, 1560 evaluated, 448 expanded, 30 reopened
[t=0.394617s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.394656s, 431628 KB] g=37, 1593 evaluated, 458 expanded, 30 reopened
[t=0.399751s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.399788s, 431628 KB] g=39, 1622 evaluated, 465 expanded, 30 reopened
[t=0.406295s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.406331s, 431760 KB] g=37, 1659 evaluated, 476 expanded, 30 reopened
[t=0.407763s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.407797s, 431760 KB] g=39, 1667 evaluated, 478 expanded, 30 reopened
[t=0.40818s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.40821s, 431760 KB] g=40, 1669 evaluated, 479 expanded, 30 reopened
[t=0.409119s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.409149s, 431760 KB] g=41, 1674 evaluated, 480 expanded, 30 reopened
[t=0.410072s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.410105s, 431760 KB] g=43, 1679 evaluated, 482 expanded, 30 reopened
[t=0.410838s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.410879s, 431760 KB] g=44, 1683 evaluated, 483 expanded, 30 reopened
[t=0.411086s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.411115s, 431760 KB] g=44, 1684 evaluated, 483 expanded, 30 reopened
[t=0.412545s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.412578s, 431760 KB] g=46, 1692 evaluated, 485 expanded, 30 reopened
[t=0.412962s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.412992s, 431760 KB] g=47, 1694 evaluated, 486 expanded, 30 reopened
[t=0.413906s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.413938s, 431760 KB] g=49, 1699 evaluated, 488 expanded, 30 reopened
[t=0.417285s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.417319s, 431760 KB] g=52, 1718 evaluated, 495 expanded, 30 reopened
[t=0.418415s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.41845s, 431760 KB] g=55, 1724 evaluated, 498 expanded, 30 reopened
[t=0.419184s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.419214s, 431760 KB] g=56, 1728 evaluated, 499 expanded, 30 reopened
[t=0.427322s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.42736s, 431760 KB] g=58, 1774 evaluated, 521 expanded, 32 reopened
[t=0.428977s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.42901s, 431760 KB] g=61, 1783 evaluated, 527 expanded, 32 reopened
[t=0.429576s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.429606s, 431760 KB] g=63, 1786 evaluated, 529 expanded, 32 reopened
[t=0.430002s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.430034s, 431760 KB] g=64, 1788 evaluated, 530 expanded, 32 reopened
[t=0.431131s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.431161s, 431760 KB] g=67, 1795 evaluated, 536 expanded, 32 reopened
[t=0.431188s, 431760 KB] Solution found!
[t=0.431215s, 431760 KB] Actual search time: 0.333239s
put-down g (1)
unstack i c (1)
stack i a (1)
pick-up c (1)
stack c k (1)
unstack f e (1)
stack f d (1)
unstack c k (1)
stack c e (1)
unstack f d (1)
stack f i (1)
unstack c e (1)
put-down c (1)
pick-up e (1)
stack e k (1)
unstack f i (1)
stack f g (1)
unstack i a (1)
stack i c (1)
unstack f g (1)
stack f i (1)
unstack a l (1)
stack a f (1)
unstack d b (1)
stack d a (1)
unstack l j (1)
stack l b (1)
unstack j h (1)
stack j d (1)
pick-up h (1)
stack h g (1)
unstack l b (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack j d (1)
stack j b (1)
unstack d a (1)
stack d j (1)
unstack a f (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack e k (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d i (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.431238s, 431760 KB] Plan length: 67 step(s).
[t=0.431238s, 431760 KB] Plan cost: 67
[t=0.431238s, 431760 KB] Expanded 537 state(s).
[t=0.431238s, 431760 KB] Reopened 32 state(s).
[t=0.431238s, 431760 KB] Evaluated 1795 state(s).
[t=0.431238s, 431760 KB] Evaluations: 1795
[t=0.431238s, 431760 KB] Generated 2542 state(s).
[t=0.431238s, 431760 KB] Dead ends: 0 state(s).
[t=0.431238s, 431760 KB] Expanded until last jump: 4 state(s).
[t=0.431238s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.431238s, 431760 KB] Evaluated until last jump: 22 state(s).
[t=0.431238s, 431760 KB] Generated until last jump: 24 state(s).
[t=0.431238s, 431760 KB] Number of registered states: 1795
[t=0.431238s, 431760 KB] Int hash set load factor: 1795/2048 = 0.876465
[t=0.431238s, 431760 KB] Int hash set resizes: 11
[t=0.431238s, 431760 KB] Search time: 0.40487s
[t=0.431238s, 431760 KB] Total time: 0.431238s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p78.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.639e-05s, 424928 KB] reading input...
[t=0.00211458s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257548s, 427536 KB] Building successor generator...done!
[t=0.0260347s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260588s, 427536 KB] time for successor generation creation: 0.000168115s
[t=0.0260875s, 427536 KB] Variables: 25
[t=0.0261111s, 427536 KB] FactPairs: 182
[t=0.0261333s, 427536 KB] Bytes per state: 8
[t=0.0263258s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979289s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0979807s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980066s, 430128 KB] f = 111, 1 evaluated, 0 expanded
[t=0.098034s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0980584s, 430128 KB] pruning method: none
[t=0.10986s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.109912s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116393s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.116436s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116841s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.116872s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.123172s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.123205s, 431100 KB] g=9, 40 evaluated, 16 expanded
[t=0.125225s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.125258s, 431100 KB] g=9, 51 evaluated, 20 expanded
[t=0.125468s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.125497s, 431100 KB] g=9, 52 evaluated, 20 expanded
[t=0.131449s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.131482s, 431100 KB] g=12, 85 evaluated, 31 expanded
[t=0.155444s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.15548s, 431232 KB] g=15, 218 evaluated, 77 expanded, 3 reopened
[t=0.156109s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.156147s, 431232 KB] g=16, 221 evaluated, 78 expanded, 3 reopened
[t=0.185771s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.185807s, 431232 KB] g=19, 384 evaluated, 151 expanded, 12 reopened
[t=0.186205s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.186238s, 431232 KB] g=20, 386 evaluated, 152 expanded, 12 reopened
[t=0.191473s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.191509s, 431232 KB] g=23, 415 evaluated, 163 expanded, 12 reopened
[t=0.19173s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.191761s, 431232 KB] g=24, 416 evaluated, 164 expanded, 12 reopened
[t=0.19287s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.1929s, 431232 KB] g=26, 422 evaluated, 166 expanded, 12 reopened
[t=0.19507s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.195104s, 431232 KB] g=29, 434 evaluated, 170 expanded, 12 reopened
[t=0.196762s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.196797s, 431232 KB] g=31, 443 evaluated, 174 expanded, 12 reopened
[t=0.198436s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.19847s, 431232 KB] g=33, 452 evaluated, 179 expanded, 12 reopened
[t=0.200299s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.200332s, 431232 KB] g=36, 462 evaluated, 182 expanded, 12 reopened
[t=0.20126s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.20129s, 431232 KB] g=37, 467 evaluated, 183 expanded, 12 reopened
[t=0.203827s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.203863s, 431364 KB] g=37, 481 evaluated, 187 expanded, 12 reopened
[t=0.204427s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.204457s, 431364 KB] g=37, 484 evaluated, 187 expanded, 12 reopened
[t=0.205026s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.205055s, 431364 KB] g=38, 487 evaluated, 188 expanded, 12 reopened
[t=0.205446s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.205475s, 431364 KB] g=39, 489 evaluated, 189 expanded, 12 reopened
[t=0.206403s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.206433s, 431364 KB] g=40, 494 evaluated, 190 expanded, 12 reopened
[t=0.206646s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.20668s, 431364 KB] g=41, 495 evaluated, 191 expanded, 12 reopened
[t=0.207071s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.207099s, 431364 KB] g=42, 497 evaluated, 192 expanded, 12 reopened
[t=0.207492s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.207524s, 431364 KB] g=43, 499 evaluated, 193 expanded, 12 reopened
[t=0.207554s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.207577s, 431364 KB] g=44, 500 evaluated, 194 expanded, 12 reopened
[t=0.207603s, 431364 KB] Solution found!
[t=0.207637s, 431364 KB] Actual search time: 0.109575s
unstack g f (1)
stack g h (1)
unstack f l (1)
stack f j (1)
unstack g h (1)
put-down g (1)
unstack l a (1)
put-down l (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
put-down a (1)
unstack h g (1)
stack h a (1)
pick-up k (1)
stack k l (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack j e (1)
put-down j (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b i (1)
put-down b (1)
unstack i d (1)
put-down i (1)
unstack d c (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.207663s, 431364 KB] Plan length: 44 step(s).
[t=0.207663s, 431364 KB] Plan cost: 44
[t=0.207663s, 431364 KB] Expanded 195 state(s).
[t=0.207663s, 431364 KB] Reopened 12 state(s).
[t=0.207663s, 431364 KB] Evaluated 500 state(s).
[t=0.207663s, 431364 KB] Evaluations: 500
[t=0.207663s, 431364 KB] Generated 771 state(s).
[t=0.207663s, 431364 KB] Dead ends: 0 state(s).
[t=0.207663s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.207663s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.207663s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.207663s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.207663s, 431364 KB] Number of registered states: 500
[t=0.207663s, 431364 KB] Int hash set load factor: 500/512 = 0.976562
[t=0.207663s, 431364 KB] Int hash set resizes: 9
[t=0.207663s, 431364 KB] Search time: 0.181338s
[t=0.207663s, 431364 KB] Total time: 0.207663s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p79.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5785e-05s, 424928 KB] reading input...
[t=0.00213057s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258914s, 427536 KB] Building successor generator...done!
[t=0.0261696s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261932s, 427536 KB] time for successor generation creation: 0.00016872s
[t=0.0262216s, 427536 KB] Variables: 25
[t=0.0262451s, 427536 KB] FactPairs: 182
[t=0.0262674s, 427536 KB] Bytes per state: 8
[t=0.0264643s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981501s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.0982037s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982294s, 430128 KB] f = 95, 1 evaluated, 0 expanded
[t=0.0982572s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.0982815s, 430128 KB] pruning method: none
[t=0.11644s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.11649s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116709s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.116739s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117486s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.117516s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118273s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.118315s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.121549s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.12158s, 431100 KB] g=5, 30 evaluated, 8 expanded
[t=0.126266s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.126304s, 431100 KB] g=6, 56 evaluated, 16 expanded
[t=0.127051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.12708s, 431100 KB] g=7, 60 evaluated, 17 expanded
[t=0.129261s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.129294s, 431100 KB] g=9, 72 evaluated, 21 expanded
[t=0.130935s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.130966s, 431100 KB] g=11, 81 evaluated, 23 expanded
[t=0.135984s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.13602s, 431100 KB] g=14, 109 evaluated, 32 expanded
[t=0.136412s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.136441s, 431100 KB] g=15, 111 evaluated, 33 expanded
[t=0.137003s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.137035s, 431100 KB] g=15, 114 evaluated, 33 expanded
[t=0.137247s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.137276s, 431100 KB] g=16, 115 evaluated, 34 expanded
[t=0.139453s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.139488s, 431100 KB] g=18, 127 evaluated, 36 expanded
[t=0.140781s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.140813s, 431100 KB] g=20, 134 evaluated, 38 expanded
[t=0.141199s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.141228s, 431100 KB] g=20, 136 evaluated, 38 expanded
[t=0.141804s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.141835s, 431100 KB] g=21, 139 evaluated, 39 expanded
[t=0.14454s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.144576s, 431232 KB] g=23, 154 evaluated, 42 expanded
[t=0.144964s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.144995s, 431232 KB] g=23, 156 evaluated, 42 expanded
[t=0.14521s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.145245s, 431232 KB] g=24, 157 evaluated, 43 expanded
[t=0.14903s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.149064s, 431232 KB] g=27, 178 evaluated, 47 expanded
[t=0.150346s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.150378s, 431232 KB] g=28, 185 evaluated, 48 expanded
[t=0.1538s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.153835s, 431232 KB] g=30, 204 evaluated, 53 expanded
[t=0.157801s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.157834s, 431232 KB] g=35, 226 evaluated, 60 expanded
[t=0.158402s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.158432s, 431232 KB] g=36, 229 evaluated, 61 expanded
[t=0.159712s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.159745s, 431232 KB] g=38, 236 evaluated, 63 expanded
[t=0.161022s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.161054s, 431232 KB] g=39, 243 evaluated, 65 expanded
[t=0.161624s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.161653s, 431232 KB] g=40, 246 evaluated, 66 expanded
[t=0.162413s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.162446s, 431232 KB] g=41, 250 evaluated, 67 expanded
[t=0.163753s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.163785s, 431232 KB] g=44, 257 evaluated, 70 expanded
[t=0.164534s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.164564s, 431232 KB] g=46, 261 evaluated, 73 expanded
[t=0.164775s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.164803s, 431232 KB] g=47, 262 evaluated, 74 expanded
[t=0.165194s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.165223s, 431232 KB] g=48, 264 evaluated, 75 expanded
[t=0.166335s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.166367s, 431232 KB] g=51, 270 evaluated, 79 expanded
[t=0.166757s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.166786s, 431232 KB] g=52, 272 evaluated, 80 expanded
[t=0.166816s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.166845s, 431232 KB] g=53, 273 evaluated, 81 expanded
[t=0.166871s, 431232 KB] Solution found!
[t=0.166897s, 431232 KB] Actual search time: 0.0686108s
stack j d (1)
unstack b e (1)
stack b j (1)
unstack f l (1)
stack f a (1)
unstack b j (1)
stack b l (1)
unstack f a (1)
stack f e (1)
unstack a i (1)
stack a b (1)
unstack j d (1)
stack j i (1)
unstack d g (1)
put-down d (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack f e (1)
stack f d (1)
unstack e k (1)
put-down e (1)
unstack a b (1)
stack a h (1)
pick-up e (1)
stack e b (1)
pick-up k (1)
stack k j (1)
unstack f d (1)
stack f a (1)
unstack e b (1)
stack e d (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.166921s, 431232 KB] Plan length: 53 step(s).
[t=0.166921s, 431232 KB] Plan cost: 53
[t=0.166921s, 431232 KB] Expanded 82 state(s).
[t=0.166921s, 431232 KB] Reopened 0 state(s).
[t=0.166921s, 431232 KB] Evaluated 273 state(s).
[t=0.166921s, 431232 KB] Evaluations: 273
[t=0.166921s, 431232 KB] Generated 355 state(s).
[t=0.166921s, 431232 KB] Dead ends: 1 state(s).
[t=0.166921s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.166921s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.166921s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.166921s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.166921s, 431232 KB] Number of registered states: 273
[t=0.166921s, 431232 KB] Int hash set load factor: 273/512 = 0.533203
[t=0.166921s, 431232 KB] Int hash set resizes: 9
[t=0.166921s, 431232 KB] Search time: 0.140458s
[t=0.166921s, 431232 KB] Total time: 0.166921s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p80.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.951e-05s, 424928 KB] reading input...
[t=0.00214319s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260384s, 427536 KB] Building successor generator...done!
[t=0.0263196s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263433s, 427536 KB] time for successor generation creation: 0.000168903s
[t=0.0263724s, 427536 KB] Variables: 25
[t=0.0263951s, 427536 KB] FactPairs: 182
[t=0.0264171s, 427536 KB] Bytes per state: 8
[t=0.0266134s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990459s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0990989s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991245s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0991525s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0991766s, 430128 KB] pruning method: none
[t=0.111091s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.111142s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118478s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.118522s, 431100 KB] g=4, 8 evaluated, 4 expanded
[t=0.122652s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.122685s, 431100 KB] g=6, 31 evaluated, 12 expanded
[t=0.130364s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.130399s, 431100 KB] g=8, 74 evaluated, 24 expanded
[t=0.136122s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.136158s, 431100 KB] g=12, 106 evaluated, 33 expanded
[t=0.136893s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.136923s, 431100 KB] g=12, 110 evaluated, 33 expanded
[t=0.138026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.13806s, 431100 KB] g=13, 116 evaluated, 34 expanded
[t=0.138622s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.138662s, 431100 KB] g=14, 119 evaluated, 35 expanded
[t=0.140464s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.140495s, 431100 KB] g=16, 129 evaluated, 37 expanded
[t=0.143181s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.143217s, 431100 KB] g=18, 144 evaluated, 40 expanded
[t=0.143955s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.143988s, 431100 KB] g=17, 148 evaluated, 42 expanded
[t=0.146134s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.146169s, 431100 KB] g=18, 160 evaluated, 44 expanded
[t=0.150609s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.150645s, 431100 KB] g=21, 185 evaluated, 50 expanded
[t=0.151026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.151056s, 431100 KB] g=21, 187 evaluated, 50 expanded
[t=0.155155s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.155188s, 431232 KB] g=25, 210 evaluated, 57 expanded
[t=0.155573s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.155603s, 431232 KB] g=25, 212 evaluated, 57 expanded
[t=0.156522s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.156552s, 431232 KB] g=27, 217 evaluated, 59 expanded
[t=0.157294s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.157326s, 431232 KB] g=28, 221 evaluated, 60 expanded
[t=0.160911s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.160944s, 431232 KB] g=30, 241 evaluated, 68 expanded
[t=0.161866s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.161897s, 431232 KB] g=31, 246 evaluated, 69 expanded
[t=0.16833s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.168366s, 431232 KB] g=33, 282 evaluated, 80 expanded
[t=0.176869s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.176904s, 431232 KB] g=36, 330 evaluated, 95 expanded
[t=0.177287s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.177316s, 431232 KB] g=36, 332 evaluated, 95 expanded
[t=0.225761s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.225803s, 431232 KB] g=39, 606 evaluated, 188 expanded, 16 reopened
[t=0.226896s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.226926s, 431232 KB] g=40, 612 evaluated, 190 expanded, 16 reopened
[t=0.227835s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.227868s, 431232 KB] g=41, 617 evaluated, 191 expanded, 16 reopened
[t=0.229495s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.229525s, 431232 KB] g=45, 626 evaluated, 196 expanded, 16 reopened
[t=0.233453s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.23349s, 431364 KB] g=43, 648 evaluated, 206 expanded, 16 reopened
[t=0.233885s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.233916s, 431364 KB] g=44, 650 evaluated, 207 expanded, 16 reopened
[t=0.234303s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.234333s, 431364 KB] g=45, 652 evaluated, 208 expanded, 16 reopened
[t=0.234363s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.234387s, 431364 KB] g=46, 653 evaluated, 209 expanded, 16 reopened
[t=0.234413s, 431364 KB] Solution found!
[t=0.234438s, 431364 KB] Actual search time: 0.135258s
unstack i d (1)
put-down i (1)
unstack k h (1)
put-down k (1)
unstack h f (1)
put-down h (1)
unstack f c (1)
stack f i (1)
unstack c a (1)
put-down c (1)
unstack a l (1)
stack a k (1)
unstack l g (1)
stack l d (1)
pick-up h (1)
stack h g (1)
unstack f i (1)
stack f c (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k l (1)
unstack f c (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d l (1)
unstack j e (1)
stack j d (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.234463s, 431364 KB] Plan length: 46 step(s).
[t=0.234463s, 431364 KB] Plan cost: 46
[t=0.234463s, 431364 KB] Expanded 210 state(s).
[t=0.234463s, 431364 KB] Reopened 16 state(s).
[t=0.234463s, 431364 KB] Evaluated 653 state(s).
[t=0.234463s, 431364 KB] Evaluations: 653
[t=0.234463s, 431364 KB] Generated 947 state(s).
[t=0.234463s, 431364 KB] Dead ends: 0 state(s).
[t=0.234463s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.234463s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.234463s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.234463s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.234463s, 431364 KB] Number of registered states: 653
[t=0.234463s, 431364 KB] Int hash set load factor: 653/1024 = 0.637695
[t=0.234463s, 431364 KB] Int hash set resizes: 10
[t=0.234463s, 431364 KB] Search time: 0.20785s
[t=0.234463s, 431364 KB] Total time: 0.234463s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.022541
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 3 test success: 20 of 20 (100.0%)

---------- FOLD 5/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 50 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.12466934323310852 (0.5690967440605164 vs. 0.44442740082740784), which occurred at index 49.
  _module_class,
 | avg_train_loss=0.099309 | avg_val_loss=0.093510
Epoch 2 | avg_train_loss=0.068468 | avg_val_loss=0.045086
Epoch 3 | avg_train_loss=0.040548 | avg_val_loss=0.038636
Epoch 4 | avg_train_loss=0.036932 | avg_val_loss=0.036964
Epoch 5 | avg_train_loss=0.035747 | avg_val_loss=0.035805
Epoch 6 | avg_train_loss=0.034591 | avg_val_loss=0.035000
Epoch 7 | avg_train_loss=0.034101 | avg_val_loss=0.034307
Epoch 8 | avg_train_loss=0.033348 | avg_val_loss=0.033928
Epoch 9 | avg_train_loss=0.032689 | avg_val_loss=0.033281
Epoch 10 | avg_train_loss=0.032291 | avg_val_loss=0.033148
Epoch 11 | avg_train_loss=0.031615 | avg_val_loss=0.032090
Epoch 12 | avg_train_loss=0.031199 | avg_val_loss=0.031936
Epoch 13 | avg_train_loss=0.030761 | avg_val_loss=0.031779
Epoch 14 | avg_train_loss=0.030393 | avg_val_loss=0.031151
Epoch 15 | avg_train_loss=0.030094 | avg_val_loss=0.030993
Epoch 16 | avg_train_loss=0.029858 | avg_val_loss=0.030883
Epoch 17 | avg_train_loss=0.029513 | avg_val_loss=0.030539
Epoch 18 | avg_train_loss=0.029141 | avg_val_loss=0.029908
Epoch 19 | avg_train_loss=0.028834 | avg_val_loss=0.029919
Epoch 20 | avg_train_loss=0.028463 | avg_val_loss=0.029517
Epoch 21 | avg_train_loss=0.028328 | avg_val_loss=0.029400
Epoch 22 | avg_train_loss=0.027958 | avg_val_loss=0.029412
Epoch 23 | avg_train_loss=0.027469 | avg_val_loss=0.028838
Epoch 24 | avg_train_loss=0.027364 | avg_val_loss=0.028912
Epoch 25 | avg_train_loss=0.026995 | avg_val_loss=0.028571
Epoch 26 | avg_train_loss=0.026580 | avg_val_loss=0.028515
Epoch 27 | avg_train_loss=0.026337 | avg_val_loss=0.028184
Epoch 28 | avg_train_loss=0.025919 | avg_val_loss=0.028108
Epoch 29 | avg_train_loss=0.025637 | avg_val_loss=0.027459
Epoch 30 | avg_train_loss=0.025523 | avg_val_loss=0.027419
Epoch 31 | avg_train_loss=0.025120 | avg_val_loss=0.026911
Epoch 32 | avg_train_loss=0.024838 | avg_val_loss=0.026994
Epoch 33 | avg_train_loss=0.024658 | avg_val_loss=0.026449
Epoch 34 | avg_train_loss=0.024461 | avg_val_loss=0.026523
Epoch 35 | avg_train_loss=0.024191 | avg_val_loss=0.026269
Epoch 36 | avg_train_loss=0.023991 | avg_val_loss=0.026592
Epoch 37 | avg_train_loss=0.023726 | avg_val_loss=0.025890
Epoch 38 | avg_train_loss=0.023514 | avg_val_loss=0.026090
Epoch 39 | avg_train_loss=0.023229 | avg_val_loss=0.025965
Epoch 40 | avg_train_loss=0.023168 | avg_val_loss=0.025591
Epoch 41 | avg_train_loss=0.023002 | avg_val_loss=0.025410
Epoch 42 | avg_train_loss=0.022796 | avg_val_loss=0.025543
Epoch 43 | avg_train_loss=0.022545 | avg_val_loss=0.025599
Epoch 44 | avg_train_loss=0.022485 | avg_val_loss=0.025212
Epoch 45 | avg_train_loss=0.022287 | avg_val_loss=0.025673
Epoch 46 | avg_train_loss=0.022063 | avg_val_loss=0.025109
Epoch 47 | avg_train_loss=0.021857 | avg_val_loss=0.024898
Epoch 48 | avg_train_loss=0.021824 | avg_val_loss=0.025130
Epoch 49 | avg_train_loss=0.021742 | avg_val_loss=0.025440
Epoch 50 | avg_train_loss=0.021517 | avg_val_loss=0.025050
Epoch 51 | avg_train_loss=0.021348 | avg_val_loss=0.024932
Epoch 52 | avg_train_loss=0.021503 | avg_val_loss=0.024561
Epoch 53 | avg_train_loss=0.021156 | avg_val_loss=0.024544
Epoch 54 | avg_train_loss=0.021075 | avg_val_loss=0.024517
Epoch 55 | avg_train_loss=0.020930 | avg_val_loss=0.024763
Epoch 56 | avg_train_loss=0.020831 | avg_val_loss=0.024565
Epoch 57 | avg_train_loss=0.020766 | avg_val_loss=0.024156
Epoch 58 | avg_train_loss=0.020587 | avg_val_loss=0.024554
Epoch 59 | avg_train_loss=0.020393 | avg_val_loss=0.024541
Epoch 60 | avg_train_loss=0.020240 | avg_val_loss=0.024086
Epoch 61 | avg_train_loss=0.020368 | avg_val_loss=0.024411
Epoch 62 | avg_train_loss=0.020084 | avg_val_loss=0.024326
Epoch 63 | avg_train_loss=0.020107 | avg_val_loss=0.024142
Epoch 64 | avg_train_loss=0.019724 | avg_val_loss=0.024034
Epoch 65 | avg_train_loss=0.019680 | avg_val_loss=0.024443
Epoch 66 | avg_train_loss=0.019641 | avg_val_loss=0.024077
Epoch 67 | avg_train_loss=0.019512 | avg_val_loss=0.024406
Epoch 68 | avg_train_loss=0.019365 | avg_val_loss=0.024086
Epoch 69 | avg_train_loss=0.019227 | avg_val_loss=0.023682
Epoch 70 | avg_train_loss=0.019158 | avg_val_loss=0.023900
Epoch 71 | avg_train_loss=0.018959 | avg_val_loss=0.023692
Epoch 72 | avg_train_loss=0.018962 | avg_val_loss=0.023967
Epoch 73 | avg_train_loss=0.018702 | avg_val_loss=0.024091
Epoch 74 | avg_train_loss=0.018571 | avg_val_loss=0.024010
Epoch 75 | avg_train_loss=0.018534 | avg_val_loss=0.024200
Epoch 76 | avg_train_loss=0.018380 | avg_val_loss=0.023634
Epoch 77 | avg_train_loss=0.018323 | avg_val_loss=0.024060
Epoch 78 | avg_train_loss=0.018280 | avg_val_loss=0.023984
Epoch 79 | avg_train_loss=0.018071 | avg_val_loss=0.024096
Epoch 80 | avg_train_loss=0.017884 | avg_val_loss=0.023625
Epoch 81 | avg_train_loss=0.017819 | avg_val_loss=0.024055
Epoch 82 | avg_train_loss=0.017674 | avg_val_loss=0.023688
Epoch 83 | avg_train_loss=0.017548 | avg_val_loss=0.023388
Epoch 84 | avg_train_loss=0.017529 | avg_val_loss=0.023906
Epoch 85 | avg_train_loss=0.017410 | avg_val_loss=0.024708
Epoch 86 | avg_train_loss=0.017304 | avg_val_loss=0.023897
Epoch 87 | avg_train_loss=0.017190 | avg_val_loss=0.023796
Epoch 88 | avg_train_loss=0.017115 | avg_val_loss=0.024051
Epoch 89 | avg_train_loss=0.017013 | avg_val_loss=0.023399
Epoch 90 | avg_train_loss=0.016846 | avg_val_loss=0.024218
Epoch 91 | avg_train_loss=0.016805 | avg_val_loss=0.024323
Epoch 92 | avg_train_loss=0.016691 | avg_val_loss=0.023975
Epoch 93 | avg_train_loss=0.016590 | avg_val_loss=0.024008
Epoch 94 | avg_train_loss=0.016412 | avg_val_loss=0.023574
Epoch 95 | avg_train_loss=0.016497 | avg_val_loss=0.023866
Epoch 96 | avg_train_loss=0.016400 | avg_val_loss=0.024558
Epoch 97 | avg_train_loss=0.016278 | avg_val_loss=0.023800
Epoch 98 | avg_train_loss=0.016154 | avg_val_loss=0.024494
Epoch 99 | avg_train_loss=0.016117 | avg_val_loss=0.023866
Epoch 100 | avg_train_loss=0.015929 | avg_val_loss=0.023740
Epoch 101 | avg_train_loss=0.015784 | avg_val_loss=0.024213
Epoch 102 | avg_train_loss=0.015767INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p81.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9186e-05s, 424928 KB] reading input...
[t=0.00215598s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259814s, 427536 KB] Building successor generator...done!
[t=0.0262649s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026289s, 427536 KB] time for successor generation creation: 0.000170088s
[t=0.0263179s, 427536 KB] Variables: 25
[t=0.0263409s, 427536 KB] FactPairs: 182
[t=0.0263636s, 427536 KB] Bytes per state: 8
[t=0.0265581s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106316s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.106372s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106398s, 430128 KB] f = 115, 1 evaluated, 0 expanded
[t=0.106425s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.10645s, 430128 KB] pruning method: none
[t=0.124726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.124776s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.125721s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.125752s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.143648s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.143683s, 431100 KB] g=9, 107 evaluated, 38 expanded, 3 reopened
[t=0.14678s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.146816s, 431100 KB] g=11, 124 evaluated, 44 expanded, 3 reopened
[t=0.148479s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.148519s, 431100 KB] g=13, 133 evaluated, 46 expanded, 3 reopened
[t=0.148916s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.148945s, 431100 KB] g=14, 135 evaluated, 47 expanded, 3 reopened
[t=0.150781s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.150816s, 431100 KB] g=15, 145 evaluated, 50 expanded, 3 reopened
[t=0.151204s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.151234s, 431100 KB] g=15, 147 evaluated, 50 expanded, 3 reopened
[t=0.151628s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.151657s, 431100 KB] g=16, 149 evaluated, 51 expanded, 3 reopened
[t=0.152948s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.152977s, 431100 KB] g=17, 156 evaluated, 54 expanded, 3 reopened
[t=0.15337s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.153399s, 431100 KB] g=18, 158 evaluated, 55 expanded, 3 reopened
[t=0.154327s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.154361s, 431100 KB] g=20, 163 evaluated, 57 expanded, 3 reopened
[t=0.154945s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.154977s, 431100 KB] g=21, 166 evaluated, 58 expanded, 3 reopened
[t=0.156277s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.156312s, 431232 KB] g=24, 173 evaluated, 61 expanded, 3 reopened
[t=0.172449s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.172483s, 431232 KB] g=26, 262 evaluated, 94 expanded, 3 reopened
[t=0.172699s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.172727s, 431232 KB] g=27, 263 evaluated, 95 expanded, 3 reopened
[t=0.172941s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.172969s, 431232 KB] g=28, 264 evaluated, 96 expanded, 3 reopened
[t=0.173544s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.173574s, 431232 KB] g=30, 267 evaluated, 98 expanded, 3 reopened
[t=0.173967s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.173995s, 431232 KB] g=31, 269 evaluated, 99 expanded, 3 reopened
[t=0.175134s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.175174s, 431232 KB] g=34, 276 evaluated, 105 expanded, 3 reopened
[t=0.175203s, 431232 KB] Solution found!
[t=0.175229s, 431232 KB] Actual search time: 0.0687759s
unstack h g (1)
stack h a (1)
unstack g f (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack f b (1)
stack f a (1)
unstack b k (1)
stack b j (1)
unstack k d (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack d i (1)
put-down d (1)
unstack b j (1)
stack b i (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.175255s, 431232 KB] Plan length: 34 step(s).
[t=0.175255s, 431232 KB] Plan cost: 34
[t=0.175255s, 431232 KB] Expanded 106 state(s).
[t=0.175255s, 431232 KB] Reopened 3 state(s).
[t=0.175255s, 431232 KB] Evaluated 276 state(s).
[t=0.175255s, 431232 KB] Evaluations: 276
[t=0.175255s, 431232 KB] Generated 402 state(s).
[t=0.175255s, 431232 KB] Dead ends: 0 state(s).
[t=0.175255s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.175255s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.175255s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.175255s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.175255s, 431232 KB] Number of registered states: 276
[t=0.175255s, 431232 KB] Int hash set load factor: 276/512 = 0.539062
[t=0.175255s, 431232 KB] Int hash set resizes: 9
[t=0.175255s, 431232 KB] Search time: 0.148697s
[t=0.175255s, 431232 KB] Total time: 0.175255s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p82.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6833e-05s, 424928 KB] reading input...
[t=0.00218484s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258593s, 427536 KB] Building successor generator...done!
[t=0.0261388s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026162s, 427536 KB] time for successor generation creation: 0.000168144s
[t=0.0261899s, 427536 KB] Variables: 25
[t=0.0262123s, 427536 KB] FactPairs: 182
[t=0.0262338s, 427536 KB] Bytes per state: 8
[t=0.0264283s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978939s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0979459s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979711s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0979989s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0980226s, 430128 KB] pruning method: none
[t=0.117124s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.117175s, 431100 KB] g=1, 8 evaluated, 1 expanded
[t=0.117392s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.117422s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.118153s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.118183s, 431100 KB] g=2, 13 evaluated, 2 expanded
[t=0.119626s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.119656s, 431100 KB] g=3, 21 evaluated, 3 expanded
[t=0.121995s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.122027s, 431100 KB] g=3, 34 evaluated, 5 expanded
[t=0.122764s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.122794s, 431100 KB] g=4, 38 evaluated, 6 expanded
[t=0.123885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.123915s, 431100 KB] g=5, 44 evaluated, 7 expanded
[t=0.141251s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.141297s, 431100 KB] g=12, 141 evaluated, 26 expanded
[t=0.159159s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.159194s, 431232 KB] g=12, 241 evaluated, 47 expanded
[t=0.254944s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.254985s, 431232 KB] g=16, 778 evaluated, 171 expanded, 6 reopened
[t=0.290181s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.290219s, 431364 KB] g=16, 976 evaluated, 219 expanded, 6 reopened
[t=0.29478s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.294816s, 431364 KB] g=19, 1001 evaluated, 224 expanded, 6 reopened
[t=0.296444s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.296478s, 431364 KB] g=21, 1010 evaluated, 226 expanded, 6 reopened
[t=0.31464s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.314678s, 431364 KB] g=25, 1112 evaluated, 253 expanded, 6 reopened
[t=0.315067s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.315097s, 431364 KB] g=25, 1114 evaluated, 253 expanded, 6 reopened
[t=0.331868s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.331903s, 431496 KB] g=31, 1208 evaluated, 282 expanded, 6 reopened
[t=0.332293s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.332325s, 431496 KB] g=32, 1210 evaluated, 283 expanded, 6 reopened
[t=0.333788s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.333822s, 431496 KB] g=34, 1218 evaluated, 285 expanded, 6 reopened
[t=0.389906s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.389948s, 431628 KB] g=46, 1533 evaluated, 381 expanded, 8 reopened
[t=0.393864s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.3939s, 431628 KB] g=47, 1554 evaluated, 386 expanded, 8 reopened
[t=0.408563s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.408598s, 431628 KB] g=48, 1636 evaluated, 409 expanded, 8 reopened
[t=0.411481s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.411513s, 431628 KB] g=51, 1652 evaluated, 413 expanded, 8 reopened
[t=0.412801s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.412834s, 431628 KB] g=53, 1659 evaluated, 415 expanded, 8 reopened
[t=0.413042s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.413081s, 431628 KB] g=53, 1660 evaluated, 415 expanded, 8 reopened
[t=0.417405s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.41744s, 431628 KB] g=55, 1684 evaluated, 422 expanded, 8 reopened
[t=0.418004s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.418033s, 431628 KB] g=56, 1687 evaluated, 423 expanded, 8 reopened
[t=0.420189s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.420219s, 431628 KB] g=58, 1699 evaluated, 427 expanded, 8 reopened
[t=0.421506s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.421541s, 431760 KB] g=60, 1706 evaluated, 429 expanded, 8 reopened
[t=0.430819s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.430855s, 431760 KB] g=62, 1758 evaluated, 447 expanded, 8 reopened
[t=0.455062s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.455102s, 431760 KB] g=65, 1894 evaluated, 500 expanded, 9 reopened
[t=0.456205s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.456235s, 431760 KB] g=68, 1900 evaluated, 503 expanded, 9 reopened
[t=0.456642s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.456676s, 431760 KB] g=69, 1902 evaluated, 504 expanded, 9 reopened
[t=0.457074s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.457103s, 431760 KB] g=71, 1905 evaluated, 506 expanded, 9 reopened
[t=0.45713s, 431760 KB] Solution found!
[t=0.457157s, 431760 KB] Actual search time: 0.359131s
put-down i (1)
unstack a b (1)
stack a l (1)
unstack d g (1)
stack d c (1)
pick-up g (1)
stack g d (1)
unstack f k (1)
stack f e (1)
pick-up b (1)
stack b i (1)
unstack a l (1)
put-down a (1)
unstack l h (1)
stack l b (1)
pick-up k (1)
stack k l (1)
unstack h j (1)
stack h g (1)
unstack f e (1)
stack f k (1)
pick-up j (1)
stack j e (1)
unstack h g (1)
stack h a (1)
unstack g d (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack d c (1)
stack d j (1)
unstack f k (1)
stack f d (1)
unstack k l (1)
stack k c (1)
unstack l b (1)
put-down l (1)
unstack k c (1)
stack k l (1)
pick-up c (1)
stack c b (1)
unstack f d (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j l (1)
pick-up e (1)
stack e k (1)
pick-up d (1)
stack d e (1)
unstack c b (1)
put-down c (1)
unstack d e (1)
stack d b (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.457182s, 431760 KB] Plan length: 71 step(s).
[t=0.457182s, 431760 KB] Plan cost: 71
[t=0.457182s, 431760 KB] Expanded 507 state(s).
[t=0.457182s, 431760 KB] Reopened 9 state(s).
[t=0.457182s, 431760 KB] Evaluated 1905 state(s).
[t=0.457182s, 431760 KB] Evaluations: 1905
[t=0.457182s, 431760 KB] Generated 2544 state(s).
[t=0.457182s, 431760 KB] Dead ends: 0 state(s).
[t=0.457182s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.457182s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.457182s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.457182s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.457182s, 431760 KB] Number of registered states: 1905
[t=0.457182s, 431760 KB] Int hash set load factor: 1905/2048 = 0.930176
[t=0.457182s, 431760 KB] Int hash set resizes: 11
[t=0.457182s, 431760 KB] Search time: 0.430754s
[t=0.457182s, 431760 KB] Total time: 0.457182s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p83.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.63e-05s, 424928 KB] reading input...
[t=0.00223451s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259633s, 427536 KB] Building successor generator...done!
[t=0.0262421s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026266s, 427536 KB] time for successor generation creation: 0.000167176s
[t=0.0262955s, 427536 KB] Variables: 25
[t=0.026319s, 427536 KB] FactPairs: 182
[t=0.0263414s, 427536 KB] Bytes per state: 8
[t=0.0265359s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982123s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0982639s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982899s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0983177s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0983421s, 430128 KB] pruning method: none
[t=0.116734s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.116784s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117182s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.117212s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117423s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.117452s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118215s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.118246s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.119523s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.119553s, 431100 KB] g=6, 18 evaluated, 6 expanded
[t=0.130738s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.130775s, 431100 KB] g=12, 80 evaluated, 28 expanded, 2 reopened
[t=0.13512s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.135155s, 431100 KB] g=19, 104 evaluated, 38 expanded, 2 reopened
[t=0.136618s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.136651s, 431100 KB] g=21, 112 evaluated, 42 expanded, 2 reopened
[t=0.160668s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.160704s, 431232 KB] g=20, 246 evaluated, 95 expanded, 3 reopened
[t=0.162731s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.162766s, 431232 KB] g=22, 257 evaluated, 97 expanded, 3 reopened
[t=0.164754s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.164787s, 431232 KB] g=24, 268 evaluated, 99 expanded, 3 reopened
[t=0.167497s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.167543s, 431232 KB] g=25, 283 evaluated, 102 expanded, 3 reopened
[t=0.179729s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.179764s, 431232 KB] g=27, 351 evaluated, 118 expanded, 3 reopened
[t=0.183561s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.183594s, 431232 KB] g=30, 372 evaluated, 124 expanded, 3 reopened
[t=0.199012s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.199047s, 431232 KB] g=30, 458 evaluated, 145 expanded, 3 reopened
[t=0.200148s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.200181s, 431232 KB] g=31, 464 evaluated, 146 expanded, 3 reopened
[t=0.201111s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.201143s, 431232 KB] g=31, 469 evaluated, 148 expanded, 3 reopened
[t=0.202081s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.202112s, 431232 KB] g=32, 474 evaluated, 149 expanded, 3 reopened
[t=0.20518s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.205214s, 431364 KB] g=35, 491 evaluated, 153 expanded, 3 reopened
[t=0.207937s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.207972s, 431364 KB] g=37, 506 evaluated, 157 expanded, 3 reopened
[t=0.208719s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.208749s, 431364 KB] g=38, 510 evaluated, 158 expanded, 3 reopened
[t=0.209139s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.209168s, 431364 KB] g=39, 512 evaluated, 159 expanded, 3 reopened
[t=0.211051s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.211086s, 431364 KB] g=41, 522 evaluated, 161 expanded, 3 reopened
[t=0.211833s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.211863s, 431364 KB] g=42, 526 evaluated, 162 expanded, 3 reopened
[t=0.219432s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.219467s, 431364 KB] g=48, 568 evaluated, 174 expanded, 3 reopened
[t=0.236976s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.237012s, 431364 KB] g=50, 666 evaluated, 198 expanded, 3 reopened
[t=0.239367s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.239408s, 431364 KB] g=53, 679 evaluated, 201 expanded, 3 reopened
[t=0.24051s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.24054s, 431364 KB] g=54, 685 evaluated, 202 expanded, 3 reopened
[t=0.241109s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.241141s, 431364 KB] g=55, 688 evaluated, 203 expanded, 3 reopened
[t=0.242617s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.242651s, 431364 KB] g=57, 696 evaluated, 205 expanded, 3 reopened
[t=0.245176s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.245208s, 431364 KB] g=61, 710 evaluated, 210 expanded, 3 reopened
[t=0.27127s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.271309s, 431496 KB] g=63, 855 evaluated, 270 expanded, 3 reopened
[t=0.271705s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.271735s, 431496 KB] g=64, 857 evaluated, 271 expanded, 3 reopened
[t=0.271768s, 431496 KB] Solution found!
[t=0.271795s, 431496 KB] Actual search time: 0.17345s
stack g f (1)
unstack k l (1)
put-down k (1)
unstack g f (1)
stack g k (1)
unstack b a (1)
stack b l (1)
unstack g k (1)
stack g a (1)
unstack f i (1)
stack f g (1)
unstack i d (1)
stack i b (1)
unstack f g (1)
stack f i (1)
unstack d e (1)
put-down d (1)
unstack g a (1)
stack g k (1)
unstack e h (1)
put-down e (1)
unstack h j (1)
stack h f (1)
unstack g k (1)
put-down g (1)
pick-up d (1)
stack d j (1)
pick-up e (1)
stack e k (1)
unstack h f (1)
stack h g (1)
unstack f i (1)
stack f e (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e d (1)
unstack i b (1)
put-down i (1)
pick-up k (1)
stack k e (1)
unstack b l (1)
put-down b (1)
unstack l c (1)
stack l b (1)
unstack k e (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d i (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.27182s, 431496 KB] Plan length: 65 step(s).
[t=0.27182s, 431496 KB] Plan cost: 65
[t=0.27182s, 431496 KB] Expanded 273 state(s).
[t=0.27182s, 431496 KB] Reopened 3 state(s).
[t=0.27182s, 431496 KB] Evaluated 858 state(s).
[t=0.27182s, 431496 KB] Evaluations: 858
[t=0.27182s, 431496 KB] Generated 1177 state(s).
[t=0.27182s, 431496 KB] Dead ends: 0 state(s).
[t=0.27182s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.27182s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.27182s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.27182s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.27182s, 431496 KB] Number of registered states: 858
[t=0.27182s, 431496 KB] Int hash set load factor: 858/1024 = 0.837891
[t=0.27182s, 431496 KB] Int hash set resizes: 10
[t=0.27182s, 431496 KB] Search time: 0.245285s
[t=0.27182s, 431496 KB] Total time: 0.27182s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p84.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6821e-05s, 424928 KB] reading input...
[t=0.0021819s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257708s, 427536 KB] Building successor generator...done!
[t=0.0260512s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260746s, 427536 KB] time for successor generation creation: 0.000169526s
[t=0.0261032s, 427536 KB] Variables: 25
[t=0.0261264s, 427536 KB] FactPairs: 182
[t=0.0261488s, 427536 KB] Bytes per state: 8
[t=0.026345s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098005s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0980572s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980835s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0981109s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0981354s, 430128 KB] pruning method: none
[t=0.109921s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.109971s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117106s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.117149s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118076s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.118108s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.118492s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.118522s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.120322s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.120353s, 431100 KB] g=6, 24 evaluated, 7 expanded
[t=0.121445s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.121479s, 431100 KB] g=7, 30 evaluated, 8 expanded
[t=0.126126s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.126162s, 431100 KB] g=11, 56 evaluated, 13 expanded
[t=0.131336s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.131372s, 431100 KB] g=13, 85 evaluated, 19 expanded
[t=0.147437s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.147476s, 431232 KB] g=21, 175 evaluated, 38 expanded
[t=0.177641s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.177678s, 431232 KB] g=31, 345 evaluated, 79 expanded
[t=0.25784s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.257883s, 431364 KB] g=24, 793 evaluated, 305 expanded, 108 reopened
[t=0.260409s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.260442s, 431364 KB] g=26, 807 evaluated, 309 expanded, 108 reopened
[t=0.261727s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.261761s, 431364 KB] g=27, 814 evaluated, 310 expanded, 108 reopened
[t=0.263915s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.263947s, 431364 KB] g=29, 826 evaluated, 313 expanded, 108 reopened
[t=0.264688s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.264724s, 431496 KB] g=30, 830 evaluated, 314 expanded, 108 reopened
[t=0.274204s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.274247s, 431496 KB] g=31, 883 evaluated, 329 expanded, 108 reopened
[t=0.276764s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.276798s, 431496 KB] g=33, 897 evaluated, 331 expanded, 108 reopened
[t=0.27738s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.277412s, 431496 KB] g=34, 900 evaluated, 332 expanded, 108 reopened
[t=0.278861s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.278893s, 431496 KB] g=35, 908 evaluated, 333 expanded, 108 reopened
[t=0.282137s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.282174s, 431496 KB] g=39, 926 evaluated, 337 expanded, 108 reopened
[t=0.283812s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.283843s, 431496 KB] g=40, 935 evaluated, 339 expanded, 108 reopened
[t=0.284586s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.284616s, 431496 KB] g=41, 939 evaluated, 340 expanded, 108 reopened
[t=0.28555s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.285586s, 431496 KB] g=42, 944 evaluated, 341 expanded, 108 reopened
[t=0.285795s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.285824s, 431496 KB] g=42, 945 evaluated, 341 expanded, 108 reopened
[t=0.295186s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.295222s, 431496 KB] g=47, 997 evaluated, 355 expanded, 108 reopened
[t=0.296688s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.29672s, 431496 KB] g=49, 1005 evaluated, 357 expanded, 108 reopened
[t=0.299254s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.299288s, 431496 KB] g=49, 1019 evaluated, 361 expanded, 108 reopened
[t=0.301127s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.301163s, 431496 KB] g=49, 1029 evaluated, 364 expanded, 108 reopened
[t=0.302268s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.302299s, 431496 KB] g=51, 1035 evaluated, 366 expanded, 108 reopened
[t=0.303222s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.303254s, 431496 KB] g=53, 1040 evaluated, 368 expanded, 108 reopened
[t=0.303467s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.303497s, 431496 KB] g=54, 1041 evaluated, 369 expanded, 108 reopened
[t=0.306413s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.306454s, 431628 KB] g=55, 1057 evaluated, 376 expanded, 108 reopened
[t=0.3081s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.308131s, 431628 KB] g=55, 1066 evaluated, 380 expanded, 108 reopened
[t=0.313526s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.313562s, 431628 KB] g=63, 1096 evaluated, 393 expanded, 108 reopened
[t=0.31467s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.314701s, 431628 KB] g=65, 1102 evaluated, 398 expanded, 108 reopened
[t=0.314734s, 431628 KB] Solution found!
[t=0.314762s, 431628 KB] Actual search time: 0.216612s
unstack c d (1)
put-down c (1)
unstack d b (1)
put-down d (1)
unstack b e (1)
stack b c (1)
unstack e h (1)
put-down e (1)
unstack i g (1)
stack i f (1)
unstack g a (1)
stack g d (1)
pick-up e (1)
stack e i (1)
unstack a k (1)
stack a e (1)
pick-up h (1)
stack h a (1)
unstack b c (1)
put-down b (1)
pick-up c (1)
stack c b (1)
unstack g d (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a k (1)
unstack e i (1)
put-down e (1)
unstack a k (1)
stack a h (1)
unstack i f (1)
stack i c (1)
unstack f j (1)
stack f a (1)
pick-up j (1)
stack j d (1)
unstack k l (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack i c (1)
stack i l (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
stack c d (1)
unstack i l (1)
put-down i (1)
unstack c d (1)
put-down c (1)
pick-up i (1)
stack i c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.314786s, 431628 KB] Plan length: 66 step(s).
[t=0.314786s, 431628 KB] Plan cost: 66
[t=0.314786s, 431628 KB] Expanded 400 state(s).
[t=0.314786s, 431628 KB] Reopened 108 state(s).
[t=0.314786s, 431628 KB] Evaluated 1103 state(s).
[t=0.314786s, 431628 KB] Evaluations: 1103
[t=0.314786s, 431628 KB] Generated 2016 state(s).
[t=0.314786s, 431628 KB] Dead ends: 0 state(s).
[t=0.314786s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.314786s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.314786s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.314786s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.314786s, 431628 KB] Number of registered states: 1103
[t=0.314786s, 431628 KB] Int hash set load factor: 1103/2048 = 0.538574
[t=0.314786s, 431628 KB] Int hash set resizes: 11
[t=0.314786s, 431628 KB] Search time: 0.288442s
[t=0.314786s, 431628 KB] Total time: 0.314786s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p85.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.593e-05s, 424928 KB] reading input...
[t=0.00215925s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256383s, 427536 KB] Building successor generator...done!
[t=0.0259138s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259373s, 427536 KB] time for successor generation creation: 0.000165703s
[t=0.025966s, 427536 KB] Variables: 25
[t=0.0259893s, 427536 KB] FactPairs: 182
[t=0.0260117s, 427536 KB] Bytes per state: 8
[t=0.0262041s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0975961s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0976482s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0976743s, 430128 KB] f = 129, 1 evaluated, 0 expanded
[t=0.0977014s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0977252s, 430128 KB] pruning method: none
[t=0.11583s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.11588s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117206s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.117241s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.120876s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.120918s, 431100 KB] g=6, 30 evaluated, 8 expanded
[t=0.121871s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.121903s, 431100 KB] g=7, 35 evaluated, 9 expanded
[t=0.141083s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.141123s, 431100 KB] g=18, 140 evaluated, 40 expanded
[t=0.141698s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.141728s, 431100 KB] g=18, 143 evaluated, 40 expanded
[t=0.143024s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.143054s, 431100 KB] g=19, 150 evaluated, 42 expanded
[t=0.144708s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.144739s, 431100 KB] g=21, 159 evaluated, 44 expanded
[t=0.156632s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.15667s, 431232 KB] g=31, 224 evaluated, 60 expanded
[t=0.158156s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.158191s, 431232 KB] g=33, 232 evaluated, 62 expanded
[t=0.158403s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.158432s, 431232 KB] g=33, 233 evaluated, 62 expanded
[t=0.159907s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.159938s, 431232 KB] g=36, 241 evaluated, 65 expanded
[t=0.161053s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.161087s, 431232 KB] g=37, 247 evaluated, 66 expanded
[t=0.163129s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.16316s, 431232 KB] g=40, 258 evaluated, 70 expanded
[t=0.163548s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.163577s, 431232 KB] g=40, 260 evaluated, 70 expanded
[t=0.163791s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.163819s, 431232 KB] g=41, 261 evaluated, 71 expanded
[t=0.164028s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.164056s, 431232 KB] g=41, 262 evaluated, 71 expanded
[t=0.164447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.164479s, 431232 KB] g=42, 264 evaluated, 72 expanded
[t=0.164874s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.16491s, 431232 KB] g=43, 266 evaluated, 73 expanded
[t=0.165316s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.165349s, 431232 KB] g=44, 268 evaluated, 74 expanded
[t=0.16718s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.167213s, 431232 KB] g=46, 278 evaluated, 78 expanded
[t=0.167785s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.167814s, 431232 KB] g=47, 281 evaluated, 79 expanded
[t=0.168386s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.168416s, 431232 KB] g=48, 284 evaluated, 80 expanded
[t=0.168631s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.168662s, 431232 KB] g=49, 285 evaluated, 81 expanded
[t=0.168877s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.168906s, 431232 KB] g=50, 286 evaluated, 82 expanded
[t=0.169311s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.169342s, 431232 KB] g=51, 288 evaluated, 83 expanded
[t=0.170474s, 431232 KB] Solution found!
[t=0.170507s, 431232 KB] Actual search time: 0.0727797s
unstack h k (1)
stack h a (1)
unstack j f (1)
put-down j (1)
pick-up k (1)
stack k f (1)
unstack l b (1)
stack l j (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d k (1)
unstack l j (1)
stack l b (1)
unstack h a (1)
stack h d (1)
unstack a g (1)
stack a i (1)
unstack h d (1)
stack h a (1)
unstack d k (1)
put-down d (1)
pick-up j (1)
stack j l (1)
pick-up d (1)
stack d j (1)
unstack h a (1)
stack h g (1)
unstack a i (1)
stack a h (1)
unstack d j (1)
stack d i (1)
unstack k f (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.170534s, 431232 KB] Plan length: 54 step(s).
[t=0.170534s, 431232 KB] Plan cost: 54
[t=0.170534s, 431232 KB] Expanded 90 state(s).
[t=0.170534s, 431232 KB] Reopened 0 state(s).
[t=0.170534s, 431232 KB] Evaluated 295 state(s).
[t=0.170534s, 431232 KB] Evaluations: 295
[t=0.170534s, 431232 KB] Generated 383 state(s).
[t=0.170534s, 431232 KB] Dead ends: 0 state(s).
[t=0.170534s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.170534s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.170534s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.170534s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.170534s, 431232 KB] Number of registered states: 295
[t=0.170534s, 431232 KB] Int hash set load factor: 295/512 = 0.576172
[t=0.170534s, 431232 KB] Int hash set resizes: 9
[t=0.170534s, 431232 KB] Search time: 0.144331s
[t=0.170534s, 431232 KB] Total time: 0.170534s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p86.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6742e-05s, 424928 KB] reading input...
[t=0.00214159s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258198s, 427536 KB] Building successor generator...done!
[t=0.0260976s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261204s, 427536 KB] time for successor generation creation: 0.000167952s
[t=0.0261482s, 427536 KB] Variables: 25
[t=0.0261709s, 427536 KB] FactPairs: 182
[t=0.0261925s, 427536 KB] Bytes per state: 8
[t=0.0263869s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988684s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0989199s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098946s, 430128 KB] f = 114, 1 evaluated, 0 expanded
[t=0.0989725s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0990064s, 430128 KB] pruning method: none
[t=0.110833s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.110886s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118436s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.118479s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.119256s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.119285s, 431100 KB] g=2, 13 evaluated, 2 expanded
[t=0.120987s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.121017s, 431100 KB] g=4, 22 evaluated, 4 expanded
[t=0.122722s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.122753s, 431100 KB] g=6, 31 evaluated, 6 expanded
[t=0.123162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.12319s, 431100 KB] g=7, 33 evaluated, 7 expanded
[t=0.123407s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.123434s, 431100 KB] g=7, 34 evaluated, 7 expanded
[t=0.127019s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.127051s, 431100 KB] g=10, 53 evaluated, 13 expanded
[t=0.128013s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.128045s, 431100 KB] g=11, 58 evaluated, 14 expanded
[t=0.130326s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.130358s, 431100 KB] g=10, 70 evaluated, 18 expanded
[t=0.132245s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.132274s, 431100 KB] g=10, 80 evaluated, 21 expanded
[t=0.146328s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.146365s, 431100 KB] g=15, 155 evaluated, 43 expanded, 1 reopened
[t=0.146584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.146613s, 431100 KB] g=15, 156 evaluated, 43 expanded, 1 reopened
[t=0.147018s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.147046s, 431100 KB] g=16, 158 evaluated, 44 expanded, 1 reopened
[t=0.149705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.149737s, 431100 KB] g=17, 172 evaluated, 48 expanded, 1 reopened
[t=0.152582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.152619s, 431232 KB] g=18, 187 evaluated, 52 expanded, 1 reopened
[t=0.155275s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.155306s, 431232 KB] g=20, 201 evaluated, 56 expanded, 1 reopened
[t=0.1559s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.155928s, 431232 KB] g=21, 204 evaluated, 57 expanded, 1 reopened
[t=0.163446s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.163481s, 431232 KB] g=25, 244 evaluated, 69 expanded, 1 reopened
[t=0.166165s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.166198s, 431232 KB] g=28, 258 evaluated, 74 expanded, 1 reopened
[t=0.190673s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.190711s, 431232 KB] g=32, 389 evaluated, 122 expanded, 1 reopened
[t=0.19093s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.190959s, 431232 KB] g=32, 390 evaluated, 122 expanded, 1 reopened
[t=0.191173s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.191202s, 431232 KB] g=32, 391 evaluated, 122 expanded, 1 reopened
[t=0.191419s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.191447s, 431232 KB] g=33, 392 evaluated, 123 expanded, 1 reopened
[t=0.336697s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.336743s, 431496 KB] g=42, 1171 evaluated, 398 expanded, 10 reopened
[t=0.337921s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.337954s, 431496 KB] g=44, 1177 evaluated, 401 expanded, 10 reopened
[t=0.341905s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.34194s, 431628 KB] g=48, 1198 evaluated, 408 expanded, 10 reopened
[t=0.34309s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.343122s, 431628 KB] g=51, 1204 evaluated, 411 expanded, 10 reopened
[t=0.343899s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.343928s, 431628 KB] g=52, 1208 evaluated, 412 expanded, 10 reopened
[t=0.344522s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.344551s, 431628 KB] g=54, 1211 evaluated, 414 expanded, 10 reopened
[t=0.354508s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.354554s, 431628 KB] g=53, 1264 evaluated, 436 expanded, 10 reopened
[t=0.355148s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.355177s, 431628 KB] g=54, 1267 evaluated, 437 expanded, 10 reopened
[t=0.355582s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.35561s, 431628 KB] g=55, 1269 evaluated, 438 expanded, 10 reopened
[t=0.356017s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.35605s, 431628 KB] g=57, 1271 evaluated, 440 expanded, 10 reopened
[t=0.356642s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.35667s, 431628 KB] g=59, 1274 evaluated, 442 expanded, 10 reopened
[t=0.357074s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.357102s, 431628 KB] g=60, 1276 evaluated, 443 expanded, 10 reopened
[t=0.358266s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.358298s, 431628 KB] g=62, 1282 evaluated, 448 expanded, 10 reopened
[t=0.358331s, 431628 KB] Solution found!
[t=0.358357s, 431628 KB] Actual search time: 0.259346s
stack h a (1)
pick-up l (1)
stack l h (1)
unstack j f (1)
stack j l (1)
pick-up f (1)
stack f d (1)
unstack e g (1)
stack e j (1)
unstack g k (1)
stack g f (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l h (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack g f (1)
stack g b (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
put-down g (1)
unstack j e (1)
stack j b (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f d (1)
stack f a (1)
pick-up d (1)
stack d j (1)
unstack e k (1)
stack e d (1)
unstack k i (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
put-down d (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.358381s, 431628 KB] Plan length: 63 step(s).
[t=0.358381s, 431628 KB] Plan cost: 63
[t=0.358381s, 431628 KB] Expanded 450 state(s).
[t=0.358381s, 431628 KB] Reopened 10 state(s).
[t=0.358381s, 431628 KB] Evaluated 1283 state(s).
[t=0.358381s, 431628 KB] Evaluations: 1283
[t=0.358381s, 431628 KB] Generated 1848 state(s).
[t=0.358381s, 431628 KB] Dead ends: 0 state(s).
[t=0.358381s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.358381s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.358381s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.358381s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.358381s, 431628 KB] Number of registered states: 1283
[t=0.358381s, 431628 KB] Int hash set load factor: 1283/2048 = 0.626465
[t=0.358381s, 431628 KB] Int hash set resizes: 11
[t=0.358381s, 431628 KB] Search time: 0.331995s
[t=0.358381s, 431628 KB] Total time: 0.358381s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p87.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6946e-05s, 424928 KB] reading input...
[t=0.00213637s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259487s, 427536 KB] Building successor generator...done!
[t=0.0262252s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026249s, 427536 KB] time for successor generation creation: 0.000165494s
[t=0.0262775s, 427536 KB] Variables: 25
[t=0.0263007s, 427536 KB] FactPairs: 182
[t=0.0263228s, 427536 KB] Bytes per state: 8
[t=0.0265193s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992662s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.0993185s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993447s, 430128 KB] f = 77, 1 evaluated, 0 expanded
[t=0.0993717s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.0994046s, 430128 KB] pruning method: none
[t=0.11793s, 431100 KB] f = 85, 4 evaluated, 1 expanded
[t=0.118348s, 431100 KB] f = 99, 6 evaluated, 2 expanded
[t=0.118923s, 431100 KB] f = 101, 9 evaluated, 3 expanded
[t=0.119138s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.119167s, 431100 KB] g=4, 10 evaluated, 4 expanded
[t=0.121717s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.12175s, 431100 KB] g=8, 24 evaluated, 8 expanded
[t=0.131739s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.131774s, 431100 KB] g=11, 80 evaluated, 21 expanded
[t=0.133054s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.133084s, 431100 KB] g=12, 87 evaluated, 22 expanded
[t=0.154355s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.154391s, 431232 KB] g=17, 206 evaluated, 56 expanded, 1 reopened
[t=0.192059s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.192097s, 431232 KB] g=22, 415 evaluated, 161 expanded, 30 reopened
[t=0.194455s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.194492s, 431232 KB] g=25, 428 evaluated, 165 expanded, 30 reopened
[t=0.194878s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.194908s, 431232 KB] g=25, 430 evaluated, 165 expanded, 30 reopened
[t=0.204259s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.204294s, 431364 KB] g=29, 482 evaluated, 180 expanded, 30 reopened
[t=0.204507s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.204537s, 431364 KB] g=30, 483 evaluated, 181 expanded, 30 reopened
[t=0.208533s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.208566s, 431364 KB] g=28, 505 evaluated, 187 expanded, 30 reopened
[t=0.208776s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.208805s, 431364 KB] g=28, 506 evaluated, 187 expanded, 30 reopened
[t=0.20976s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.209792s, 431364 KB] g=30, 511 evaluated, 189 expanded, 30 reopened
[t=0.210584s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.210614s, 431364 KB] g=31, 515 evaluated, 190 expanded, 30 reopened
[t=0.210823s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.210858s, 431364 KB] g=31, 516 evaluated, 190 expanded, 30 reopened
[t=0.212147s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.21218s, 431364 KB] g=33, 523 evaluated, 192 expanded, 30 reopened
[t=0.212749s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.212779s, 431364 KB] g=34, 526 evaluated, 193 expanded, 30 reopened
[t=0.212987s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.213015s, 431364 KB] g=34, 527 evaluated, 193 expanded, 30 reopened
[t=0.213414s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.213448s, 431364 KB] g=35, 529 evaluated, 194 expanded, 30 reopened
[t=0.215271s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.215301s, 431364 KB] g=38, 539 evaluated, 198 expanded, 30 reopened
[t=0.215518s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.21555s, 431364 KB] g=39, 540 evaluated, 199 expanded, 30 reopened
[t=0.216649s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.216681s, 431364 KB] g=41, 546 evaluated, 201 expanded, 30 reopened
[t=0.217084s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.217115s, 431364 KB] g=43, 548 evaluated, 203 expanded, 30 reopened
[t=0.217506s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.217536s, 431364 KB] g=44, 550 evaluated, 204 expanded, 30 reopened
[t=0.218653s, 431364 KB] Solution found!
[t=0.218686s, 431364 KB] Actual search time: 0.119278s
put-down e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d e (1)
unstack h g (1)
stack h d (1)
unstack g a (1)
put-down g (1)
unstack h d (1)
stack h a (1)
unstack d e (1)
stack d b (1)
pick-up e (1)
stack e i (1)
unstack d b (1)
stack d e (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k d (1)
unstack f l (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack l j (1)
stack l b (1)
unstack d e (1)
stack d l (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.218713s, 431364 KB] Plan length: 47 step(s).
[t=0.218713s, 431364 KB] Plan cost: 47
[t=0.218713s, 431364 KB] Expanded 211 state(s).
[t=0.218713s, 431364 KB] Reopened 30 state(s).
[t=0.218713s, 431364 KB] Evaluated 557 state(s).
[t=0.218713s, 431364 KB] Evaluations: 557
[t=0.218713s, 431364 KB] Generated 892 state(s).
[t=0.218713s, 431364 KB] Dead ends: 0 state(s).
[t=0.218713s, 431364 KB] Expanded until last jump: 3 state(s).
[t=0.218713s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.218713s, 431364 KB] Evaluated until last jump: 9 state(s).
[t=0.218713s, 431364 KB] Generated until last jump: 10 state(s).
[t=0.218713s, 431364 KB] Number of registered states: 557
[t=0.218713s, 431364 KB] Int hash set load factor: 557/1024 = 0.543945
[t=0.218713s, 431364 KB] Int hash set resizes: 10
[t=0.218713s, 431364 KB] Search time: 0.192194s
[t=0.218713s, 431364 KB] Total time: 0.218713s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p88.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6143e-05s, 424928 KB] reading input...
[t=0.00215131s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258412s, 427536 KB] Building successor generator...done!
[t=0.0261205s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261441s, 427536 KB] time for successor generation creation: 0.000168271s
[t=0.0261731s, 427536 KB] Variables: 25
[t=0.026196s, 427536 KB] FactPairs: 182
[t=0.0262183s, 427536 KB] Bytes per state: 8
[t=0.0264124s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985525s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0986046s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986304s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0986585s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0986837s, 430128 KB] pruning method: none
[t=0.116828s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.116878s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117455s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.117486s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117696s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117726s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117941s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.11797s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.118177s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118206s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.120745s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.120778s, 431100 KB] g=3, 23 evaluated, 8 expanded
[t=0.121166s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.121196s, 431100 KB] g=4, 25 evaluated, 9 expanded
[t=0.122651s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.122686s, 431100 KB] g=6, 33 evaluated, 11 expanded
[t=0.123079s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.123109s, 431100 KB] g=7, 35 evaluated, 12 expanded
[t=0.123674s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.123704s, 431100 KB] g=8, 38 evaluated, 13 expanded
[t=0.124796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.124826s, 431100 KB] g=9, 44 evaluated, 14 expanded
[t=0.125214s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.125243s, 431100 KB] g=10, 46 evaluated, 15 expanded
[t=0.137194s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.137229s, 431100 KB] g=15, 113 evaluated, 37 expanded
[t=0.142295s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.142337s, 431100 KB] g=19, 141 evaluated, 49 expanded
[t=0.149691s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.149725s, 431100 KB] g=24, 182 evaluated, 65 expanded
[t=0.150839s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.150876s, 431100 KB] g=26, 188 evaluated, 67 expanded
[t=0.153588s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.153618s, 431100 KB] g=29, 203 evaluated, 73 expanded
[t=0.154361s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.154397s, 431232 KB] g=30, 207 evaluated, 74 expanded
[t=0.159455s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.159488s, 431232 KB] g=37, 235 evaluated, 85 expanded
[t=0.160232s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.160263s, 431232 KB] g=38, 239 evaluated, 86 expanded
[t=0.161186s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.161215s, 431232 KB] g=39, 244 evaluated, 87 expanded
[t=0.163601s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.163636s, 431232 KB] g=42, 257 evaluated, 91 expanded
[t=0.164023s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.164052s, 431232 KB] g=43, 259 evaluated, 92 expanded
[t=0.164795s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.164827s, 431232 KB] g=44, 263 evaluated, 93 expanded
[t=0.165034s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.165063s, 431232 KB] g=44, 264 evaluated, 93 expanded
[t=0.166345s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.166375s, 431232 KB] g=46, 271 evaluated, 95 expanded
[t=0.168201s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.168236s, 431232 KB] g=49, 281 evaluated, 98 expanded
[t=0.168982s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.169012s, 431232 KB] g=50, 285 evaluated, 99 expanded
[t=0.171192s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.171227s, 431232 KB] g=53, 297 evaluated, 103 expanded
[t=0.177866s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.177907s, 431232 KB] g=54, 334 evaluated, 114 expanded
[t=0.179208s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.179239s, 431232 KB] g=57, 341 evaluated, 117 expanded
[t=0.180167s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.1802s, 431232 KB] g=60, 346 evaluated, 120 expanded
[t=0.180777s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.180807s, 431232 KB] g=63, 350 evaluated, 123 expanded
[t=0.180834s, 431232 KB] Solution found!
[t=0.18086s, 431232 KB] Actual search time: 0.0821724s
stack k e (1)
unstack b d (1)
put-down b (1)
unstack j g (1)
stack j d (1)
unstack k e (1)
stack k b (1)
unstack e i (1)
stack e k (1)
unstack j d (1)
stack j i (1)
unstack g f (1)
stack g j (1)
pick-up f (1)
stack f e (1)
unstack g j (1)
put-down g (1)
unstack d a (1)
stack d f (1)
pick-up g (1)
stack g d (1)
unstack a l (1)
stack a j (1)
unstack l h (1)
put-down l (1)
pick-up h (1)
stack h g (1)
unstack a j (1)
stack a l (1)
unstack h g (1)
stack h a (1)
unstack g d (1)
put-down g (1)
unstack d f (1)
stack d j (1)
unstack h a (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e d (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.180885s, 431232 KB] Plan length: 63 step(s).
[t=0.180885s, 431232 KB] Plan cost: 63
[t=0.180885s, 431232 KB] Expanded 124 state(s).
[t=0.180885s, 431232 KB] Reopened 0 state(s).
[t=0.180885s, 431232 KB] Evaluated 350 state(s).
[t=0.180885s, 431232 KB] Evaluations: 350
[t=0.180885s, 431232 KB] Generated 477 state(s).
[t=0.180885s, 431232 KB] Dead ends: 0 state(s).
[t=0.180885s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.180885s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.180885s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.180885s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.180885s, 431232 KB] Number of registered states: 350
[t=0.180885s, 431232 KB] Int hash set load factor: 350/512 = 0.683594
[t=0.180885s, 431232 KB] Int hash set resizes: 9
[t=0.180885s, 431232 KB] Search time: 0.154474s
[t=0.180885s, 431232 KB] Total time: 0.180885s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p89.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6139e-05s, 424928 KB] reading input...
[t=0.00232477s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258814s, 427536 KB] Building successor generator...done!
[t=0.0261574s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261807s, 427536 KB] time for successor generation creation: 0.000166754s
[t=0.0262092s, 427536 KB] Variables: 25
[t=0.0262329s, 427536 KB] FactPairs: 182
[t=0.0262552s, 427536 KB] Bytes per state: 8
[t=0.0264509s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980306s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0980817s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981076s, 430128 KB] f = 116, 1 evaluated, 0 expanded
[t=0.0981347s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0981589s, 430128 KB] pruning method: none
[t=0.109979s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.110031s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116647s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.11669s, 431100 KB] g=2, 4 evaluated, 2 expanded
[t=0.119767s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.119801s, 431100 KB] g=9, 21 evaluated, 9 expanded
[t=0.120908s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.120949s, 431100 KB] g=12, 27 evaluated, 12 expanded
[t=0.125778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.125812s, 431100 KB] g=11, 54 evaluated, 21 expanded
[t=0.127258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.127288s, 431100 KB] g=12, 62 evaluated, 23 expanded
[t=0.143643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.143679s, 431100 KB] g=15, 154 evaluated, 52 expanded
[t=0.144602s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.144634s, 431100 KB] g=16, 159 evaluated, 53 expanded
[t=0.148229s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.148264s, 431100 KB] g=20, 179 evaluated, 59 expanded
[t=0.148836s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.148867s, 431100 KB] g=22, 182 evaluated, 61 expanded
[t=0.153528s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.153565s, 431232 KB] g=22, 208 evaluated, 69 expanded
[t=0.154488s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.154522s, 431232 KB] g=23, 213 evaluated, 70 expanded
[t=0.157774s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.157809s, 431232 KB] g=24, 231 evaluated, 76 expanded
[t=0.158914s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.158947s, 431232 KB] g=25, 237 evaluated, 77 expanded
[t=0.160962s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.160996s, 431232 KB] g=29, 248 evaluated, 82 expanded
[t=0.161925s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.161955s, 431232 KB] g=31, 253 evaluated, 84 expanded
[t=0.162725s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.162758s, 431232 KB] g=32, 257 evaluated, 85 expanded
[t=0.163695s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163729s, 431232 KB] g=33, 262 evaluated, 86 expanded
[t=0.164122s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.164152s, 431232 KB] g=34, 264 evaluated, 87 expanded
[t=0.174879s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.174919s, 431232 KB] g=37, 324 evaluated, 104 expanded
[t=0.176744s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.176778s, 431232 KB] g=39, 334 evaluated, 107 expanded
[t=0.177353s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.177383s, 431232 KB] g=41, 337 evaluated, 109 expanded
[t=0.177955s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.177985s, 431232 KB] g=43, 340 evaluated, 111 expanded
[t=0.178559s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.178588s, 431232 KB] g=45, 343 evaluated, 113 expanded
[t=0.18025s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.180287s, 431232 KB] g=48, 353 evaluated, 120 expanded
[t=0.180314s, 431232 KB] Solution found!
[t=0.180341s, 431232 KB] Actual search time: 0.0821781s
unstack a j (1)
stack a f (1)
unstack j e (1)
put-down j (1)
unstack e l (1)
stack e a (1)
unstack l h (1)
put-down l (1)
pick-up j (1)
stack j l (1)
unstack e a (1)
put-down e (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
put-down g (1)
pick-up e (1)
stack e b (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
put-down d (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up b (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.180366s, 431232 KB] Plan length: 48 step(s).
[t=0.180366s, 431232 KB] Plan cost: 48
[t=0.180366s, 431232 KB] Expanded 121 state(s).
[t=0.180366s, 431232 KB] Reopened 0 state(s).
[t=0.180366s, 431232 KB] Evaluated 353 state(s).
[t=0.180366s, 431232 KB] Evaluations: 353
[t=0.180366s, 431232 KB] Generated 478 state(s).
[t=0.180366s, 431232 KB] Dead ends: 0 state(s).
[t=0.180366s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.180366s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.180366s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.180366s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.180366s, 431232 KB] Number of registered states: 353
[t=0.180366s, 431232 KB] Int hash set load factor: 353/512 = 0.689453
[t=0.180366s, 431232 KB] Int hash set resizes: 9
[t=0.180366s, 431232 KB] Search time: 0.153916s
[t=0.180366s, 431232 KB] Total time: 0.180366s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p90.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9368e-05s, 424928 KB] reading input...
[t=0.00217021s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257489s, 427536 KB] Building successor generator...done!
[t=0.0260277s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260515s, 427536 KB] time for successor generation creation: 0.000169201s
[t=0.0260796s, 427536 KB] Variables: 25
[t=0.0261024s, 427536 KB] FactPairs: 182
[t=0.0261245s, 427536 KB] Bytes per state: 8
[t=0.0263191s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985309s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0985839s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986099s, 430128 KB] f = 129, 1 evaluated, 0 expanded
[t=0.0986371s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0986612s, 430128 KB] pruning method: none
[t=0.110478s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.11053s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117133s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.117176s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.119372s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.119404s, 431100 KB] g=3, 16 evaluated, 4 expanded
[t=0.119619s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119648s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.122187s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.122221s, 431100 KB] g=5, 31 evaluated, 9 expanded
[t=0.122964s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.122995s, 431100 KB] g=6, 35 evaluated, 10 expanded
[t=0.123919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.12395s, 431100 KB] g=8, 40 evaluated, 12 expanded
[t=0.124159s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.124202s, 431100 KB] g=8, 41 evaluated, 12 expanded
[t=0.128133s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.128189s, 431100 KB] g=10, 63 evaluated, 17 expanded
[t=0.129126s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.129157s, 431100 KB] g=11, 68 evaluated, 18 expanded
[t=0.158612s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.15865s, 431100 KB] g=14, 233 evaluated, 61 expanded, 3 reopened
[t=0.236188s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.236227s, 431232 KB] g=17, 666 evaluated, 168 expanded, 3 reopened
[t=0.238938s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.238972s, 431232 KB] g=19, 681 evaluated, 170 expanded, 3 reopened
[t=0.239724s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.239755s, 431232 KB] g=20, 685 evaluated, 171 expanded, 3 reopened
[t=0.240158s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.240192s, 431232 KB] g=20, 687 evaluated, 171 expanded, 3 reopened
[t=0.240768s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.240799s, 431232 KB] g=21, 690 evaluated, 172 expanded, 3 reopened
[t=0.241007s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.241036s, 431232 KB] g=21, 691 evaluated, 172 expanded, 3 reopened
[t=0.24268s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.242716s, 431232 KB] g=23, 700 evaluated, 174 expanded, 3 reopened
[t=0.249194s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.249234s, 431364 KB] g=23, 736 evaluated, 181 expanded, 3 reopened
[t=0.253747s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.253782s, 431364 KB] g=26, 761 evaluated, 186 expanded, 3 reopened
[t=0.254713s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.254744s, 431364 KB] g=27, 766 evaluated, 187 expanded, 3 reopened
[t=0.257294s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.257331s, 431364 KB] g=30, 780 evaluated, 190 expanded, 3 reopened
[t=0.259342s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.259373s, 431364 KB] g=32, 791 evaluated, 193 expanded, 3 reopened
[t=0.260131s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.260163s, 431364 KB] g=33, 795 evaluated, 194 expanded, 3 reopened
[t=0.261279s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.26131s, 431364 KB] g=35, 801 evaluated, 196 expanded, 3 reopened
[t=0.261701s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.26173s, 431364 KB] g=36, 803 evaluated, 197 expanded, 3 reopened
[t=0.262662s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.262695s, 431364 KB] g=38, 808 evaluated, 199 expanded, 3 reopened
[t=0.263089s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.263121s, 431364 KB] g=39, 810 evaluated, 200 expanded, 3 reopened
[t=0.263514s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.263543s, 431364 KB] g=40, 812 evaluated, 201 expanded, 3 reopened
[t=0.263929s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.263959s, 431364 KB] g=40, 814 evaluated, 201 expanded, 3 reopened
[t=0.266152s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.266185s, 431364 KB] g=43, 826 evaluated, 205 expanded, 3 reopened
[t=0.266578s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.266607s, 431364 KB] g=44, 828 evaluated, 206 expanded, 3 reopened
[t=0.267542s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.267573s, 431364 KB] g=46, 833 evaluated, 208 expanded, 3 reopened
[t=0.268344s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.268378s, 431364 KB] g=48, 837 evaluated, 210 expanded, 3 reopened
[t=0.268779s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.268812s, 431364 KB] g=50, 840 evaluated, 212 expanded, 3 reopened
[t=0.268839s, 431364 KB] Solution found!
[t=0.268865s, 431364 KB] Actual search time: 0.1702s
unstack h d (1)
stack h g (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack h g (1)
stack h i (1)
unstack g a (1)
put-down g (1)
unstack h i (1)
stack h a (1)
unstack b k (1)
stack b d (1)
unstack h a (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack l f (1)
put-down l (1)
pick-up f (1)
stack f a (1)
unstack b d (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack d j (1)
stack d i (1)
pick-up j (1)
stack j d (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.26889s, 431364 KB] Plan length: 50 step(s).
[t=0.26889s, 431364 KB] Plan cost: 50
[t=0.26889s, 431364 KB] Expanded 213 state(s).
[t=0.26889s, 431364 KB] Reopened 3 state(s).
[t=0.26889s, 431364 KB] Evaluated 840 state(s).
[t=0.26889s, 431364 KB] Evaluations: 840
[t=0.26889s, 431364 KB] Generated 1105 state(s).
[t=0.26889s, 431364 KB] Dead ends: 0 state(s).
[t=0.26889s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.26889s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.26889s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.26889s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.26889s, 431364 KB] Number of registered states: 840
[t=0.26889s, 431364 KB] Int hash set load factor: 840/1024 = 0.820312
[t=0.26889s, 431364 KB] Int hash set resizes: 10
[t=0.26889s, 431364 KB] Search time: 0.242571s
[t=0.26889s, 431364 KB] Total time: 0.26889s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p91.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5595e-05s, 424928 KB] reading input...
[t=0.00222344s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259406s, 427536 KB] Building successor generator...done!
[t=0.0262164s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262396s, 427536 KB] time for successor generation creation: 0.000164224s
[t=0.0262683s, 427536 KB] Variables: 25
[t=0.0262913s, 427536 KB] FactPairs: 182
[t=0.0263135s, 427536 KB] Bytes per state: 8
[t=0.026507s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981983s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.098251s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982772s, 430128 KB] f = 109, 1 evaluated, 0 expanded
[t=0.0983044s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.0983286s, 430128 KB] pruning method: none
[t=0.116929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.116979s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.11792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.117952s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.118885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.118916s, 431100 KB] g=4, 15 evaluated, 4 expanded
[t=0.122024s, 431100 KB] f = 110, 32 evaluated, 8 expanded
[t=0.124402s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.124438s, 431100 KB] g=7, 45 evaluated, 12 expanded
[t=0.125386s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.125419s, 431100 KB] g=8, 50 evaluated, 13 expanded
[t=0.126371s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.126401s, 431100 KB] g=9, 55 evaluated, 15 expanded
[t=0.126611s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.12664s, 431100 KB] g=9, 56 evaluated, 15 expanded
[t=0.132476s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.132513s, 431100 KB] g=12, 88 evaluated, 24 expanded
[t=0.136532s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.136566s, 431100 KB] g=16, 110 evaluated, 30 expanded
[t=0.208598s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.208638s, 431232 KB] g=20, 509 evaluated, 153 expanded, 1 reopened
[t=0.209982s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.210016s, 431364 KB] g=21, 516 evaluated, 155 expanded, 1 reopened
[t=0.21095s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.21098s, 431364 KB] g=22, 521 evaluated, 156 expanded, 1 reopened
[t=0.212092s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.212121s, 431364 KB] g=23, 527 evaluated, 157 expanded, 1 reopened
[t=0.213791s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.213824s, 431364 KB] g=26, 536 evaluated, 160 expanded, 1 reopened
[t=0.214218s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.214248s, 431364 KB] g=27, 538 evaluated, 161 expanded, 1 reopened
[t=0.216081s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.216112s, 431364 KB] g=29, 548 evaluated, 164 expanded, 1 reopened
[t=0.216322s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.21635s, 431364 KB] g=29, 549 evaluated, 164 expanded, 1 reopened
[t=0.217473s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.217508s, 431364 KB] g=31, 555 evaluated, 166 expanded, 1 reopened
[t=0.218621s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.21865s, 431364 KB] g=32, 561 evaluated, 168 expanded, 1 reopened
[t=0.219043s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.219073s, 431364 KB] g=33, 563 evaluated, 169 expanded, 1 reopened
[t=0.220189s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.220229s, 431364 KB] g=35, 569 evaluated, 172 expanded, 1 reopened
[t=0.220816s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.220849s, 431364 KB] g=36, 572 evaluated, 173 expanded, 1 reopened
[t=0.221242s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.221272s, 431364 KB] g=37, 574 evaluated, 174 expanded, 1 reopened
[t=0.222024s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.222054s, 431364 KB] g=38, 578 evaluated, 175 expanded, 1 reopened
[t=0.222809s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.222842s, 431364 KB] g=40, 582 evaluated, 177 expanded, 1 reopened
[t=0.223594s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.223624s, 431364 KB] g=42, 586 evaluated, 179 expanded, 1 reopened
[t=0.223836s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.223865s, 431364 KB] g=43, 587 evaluated, 180 expanded, 1 reopened
[t=0.224258s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.224288s, 431364 KB] g=44, 589 evaluated, 181 expanded, 1 reopened
[t=0.226341s, 431364 KB] Solution found!
[t=0.226377s, 431364 KB] Actual search time: 0.128047s
put-down e (1)
unstack f b (1)
stack f e (1)
unstack h k (1)
stack h a (1)
unstack k g (1)
stack k f (1)
unstack g l (1)
put-down g (1)
pick-up l (1)
stack l b (1)
unstack h a (1)
stack h g (1)
unstack a d (1)
stack a k (1)
unstack l b (1)
stack l d (1)
unstack b j (1)
put-down b (1)
unstack a k (1)
stack a h (1)
pick-up j (1)
stack j l (1)
unstack k f (1)
stack k b (1)
unstack f e (1)
stack f a (1)
unstack k b (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.226404s, 431364 KB] Plan length: 47 step(s).
[t=0.226404s, 431364 KB] Plan cost: 47
[t=0.226404s, 431364 KB] Expanded 191 state(s).
[t=0.226404s, 431364 KB] Reopened 1 state(s).
[t=0.226404s, 431364 KB] Evaluated 601 state(s).
[t=0.226404s, 431364 KB] Evaluations: 601
[t=0.226404s, 431364 KB] Generated 829 state(s).
[t=0.226404s, 431364 KB] Dead ends: 0 state(s).
[t=0.226404s, 431364 KB] Expanded until last jump: 8 state(s).
[t=0.226404s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.226404s, 431364 KB] Evaluated until last jump: 32 state(s).
[t=0.226404s, 431364 KB] Generated until last jump: 38 state(s).
[t=0.226404s, 431364 KB] Number of registered states: 601
[t=0.226404s, 431364 KB] Int hash set load factor: 601/1024 = 0.586914
[t=0.226404s, 431364 KB] Int hash set resizes: 10
[t=0.226404s, 431364 KB] Search time: 0.199897s
[t=0.226404s, 431364 KB] Total time: 0.226404s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p92.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5958e-05s, 424928 KB] reading input...
[t=0.00211888s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259171s, 427536 KB] Building successor generator...done!
[t=0.0261971s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262197s, 427536 KB] time for successor generation creation: 0.000168403s
[t=0.0262477s, 427536 KB] Variables: 25
[t=0.02627s, 427536 KB] FactPairs: 182
[t=0.026292s, 427536 KB] Bytes per state: 8
[t=0.0265042s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993325s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0993839s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994094s, 430128 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0994362s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0994692s, 430128 KB] pruning method: none
[t=0.111374s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.111426s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117852s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.117894s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118307s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.118337s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.119899s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.119931s, 431100 KB] g=2, 13 evaluated, 3 expanded
[t=0.120342s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.120371s, 431100 KB] g=3, 15 evaluated, 4 expanded
[t=0.121158s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.121187s, 431100 KB] g=4, 19 evaluated, 5 expanded
[t=0.123307s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.123339s, 431100 KB] g=6, 30 evaluated, 8 expanded
[t=0.125637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.125667s, 431100 KB] g=9, 42 evaluated, 12 expanded
[t=0.126652s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.126683s, 431100 KB] g=10, 47 evaluated, 13 expanded
[t=0.126901s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.126929s, 431100 KB] g=10, 48 evaluated, 13 expanded
[t=0.12809s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.128119s, 431100 KB] g=11, 54 evaluated, 14 expanded
[t=0.128716s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.128745s, 431100 KB] g=12, 57 evaluated, 15 expanded
[t=0.146195s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.146231s, 431100 KB] g=20, 149 evaluated, 39 expanded
[t=0.180882s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.18092s, 431232 KB] g=24, 332 evaluated, 84 expanded
[t=0.183419s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.183455s, 431232 KB] g=26, 345 evaluated, 86 expanded
[t=0.183672s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.183707s, 431232 KB] g=26, 346 evaluated, 86 expanded
[t=0.184494s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.184526s, 431232 KB] g=27, 350 evaluated, 87 expanded
[t=0.184745s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.184773s, 431232 KB] g=27, 351 evaluated, 87 expanded
[t=0.185184s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.185216s, 431232 KB] g=27, 353 evaluated, 87 expanded
[t=0.185626s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.185654s, 431232 KB] g=28, 355 evaluated, 88 expanded
[t=0.187769s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.187804s, 431232 KB] g=29, 366 evaluated, 90 expanded
[t=0.190092s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.190125s, 431232 KB] g=31, 378 evaluated, 93 expanded
[t=0.190543s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.190573s, 431232 KB] g=32, 380 evaluated, 94 expanded
[t=0.192491s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.192524s, 431232 KB] g=34, 390 evaluated, 96 expanded
[t=0.199358s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.19939s, 431232 KB] g=39, 426 evaluated, 106 expanded
[t=0.216607s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.216644s, 431364 KB] g=36, 517 evaluated, 132 expanded
[t=0.217615s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.217644s, 431364 KB] g=37, 522 evaluated, 133 expanded
[t=0.223711s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.223744s, 431364 KB] g=41, 554 evaluated, 143 expanded
[t=0.233021s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.233057s, 431364 KB] g=44, 603 evaluated, 164 expanded
[t=0.233274s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.233302s, 431364 KB] g=44, 604 evaluated, 164 expanded
[t=0.234271s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.2343s, 431364 KB] g=46, 609 evaluated, 166 expanded
[t=0.234729s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.234768s, 431364 KB] g=47, 611 evaluated, 167 expanded
[t=0.235554s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.235586s, 431364 KB] g=49, 615 evaluated, 169 expanded
[t=0.235616s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.235639s, 431364 KB] g=50, 616 evaluated, 170 expanded
[t=0.235664s, 431364 KB] Solution found!
[t=0.23569s, 431364 KB] Actual search time: 0.136217s
unstack i d (1)
put-down i (1)
pick-up f (1)
stack f j (1)
unstack l k (1)
stack l i (1)
unstack d a (1)
put-down d (1)
unstack a b (1)
stack a k (1)
unstack l i (1)
stack l d (1)
unstack b e (1)
stack b f (1)
unstack a k (1)
stack a i (1)
unstack k h (1)
put-down k (1)
unstack b f (1)
stack b l (1)
unstack e g (1)
put-down e (1)
pick-up h (1)
stack h g (1)
unstack a i (1)
stack a h (1)
pick-up k (1)
stack k e (1)
unstack f j (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack b l (1)
stack b c (1)
unstack l d (1)
stack l i (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.235714s, 431364 KB] Plan length: 50 step(s).
[t=0.235714s, 431364 KB] Plan cost: 50
[t=0.235714s, 431364 KB] Expanded 171 state(s).
[t=0.235714s, 431364 KB] Reopened 0 state(s).
[t=0.235714s, 431364 KB] Evaluated 616 state(s).
[t=0.235714s, 431364 KB] Evaluations: 616
[t=0.235714s, 431364 KB] Generated 795 state(s).
[t=0.235714s, 431364 KB] Dead ends: 0 state(s).
[t=0.235714s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.235714s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.235714s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.235714s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.235714s, 431364 KB] Number of registered states: 616
[t=0.235714s, 431364 KB] Int hash set load factor: 616/1024 = 0.601562
[t=0.235714s, 431364 KB] Int hash set resizes: 10
[t=0.235714s, 431364 KB] Search time: 0.209211s
[t=0.235714s, 431364 KB] Total time: 0.235714s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p93.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5373e-05s, 424928 KB] reading input...
[t=0.00214362s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258599s, 427536 KB] Building successor generator...done!
[t=0.0261383s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261623s, 427536 KB] time for successor generation creation: 0.00016794s
[t=0.0261915s, 427536 KB] Variables: 25
[t=0.0262145s, 427536 KB] FactPairs: 182
[t=0.0262368s, 427536 KB] Bytes per state: 8
[t=0.0264317s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982846s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0983373s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983635s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0983907s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0984149s, 430128 KB] pruning method: none
[t=0.110223s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.110275s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117439s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.117482s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.119144s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.119177s, 431100 KB] g=5, 16 evaluated, 5 expanded
[t=0.121535s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.121565s, 431100 KB] g=8, 29 evaluated, 8 expanded
[t=0.123572s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.123605s, 431100 KB] g=9, 40 evaluated, 10 expanded
[t=0.14285s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.142896s, 431100 KB] g=13, 147 evaluated, 34 expanded
[t=0.171238s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.171276s, 431232 KB] g=16, 304 evaluated, 78 expanded
[t=0.203466s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.203502s, 431232 KB] g=25, 483 evaluated, 120 expanded
[t=0.243174s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.243211s, 431364 KB] g=23, 703 evaluated, 182 expanded, 4 reopened
[t=0.531183s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.531229s, 431496 KB] g=28, 2314 evaluated, 576 expanded, 11 reopened
[t=0.532162s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.532198s, 431628 KB] g=29, 2319 evaluated, 577 expanded, 11 reopened
[t=0.533676s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.533708s, 431628 KB] g=31, 2327 evaluated, 579 expanded, 11 reopened
[t=0.538766s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.5388s, 431628 KB] g=33, 2355 evaluated, 585 expanded, 11 reopened
[t=0.543325s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.543358s, 431628 KB] g=35, 2380 evaluated, 592 expanded, 11 reopened
[t=0.545188s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.545222s, 431628 KB] g=38, 2390 evaluated, 595 expanded, 11 reopened
[t=0.547774s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.547812s, 431628 KB] g=41, 2404 evaluated, 598 expanded, 11 reopened
[t=0.551803s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.551839s, 431628 KB] g=43, 2426 evaluated, 603 expanded, 11 reopened
[t=0.559787s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.559822s, 431628 KB] g=46, 2470 evaluated, 616 expanded, 11 reopened
[t=0.560573s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.560604s, 431628 KB] g=48, 2474 evaluated, 618 expanded, 11 reopened
[t=0.594645s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.594683s, 431760 KB] g=48, 2663 evaluated, 669 expanded, 12 reopened
[t=0.602861s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.602905s, 431760 KB] g=51, 2708 evaluated, 681 expanded, 12 reopened
[t=0.606397s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.606431s, 431760 KB] g=54, 2727 evaluated, 687 expanded, 12 reopened
[t=0.609178s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.609209s, 431760 KB] g=57, 2742 evaluated, 691 expanded, 12 reopened
[t=0.631662s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.631701s, 431760 KB] g=60, 2865 evaluated, 748 expanded, 32 reopened
[t=0.730439s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.730487s, 431892 KB] g=59, 3409 evaluated, 1023 expanded, 137 reopened
[t=0.748896s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.748938s, 432024 KB] g=65, 3511 evaluated, 1051 expanded, 137 reopened
[t=0.759022s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.759064s, 432024 KB] g=65, 3567 evaluated, 1067 expanded, 137 reopened
[t=0.765779s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.765819s, 432024 KB] g=68, 3604 evaluated, 1080 expanded, 137 reopened
[t=0.766031s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.766061s, 432024 KB] g=68, 3605 evaluated, 1080 expanded, 137 reopened
[t=0.76663s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.76666s, 432024 KB] g=69, 3608 evaluated, 1081 expanded, 137 reopened
[t=0.767406s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.767436s, 432024 KB] g=70, 3612 evaluated, 1082 expanded, 137 reopened
[t=0.767649s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.767678s, 432024 KB] g=71, 3613 evaluated, 1083 expanded, 137 reopened
[t=0.768069s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.768099s, 432024 KB] g=72, 3615 evaluated, 1084 expanded, 137 reopened
[t=0.768847s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.768877s, 432024 KB] g=73, 3619 evaluated, 1085 expanded, 137 reopened
[t=0.770184s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.77022s, 432024 KB] g=77, 3626 evaluated, 1090 expanded, 137 reopened
[t=0.770431s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.770467s, 432024 KB] g=77, 3627 evaluated, 1090 expanded, 137 reopened
[t=0.771757s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.771788s, 432024 KB] g=78, 3634 evaluated, 1093 expanded, 137 reopened
[t=0.779233s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.77927s, 432024 KB] g=80, 3675 evaluated, 1114 expanded, 140 reopened
[t=0.779671s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.779702s, 432024 KB] g=82, 3678 evaluated, 1116 expanded, 140 reopened
[t=0.779729s, 432024 KB] Solution found!
[t=0.779757s, 432024 KB] Actual search time: 0.681338s
unstack a e (1)
put-down a (1)
unstack e d (1)
put-down e (1)
unstack d g (1)
stack d j (1)
unstack g l (1)
stack g d (1)
unstack l f (1)
stack l g (1)
unstack f i (1)
stack f k (1)
unstack l g (1)
put-down l (1)
unstack i b (1)
stack i a (1)
pick-up b (1)
stack b l (1)
unstack g d (1)
stack g b (1)
unstack f k (1)
stack f i (1)
pick-up e (1)
stack e k (1)
unstack d j (1)
put-down d (1)
unstack j c (1)
stack j d (1)
unstack c h (1)
stack c e (1)
pick-up h (1)
stack h g (1)
unstack f i (1)
stack f j (1)
unstack c e (1)
put-down c (1)
unstack i a (1)
stack i c (1)
unstack e k (1)
stack e i (1)
unstack f j (1)
stack f k (1)
unstack h g (1)
stack h f (1)
unstack g b (1)
put-down g (1)
pick-up a (1)
stack a b (1)
unstack h f (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack j d (1)
stack j b (1)
unstack e i (1)
stack e d (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k i (1)
unstack e d (1)
stack e j (1)
unstack k i (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.779782s, 432024 KB] Plan length: 82 step(s).
[t=0.779782s, 432024 KB] Plan cost: 82
[t=0.779782s, 432024 KB] Expanded 1117 state(s).
[t=0.779782s, 432024 KB] Reopened 140 state(s).
[t=0.779782s, 432024 KB] Evaluated 3678 state(s).
[t=0.779782s, 432024 KB] Evaluations: 3678
[t=0.779782s, 432024 KB] Generated 5510 state(s).
[t=0.779782s, 432024 KB] Dead ends: 0 state(s).
[t=0.779782s, 432024 KB] Expanded until last jump: 0 state(s).
[t=0.779782s, 432024 KB] Reopened until last jump: 0 state(s).
[t=0.779782s, 432024 KB] Evaluated until last jump: 1 state(s).
[t=0.779782s, 432024 KB] Generated until last jump: 0 state(s).
[t=0.779782s, 432024 KB] Number of registered states: 3678
[t=0.779782s, 432024 KB] Int hash set load factor: 3678/4096 = 0.897949
[t=0.779782s, 432024 KB] Int hash set resizes: 12
[t=0.779782s, 432024 KB] Search time: 0.753351s
[t=0.779782s, 432024 KB] Total time: 0.779782s
Solution found.
Peak memory: 432024 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p94.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5171e-05s, 424928 KB] reading input...
[t=0.00212565s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260729s, 427536 KB] Building successor generator...done!
[t=0.0263463s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263699s, 427536 KB] time for successor generation creation: 0.000164132s
[t=0.0263981s, 427536 KB] Variables: 25
[t=0.0264206s, 427536 KB] FactPairs: 182
[t=0.0264428s, 427536 KB] Bytes per state: 8
[t=0.0266363s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109124s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.109177s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109204s, 430128 KB] f = 141, 1 evaluated, 0 expanded
[t=0.109231s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.109255s, 430128 KB] pruning method: none
[t=0.127822s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.127872s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.128273s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.128304s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.129074s, 431100 KB] f = 147, 10 evaluated, 3 expanded
[t=0.129652s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.129682s, 431100 KB] g=3, 13 evaluated, 4 expanded
[t=0.129898s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.129927s, 431100 KB] g=4, 14 evaluated, 5 expanded
[t=0.139422s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.139462s, 431100 KB] g=12, 66 evaluated, 18 expanded
[t=0.140217s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.140247s, 431100 KB] g=12, 70 evaluated, 18 expanded
[t=0.143543s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.143576s, 431100 KB] g=14, 88 evaluated, 22 expanded
[t=0.155636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.155673s, 431100 KB] g=20, 154 evaluated, 33 expanded
[t=0.167763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.1678s, 431232 KB] g=24, 220 evaluated, 43 expanded
[t=0.173477s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.173512s, 431232 KB] g=27, 251 evaluated, 49 expanded
[t=0.187212s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.187248s, 431232 KB] g=31, 326 evaluated, 62 expanded
[t=0.188006s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.188039s, 431232 KB] g=32, 330 evaluated, 63 expanded
[t=0.188974s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.189007s, 431232 KB] g=33, 335 evaluated, 64 expanded
[t=0.227167s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.227206s, 431364 KB] g=35, 544 evaluated, 106 expanded
[t=0.252994s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.253033s, 431496 KB] g=44, 685 evaluated, 145 expanded, 3 reopened
[t=0.253798s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.253832s, 431496 KB] g=45, 689 evaluated, 146 expanded, 3 reopened
[t=0.254044s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.254072s, 431496 KB] g=45, 690 evaluated, 146 expanded, 3 reopened
[t=0.255391s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.255431s, 431496 KB] g=46, 697 evaluated, 147 expanded, 3 reopened
[t=0.26003s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.260063s, 431496 KB] g=51, 722 evaluated, 154 expanded, 3 reopened
[t=0.261196s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.261225s, 431496 KB] g=52, 728 evaluated, 155 expanded, 3 reopened
[t=0.261809s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.26184s, 431496 KB] g=53, 731 evaluated, 156 expanded, 3 reopened
[t=0.262239s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.262271s, 431496 KB] g=54, 733 evaluated, 157 expanded, 3 reopened
[t=0.262484s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.262512s, 431496 KB] g=54, 734 evaluated, 157 expanded, 3 reopened
[t=0.264388s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.264422s, 431496 KB] g=56, 744 evaluated, 160 expanded, 3 reopened
[t=0.265364s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.265397s, 431496 KB] g=57, 749 evaluated, 161 expanded, 3 reopened
[t=0.266712s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.266742s, 431496 KB] g=59, 756 evaluated, 163 expanded, 3 reopened
[t=0.267151s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.267185s, 431496 KB] g=60, 758 evaluated, 164 expanded, 3 reopened
[t=0.267586s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.267616s, 431496 KB] g=61, 760 evaluated, 165 expanded, 3 reopened
[t=0.268195s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.268227s, 431496 KB] g=62, 763 evaluated, 166 expanded, 3 reopened
[t=0.268629s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.268658s, 431496 KB] g=63, 765 evaluated, 167 expanded, 3 reopened
[t=0.269603s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.269632s, 431496 KB] g=65, 770 evaluated, 169 expanded, 3 reopened
[t=0.269849s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.269881s, 431496 KB] g=66, 771 evaluated, 170 expanded, 3 reopened
[t=0.270097s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.27013s, 431496 KB] g=67, 772 evaluated, 171 expanded, 3 reopened
[t=0.270527s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.270556s, 431496 KB] g=68, 774 evaluated, 172 expanded, 3 reopened
[t=0.274469s, 431496 KB] Solution found!
[t=0.274506s, 431496 KB] Actual search time: 0.16525s
stack a j (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d b (1)
unstack i c (1)
put-down i (1)
unstack g e (1)
stack g a (1)
unstack e h (1)
put-down e (1)
unstack g a (1)
stack g e (1)
unstack a j (1)
stack a g (1)
unstack j k (1)
put-down j (1)
unstack a g (1)
stack a k (1)
unstack d b (1)
stack d j (1)
unstack h l (1)
stack h a (1)
unstack g e (1)
stack g h (1)
pick-up e (1)
stack e b (1)
pick-up i (1)
stack i c (1)
unstack l f (1)
stack l i (1)
pick-up f (1)
stack f d (1)
unstack l i (1)
put-down l (1)
unstack f d (1)
stack f e (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up l (1)
stack l d (1)
unstack a k (1)
stack a h (1)
unstack l d (1)
stack l i (1)
pick-up k (1)
stack k l (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack d j (1)
stack d l (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.274533s, 431496 KB] Plan length: 71 step(s).
[t=0.274533s, 431496 KB] Plan cost: 71
[t=0.274533s, 431496 KB] Expanded 187 state(s).
[t=0.274533s, 431496 KB] Reopened 3 state(s).
[t=0.274533s, 431496 KB] Evaluated 796 state(s).
[t=0.274533s, 431496 KB] Evaluations: 796
[t=0.274533s, 431496 KB] Generated 1007 state(s).
[t=0.274533s, 431496 KB] Dead ends: 0 state(s).
[t=0.274533s, 431496 KB] Expanded until last jump: 3 state(s).
[t=0.274533s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.274533s, 431496 KB] Evaluated until last jump: 10 state(s).
[t=0.274533s, 431496 KB] Generated until last jump: 11 state(s).
[t=0.274533s, 431496 KB] Number of registered states: 796
[t=0.274533s, 431496 KB] Int hash set load factor: 796/1024 = 0.777344
[t=0.274533s, 431496 KB] Int hash set resizes: 10
[t=0.274533s, 431496 KB] Search time: 0.247897s
[t=0.274533s, 431496 KB] Total time: 0.274533s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p95.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7476e-05s, 424928 KB] reading input...
[t=0.00213847s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257447s, 427536 KB] Building successor generator...done!
[t=0.0260229s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260472s, 427536 KB] time for successor generation creation: 0.000168165s
[t=0.0260753s, 427536 KB] Variables: 25
[t=0.0260993s, 427536 KB] FactPairs: 182
[t=0.0261218s, 427536 KB] Bytes per state: 8
[t=0.0263122s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098306s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0983581s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983839s, 430128 KB] f = 149, 1 evaluated, 0 expanded
[t=0.0984113s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0984356s, 430128 KB] pruning method: none
[t=0.110264s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.110313s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116753s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.116796s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117014s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.117043s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117253s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.117282s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.129222s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.12926s, 431100 KB] g=3, 71 evaluated, 24 expanded
[t=0.130214s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.130246s, 431100 KB] g=4, 76 evaluated, 25 expanded
[t=0.131178s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.13121s, 431100 KB] g=5, 81 evaluated, 26 expanded
[t=0.131781s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.13181s, 431100 KB] g=6, 84 evaluated, 27 expanded
[t=0.13384s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.133874s, 431100 KB] g=7, 95 evaluated, 30 expanded
[t=0.134623s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.134653s, 431100 KB] g=8, 99 evaluated, 31 expanded
[t=0.137201s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.137234s, 431100 KB] g=11, 113 evaluated, 35 expanded
[t=0.1396s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.139636s, 431100 KB] g=13, 126 evaluated, 39 expanded
[t=0.14221s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.142242s, 431100 KB] g=13, 140 evaluated, 43 expanded
[t=0.152703s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.15274s, 431232 KB] g=18, 198 evaluated, 57 expanded
[t=0.182657s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.182694s, 431232 KB] g=27, 364 evaluated, 104 expanded, 3 reopened
[t=0.186496s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.186533s, 431232 KB] g=29, 385 evaluated, 109 expanded, 3 reopened
[t=0.187639s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.187669s, 431232 KB] g=30, 391 evaluated, 110 expanded, 3 reopened
[t=0.188596s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.188628s, 431232 KB] g=31, 396 evaluated, 111 expanded, 3 reopened
[t=0.190098s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.190132s, 431232 KB] g=33, 404 evaluated, 113 expanded, 3 reopened
[t=0.192675s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.192705s, 431232 KB] g=35, 418 evaluated, 117 expanded, 3 reopened
[t=0.197421s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.197465s, 431364 KB] g=33, 444 evaluated, 124 expanded, 3 reopened
[t=0.198404s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.198434s, 431364 KB] g=35, 449 evaluated, 126 expanded, 3 reopened
[t=0.198826s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.198854s, 431364 KB] g=36, 451 evaluated, 127 expanded, 3 reopened
[t=0.200688s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.20072s, 431364 KB] g=40, 461 evaluated, 131 expanded, 3 reopened
[t=0.200928s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.200957s, 431364 KB] g=40, 462 evaluated, 131 expanded, 3 reopened
[t=0.202269s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.202301s, 431364 KB] g=42, 469 evaluated, 133 expanded, 3 reopened
[t=0.205393s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.205427s, 431364 KB] g=44, 486 evaluated, 138 expanded, 3 reopened
[t=0.206353s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.206385s, 431364 KB] g=45, 491 evaluated, 139 expanded, 3 reopened
[t=0.206778s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.206807s, 431364 KB] g=46, 493 evaluated, 140 expanded, 3 reopened
[t=0.207735s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.207768s, 431364 KB] g=48, 498 evaluated, 142 expanded, 3 reopened
[t=0.207983s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.208012s, 431364 KB] g=49, 499 evaluated, 143 expanded, 3 reopened
[t=0.208224s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.208252s, 431364 KB] g=50, 500 evaluated, 144 expanded, 3 reopened
[t=0.208643s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.208671s, 431364 KB] g=51, 502 evaluated, 145 expanded, 3 reopened
[t=0.210174s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.210205s, 431364 KB] g=54, 511 evaluated, 153 expanded, 3 reopened
[t=0.210233s, 431364 KB] Solution found!
[t=0.210259s, 431364 KB] Actual search time: 0.111819s
unstack k h (1)
put-down k (1)
unstack g a (1)
stack g e (1)
pick-up h (1)
stack h a (1)
unstack g e (1)
stack g h (1)
unstack j b (1)
stack j g (1)
unstack e l (1)
stack e k (1)
unstack b d (1)
stack b l (1)
unstack e k (1)
stack e b (1)
unstack j g (1)
put-down j (1)
unstack d i (1)
put-down d (1)
unstack g h (1)
put-down g (1)
pick-up j (1)
stack j i (1)
pick-up d (1)
stack d j (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
put-down b (1)
unstack d j (1)
stack d b (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.210284s, 431364 KB] Plan length: 54 step(s).
[t=0.210284s, 431364 KB] Plan cost: 54
[t=0.210284s, 431364 KB] Expanded 154 state(s).
[t=0.210284s, 431364 KB] Reopened 3 state(s).
[t=0.210284s, 431364 KB] Evaluated 511 state(s).
[t=0.210284s, 431364 KB] Evaluations: 511
[t=0.210284s, 431364 KB] Generated 680 state(s).
[t=0.210284s, 431364 KB] Dead ends: 0 state(s).
[t=0.210284s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.210284s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.210284s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.210284s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.210284s, 431364 KB] Number of registered states: 511
[t=0.210284s, 431364 KB] Int hash set load factor: 511/512 = 0.998047
[t=0.210284s, 431364 KB] Int hash set resizes: 9
[t=0.210284s, 431364 KB] Search time: 0.183973s
[t=0.210284s, 431364 KB] Total time: 0.210284s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p96.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5713e-05s, 424928 KB] reading input...
[t=0.0022226s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261161s, 427536 KB] Building successor generator...done!
[t=0.0263951s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264189s, 427536 KB] time for successor generation creation: 0.000170398s
[t=0.0264469s, 427536 KB] Variables: 25
[t=0.0264695s, 427536 KB] FactPairs: 182
[t=0.0264916s, 427536 KB] Bytes per state: 8
[t=0.0266846s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0995605s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.0996114s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.099637s, 430128 KB] f = 92, 1 evaluated, 0 expanded
[t=0.0996644s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.0996881s, 430128 KB] pruning method: none
[t=0.118295s, 431100 KB] f = 117, 4 evaluated, 1 expanded
[t=0.118923s, 431100 KB] f = 129, 7 evaluated, 3 expanded
[t=0.119337s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.119367s, 431100 KB] g=2, 9 evaluated, 4 expanded
[t=0.124726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.12476s, 431100 KB] g=13, 37 evaluated, 20 expanded
[t=0.125168s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.125197s, 431100 KB] g=14, 39 evaluated, 21 expanded
[t=0.126171s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.1262s, 431100 KB] g=15, 44 evaluated, 23 expanded
[t=0.139624s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.139658s, 431100 KB] g=24, 115 evaluated, 48 expanded
[t=0.150109s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.150146s, 431100 KB] g=26, 170 evaluated, 68 expanded
[t=0.202977s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.203014s, 431232 KB] g=26, 449 evaluated, 175 expanded, 8 reopened
[t=0.218371s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.218406s, 431232 KB] g=32, 530 evaluated, 197 expanded, 8 reopened
[t=0.220526s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.22057s, 431232 KB] g=33, 541 evaluated, 199 expanded, 8 reopened
[t=0.221177s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.221207s, 431232 KB] g=34, 544 evaluated, 200 expanded, 8 reopened
[t=0.226719s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.226752s, 431232 KB] g=39, 573 evaluated, 207 expanded, 8 reopened
[t=0.227721s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.227751s, 431232 KB] g=40, 578 evaluated, 208 expanded, 8 reopened
[t=0.228727s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.228761s, 431232 KB] g=41, 583 evaluated, 209 expanded, 8 reopened
[t=0.229734s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.229764s, 431232 KB] g=42, 588 evaluated, 210 expanded, 8 reopened
[t=0.230359s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.230391s, 431232 KB] g=43, 591 evaluated, 211 expanded, 8 reopened
[t=0.231553s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.231582s, 431232 KB] g=44, 597 evaluated, 212 expanded, 8 reopened
[t=0.23332s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.233355s, 431232 KB] g=46, 606 evaluated, 215 expanded, 8 reopened
[t=0.235447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.23548s, 431232 KB] g=49, 617 evaluated, 219 expanded, 8 reopened
[t=0.23589s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.235919s, 431232 KB] g=50, 619 evaluated, 220 expanded, 8 reopened
[t=0.236527s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.236558s, 431232 KB] g=52, 622 evaluated, 222 expanded, 8 reopened
[t=0.236964s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.236993s, 431232 KB] g=53, 624 evaluated, 223 expanded, 8 reopened
[t=0.237777s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.237809s, 431232 KB] g=55, 628 evaluated, 225 expanded, 8 reopened
[t=0.239345s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.239378s, 431232 KB] g=55, 636 evaluated, 229 expanded, 8 reopened
[t=0.242315s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.242348s, 431364 KB] g=53, 651 evaluated, 243 expanded, 17 reopened
[t=0.242769s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.242797s, 431364 KB] g=54, 653 evaluated, 244 expanded, 17 reopened
[t=0.2432s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.243229s, 431364 KB] g=54, 655 evaluated, 244 expanded, 17 reopened
[t=0.245733s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.245765s, 431364 KB] g=55, 668 evaluated, 247 expanded, 17 reopened
[t=0.246929s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.246958s, 431364 KB] g=57, 674 evaluated, 249 expanded, 17 reopened
[t=0.247365s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.247396s, 431364 KB] g=57, 676 evaluated, 249 expanded, 17 reopened
[t=0.250081s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.250117s, 431364 KB] g=60, 690 evaluated, 253 expanded, 17 reopened
[t=0.256557s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.25659s, 431364 KB] g=62, 724 evaluated, 264 expanded, 17 reopened
[t=0.265149s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.265185s, 431364 KB] g=65, 769 evaluated, 280 expanded, 17 reopened
[t=0.265786s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.265815s, 431364 KB] g=66, 772 evaluated, 281 expanded, 17 reopened
[t=0.266602s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.266631s, 431364 KB] g=67, 776 evaluated, 282 expanded, 17 reopened
[t=0.26742s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.267449s, 431364 KB] g=68, 780 evaluated, 284 expanded, 17 reopened
[t=0.267861s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.267889s, 431364 KB] g=69, 782 evaluated, 285 expanded, 17 reopened
[t=0.268316s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.268347s, 431364 KB] g=71, 785 evaluated, 287 expanded, 17 reopened
[t=0.268373s, 431364 KB] Solution found!
[t=0.2684s, 431364 KB] Actual search time: 0.168708s
put-down d (1)
unstack i e (1)
stack i c (1)
pick-up d (1)
stack d i (1)
unstack e l (1)
put-down e (1)
pick-up l (1)
stack l e (1)
unstack d i (1)
stack d l (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
stack c i (1)
unstack d l (1)
put-down d (1)
unstack b k (1)
stack b c (1)
unstack l e (1)
stack l d (1)
unstack k f (1)
put-down k (1)
pick-up e (1)
stack e k (1)
unstack f a (1)
put-down f (1)
unstack a g (1)
stack a e (1)
unstack b c (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack g h (1)
put-down g (1)
unstack h j (1)
stack h g (1)
unstack a e (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack e k (1)
put-down e (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.268425s, 431364 KB] Plan length: 71 step(s).
[t=0.268425s, 431364 KB] Plan cost: 71
[t=0.268425s, 431364 KB] Expanded 288 state(s).
[t=0.268425s, 431364 KB] Reopened 17 state(s).
[t=0.268425s, 431364 KB] Evaluated 785 state(s).
[t=0.268425s, 431364 KB] Evaluations: 785
[t=0.268425s, 431364 KB] Generated 1151 state(s).
[t=0.268425s, 431364 KB] Dead ends: 0 state(s).
[t=0.268425s, 431364 KB] Expanded until last jump: 3 state(s).
[t=0.268425s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.268425s, 431364 KB] Evaluated until last jump: 7 state(s).
[t=0.268425s, 431364 KB] Generated until last jump: 8 state(s).
[t=0.268425s, 431364 KB] Number of registered states: 785
[t=0.268425s, 431364 KB] Int hash set load factor: 785/1024 = 0.766602
[t=0.268425s, 431364 KB] Int hash set resizes: 10
[t=0.268425s, 431364 KB] Search time: 0.241741s
[t=0.268425s, 431364 KB] Total time: 0.268425s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p97.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6291e-05s, 424928 KB] reading input...
[t=0.00217403s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258087s, 427536 KB] Building successor generator...done!
[t=0.0260831s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261061s, 427536 KB] time for successor generation creation: 0.000162917s
[t=0.0261345s, 427536 KB] Variables: 25
[t=0.0261576s, 427536 KB] FactPairs: 182
[t=0.0261793s, 427536 KB] Bytes per state: 8
[t=0.0263729s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978583s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.0979106s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979362s, 430128 KB] f = 104, 1 evaluated, 0 expanded
[t=0.0979633s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.0979875s, 430128 KB] pruning method: none
[t=0.116589s, 431100 KB] f = 107, 6 evaluated, 1 expanded
[t=0.117522s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.117554s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.118113s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.118144s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.118522s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.118552s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.121062s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.121094s, 431100 KB] g=6, 30 evaluated, 8 expanded
[t=0.121479s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.121509s, 431100 KB] g=7, 32 evaluated, 9 expanded
[t=0.171976s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.172013s, 431232 KB] g=16, 320 evaluated, 103 expanded, 2 reopened
[t=0.19062s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.190658s, 431232 KB] g=23, 426 evaluated, 125 expanded, 2 reopened
[t=0.190869s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.1909s, 431232 KB] g=24, 427 evaluated, 126 expanded, 2 reopened
[t=0.194158s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.194197s, 431232 KB] g=28, 445 evaluated, 130 expanded, 2 reopened
[t=0.196171s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.196204s, 431232 KB] g=30, 456 evaluated, 132 expanded, 2 reopened
[t=0.196769s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.196799s, 431232 KB] g=31, 459 evaluated, 133 expanded, 2 reopened
[t=0.199111s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.199143s, 431232 KB] g=33, 472 evaluated, 135 expanded, 2 reopened
[t=0.199354s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.199384s, 431232 KB] g=34, 473 evaluated, 136 expanded, 2 reopened
[t=0.200656s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.200691s, 431232 KB] g=35, 480 evaluated, 137 expanded, 2 reopened
[t=0.201601s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.201634s, 431232 KB] g=36, 485 evaluated, 138 expanded, 2 reopened
[t=0.202898s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.202933s, 431364 KB] g=37, 492 evaluated, 140 expanded, 2 reopened
[t=0.203843s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.203875s, 431364 KB] g=38, 497 evaluated, 141 expanded, 2 reopened
[t=0.204088s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.204118s, 431364 KB] g=38, 498 evaluated, 141 expanded, 2 reopened
[t=0.204678s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.204707s, 431364 KB] g=39, 501 evaluated, 142 expanded, 2 reopened
[t=0.206497s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.206531s, 431364 KB] g=40, 511 evaluated, 144 expanded, 2 reopened
[t=0.210477s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.210511s, 431364 KB] g=42, 533 evaluated, 150 expanded, 2 reopened
[t=0.212314s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.212349s, 431364 KB] g=44, 543 evaluated, 152 expanded, 2 reopened
[t=0.213257s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.213288s, 431364 KB] g=45, 548 evaluated, 153 expanded, 2 reopened
[t=0.214564s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.214602s, 431364 KB] g=47, 555 evaluated, 155 expanded, 2 reopened
[t=0.219576s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.21961s, 431364 KB] g=52, 583 evaluated, 163 expanded, 2 reopened
[t=0.220886s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.220918s, 431364 KB] g=54, 590 evaluated, 165 expanded, 2 reopened
[t=0.222002s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.222032s, 431364 KB] g=56, 596 evaluated, 167 expanded, 2 reopened
[t=0.222418s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.222448s, 431364 KB] g=57, 598 evaluated, 168 expanded, 2 reopened
[t=0.224793s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.224828s, 431364 KB] g=61, 611 evaluated, 175 expanded, 2 reopened
[t=0.225216s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.225246s, 431364 KB] g=62, 613 evaluated, 176 expanded, 2 reopened
[t=0.225455s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.225484s, 431364 KB] g=63, 614 evaluated, 177 expanded, 2 reopened
[t=0.225868s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.225897s, 431364 KB] g=64, 616 evaluated, 178 expanded, 2 reopened
[t=0.227184s, 431364 KB] Solution found!
[t=0.227218s, 431364 KB] Actual search time: 0.129229s
stack i g (1)
unstack h l (1)
stack h e (1)
unstack l a (1)
put-down l (1)
unstack i g (1)
stack i a (1)
pick-up c (1)
stack c i (1)
unstack g d (1)
stack g l (1)
unstack d b (1)
put-down d (1)
unstack b k (1)
stack b d (1)
unstack g l (1)
stack g k (1)
unstack c i (1)
stack c b (1)
unstack h e (1)
put-down h (1)
pick-up e (1)
stack e l (1)
unstack g k (1)
stack g h (1)
unstack k f (1)
stack k c (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack i a (1)
put-down i (1)
pick-up a (1)
stack a h (1)
unstack k c (1)
stack k e (1)
unstack f j (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
pick-up j (1)
stack j l (1)
unstack c b (1)
put-down c (1)
pick-up i (1)
stack i c (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
stack b l (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.227244s, 431364 KB] Plan length: 67 step(s).
[t=0.227244s, 431364 KB] Plan cost: 67
[t=0.227244s, 431364 KB] Expanded 186 state(s).
[t=0.227244s, 431364 KB] Reopened 2 state(s).
[t=0.227244s, 431364 KB] Evaluated 624 state(s).
[t=0.227244s, 431364 KB] Evaluations: 624
[t=0.227244s, 431364 KB] Generated 827 state(s).
[t=0.227244s, 431364 KB] Dead ends: 0 state(s).
[t=0.227244s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.227244s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.227244s, 431364 KB] Evaluated until last jump: 6 state(s).
[t=0.227244s, 431364 KB] Generated until last jump: 5 state(s).
[t=0.227244s, 431364 KB] Number of registered states: 624
[t=0.227244s, 431364 KB] Int hash set load factor: 624/1024 = 0.609375
[t=0.227244s, 431364 KB] Int hash set resizes: 10
[t=0.227244s, 431364 KB] Search time: 0.200872s
[t=0.227244s, 431364 KB] Total time: 0.227244s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p98.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9644e-05s, 424928 KB] reading input...
[t=0.00214085s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260159s, 427536 KB] Building successor generator...done!
[t=0.0262935s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263169s, 427536 KB] time for successor generation creation: 0.00016591s
[t=0.0263458s, 427536 KB] Variables: 25
[t=0.0263689s, 427536 KB] FactPairs: 182
[t=0.0264s, 427536 KB] Bytes per state: 8
[t=0.0265963s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0996024s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.0996552s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0996811s, 430128 KB] f = 100, 1 evaluated, 0 expanded
[t=0.0997089s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.0997335s, 430128 KB] pruning method: none
[t=0.111752s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.111805s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11882s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.118862s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.127118s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.127153s, 431100 KB] g=6, 52 evaluated, 13 expanded
[t=0.128076s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.128106s, 431100 KB] g=7, 57 evaluated, 14 expanded
[t=0.13297s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.133007s, 431100 KB] g=10, 84 evaluated, 19 expanded
[t=0.1334s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.13343s, 431100 KB] g=11, 86 evaluated, 20 expanded
[t=0.136317s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.13635s, 431100 KB] g=13, 102 evaluated, 23 expanded
[t=0.139428s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.139464s, 431100 KB] g=15, 119 evaluated, 26 expanded
[t=0.141651s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.141686s, 431100 KB] g=17, 131 evaluated, 28 expanded
[t=0.142982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.143017s, 431100 KB] g=18, 138 evaluated, 29 expanded
[t=0.144301s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.144332s, 431100 KB] g=20, 145 evaluated, 31 expanded
[t=0.14561s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.14564s, 431100 KB] g=21, 152 evaluated, 32 expanded
[t=0.145853s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.145886s, 431100 KB] g=22, 153 evaluated, 33 expanded
[t=0.14915s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.149193s, 431232 KB] g=20, 171 evaluated, 38 expanded
[t=0.152821s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.152854s, 431232 KB] g=24, 191 evaluated, 43 expanded
[t=0.153781s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.153811s, 431232 KB] g=26, 196 evaluated, 45 expanded
[t=0.15546s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.155492s, 431232 KB] g=27, 205 evaluated, 47 expanded
[t=0.156597s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.156628s, 431232 KB] g=29, 211 evaluated, 49 expanded
[t=0.157559s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.157588s, 431232 KB] g=31, 216 evaluated, 51 expanded
[t=0.157983s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.158013s, 431232 KB] g=32, 218 evaluated, 52 expanded
[t=0.158398s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.158427s, 431232 KB] g=32, 220 evaluated, 52 expanded
[t=0.160087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.16012s, 431232 KB] g=35, 229 evaluated, 56 expanded
[t=0.160331s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.160359s, 431232 KB] g=35, 230 evaluated, 56 expanded
[t=0.168688s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.168721s, 431232 KB] g=38, 276 evaluated, 78 expanded
[t=0.169479s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.169511s, 431232 KB] g=40, 280 evaluated, 80 expanded
[t=0.169904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.169936s, 431232 KB] g=41, 282 evaluated, 81 expanded
[t=0.169966s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.16999s, 431232 KB] g=42, 283 evaluated, 82 expanded
[t=0.170016s, 431232 KB] Solution found!
[t=0.170041s, 431232 KB] Actual search time: 0.0703039s
unstack g c (1)
put-down g (1)
unstack a f (1)
stack a j (1)
unstack h l (1)
stack h a (1)
unstack f b (1)
put-down f (1)
unstack b i (1)
stack b l (1)
unstack h a (1)
stack h g (1)
unstack c k (1)
stack c b (1)
unstack a j (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack j e (1)
stack j c (1)
unstack i d (1)
put-down i (1)
pick-up e (1)
stack e k (1)
unstack j c (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.170066s, 431232 KB] Plan length: 42 step(s).
[t=0.170066s, 431232 KB] Plan cost: 42
[t=0.170066s, 431232 KB] Expanded 83 state(s).
[t=0.170066s, 431232 KB] Reopened 0 state(s).
[t=0.170066s, 431232 KB] Evaluated 283 state(s).
[t=0.170066s, 431232 KB] Evaluations: 283
[t=0.170066s, 431232 KB] Generated 365 state(s).
[t=0.170066s, 431232 KB] Dead ends: 0 state(s).
[t=0.170066s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.170066s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.170066s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.170066s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.170066s, 431232 KB] Number of registered states: 283
[t=0.170066s, 431232 KB] Int hash set load factor: 283/512 = 0.552734
[t=0.170066s, 431232 KB] Int hash set resizes: 9
[t=0.170066s, 431232 KB] Search time: 0.14347s
[t=0.170066s, 431232 KB] Total time: 0.170066s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p99.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9378e-05s, 424928 KB] reading input...
[t=0.00215593s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257579s, 427536 KB] Building successor generator...done!
[t=0.0260357s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260594s, 427536 KB] time for successor generation creation: 0.000167388s
[t=0.0260887s, 427536 KB] Variables: 25
[t=0.0261126s, 427536 KB] FactPairs: 182
[t=0.026135s, 427536 KB] Bytes per state: 8
[t=0.026333s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982399s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.0982929s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983186s, 430128 KB] f = 72, 1 evaluated, 0 expanded
[t=0.0983459s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.09837s, 430128 KB] pruning method: none
[t=0.110134s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.110186s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117333s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.117377s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118118s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.118149s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.11924s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.119271s, 431100 KB] g=6, 17 evaluated, 6 expanded
[t=0.119842s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.119874s, 431100 KB] g=7, 20 evaluated, 7 expanded
[t=0.123636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.123669s, 431100 KB] g=10, 41 evaluated, 15 expanded
[t=0.124056s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.124086s, 431100 KB] g=11, 43 evaluated, 16 expanded
[t=0.124646s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.124676s, 431100 KB] g=12, 46 evaluated, 17 expanded
[t=0.125234s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.125263s, 431100 KB] g=13, 49 evaluated, 18 expanded
[t=0.126175s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.126204s, 431100 KB] g=15, 54 evaluated, 20 expanded
[t=0.127656s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.127697s, 431100 KB] g=17, 62 evaluated, 23 expanded
[t=0.128976s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.129005s, 431100 KB] g=20, 69 evaluated, 26 expanded
[t=0.130633s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.130666s, 431100 KB] g=23, 78 evaluated, 29 expanded
[t=0.132299s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.132332s, 431100 KB] g=22, 87 evaluated, 33 expanded
[t=0.13272s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.132749s, 431100 KB] g=23, 89 evaluated, 34 expanded
[t=0.135098s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.135129s, 431100 KB] g=26, 102 evaluated, 40 expanded
[t=0.135876s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.13591s, 431100 KB] g=28, 106 evaluated, 42 expanded
[t=0.13612s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.136149s, 431100 KB] g=29, 107 evaluated, 43 expanded
[t=0.136535s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.136564s, 431100 KB] g=30, 109 evaluated, 44 expanded
[t=0.13785s, 431100 KB] Solution found!
[t=0.137883s, 431100 KB] Actual search time: 0.0395099s
stack a f (1)
unstack l h (1)
stack l k (1)
unstack a f (1)
stack a h (1)
unstack l k (1)
put-down l (1)
unstack f j (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack j e (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.137909s, 431100 KB] Plan length: 33 step(s).
[t=0.137909s, 431100 KB] Plan cost: 33
[t=0.137909s, 431100 KB] Expanded 52 state(s).
[t=0.137909s, 431100 KB] Reopened 0 state(s).
[t=0.137909s, 431100 KB] Evaluated 117 state(s).
[t=0.137909s, 431100 KB] Evaluations: 117
[t=0.137909s, 431100 KB] Generated 168 state(s).
[t=0.137909s, 431100 KB] Dead ends: 0 state(s).
[t=0.137909s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.137909s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.137909s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.137909s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.137909s, 431100 KB] Number of registered states: 117
[t=0.137909s, 431100 KB] Int hash set load factor: 117/128 = 0.914062
[t=0.137909s, 431100 KB] Int hash set resizes: 7
[t=0.137909s, 431100 KB] Search time: 0.111577s
[t=0.137909s, 431100 KB] Total time: 0.137909s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p100.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7179e-05s, 424928 KB] reading input...
[t=0.00226734s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026382s, 427536 KB] Building successor generator...done!
[t=0.0266743s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266997s, 427536 KB] time for successor generation creation: 0.000175618s
[t=0.0267302s, 427536 KB] Variables: 25
[t=0.0267631s, 427536 KB] FactPairs: 182
[t=0.0267849s, 427536 KB] Bytes per state: 8
[t=0.0269803s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098339s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0983914s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098418s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0984457s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0984796s, 430128 KB] pruning method: none
[t=0.116577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.116627s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117562s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.117594s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118855s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.118886s, 431100 KB] g=3, 15 evaluated, 4 expanded
[t=0.119269s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.119299s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.120201s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.120232s, 431100 KB] g=5, 22 evaluated, 6 expanded
[t=0.121339s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.12137s, 431100 KB] g=7, 28 evaluated, 8 expanded
[t=0.121777s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.121807s, 431100 KB] g=8, 30 evaluated, 9 expanded
[t=0.122546s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.122576s, 431100 KB] g=9, 34 evaluated, 10 expanded
[t=0.123136s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.123166s, 431100 KB] g=10, 37 evaluated, 11 expanded
[t=0.123725s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.123759s, 431100 KB] g=11, 40 evaluated, 12 expanded
[t=0.125208s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.125238s, 431100 KB] g=13, 48 evaluated, 15 expanded
[t=0.127049s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.127084s, 431100 KB] g=16, 58 evaluated, 18 expanded
[t=0.134178s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.134215s, 431100 KB] g=19, 98 evaluated, 28 expanded
[t=0.138678s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.138714s, 431100 KB] g=21, 123 evaluated, 35 expanded
[t=0.155182s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.155219s, 431232 KB] g=23, 216 evaluated, 59 expanded
[t=0.156314s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.156344s, 431232 KB] g=25, 222 evaluated, 61 expanded
[t=0.158515s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.158548s, 431232 KB] g=26, 234 evaluated, 63 expanded
[t=0.159463s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.159492s, 431232 KB] g=27, 239 evaluated, 64 expanded
[t=0.15988s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.159912s, 431232 KB] g=28, 241 evaluated, 65 expanded
[t=0.161174s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.161206s, 431232 KB] g=29, 248 evaluated, 67 expanded
[t=0.163152s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.163186s, 431232 KB] g=31, 258 evaluated, 70 expanded
[t=0.165163s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.165196s, 431232 KB] g=32, 269 evaluated, 75 expanded
[t=0.165407s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.165437s, 431232 KB] g=32, 270 evaluated, 75 expanded
[t=0.166886s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.166916s, 431232 KB] g=34, 278 evaluated, 78 expanded
[t=0.167834s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.167867s, 431232 KB] g=36, 283 evaluated, 80 expanded
[t=0.168079s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.168108s, 431232 KB] g=37, 284 evaluated, 81 expanded
[t=0.168676s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.168705s, 431232 KB] g=39, 287 evaluated, 83 expanded
[t=0.169874s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.169909s, 431232 KB] g=41, 293 evaluated, 87 expanded
[t=0.169944s, 431232 KB] Solution found!
[t=0.169973s, 431232 KB] Actual search time: 0.0714908s
unstack e g (1)
stack e f (1)
unstack k h (1)
stack k b (1)
unstack h j (1)
stack h g (1)
unstack j a (1)
stack j e (1)
pick-up a (1)
stack a h (1)
unstack j e (1)
stack j k (1)
unstack e f (1)
put-down e (1)
unstack j k (1)
put-down j (1)
unstack f d (1)
stack f a (1)
unstack d i (1)
put-down d (1)
pick-up e (1)
stack e d (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.17s, 431232 KB] Plan length: 42 step(s).
[t=0.17s, 431232 KB] Plan cost: 42
[t=0.17s, 431232 KB] Expanded 89 state(s).
[t=0.17s, 431232 KB] Reopened 0 state(s).
[t=0.17s, 431232 KB] Evaluated 294 state(s).
[t=0.17s, 431232 KB] Evaluations: 294
[t=0.17s, 431232 KB] Generated 388 state(s).
[t=0.17s, 431232 KB] Dead ends: 0 state(s).
[t=0.17s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.17s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.17s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.17s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.17s, 431232 KB] Number of registered states: 294
[t=0.17s, 431232 KB] Int hash set load factor: 294/512 = 0.574219
[t=0.17s, 431232 KB] Int hash set resizes: 9
[t=0.17s, 431232 KB] Search time: 0.14302s
[t=0.17s, 431232 KB] Total time: 0.17s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.024131
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 4 test success: 20 of 20 (100.0%)

---------- FOLD 6/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 50 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.08357986807823181 (0.23086415231227875 vs. 0.14728428423404694), which occurred at index 50.
  _module_class,
 | avg_train_loss=0.098603 | avg_val_loss=0.092334
Epoch 2 | avg_train_loss=0.071166 | avg_val_loss=0.044377
Epoch 3 | avg_train_loss=0.040695 | avg_val_loss=0.038180
Epoch 4 | avg_train_loss=0.037017 | avg_val_loss=0.036429
Epoch 5 | avg_train_loss=0.035786 | avg_val_loss=0.034924
Epoch 6 | avg_train_loss=0.034837 | avg_val_loss=0.034032
Epoch 7 | avg_train_loss=0.033952 | avg_val_loss=0.034091
Epoch 8 | avg_train_loss=0.033459 | avg_val_loss=0.033366
Epoch 9 | avg_train_loss=0.032747 | avg_val_loss=0.032779
Epoch 10 | avg_train_loss=0.032227 | avg_val_loss=0.031895
Epoch 11 | avg_train_loss=0.031608 | avg_val_loss=0.031557
Epoch 12 | avg_train_loss=0.031099 | avg_val_loss=0.030967
Epoch 13 | avg_train_loss=0.030825 | avg_val_loss=0.031016
Epoch 14 | avg_train_loss=0.030394 | avg_val_loss=0.030494
Epoch 15 | avg_train_loss=0.030111 | avg_val_loss=0.030334
Epoch 16 | avg_train_loss=0.029745 | avg_val_loss=0.030161
Epoch 17 | avg_train_loss=0.029398 | avg_val_loss=0.029569
Epoch 18 | avg_train_loss=0.028997 | avg_val_loss=0.029656
Epoch 19 | avg_train_loss=0.028673 | avg_val_loss=0.028907
Epoch 20 | avg_train_loss=0.028374 | avg_val_loss=0.028824
Epoch 21 | avg_train_loss=0.028073 | avg_val_loss=0.028445
Epoch 22 | avg_train_loss=0.027759 | avg_val_loss=0.028079
Epoch 23 | avg_train_loss=0.027367 | avg_val_loss=0.027780
Epoch 24 | avg_train_loss=0.026976 | avg_val_loss=0.027782
Epoch 25 | avg_train_loss=0.026629 | avg_val_loss=0.027338
Epoch 26 | avg_train_loss=0.026302 | avg_val_loss=0.027085
Epoch 27 | avg_train_loss=0.026078 | avg_val_loss=0.026447
Epoch 28 | avg_train_loss=0.025748 | avg_val_loss=0.026236
Epoch 29 | avg_train_loss=0.025449 | avg_val_loss=0.026063
Epoch 30 | avg_train_loss=0.025192 | avg_val_loss=0.025921
Epoch 31 | avg_train_loss=0.024823 | avg_val_loss=0.025725
Epoch 32 | avg_train_loss=0.024678 | avg_val_loss=0.025692
Epoch 33 | avg_train_loss=0.024467 | avg_val_loss=0.025242
Epoch 34 | avg_train_loss=0.024328 | avg_val_loss=0.025295
Epoch 35 | avg_train_loss=0.023912 | avg_val_loss=0.024977
Epoch 36 | avg_train_loss=0.023733 | avg_val_loss=0.025129
Epoch 37 | avg_train_loss=0.023547 | avg_val_loss=0.024682
Epoch 38 | avg_train_loss=0.023394 | avg_val_loss=0.024609
Epoch 39 | avg_train_loss=0.023251 | avg_val_loss=0.024370
Epoch 40 | avg_train_loss=0.023024 | avg_val_loss=0.024228
Epoch 41 | avg_train_loss=0.022878 | avg_val_loss=0.024163
Epoch 42 | avg_train_loss=0.022674 | avg_val_loss=0.024357
Epoch 43 | avg_train_loss=0.022468 | avg_val_loss=0.024313
Epoch 44 | avg_train_loss=0.022526 | avg_val_loss=0.024009
Epoch 45 | avg_train_loss=0.022393 | avg_val_loss=0.023809
Epoch 46 | avg_train_loss=0.022002 | avg_val_loss=0.023721
Epoch 47 | avg_train_loss=0.021914 | avg_val_loss=0.024230
Epoch 48 | avg_train_loss=0.021832 | avg_val_loss=0.023703
Epoch 49 | avg_train_loss=0.021660 | avg_val_loss=0.023597
Epoch 50 | avg_train_loss=0.021547 | avg_val_loss=0.023796
Epoch 51 | avg_train_loss=0.021501 | avg_val_loss=0.023819
Epoch 52 | avg_train_loss=0.021421 | avg_val_loss=0.023696
Epoch 53 | avg_train_loss=0.021176 | avg_val_loss=0.023307
Epoch 54 | avg_train_loss=0.021033 | avg_val_loss=0.023719
Epoch 55 | avg_train_loss=0.021029 | avg_val_loss=0.023444
Epoch 56 | avg_train_loss=0.020917 | avg_val_loss=0.023544
Epoch 57 | avg_train_loss=0.020688 | avg_val_loss=0.023253
Epoch 58 | avg_train_loss=0.020602 | avg_val_loss=0.023503
Epoch 59 | avg_train_loss=0.020446 | avg_val_loss=0.023200
Epoch 60 | avg_train_loss=0.020298 | avg_val_loss=0.023316
Epoch 61 | avg_train_loss=0.020123 | avg_val_loss=0.022761
Epoch 62 | avg_train_loss=0.020126 | avg_val_loss=0.023302
Epoch 63 | avg_train_loss=0.019970 | avg_val_loss=0.022929
Epoch 64 | avg_train_loss=0.019797 | avg_val_loss=0.022952
Epoch 65 | avg_train_loss=0.019846 | avg_val_loss=0.022835
Epoch 66 | avg_train_loss=0.019567 | avg_val_loss=0.023523
Epoch 67 | avg_train_loss=0.019507 | avg_val_loss=0.022448
Epoch 68 | avg_train_loss=0.019376 | avg_val_loss=0.023249
Epoch 69 | avg_train_loss=0.019414 | avg_val_loss=0.023198
Epoch 70 | avg_train_loss=0.019088 | avg_val_loss=0.023445
Epoch 71 | avg_train_loss=0.019089 | avg_val_loss=0.022836
Epoch 72 | avg_train_loss=0.018844 | avg_val_loss=0.022892
Epoch 73 | avg_train_loss=0.018941 | avg_val_loss=0.023059
Epoch 74 | avg_train_loss=0.018733 | avg_val_loss=0.023184
Epoch 75 | avg_train_loss=0.018596 | avg_val_loss=0.023095
Epoch 76 | avg_train_loss=0.018466 | avg_val_loss=0.022930
Epoch 77 | avg_train_loss=0.018347 | avg_val_loss=0.023708
Epoch 78 | avg_train_loss=0.018412 | avg_val_loss=0.022820
Epoch 79 | avg_train_loss=0.018115 | avg_val_loss=0.022644
Epoch 80 | avg_train_loss=0.017952 | avg_val_loss=0.022682
Epoch 81 | avg_train_loss=0.017899 | avg_val_loss=0.023196
Epoch 82 | avg_train_loss=0.017889 | avg_val_loss=0.022972
Epoch 83 | avg_train_loss=0.017679 | avg_val_loss=0.023337
Epoch 84 | avg_train_loss=0.017888 | avg_val_loss=0.022789
Epoch 85 | avg_train_loss=0.017355 | avg_val_loss=0.023234
Epoch 86 | avg_train_loss=0.017447 | avg_val_loss=0.022863
Epoch 87 | avg_train_loss=0.017378 | avg_val_loss=0.022615
Epoch 88 | avg_train_loss=0.017294 | avg_val_loss=0.023144
Epoch 89 | avg_train_loss=0.017297 | avg_val_loss=0.022723
Epoch 90 | avg_train_loss=0.017032 | avg_val_loss=0.023644
Epoch 91 | avg_train_loss=0.016985 | avg_val_loss=0.022533
Epoch 92 | avg_train_loss=0.016878 | avg_val_loss=0.023388
Epoch 93 | avg_train_loss=0.016825 | avg_val_loss=0.023213
Epoch 94 | avg_train_loss=0.016574 | avg_val_loss=0.022984
Epoch 95 | avg_train_loss=0.016579 | avg_val_loss=0.023107
Epoch 96 | avg_train_loss=0.016425 | avg_val_loss=0.023256
Epoch 97 | avg_train_loss=0.016503 | avg_val_loss=0.023037
Epoch 98 | avg_train_loss=0.016229 | avg_val_loss=0.023297
Epoch 99 | avg_train_loss=0.016116 | avg_val_loss=0.023288
Epoch 100 | avg_train_loss=0.016016 | avg_val_loss=0.023611
Epoch 101 | avg_train_loss=0.016062 | avg_val_loss=0.023273
Epoch 102 | avg_train_loss=0.015944INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p101.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6183e-05s, 424928 KB] reading input...
[t=0.00212688s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258272s, 427536 KB] Building successor generator...done!
[t=0.0261081s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261317s, 427536 KB] time for successor generation creation: 0.000169767s
[t=0.02616s, 427536 KB] Variables: 25
[t=0.0261826s, 427536 KB] FactPairs: 182
[t=0.0262047s, 427536 KB] Bytes per state: 8
[t=0.0263978s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109828s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.109882s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109908s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.109936s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.10996s, 430128 KB] pruning method: none
[t=0.128552s, 431100 KB] f = 147, 4 evaluated, 1 expanded
[t=0.129522s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.129563s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.129961s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.129991s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.132216s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.132249s, 431100 KB] g=6, 23 evaluated, 8 expanded
[t=0.132467s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.132496s, 431100 KB] g=7, 24 evaluated, 9 expanded
[t=0.137594s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.137628s, 431100 KB] g=10, 52 evaluated, 16 expanded
[t=0.138941s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.138978s, 431100 KB] g=11, 59 evaluated, 17 expanded
[t=0.140463s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.140493s, 431100 KB] g=13, 67 evaluated, 19 expanded
[t=0.141072s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.141104s, 431100 KB] g=14, 70 evaluated, 20 expanded
[t=0.149297s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.149331s, 431100 KB] g=15, 115 evaluated, 31 expanded
[t=0.15682s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.156857s, 431100 KB] g=19, 156 evaluated, 38 expanded
[t=0.159611s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.159647s, 431100 KB] g=21, 171 evaluated, 40 expanded
[t=0.161115s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.161151s, 431232 KB] g=22, 179 evaluated, 41 expanded
[t=0.162456s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.162489s, 431232 KB] g=23, 186 evaluated, 43 expanded
[t=0.165981s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.166014s, 431232 KB] g=25, 205 evaluated, 46 expanded
[t=0.16733s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.167365s, 431232 KB] g=27, 212 evaluated, 48 expanded
[t=0.170844s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.170879s, 431232 KB] g=31, 231 evaluated, 52 expanded
[t=0.17255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.172588s, 431232 KB] g=32, 240 evaluated, 54 expanded
[t=0.177361s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.177395s, 431232 KB] g=35, 266 evaluated, 60 expanded
[t=0.17889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.178924s, 431232 KB] g=37, 274 evaluated, 62 expanded
[t=0.180043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.180074s, 431232 KB] g=38, 280 evaluated, 63 expanded
[t=0.181016s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.181048s, 431232 KB] g=39, 285 evaluated, 64 expanded
[t=0.183266s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.183299s, 431232 KB] g=41, 297 evaluated, 67 expanded
[t=0.184599s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.184632s, 431232 KB] g=43, 304 evaluated, 69 expanded
[t=0.185579s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.185609s, 431232 KB] g=45, 309 evaluated, 71 expanded
[t=0.186366s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.186396s, 431232 KB] g=46, 313 evaluated, 72 expanded
[t=0.186984s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.187018s, 431232 KB] g=47, 316 evaluated, 73 expanded
[t=0.190685s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.190719s, 431232 KB] g=49, 336 evaluated, 79 expanded
[t=0.197469s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.197505s, 431232 KB] g=52, 373 evaluated, 91 expanded
[t=0.22539s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.225429s, 431364 KB] g=57, 526 evaluated, 144 expanded, 1 reopened
[t=0.226372s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.226402s, 431364 KB] g=58, 531 evaluated, 145 expanded, 1 reopened
[t=0.226638s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.226668s, 431364 KB] g=59, 532 evaluated, 146 expanded, 1 reopened
[t=0.227065s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.227094s, 431364 KB] g=60, 534 evaluated, 147 expanded, 1 reopened
[t=0.227498s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.227536s, 431364 KB] g=62, 537 evaluated, 149 expanded, 1 reopened
[t=0.227563s, 431364 KB] Solution found!
[t=0.227589s, 431364 KB] Actual search time: 0.117626s
unstack d k (1)
stack d b (1)
unstack l c (1)
put-down l (1)
unstack c a (1)
put-down c (1)
unstack a h (1)
stack a l (1)
unstack h j (1)
stack h a (1)
unstack j f (1)
put-down j (1)
unstack d b (1)
stack d k (1)
unstack b e (1)
put-down b (1)
unstack e g (1)
stack e b (1)
unstack g i (1)
stack g e (1)
pick-up f (1)
stack f d (1)
unstack g e (1)
stack g h (1)
pick-up i (1)
stack i c (1)
unstack g h (1)
put-down g (1)
pick-up j (1)
stack j i (1)
unstack f d (1)
stack f e (1)
unstack h a (1)
stack h g (1)
unstack d k (1)
stack d j (1)
unstack a l (1)
stack a h (1)
pick-up k (1)
stack k l (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack d j (1)
stack d l (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.227615s, 431364 KB] Plan length: 62 step(s).
[t=0.227615s, 431364 KB] Plan cost: 62
[t=0.227615s, 431364 KB] Expanded 150 state(s).
[t=0.227615s, 431364 KB] Reopened 1 state(s).
[t=0.227615s, 431364 KB] Evaluated 537 state(s).
[t=0.227615s, 431364 KB] Evaluations: 537
[t=0.227615s, 431364 KB] Generated 695 state(s).
[t=0.227615s, 431364 KB] Dead ends: 0 state(s).
[t=0.227615s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.227615s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.227615s, 431364 KB] Evaluated until last jump: 4 state(s).
[t=0.227615s, 431364 KB] Generated until last jump: 3 state(s).
[t=0.227615s, 431364 KB] Number of registered states: 537
[t=0.227615s, 431364 KB] Int hash set load factor: 537/1024 = 0.524414
[t=0.227615s, 431364 KB] Int hash set resizes: 10
[t=0.227615s, 431364 KB] Search time: 0.201218s
[t=0.227615s, 431364 KB] Total time: 0.227615s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p102.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5969e-05s, 424928 KB] reading input...
[t=0.00219704s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259389s, 427536 KB] Building successor generator...done!
[t=0.0262166s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262403s, 427536 KB] time for successor generation creation: 0.000165564s
[t=0.0262693s, 427536 KB] Variables: 25
[t=0.0262928s, 427536 KB] FactPairs: 182
[t=0.0263155s, 427536 KB] Bytes per state: 8
[t=0.0265086s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982034s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.0982573s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982829s, 430128 KB] f = 122, 1 evaluated, 0 expanded
[t=0.0983101s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.0983343s, 430128 KB] pruning method: none
[t=0.110175s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.110227s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11921s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.119254s, 431100 KB] g=5, 17 evaluated, 8 expanded
[t=0.119647s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.119677s, 431100 KB] g=6, 19 evaluated, 9 expanded
[t=0.121506s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.121536s, 431100 KB] g=11, 29 evaluated, 14 expanded
[t=0.122103s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.122133s, 431100 KB] g=12, 32 evaluated, 15 expanded
[t=0.122529s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.12256s, 431100 KB] g=13, 34 evaluated, 16 expanded
[t=0.122778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.12282s, 431100 KB] g=13, 35 evaluated, 16 expanded
[t=0.12733s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.127363s, 431100 KB] g=19, 60 evaluated, 24 expanded
[t=0.131534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.131572s, 431100 KB] g=18, 83 evaluated, 30 expanded
[t=0.132329s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.132359s, 431100 KB] g=19, 87 evaluated, 31 expanded
[t=0.132573s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.132602s, 431100 KB] g=20, 88 evaluated, 32 expanded
[t=0.152667s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.152705s, 431100 KB] g=19, 199 evaluated, 70 expanded
[t=0.16195s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.161987s, 431232 KB] g=29, 250 evaluated, 85 expanded
[t=0.163502s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.163537s, 431232 KB] g=31, 258 evaluated, 87 expanded
[t=0.167907s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.167942s, 431232 KB] g=35, 282 evaluated, 94 expanded
[t=0.168155s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.168186s, 431232 KB] g=35, 283 evaluated, 94 expanded
[t=0.168581s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.16861s, 431232 KB] g=36, 285 evaluated, 95 expanded
[t=0.169182s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.169211s, 431232 KB] g=37, 288 evaluated, 96 expanded
[t=0.170329s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.170359s, 431232 KB] g=38, 294 evaluated, 97 expanded
[t=0.171128s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.17116s, 431232 KB] g=40, 298 evaluated, 99 expanded
[t=0.171734s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.171763s, 431232 KB] g=41, 301 evaluated, 100 expanded
[t=0.173609s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.173639s, 431232 KB] g=44, 311 evaluated, 104 expanded
[t=0.174768s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.174807s, 431232 KB] g=46, 317 evaluated, 107 expanded
[t=0.176109s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.17614s, 431232 KB] g=48, 324 evaluated, 109 expanded
[t=0.177606s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.177637s, 431232 KB] g=50, 332 evaluated, 111 expanded
[t=0.179496s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.17953s, 431232 KB] g=51, 342 evaluated, 114 expanded
[t=0.180288s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.18032s, 431232 KB] g=53, 346 evaluated, 116 expanded
[t=0.181616s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.181646s, 431232 KB] g=56, 353 evaluated, 120 expanded
[t=0.181859s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.181887s, 431232 KB] g=57, 354 evaluated, 121 expanded
[t=0.182463s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.182493s, 431232 KB] g=59, 357 evaluated, 123 expanded
[t=0.182897s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.182929s, 431232 KB] g=60, 359 evaluated, 124 expanded
[t=0.184059s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.184089s, 431232 KB] g=62, 365 evaluated, 129 expanded
[t=0.184122s, 431232 KB] Solution found!
[t=0.184149s, 431232 KB] Actual search time: 0.0858105s
put-down a (1)
unstack b f (1)
stack b e (1)
pick-up a (1)
stack a b (1)
unstack f h (1)
put-down f (1)
unstack h l (1)
stack h a (1)
unstack l g (1)
stack l f (1)
unstack g j (1)
stack g h (1)
unstack j d (1)
put-down j (1)
unstack l f (1)
put-down l (1)
unstack d i (1)
stack d j (1)
pick-up f (1)
stack f d (1)
unstack g h (1)
put-down g (1)
unstack f d (1)
stack f i (1)
pick-up l (1)
stack l d (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack b e (1)
stack b l (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
stack b e (1)
unstack l d (1)
put-down l (1)
unstack b e (1)
stack b i (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.184173s, 431232 KB] Plan length: 63 step(s).
[t=0.184173s, 431232 KB] Plan cost: 63
[t=0.184173s, 431232 KB] Expanded 131 state(s).
[t=0.184173s, 431232 KB] Reopened 0 state(s).
[t=0.184173s, 431232 KB] Evaluated 366 state(s).
[t=0.184173s, 431232 KB] Evaluations: 366
[t=0.184173s, 431232 KB] Generated 501 state(s).
[t=0.184173s, 431232 KB] Dead ends: 0 state(s).
[t=0.184173s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.184173s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.184173s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.184173s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.184173s, 431232 KB] Number of registered states: 366
[t=0.184173s, 431232 KB] Int hash set load factor: 366/512 = 0.714844
[t=0.184173s, 431232 KB] Int hash set resizes: 9
[t=0.184173s, 431232 KB] Search time: 0.157665s
[t=0.184173s, 431232 KB] Total time: 0.184173s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p103.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6757e-05s, 424928 KB] reading input...
[t=0.00228537s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259499s, 427536 KB] Building successor generator...done!
[t=0.0262468s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262707s, 427536 KB] time for successor generation creation: 0.000184906s
[t=0.0262986s, 427536 KB] Variables: 25
[t=0.0263317s, 427536 KB] FactPairs: 182
[t=0.0263545s, 427536 KB] Bytes per state: 8
[t=0.0265502s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986153s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0986671s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986934s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0987208s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0987443s, 430128 KB] pruning method: none
[t=0.110595s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.110647s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.117067s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117852s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.117881s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118479s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.118511s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.120399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.12043s, 431100 KB] g=2, 20 evaluated, 5 expanded
[t=0.121013s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.121042s, 431100 KB] g=2, 23 evaluated, 5 expanded
[t=0.121446s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.121474s, 431100 KB] g=3, 25 evaluated, 6 expanded
[t=0.121873s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.121901s, 431100 KB] g=3, 27 evaluated, 6 expanded
[t=0.150596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.150633s, 431100 KB] g=10, 181 evaluated, 50 expanded
[t=0.151042s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.151071s, 431100 KB] g=11, 183 evaluated, 51 expanded
[t=0.15986s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.159894s, 431232 KB] g=15, 230 evaluated, 65 expanded
[t=0.161791s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.161821s, 431232 KB] g=18, 240 evaluated, 68 expanded
[t=0.165794s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.165829s, 431232 KB] g=24, 261 evaluated, 76 expanded
[t=0.167741s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.167782s, 431232 KB] g=26, 271 evaluated, 80 expanded
[t=0.168187s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.168215s, 431232 KB] g=26, 273 evaluated, 80 expanded
[t=0.168434s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.168462s, 431232 KB] g=27, 274 evaluated, 81 expanded
[t=0.16905s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.169079s, 431232 KB] g=28, 277 evaluated, 82 expanded
[t=0.171352s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.171383s, 431232 KB] g=31, 289 evaluated, 85 expanded
[t=0.173469s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.173498s, 431232 KB] g=33, 300 evaluated, 88 expanded
[t=0.176892s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.176924s, 431232 KB] g=34, 318 evaluated, 93 expanded
[t=0.177518s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.177549s, 431232 KB] g=35, 321 evaluated, 94 expanded
[t=0.178523s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.178557s, 431232 KB] g=36, 326 evaluated, 95 expanded
[t=0.180821s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.180851s, 431232 KB] g=40, 338 evaluated, 99 expanded
[t=0.18893s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.188964s, 431232 KB] g=42, 381 evaluated, 110 expanded
[t=0.189742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.189772s, 431232 KB] g=43, 385 evaluated, 111 expanded
[t=0.191313s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.191345s, 431232 KB] g=45, 393 evaluated, 113 expanded
[t=0.192875s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.192907s, 431232 KB] g=48, 401 evaluated, 116 expanded
[t=0.19575s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.195782s, 431232 KB] g=47, 416 evaluated, 121 expanded
[t=0.196002s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.19603s, 431232 KB] g=48, 417 evaluated, 122 expanded
[t=0.199807s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.199851s, 431232 KB] g=49, 437 evaluated, 127 expanded
[t=0.200636s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.200666s, 431364 KB] g=50, 441 evaluated, 128 expanded
[t=0.202765s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.202796s, 431364 KB] g=52, 452 evaluated, 131 expanded
[t=0.203206s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.203234s, 431364 KB] g=53, 454 evaluated, 132 expanded
[t=0.204017s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.204046s, 431364 KB] g=55, 458 evaluated, 134 expanded
[t=0.204641s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.204673s, 431364 KB] g=57, 461 evaluated, 136 expanded
[t=0.205839s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.205868s, 431364 KB] g=60, 468 evaluated, 142 expanded
[t=0.205895s, 431364 KB] Solution found!
[t=0.20592s, 431364 KB] Actual search time: 0.107172s
unstack e a (1)
stack e k (1)
pick-up g (1)
stack g a (1)
unstack f b (1)
stack f g (1)
unstack d i (1)
stack d b (1)
unstack f g (1)
stack f d (1)
unstack e k (1)
stack e f (1)
pick-up k (1)
stack k i (1)
unstack g a (1)
put-down g (1)
unstack e f (1)
stack e k (1)
pick-up g (1)
stack g e (1)
unstack a l (1)
stack a f (1)
unstack l j (1)
stack l a (1)
unstack j h (1)
put-down j (1)
unstack g e (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack l a (1)
stack l j (1)
unstack a f (1)
stack a h (1)
unstack e k (1)
stack e l (1)
unstack k i (1)
stack k e (1)
unstack f d (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.205945s, 431364 KB] Plan length: 60 step(s).
[t=0.205945s, 431364 KB] Plan cost: 60
[t=0.205945s, 431364 KB] Expanded 143 state(s).
[t=0.205945s, 431364 KB] Reopened 0 state(s).
[t=0.205945s, 431364 KB] Evaluated 468 state(s).
[t=0.205945s, 431364 KB] Evaluations: 468
[t=0.205945s, 431364 KB] Generated 617 state(s).
[t=0.205945s, 431364 KB] Dead ends: 0 state(s).
[t=0.205945s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.205945s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.205945s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.205945s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.205945s, 431364 KB] Number of registered states: 468
[t=0.205945s, 431364 KB] Int hash set load factor: 468/512 = 0.914062
[t=0.205945s, 431364 KB] Int hash set resizes: 9
[t=0.205945s, 431364 KB] Search time: 0.179395s
[t=0.205945s, 431364 KB] Total time: 0.205945s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p104.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9235e-05s, 424928 KB] reading input...
[t=0.00219923s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259611s, 427536 KB] Building successor generator...done!
[t=0.0262417s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262657s, 427536 KB] time for successor generation creation: 0.000169459s
[t=0.0262949s, 427536 KB] Variables: 25
[t=0.0263174s, 427536 KB] FactPairs: 182
[t=0.0263391s, 427536 KB] Bytes per state: 8
[t=0.0265373s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980725s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0981251s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098151s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0981788s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0982028s, 430128 KB] pruning method: none
[t=0.110042s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.110093s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116924s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.116967s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.123172s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.123207s, 431100 KB] g=4, 40 evaluated, 8 expanded
[t=0.131704s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.131737s, 431100 KB] g=7, 88 evaluated, 19 expanded
[t=0.131948s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.131977s, 431100 KB] g=7, 89 evaluated, 19 expanded
[t=0.135023s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.135058s, 431100 KB] g=8, 106 evaluated, 22 expanded
[t=0.13828s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.138316s, 431100 KB] g=10, 124 evaluated, 25 expanded
[t=0.13906s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.13909s, 431100 KB] g=11, 128 evaluated, 26 expanded
[t=0.142148s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.14218s, 431100 KB] g=12, 145 evaluated, 29 expanded
[t=0.14292s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.142952s, 431100 KB] g=13, 149 evaluated, 30 expanded
[t=0.144579s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.144611s, 431100 KB] g=15, 158 evaluated, 32 expanded
[t=0.145521s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.14555s, 431100 KB] g=16, 163 evaluated, 33 expanded
[t=0.150546s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.150581s, 431100 KB] g=18, 191 evaluated, 39 expanded
[t=0.153629s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.153662s, 431232 KB] g=20, 208 evaluated, 43 expanded
[t=0.154235s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.154269s, 431232 KB] g=20, 211 evaluated, 43 expanded
[t=0.156782s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.156812s, 431232 KB] g=21, 225 evaluated, 46 expanded
[t=0.157212s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.157244s, 431232 KB] g=22, 227 evaluated, 47 expanded
[t=0.158348s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.15838s, 431232 KB] g=23, 233 evaluated, 48 expanded
[t=0.16215s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.162186s, 431232 KB] g=25, 254 evaluated, 53 expanded
[t=0.167227s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.167262s, 431232 KB] g=29, 282 evaluated, 61 expanded
[t=0.210405s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.210444s, 431364 KB] g=38, 523 evaluated, 130 expanded, 3 reopened
[t=0.211199s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.211228s, 431364 KB] g=39, 527 evaluated, 131 expanded, 3 reopened
[t=0.212693s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.212725s, 431364 KB] g=41, 535 evaluated, 133 expanded, 3 reopened
[t=0.224705s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.22474s, 431364 KB] g=45, 602 evaluated, 151 expanded, 3 reopened
[t=0.226739s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.226775s, 431364 KB] g=47, 613 evaluated, 153 expanded, 3 reopened
[t=0.227343s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.227373s, 431364 KB] g=48, 616 evaluated, 154 expanded, 3 reopened
[t=0.229724s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.229759s, 431364 KB] g=49, 629 evaluated, 156 expanded, 3 reopened
[t=0.230153s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.230182s, 431364 KB] g=50, 631 evaluated, 157 expanded, 3 reopened
[t=0.23039s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.230418s, 431364 KB] g=50, 632 evaluated, 157 expanded, 3 reopened
[t=0.237922s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.237959s, 431364 KB] g=53, 674 evaluated, 165 expanded, 3 reopened
[t=0.24171s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.241746s, 431364 KB] g=53, 695 evaluated, 169 expanded, 3 reopened
[t=0.243723s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.243762s, 431364 KB] g=56, 706 evaluated, 172 expanded, 3 reopened
[t=0.243973s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.244003s, 431364 KB] g=56, 707 evaluated, 172 expanded, 3 reopened
[t=0.244209s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.244237s, 431364 KB] g=56, 708 evaluated, 172 expanded, 3 reopened
[t=0.244976s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.245012s, 431496 KB] g=57, 712 evaluated, 173 expanded, 3 reopened
[t=0.246651s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.246683s, 431496 KB] g=59, 721 evaluated, 175 expanded, 3 reopened
[t=0.247074s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.247106s, 431496 KB] g=60, 723 evaluated, 176 expanded, 3 reopened
[t=0.247495s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.247523s, 431496 KB] g=61, 725 evaluated, 177 expanded, 3 reopened
[t=0.248086s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.248118s, 431496 KB] g=62, 728 evaluated, 178 expanded, 3 reopened
[t=0.248512s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.248541s, 431496 KB] g=64, 730 evaluated, 180 expanded, 3 reopened
[t=0.248929s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.248958s, 431496 KB] g=65, 732 evaluated, 181 expanded, 3 reopened
[t=0.250085s, 431496 KB] Solution found!
[t=0.250121s, 431496 KB] Actual search time: 0.151908s
pick-up g (1)
stack g l (1)
unstack d k (1)
stack d e (1)
unstack i h (1)
put-down i (1)
unstack b f (1)
put-down b (1)
pick-up f (1)
stack f i (1)
pick-up h (1)
stack h f (1)
unstack d e (1)
stack d k (1)
unstack g l (1)
stack g b (1)
unstack l j (1)
stack l d (1)
unstack j a (1)
stack j e (1)
unstack h f (1)
stack h g (1)
unstack f i (1)
stack f l (1)
pick-up a (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack j e (1)
stack j i (1)
unstack a f (1)
stack a h (1)
pick-up e (1)
stack e b (1)
unstack f l (1)
stack f e (1)
unstack l d (1)
put-down l (1)
unstack f e (1)
stack f a (1)
unstack d k (1)
put-down d (1)
unstack k c (1)
stack k f (1)
unstack j i (1)
stack j l (1)
unstack e b (1)
stack e k (1)
pick-up i (1)
stack i c (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.250147s, 431496 KB] Plan length: 68 step(s).
[t=0.250147s, 431496 KB] Plan cost: 68
[t=0.250147s, 431496 KB] Expanded 188 state(s).
[t=0.250147s, 431496 KB] Reopened 3 state(s).
[t=0.250147s, 431496 KB] Evaluated 739 state(s).
[t=0.250147s, 431496 KB] Evaluations: 739
[t=0.250147s, 431496 KB] Generated 947 state(s).
[t=0.250147s, 431496 KB] Dead ends: 0 state(s).
[t=0.250147s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.250147s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.250147s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.250147s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.250147s, 431496 KB] Number of registered states: 739
[t=0.250147s, 431496 KB] Int hash set load factor: 739/1024 = 0.72168
[t=0.250147s, 431496 KB] Int hash set resizes: 10
[t=0.250147s, 431496 KB] Search time: 0.22361s
[t=0.250147s, 431496 KB] Total time: 0.250147s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p105.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5935e-05s, 424928 KB] reading input...
[t=0.00219849s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260005s, 427536 KB] Building successor generator...done!
[t=0.0262908s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263146s, 427536 KB] time for successor generation creation: 0.000168711s
[t=0.0263435s, 427536 KB] Variables: 25
[t=0.0263667s, 427536 KB] FactPairs: 182
[t=0.026389s, 427536 KB] Bytes per state: 8
[t=0.0265848s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990161s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0990683s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990946s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.099122s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0991461s, 430128 KB] pruning method: none
[t=0.111007s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.111058s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.119545s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.119589s, 431100 KB] g=3, 14 evaluated, 4 expanded
[t=0.12218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.122213s, 431100 KB] g=6, 28 evaluated, 8 expanded
[t=0.122425s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.122454s, 431100 KB] g=6, 29 evaluated, 8 expanded
[t=0.124686s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.124718s, 431100 KB] g=7, 41 evaluated, 12 expanded
[t=0.132572s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.132607s, 431100 KB] g=11, 84 evaluated, 25 expanded
[t=0.143785s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.143822s, 431100 KB] g=21, 145 evaluated, 43 expanded
[t=0.153204s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.153238s, 431232 KB] g=17, 196 evaluated, 62 expanded, 3 reopened
[t=0.158405s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.158438s, 431232 KB] g=24, 224 evaluated, 72 expanded, 3 reopened
[t=0.158649s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.15868s, 431232 KB] g=24, 225 evaluated, 72 expanded, 3 reopened
[t=0.183559s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.183598s, 431232 KB] g=25, 360 evaluated, 125 expanded, 16 reopened
[t=0.187462s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.187496s, 431364 KB] g=28, 381 evaluated, 129 expanded, 16 reopened
[t=0.188449s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.188492s, 431364 KB] g=29, 386 evaluated, 130 expanded, 16 reopened
[t=0.190334s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.190364s, 431364 KB] g=31, 396 evaluated, 132 expanded, 16 reopened
[t=0.190946s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.190978s, 431364 KB] g=32, 399 evaluated, 133 expanded, 16 reopened
[t=0.192465s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.192497s, 431364 KB] g=33, 407 evaluated, 134 expanded, 16 reopened
[t=0.19999s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.200024s, 431364 KB] g=36, 448 evaluated, 144 expanded, 16 reopened
[t=0.200966s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.200996s, 431364 KB] g=37, 453 evaluated, 145 expanded, 16 reopened
[t=0.201394s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.201423s, 431364 KB] g=38, 455 evaluated, 146 expanded, 16 reopened
[t=0.204001s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.204034s, 431364 KB] g=40, 469 evaluated, 149 expanded, 16 reopened
[t=0.210624s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.21066s, 431364 KB] g=43, 505 evaluated, 159 expanded, 16 reopened
[t=0.211976s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.212009s, 431364 KB] g=44, 512 evaluated, 161 expanded, 16 reopened
[t=0.212268s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.212301s, 431364 KB] g=45, 513 evaluated, 162 expanded, 16 reopened
[t=0.212881s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.212911s, 431364 KB] g=45, 516 evaluated, 162 expanded, 16 reopened
[t=0.213491s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.21352s, 431364 KB] g=46, 519 evaluated, 163 expanded, 16 reopened
[t=0.214466s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.214498s, 431364 KB] g=47, 524 evaluated, 164 expanded, 16 reopened
[t=0.215999s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.21603s, 431364 KB] g=49, 532 evaluated, 166 expanded, 16 reopened
[t=0.217169s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.217205s, 431364 KB] g=50, 538 evaluated, 169 expanded, 16 reopened
[t=0.218337s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.218367s, 431364 KB] g=51, 544 evaluated, 170 expanded, 16 reopened
[t=0.218769s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.218798s, 431364 KB] g=52, 546 evaluated, 171 expanded, 16 reopened
[t=0.228579s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.228618s, 431364 KB] g=54, 599 evaluated, 198 expanded, 16 reopened
[t=0.229202s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.229232s, 431364 KB] g=55, 602 evaluated, 200 expanded, 16 reopened
[t=0.242263s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.242299s, 431364 KB] g=56, 673 evaluated, 229 expanded, 17 reopened
[t=0.242699s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.242729s, 431364 KB] g=57, 675 evaluated, 230 expanded, 17 reopened
[t=0.242762s, 431364 KB] Solution found!
[t=0.242789s, 431364 KB] Actual search time: 0.143639s
unstack g l (1)
put-down g (1)
pick-up e (1)
stack e j (1)
unstack b d (1)
stack b l (1)
unstack e j (1)
stack e d (1)
unstack j c (1)
stack j b (1)
unstack e d (1)
put-down e (1)
unstack j b (1)
stack j e (1)
pick-up c (1)
stack c b (1)
unstack d f (1)
stack d j (1)
unstack f k (1)
stack f c (1)
unstack k i (1)
put-down k (1)
unstack i a (1)
put-down i (1)
unstack a h (1)
stack a d (1)
pick-up h (1)
stack h g (1)
unstack a d (1)
stack a h (1)
unstack f c (1)
stack f a (1)
unstack d j (1)
put-down d (1)
pick-up k (1)
stack k f (1)
unstack j e (1)
stack j c (1)
pick-up e (1)
stack e k (1)
unstack j c (1)
stack j d (1)
unstack c b (1)
put-down c (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.242814s, 431364 KB] Plan length: 58 step(s).
[t=0.242814s, 431364 KB] Plan cost: 58
[t=0.242814s, 431364 KB] Expanded 232 state(s).
[t=0.242814s, 431364 KB] Reopened 17 state(s).
[t=0.242814s, 431364 KB] Evaluated 676 state(s).
[t=0.242814s, 431364 KB] Evaluations: 676
[t=0.242814s, 431364 KB] Generated 994 state(s).
[t=0.242814s, 431364 KB] Dead ends: 0 state(s).
[t=0.242814s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.242814s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.242814s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.242814s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.242814s, 431364 KB] Number of registered states: 676
[t=0.242814s, 431364 KB] Int hash set load factor: 676/1024 = 0.660156
[t=0.242814s, 431364 KB] Int hash set resizes: 10
[t=0.242814s, 431364 KB] Search time: 0.21623s
[t=0.242814s, 431364 KB] Total time: 0.242814s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p106.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5923e-05s, 424928 KB] reading input...
[t=0.00220244s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0266143s, 427536 KB] Building successor generator...done!
[t=0.0268951s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0269193s, 427536 KB] time for successor generation creation: 0.00016669s
[t=0.0269488s, 427536 KB] Variables: 25
[t=0.0269727s, 427536 KB] FactPairs: 182
[t=0.026996s, 427536 KB] Bytes per state: 8
[t=0.0271911s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.100366s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.100418s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.100444s, 430128 KB] f = 116, 1 evaluated, 0 expanded
[t=0.100474s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.100499s, 430128 KB] pruning method: none
[t=0.118797s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.118847s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119427s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119459s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.12056s, 431100 KB] f = 117, 12 evaluated, 4 expanded
[t=0.125903s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.125937s, 431100 KB] g=5, 42 evaluated, 13 expanded
[t=0.141069s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.141109s, 431100 KB] g=10, 127 evaluated, 38 expanded
[t=0.143458s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.143491s, 431100 KB] g=12, 140 evaluated, 41 expanded
[t=0.144926s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.14496s, 431100 KB] g=13, 148 evaluated, 43 expanded
[t=0.153286s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.153321s, 431232 KB] g=19, 195 evaluated, 53 expanded
[t=0.156545s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.156578s, 431232 KB] g=21, 213 evaluated, 58 expanded
[t=0.167036s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.167074s, 431232 KB] g=24, 272 evaluated, 70 expanded
[t=0.167465s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.167497s, 431232 KB] g=25, 274 evaluated, 71 expanded
[t=0.169104s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.169135s, 431232 KB] g=26, 283 evaluated, 72 expanded
[t=0.169884s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.169914s, 431232 KB] g=27, 287 evaluated, 73 expanded
[t=0.174374s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.174413s, 431232 KB] g=28, 312 evaluated, 78 expanded
[t=0.18273s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.182765s, 431232 KB] g=33, 359 evaluated, 87 expanded
[t=0.184387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.184419s, 431232 KB] g=35, 368 evaluated, 89 expanded
[t=0.185859s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.185897s, 431232 KB] g=36, 376 evaluated, 90 expanded
[t=0.186111s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.186142s, 431232 KB] g=37, 377 evaluated, 91 expanded
[t=0.186349s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.186378s, 431232 KB] g=37, 378 evaluated, 91 expanded
[t=0.187661s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.187693s, 431232 KB] g=39, 385 evaluated, 93 expanded
[t=0.189488s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.18952s, 431232 KB] g=41, 395 evaluated, 96 expanded
[t=0.190258s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.190292s, 431232 KB] g=42, 399 evaluated, 97 expanded
[t=0.19316s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.193199s, 431364 KB] g=44, 415 evaluated, 102 expanded
[t=0.193411s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.193442s, 431364 KB] g=45, 416 evaluated, 103 expanded
[t=0.193829s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.193859s, 431364 KB] g=46, 418 evaluated, 104 expanded
[t=0.194246s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.194275s, 431364 KB] g=47, 420 evaluated, 105 expanded
[t=0.195222s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.195259s, 431364 KB] g=49, 425 evaluated, 107 expanded
[t=0.195472s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.195502s, 431364 KB] g=50, 426 evaluated, 108 expanded
[t=0.196948s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.196982s, 431364 KB] g=52, 434 evaluated, 111 expanded
[t=0.197729s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.19776s, 431364 KB] g=54, 438 evaluated, 113 expanded
[t=0.197793s, 431364 KB] Solution found!
[t=0.197821s, 431364 KB] Actual search time: 0.0973075s
put-down k (1)
unstack e g (1)
stack e k (1)
unstack b d (1)
put-down b (1)
pick-up g (1)
stack g e (1)
unstack l a (1)
put-down l (1)
unstack a h (1)
stack a l (1)
unstack d i (1)
stack d a (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack d a (1)
put-down d (1)
unstack g e (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack f j (1)
stack f e (1)
unstack a l (1)
stack a h (1)
pick-up j (1)
stack j l (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.197847s, 431364 KB] Plan length: 55 step(s).
[t=0.197847s, 431364 KB] Plan cost: 55
[t=0.197847s, 431364 KB] Expanded 115 state(s).
[t=0.197847s, 431364 KB] Reopened 0 state(s).
[t=0.197847s, 431364 KB] Evaluated 439 state(s).
[t=0.197847s, 431364 KB] Evaluations: 439
[t=0.197847s, 431364 KB] Generated 555 state(s).
[t=0.197847s, 431364 KB] Dead ends: 0 state(s).
[t=0.197847s, 431364 KB] Expanded until last jump: 4 state(s).
[t=0.197847s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.197847s, 431364 KB] Evaluated until last jump: 12 state(s).
[t=0.197847s, 431364 KB] Generated until last jump: 14 state(s).
[t=0.197847s, 431364 KB] Number of registered states: 439
[t=0.197847s, 431364 KB] Int hash set load factor: 439/512 = 0.857422
[t=0.197847s, 431364 KB] Int hash set resizes: 9
[t=0.197847s, 431364 KB] Search time: 0.170656s
[t=0.197847s, 431364 KB] Total time: 0.197847s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p107.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7168e-05s, 424928 KB] reading input...
[t=0.00229594s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259736s, 427536 KB] Building successor generator...done!
[t=0.0262553s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262786s, 427536 KB] time for successor generation creation: 0.000171251s
[t=0.0263067s, 427536 KB] Variables: 25
[t=0.0263291s, 427536 KB] FactPairs: 182
[t=0.0263515s, 427536 KB] Bytes per state: 8
[t=0.0265471s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984088s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0984605s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984866s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0985135s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0985382s, 430128 KB] pruning method: none
[t=0.1169s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.11695s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117161s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.117191s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117776s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.117808s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118559s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.11859s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.118978s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.119009s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.119218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.119246s, 431100 KB] g=4, 15 evaluated, 4 expanded
[t=0.119638s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.119668s, 431100 KB] g=5, 17 evaluated, 5 expanded
[t=0.120055s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.120084s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.12065s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.12068s, 431100 KB] g=6, 22 evaluated, 6 expanded
[t=0.121072s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.121102s, 431100 KB] g=7, 24 evaluated, 7 expanded
[t=0.1215s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.121529s, 431100 KB] g=7, 26 evaluated, 7 expanded
[t=0.122484s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.122516s, 431100 KB] g=9, 31 evaluated, 9 expanded
[t=0.152709s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.152745s, 431100 KB] g=20, 198 evaluated, 69 expanded, 2 reopened
[t=0.157139s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.157175s, 431232 KB] g=20, 222 evaluated, 78 expanded, 2 reopened
[t=0.159205s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.159237s, 431232 KB] g=23, 233 evaluated, 81 expanded, 2 reopened
[t=0.160714s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.160744s, 431232 KB] g=25, 241 evaluated, 83 expanded, 2 reopened
[t=0.161135s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.161165s, 431232 KB] g=26, 243 evaluated, 84 expanded, 2 reopened
[t=0.163014s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.163046s, 431232 KB] g=29, 253 evaluated, 88 expanded, 2 reopened
[t=0.165447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.165477s, 431232 KB] g=32, 266 evaluated, 93 expanded, 2 reopened
[t=0.166243s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.166275s, 431232 KB] g=33, 270 evaluated, 95 expanded, 2 reopened
[t=0.167203s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.167233s, 431232 KB] g=34, 275 evaluated, 96 expanded, 2 reopened
[t=0.170327s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.170358s, 431232 KB] g=35, 292 evaluated, 101 expanded, 2 reopened
[t=0.170929s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.170961s, 431232 KB] g=36, 295 evaluated, 102 expanded, 2 reopened
[t=0.171888s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.171917s, 431232 KB] g=37, 300 evaluated, 103 expanded, 2 reopened
[t=0.173759s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.173794s, 431232 KB] g=39, 310 evaluated, 107 expanded, 2 reopened
[t=0.176922s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.176959s, 431232 KB] g=42, 327 evaluated, 120 expanded, 4 reopened
[t=0.177352s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.17738s, 431232 KB] g=43, 329 evaluated, 121 expanded, 4 reopened
[t=0.178696s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.178727s, 431232 KB] g=45, 336 evaluated, 127 expanded, 4 reopened
[t=0.17876s, 431232 KB] Solution found!
[t=0.178787s, 431232 KB] Actual search time: 0.0802448s
unstack j l (1)
stack j e (1)
unstack l f (1)
stack l j (1)
unstack f h (1)
stack f l (1)
pick-up h (1)
stack h a (1)
unstack f l (1)
put-down f (1)
unstack l j (1)
put-down l (1)
pick-up g (1)
stack g h (1)
pick-up f (1)
stack f j (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack j e (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.178812s, 431232 KB] Plan length: 46 step(s).
[t=0.178812s, 431232 KB] Plan cost: 46
[t=0.178812s, 431232 KB] Expanded 129 state(s).
[t=0.178812s, 431232 KB] Reopened 4 state(s).
[t=0.178812s, 431232 KB] Evaluated 337 state(s).
[t=0.178812s, 431232 KB] Evaluations: 337
[t=0.178812s, 431232 KB] Generated 485 state(s).
[t=0.178812s, 431232 KB] Dead ends: 0 state(s).
[t=0.178812s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.178812s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.178812s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.178812s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.178812s, 431232 KB] Number of registered states: 337
[t=0.178812s, 431232 KB] Int hash set load factor: 337/512 = 0.658203
[t=0.178812s, 431232 KB] Int hash set resizes: 9
[t=0.178812s, 431232 KB] Search time: 0.152265s
[t=0.178812s, 431232 KB] Total time: 0.178812s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p108.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8614e-05s, 424928 KB] reading input...
[t=0.00216606s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259862s, 427536 KB] Building successor generator...done!
[t=0.0262693s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026293s, 427536 KB] time for successor generation creation: 0.000172404s
[t=0.0263212s, 427536 KB] Variables: 25
[t=0.0263442s, 427536 KB] FactPairs: 182
[t=0.0263664s, 427536 KB] Bytes per state: 8
[t=0.026563s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983025s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0983537s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983793s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0984072s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.098431s, 430128 KB] pruning method: none
[t=0.110258s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.11031s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118765s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.118809s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.121698s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.121731s, 431100 KB] g=5, 30 evaluated, 9 expanded
[t=0.122837s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.122867s, 431100 KB] g=6, 36 evaluated, 10 expanded
[t=0.125577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.12561s, 431100 KB] g=9, 51 evaluated, 15 expanded
[t=0.126191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.126226s, 431100 KB] g=10, 54 evaluated, 16 expanded
[t=0.127506s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.127536s, 431100 KB] g=11, 61 evaluated, 18 expanded
[t=0.12829s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.12832s, 431100 KB] g=12, 65 evaluated, 19 expanded
[t=0.129431s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.129463s, 431100 KB] g=14, 71 evaluated, 21 expanded
[t=0.133616s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.133651s, 431100 KB] g=16, 94 evaluated, 27 expanded
[t=0.135826s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.135856s, 431100 KB] g=19, 106 evaluated, 30 expanded
[t=0.136971s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.137001s, 431100 KB] g=21, 112 evaluated, 32 expanded
[t=0.160306s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.160344s, 431232 KB] g=25, 242 evaluated, 63 expanded
[t=0.289883s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.289923s, 431364 KB] g=25, 967 evaluated, 250 expanded, 4 reopened
[t=0.34195s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.341991s, 431364 KB] g=27, 1258 evaluated, 352 expanded, 28 reopened
[t=0.343965s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.343999s, 431364 KB] g=29, 1269 evaluated, 354 expanded, 28 reopened
[t=0.344207s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.344236s, 431364 KB] g=29, 1270 evaluated, 354 expanded, 28 reopened
[t=0.345162s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.345197s, 431364 KB] g=30, 1275 evaluated, 355 expanded, 28 reopened
[t=0.346294s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.34633s, 431496 KB] g=31, 1281 evaluated, 356 expanded, 28 reopened
[t=0.355396s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.35543s, 431496 KB] g=35, 1332 evaluated, 366 expanded, 28 reopened
[t=0.35849s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.358532s, 431496 KB] g=37, 1349 evaluated, 369 expanded, 28 reopened
[t=0.360517s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.360549s, 431496 KB] g=39, 1360 evaluated, 371 expanded, 28 reopened
[t=0.364672s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.364705s, 431496 KB] g=41, 1383 evaluated, 376 expanded, 28 reopened
[t=0.365107s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.365139s, 431496 KB] g=42, 1385 evaluated, 377 expanded, 28 reopened
[t=0.3666s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.366634s, 431496 KB] g=44, 1393 evaluated, 379 expanded, 28 reopened
[t=0.368636s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.368669s, 431496 KB] g=46, 1404 evaluated, 382 expanded, 28 reopened
[t=0.372093s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.372129s, 431496 KB] g=49, 1423 evaluated, 387 expanded, 28 reopened
[t=0.373067s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.3731s, 431496 KB] g=50, 1428 evaluated, 388 expanded, 28 reopened
[t=0.374027s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.37406s, 431496 KB] g=52, 1433 evaluated, 390 expanded, 28 reopened
[t=0.374981s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.375011s, 431496 KB] g=53, 1438 evaluated, 391 expanded, 28 reopened
[t=0.378644s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.378677s, 431496 KB] g=55, 1458 evaluated, 400 expanded, 28 reopened
[t=0.379245s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.379277s, 431496 KB] g=56, 1461 evaluated, 401 expanded, 28 reopened
[t=0.380025s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.380055s, 431496 KB] g=58, 1465 evaluated, 403 expanded, 28 reopened
[t=0.380444s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.380474s, 431496 KB] g=59, 1467 evaluated, 404 expanded, 28 reopened
[t=0.380507s, 431496 KB] Solution found!
[t=0.380535s, 431496 KB] Actual search time: 0.2821s
unstack c l (1)
put-down c (1)
unstack h i (1)
stack h d (1)
pick-up c (1)
stack c i (1)
unstack j a (1)
stack j l (1)
unstack a b (1)
stack a j (1)
unstack b g (1)
stack b c (1)
unstack g k (1)
stack g b (1)
unstack k e (1)
put-down k (1)
unstack e f (1)
stack e k (1)
unstack h d (1)
stack h f (1)
unstack a j (1)
stack a e (1)
unstack j l (1)
stack j d (1)
unstack g b (1)
put-down g (1)
unstack b c (1)
stack b l (1)
unstack c i (1)
stack c b (1)
unstack a e (1)
stack a i (1)
unstack h f (1)
stack h g (1)
unstack a i (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack e k (1)
stack e c (1)
pick-up k (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.38056s, 431496 KB] Plan length: 60 step(s).
[t=0.38056s, 431496 KB] Plan cost: 60
[t=0.38056s, 431496 KB] Expanded 406 state(s).
[t=0.38056s, 431496 KB] Reopened 28 state(s).
[t=0.38056s, 431496 KB] Evaluated 1468 state(s).
[t=0.38056s, 431496 KB] Evaluations: 1468
[t=0.38056s, 431496 KB] Generated 2055 state(s).
[t=0.38056s, 431496 KB] Dead ends: 0 state(s).
[t=0.38056s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.38056s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.38056s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.38056s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.38056s, 431496 KB] Number of registered states: 1468
[t=0.38056s, 431496 KB] Int hash set load factor: 1468/2048 = 0.716797
[t=0.38056s, 431496 KB] Int hash set resizes: 11
[t=0.38056s, 431496 KB] Search time: 0.353998s
[t=0.38056s, 431496 KB] Total time: 0.38056s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p109.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6577e-05s, 424928 KB] reading input...
[t=0.00215222s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258236s, 427536 KB] Building successor generator...done!
[t=0.0261015s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261245s, 427536 KB] time for successor generation creation: 0.000167131s
[t=0.0261532s, 427536 KB] Variables: 25
[t=0.0261762s, 427536 KB] FactPairs: 182
[t=0.0261981s, 427536 KB] Bytes per state: 8
[t=0.0263933s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985942s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.098646s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986723s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0986992s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0987233s, 430128 KB] pruning method: none
[t=0.110599s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.110651s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117347s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.117391s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.119502s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.119533s, 431100 KB] g=3, 15 evaluated, 7 expanded
[t=0.123323s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.123358s, 431100 KB] g=8, 35 evaluated, 13 expanded
[t=0.125839s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.125871s, 431100 KB] g=10, 48 evaluated, 17 expanded
[t=0.131374s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.13141s, 431100 KB] g=13, 77 evaluated, 27 expanded
[t=0.131635s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.131664s, 431100 KB] g=14, 78 evaluated, 28 expanded
[t=0.132634s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.132664s, 431100 KB] g=15, 83 evaluated, 29 expanded
[t=0.133466s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.133507s, 431100 KB] g=16, 87 evaluated, 30 expanded
[t=0.137462s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.137497s, 431100 KB] g=20, 108 evaluated, 34 expanded
[t=0.143172s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.143206s, 431100 KB] g=21, 138 evaluated, 41 expanded
[t=0.148293s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.148329s, 431100 KB] g=23, 165 evaluated, 45 expanded
[t=0.148739s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.148768s, 431100 KB] g=24, 167 evaluated, 46 expanded
[t=0.152948s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.152983s, 431232 KB] g=24, 189 evaluated, 50 expanded
[t=0.153391s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.153419s, 431232 KB] g=24, 191 evaluated, 50 expanded
[t=0.154771s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.1548s, 431232 KB] g=25, 198 evaluated, 51 expanded
[t=0.155209s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.155238s, 431232 KB] g=26, 200 evaluated, 52 expanded
[t=0.156219s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.15625s, 431232 KB] g=27, 205 evaluated, 53 expanded
[t=0.158365s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.1584s, 431232 KB] g=29, 216 evaluated, 55 expanded
[t=0.15881s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.158839s, 431232 KB] g=30, 218 evaluated, 56 expanded
[t=0.178534s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.178571s, 431232 KB] g=39, 322 evaluated, 89 expanded
[t=0.178983s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.179011s, 431232 KB] g=40, 324 evaluated, 90 expanded
[t=0.179606s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.179635s, 431232 KB] g=41, 327 evaluated, 91 expanded
[t=0.186453s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.186489s, 431232 KB] g=45, 363 evaluated, 103 expanded
[t=0.186709s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.186743s, 431232 KB] g=45, 364 evaluated, 103 expanded
[t=0.187153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.187182s, 431232 KB] g=46, 366 evaluated, 104 expanded
[t=0.188145s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.188177s, 431232 KB] g=47, 371 evaluated, 105 expanded
[t=0.188398s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.188426s, 431232 KB] g=48, 372 evaluated, 106 expanded
[t=0.189774s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.189808s, 431232 KB] g=48, 379 evaluated, 108 expanded
[t=0.247037s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.247076s, 431364 KB] g=47, 683 evaluated, 235 expanded, 12 reopened
[t=0.431106s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.431153s, 431760 KB] g=65, 1665 evaluated, 634 expanded, 89 reopened
[t=0.432914s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.432947s, 431760 KB] g=66, 1674 evaluated, 642 expanded, 89 reopened
[t=0.433356s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.433385s, 431760 KB] g=67, 1676 evaluated, 643 expanded, 89 reopened
[t=0.433418s, 431760 KB] Solution found!
[t=0.433445s, 431760 KB] Actual search time: 0.334717s
unstack d h (1)
stack d j (1)
unstack h k (1)
put-down h (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c i (1)
unstack k e (1)
stack k h (1)
unstack e l (1)
put-down e (1)
unstack l a (1)
stack l c (1)
unstack a b (1)
stack a d (1)
unstack l c (1)
put-down l (1)
unstack b g (1)
stack b l (1)
unstack k h (1)
stack k c (1)
unstack g f (1)
stack g b (1)
pick-up h (1)
stack h g (1)
pick-up f (1)
stack f k (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a d (1)
stack a h (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j d (1)
unstack c i (1)
put-down c (1)
pick-up i (1)
stack i c (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.43347s, 431760 KB] Plan length: 68 step(s).
[t=0.43347s, 431760 KB] Plan cost: 68
[t=0.43347s, 431760 KB] Expanded 645 state(s).
[t=0.43347s, 431760 KB] Reopened 89 state(s).
[t=0.43347s, 431760 KB] Evaluated 1677 state(s).
[t=0.43347s, 431760 KB] Evaluations: 1677
[t=0.43347s, 431760 KB] Generated 2690 state(s).
[t=0.43347s, 431760 KB] Dead ends: 0 state(s).
[t=0.43347s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.43347s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.43347s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.43347s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.43347s, 431760 KB] Number of registered states: 1677
[t=0.43347s, 431760 KB] Int hash set load factor: 1677/2048 = 0.818848
[t=0.43347s, 431760 KB] Int hash set resizes: 11
[t=0.43347s, 431760 KB] Search time: 0.407077s
[t=0.43347s, 431760 KB] Total time: 0.43347s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p110.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6369e-05s, 424928 KB] reading input...
[t=0.00215034s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257967s, 427536 KB] Building successor generator...done!
[t=0.0260753s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260988s, 427536 KB] time for successor generation creation: 0.000167449s
[t=0.0261287s, 427536 KB] Variables: 25
[t=0.0261523s, 427536 KB] FactPairs: 182
[t=0.0261747s, 427536 KB] Bytes per state: 8
[t=0.0263687s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986358s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0986903s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987166s, 430128 KB] f = 124, 1 evaluated, 0 expanded
[t=0.0987444s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0987689s, 430128 KB] pruning method: none
[t=0.110631s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.110683s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.121784s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.121828s, 431100 KB] g=4, 28 evaluated, 5 expanded
[t=0.122052s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.122081s, 431100 KB] g=5, 29 evaluated, 6 expanded
[t=0.124165s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.124195s, 431100 KB] g=6, 40 evaluated, 8 expanded
[t=0.125185s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.125218s, 431100 KB] g=8, 45 evaluated, 10 expanded
[t=0.127493s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.127527s, 431100 KB] g=10, 57 evaluated, 13 expanded
[t=0.134335s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.134371s, 431100 KB] g=16, 93 evaluated, 23 expanded
[t=0.135154s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.135186s, 431100 KB] g=17, 97 evaluated, 24 expanded
[t=0.136723s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.136765s, 431100 KB] g=19, 105 evaluated, 26 expanded
[t=0.137365s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.137395s, 431100 KB] g=20, 108 evaluated, 27 expanded
[t=0.137614s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.137643s, 431100 KB] g=21, 109 evaluated, 28 expanded
[t=0.138053s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.138081s, 431100 KB] g=22, 111 evaluated, 29 expanded
[t=0.140549s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.140582s, 431100 KB] g=25, 124 evaluated, 32 expanded
[t=0.140811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.140845s, 431100 KB] g=26, 125 evaluated, 33 expanded
[t=0.146167s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.146206s, 431232 KB] g=27, 153 evaluated, 41 expanded
[t=0.147744s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.147776s, 431232 KB] g=28, 161 evaluated, 43 expanded
[t=0.160256s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.16029s, 431232 KB] g=32, 227 evaluated, 64 expanded
[t=0.161453s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.161488s, 431232 KB] g=34, 233 evaluated, 66 expanded
[t=0.162465s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.162499s, 431232 KB] g=36, 238 evaluated, 69 expanded
[t=0.163099s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.163128s, 431232 KB] g=37, 241 evaluated, 70 expanded
[t=0.163533s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.163561s, 431232 KB] g=38, 243 evaluated, 71 expanded
[t=0.16434s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.164372s, 431232 KB] g=39, 247 evaluated, 72 expanded
[t=0.164788s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.164819s, 431232 KB] g=40, 249 evaluated, 73 expanded
[t=0.165229s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.165261s, 431232 KB] g=41, 251 evaluated, 74 expanded
[t=0.165669s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.165698s, 431232 KB] g=42, 253 evaluated, 75 expanded
[t=0.166683s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.166715s, 431232 KB] g=44, 258 evaluated, 77 expanded
[t=0.167314s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.167343s, 431232 KB] g=45, 261 evaluated, 78 expanded
[t=0.168889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.168921s, 431232 KB] g=48, 269 evaluated, 81 expanded
[t=0.172525s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.172556s, 431232 KB] g=48, 288 evaluated, 88 expanded
[t=0.173914s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.173946s, 431232 KB] g=50, 295 evaluated, 91 expanded
[t=0.174546s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.174575s, 431232 KB] g=51, 298 evaluated, 92 expanded
[t=0.177429s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.177465s, 431232 KB] g=56, 313 evaluated, 100 expanded
[t=0.178442s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.178472s, 431232 KB] g=53, 318 evaluated, 103 expanded
[t=0.179068s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.1791s, 431232 KB] g=55, 321 evaluated, 105 expanded
[t=0.179894s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.179924s, 431232 KB] g=58, 326 evaluated, 109 expanded
[t=0.179951s, 431232 KB] Solution found!
[t=0.179977s, 431232 KB] Actual search time: 0.0812035s
unstack g d (1)
stack g j (1)
pick-up b (1)
stack b l (1)
pick-up e (1)
stack e i (1)
unstack g j (1)
stack g b (1)
unstack e i (1)
stack e d (1)
unstack j a (1)
stack j i (1)
unstack e d (1)
put-down e (1)
unstack d f (1)
stack d j (1)
pick-up e (1)
stack e d (1)
pick-up f (1)
stack f e (1)
unstack g b (1)
put-down g (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l b (1)
unstack a k (1)
stack a f (1)
unstack k h (1)
stack k a (1)
pick-up h (1)
stack h g (1)
unstack k a (1)
stack k l (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.180002s, 431232 KB] Plan length: 58 step(s).
[t=0.180002s, 431232 KB] Plan cost: 58
[t=0.180002s, 431232 KB] Expanded 110 state(s).
[t=0.180002s, 431232 KB] Reopened 0 state(s).
[t=0.180002s, 431232 KB] Evaluated 326 state(s).
[t=0.180002s, 431232 KB] Evaluations: 326
[t=0.180002s, 431232 KB] Generated 440 state(s).
[t=0.180002s, 431232 KB] Dead ends: 0 state(s).
[t=0.180002s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.180002s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.180002s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.180002s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.180002s, 431232 KB] Number of registered states: 326
[t=0.180002s, 431232 KB] Int hash set load factor: 326/512 = 0.636719
[t=0.180002s, 431232 KB] Int hash set resizes: 9
[t=0.180002s, 431232 KB] Search time: 0.153634s
[t=0.180002s, 431232 KB] Total time: 0.180002s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p111.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6795e-05s, 424928 KB] reading input...
[t=0.00218099s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259125s, 427536 KB] Building successor generator...done!
[t=0.0261843s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262079s, 427536 KB] time for successor generation creation: 0.000163551s
[t=0.0262368s, 427536 KB] Variables: 25
[t=0.0262593s, 427536 KB] FactPairs: 182
[t=0.0262818s, 427536 KB] Bytes per state: 8
[t=0.0264761s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982871s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0983401s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983656s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0983929s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0984169s, 430128 KB] pruning method: none
[t=0.116942s, 431100 KB] f = 145, 5 evaluated, 1 expanded
[t=0.117556s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.11759s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.117982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.118023s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.12018s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.120211s, 431100 KB] g=5, 22 evaluated, 6 expanded
[t=0.124509s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.124542s, 431100 KB] g=10, 46 evaluated, 15 expanded
[t=0.136321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.136359s, 431100 KB] g=19, 112 evaluated, 35 expanded
[t=0.13962s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.139654s, 431100 KB] g=24, 130 evaluated, 41 expanded
[t=0.142544s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.142579s, 431100 KB] g=28, 146 evaluated, 47 expanded
[t=0.145475s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.145512s, 431100 KB] g=35, 162 evaluated, 56 expanded
[t=0.146079s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.146109s, 431100 KB] g=36, 165 evaluated, 57 expanded
[t=0.146498s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.146527s, 431100 KB] g=37, 167 evaluated, 58 expanded
[t=0.148162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.148192s, 431100 KB] g=39, 176 evaluated, 61 expanded
[t=0.148578s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.148614s, 431232 KB] g=40, 178 evaluated, 62 expanded
[t=0.149192s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.149223s, 431232 KB] g=41, 181 evaluated, 63 expanded
[t=0.149978s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.150007s, 431232 KB] g=42, 185 evaluated, 66 expanded
[t=0.151468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.151499s, 431232 KB] g=45, 193 evaluated, 69 expanded
[t=0.181206s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.181251s, 431232 KB] g=54, 359 evaluated, 131 expanded
[t=0.182386s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.182425s, 431232 KB] g=56, 365 evaluated, 133 expanded
[t=0.182815s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.182851s, 431232 KB] g=58, 367 evaluated, 135 expanded
[t=0.183421s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.18345s, 431232 KB] g=60, 370 evaluated, 137 expanded
[t=0.183837s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.183869s, 431232 KB] g=61, 372 evaluated, 138 expanded
[t=0.184979s, 431232 KB] Solution found!
[t=0.185023s, 431232 KB] Actual search time: 0.0866033s
unstack j h (1)
stack j l (1)
unstack k d (1)
stack k e (1)
unstack j l (1)
stack j d (1)
pick-up h (1)
stack h k (1)
unstack l g (1)
put-down l (1)
unstack g a (1)
stack g j (1)
unstack h k (1)
put-down h (1)
unstack k e (1)
stack k l (1)
pick-up a (1)
stack a k (1)
unstack g j (1)
stack g a (1)
pick-up h (1)
stack h g (1)
unstack j d (1)
stack j e (1)
unstack d f (1)
stack d j (1)
pick-up f (1)
stack f d (1)
unstack h g (1)
stack h f (1)
unstack g a (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack d j (1)
stack d k (1)
unstack j e (1)
stack j l (1)
unstack e b (1)
stack e j (1)
unstack d k (1)
stack d b (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.185049s, 431232 KB] Plan length: 64 step(s).
[t=0.185049s, 431232 KB] Plan cost: 64
[t=0.185049s, 431232 KB] Expanded 145 state(s).
[t=0.185049s, 431232 KB] Reopened 0 state(s).
[t=0.185049s, 431232 KB] Evaluated 379 state(s).
[t=0.185049s, 431232 KB] Evaluations: 379
[t=0.185049s, 431232 KB] Generated 526 state(s).
[t=0.185049s, 431232 KB] Dead ends: 0 state(s).
[t=0.185049s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.185049s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.185049s, 431232 KB] Evaluated until last jump: 5 state(s).
[t=0.185049s, 431232 KB] Generated until last jump: 4 state(s).
[t=0.185049s, 431232 KB] Number of registered states: 379
[t=0.185049s, 431232 KB] Int hash set load factor: 379/512 = 0.740234
[t=0.185049s, 431232 KB] Int hash set resizes: 9
[t=0.185049s, 431232 KB] Search time: 0.158574s
[t=0.185049s, 431232 KB] Total time: 0.185049s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p112.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9393e-05s, 424928 KB] reading input...
[t=0.00212583s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257873s, 427536 KB] Building successor generator...done!
[t=0.0260642s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260875s, 427536 KB] time for successor generation creation: 0.000164886s
[t=0.0261156s, 427536 KB] Variables: 25
[t=0.0261382s, 427536 KB] FactPairs: 182
[t=0.0261598s, 427536 KB] Bytes per state: 8
[t=0.0263552s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984616s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0985135s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985392s, 430128 KB] f = 124, 1 evaluated, 0 expanded
[t=0.0985661s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0985898s, 430128 KB] pruning method: none
[t=0.110397s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.110447s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11724s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.117285s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.119003s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.119033s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.12318s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.123213s, 431100 KB] g=6, 36 evaluated, 10 expanded
[t=0.123429s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.123469s, 431100 KB] g=6, 37 evaluated, 10 expanded
[t=0.124245s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.124276s, 431100 KB] g=7, 41 evaluated, 11 expanded
[t=0.124862s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.124891s, 431100 KB] g=7, 44 evaluated, 11 expanded
[t=0.125313s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.125345s, 431100 KB] g=8, 46 evaluated, 12 expanded
[t=0.126119s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.126149s, 431100 KB] g=9, 50 evaluated, 13 expanded
[t=0.126552s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.126581s, 431100 KB] g=9, 52 evaluated, 13 expanded
[t=0.132596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.132632s, 431100 KB] g=11, 84 evaluated, 20 expanded
[t=0.134541s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.134576s, 431100 KB] g=12, 94 evaluated, 22 expanded
[t=0.138177s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.138213s, 431100 KB] g=15, 113 evaluated, 29 expanded
[t=0.140112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.140147s, 431100 KB] g=17, 123 evaluated, 32 expanded
[t=0.143376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.143412s, 431100 KB] g=20, 140 evaluated, 37 expanded
[t=0.152818s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.152855s, 431232 KB] g=22, 190 evaluated, 51 expanded
[t=0.15346s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.153492s, 431232 KB] g=23, 193 evaluated, 52 expanded
[t=0.155389s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.15542s, 431232 KB] g=24, 203 evaluated, 54 expanded
[t=0.156199s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.156231s, 431232 KB] g=25, 207 evaluated, 55 expanded
[t=0.157769s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.157803s, 431232 KB] g=27, 215 evaluated, 57 expanded
[t=0.160449s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.160487s, 431232 KB] g=30, 229 evaluated, 61 expanded
[t=0.162028s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.162064s, 431232 KB] g=32, 237 evaluated, 63 expanded
[t=0.162473s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.162502s, 431232 KB] g=33, 239 evaluated, 64 expanded
[t=0.163103s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.163132s, 431232 KB] g=34, 242 evaluated, 65 expanded
[t=0.16391s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163939s, 431232 KB] g=35, 246 evaluated, 66 expanded
[t=0.164158s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.164186s, 431232 KB] g=36, 247 evaluated, 67 expanded
[t=0.17177s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.171806s, 431232 KB] g=36, 287 evaluated, 80 expanded
[t=0.1724s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.172431s, 431232 KB] g=37, 290 evaluated, 81 expanded
[t=0.173232s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.173263s, 431232 KB] g=39, 294 evaluated, 83 expanded
[t=0.173859s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.173888s, 431232 KB] g=40, 297 evaluated, 84 expanded
[t=0.174109s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.174138s, 431232 KB] g=41, 298 evaluated, 85 expanded
[t=0.174358s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.174386s, 431232 KB] g=42, 299 evaluated, 86 expanded
[t=0.174792s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.174824s, 431232 KB] g=43, 301 evaluated, 87 expanded
[t=0.175995s, 431232 KB] Solution found!
[t=0.176027s, 431232 KB] Actual search time: 0.0774347s
unstack e a (1)
put-down e (1)
unstack a h (1)
stack a e (1)
unstack h j (1)
stack h a (1)
unstack j l (1)
stack j d (1)
unstack l f (1)
stack l b (1)
pick-up f (1)
stack f j (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack f j (1)
stack f e (1)
unstack j d (1)
stack j l (1)
unstack d k (1)
put-down d (1)
unstack k i (1)
stack k j (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e d (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.176053s, 431232 KB] Plan length: 46 step(s).
[t=0.176053s, 431232 KB] Plan cost: 46
[t=0.176053s, 431232 KB] Expanded 93 state(s).
[t=0.176053s, 431232 KB] Reopened 0 state(s).
[t=0.176053s, 431232 KB] Evaluated 308 state(s).
[t=0.176053s, 431232 KB] Evaluations: 308
[t=0.176053s, 431232 KB] Generated 400 state(s).
[t=0.176053s, 431232 KB] Dead ends: 0 state(s).
[t=0.176053s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.176053s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.176053s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.176053s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.176053s, 431232 KB] Number of registered states: 308
[t=0.176053s, 431232 KB] Int hash set load factor: 308/512 = 0.601562
[t=0.176053s, 431232 KB] Int hash set resizes: 9
[t=0.176053s, 431232 KB] Search time: 0.149699s
[t=0.176053s, 431232 KB] Total time: 0.176053s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p113.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6974e-05s, 424928 KB] reading input...
[t=0.00214146s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257886s, 427536 KB] Building successor generator...done!
[t=0.0260605s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026084s, 427536 KB] time for successor generation creation: 0.000162297s
[t=0.0261125s, 427536 KB] Variables: 25
[t=0.026136s, 427536 KB] FactPairs: 182
[t=0.0261586s, 427536 KB] Bytes per state: 8
[t=0.0263527s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987565s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.098808s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988342s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0988622s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0988867s, 430128 KB] pruning method: none
[t=0.117074s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.117123s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117706s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.117737s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.118352s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.123674s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.123706s, 431100 KB] g=5, 38 evaluated, 8 expanded
[t=0.123927s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.123959s, 431100 KB] g=5, 39 evaluated, 8 expanded
[t=0.125634s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.125664s, 431100 KB] g=7, 48 evaluated, 10 expanded
[t=0.128259s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.128294s, 431100 KB] g=7, 62 evaluated, 13 expanded
[t=0.135243s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.135277s, 431100 KB] g=10, 100 evaluated, 21 expanded
[t=0.138953s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.138987s, 431100 KB] g=12, 120 evaluated, 25 expanded
[t=0.142125s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.14216s, 431100 KB] g=13, 137 evaluated, 27 expanded
[t=0.142922s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.142952s, 431100 KB] g=14, 141 evaluated, 28 expanded
[t=0.143162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.143202s, 431100 KB] g=14, 142 evaluated, 28 expanded
[t=0.145968s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.146003s, 431100 KB] g=16, 157 evaluated, 31 expanded
[t=0.149672s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.149709s, 431232 KB] g=18, 177 evaluated, 35 expanded
[t=0.149928s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.149957s, 431232 KB] g=19, 178 evaluated, 36 expanded
[t=0.151794s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.151838s, 431232 KB] g=20, 188 evaluated, 38 expanded
[t=0.152051s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.152079s, 431232 KB] g=20, 189 evaluated, 38 expanded
[t=0.154305s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.154334s, 431232 KB] g=22, 201 evaluated, 41 expanded
[t=0.158016s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.158049s, 431232 KB] g=24, 221 evaluated, 46 expanded
[t=0.163394s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.163426s, 431232 KB] g=27, 250 evaluated, 52 expanded
[t=0.168105s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.168144s, 431232 KB] g=30, 275 evaluated, 60 expanded
[t=0.168767s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.168799s, 431232 KB] g=31, 278 evaluated, 61 expanded
[t=0.171221s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.171251s, 431232 KB] g=32, 291 evaluated, 64 expanded
[t=0.185255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.185293s, 431232 KB] g=41, 367 evaluated, 82 expanded
[t=0.186053s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.186085s, 431232 KB] g=42, 371 evaluated, 83 expanded
[t=0.187392s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.187421s, 431232 KB] g=43, 378 evaluated, 85 expanded
[t=0.188204s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.188236s, 431232 KB] g=44, 382 evaluated, 86 expanded
[t=0.188636s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.188675s, 431364 KB] g=45, 384 evaluated, 87 expanded
[t=0.189259s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.189288s, 431364 KB] g=46, 387 evaluated, 88 expanded
[t=0.189504s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.189532s, 431364 KB] g=47, 388 evaluated, 89 expanded
[t=0.190295s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.190327s, 431364 KB] g=48, 392 evaluated, 90 expanded
[t=0.190545s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.190573s, 431364 KB] g=49, 393 evaluated, 91 expanded
[t=0.191517s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.191546s, 431364 KB] g=51, 398 evaluated, 93 expanded
[t=0.192497s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.192528s, 431364 KB] g=52, 403 evaluated, 95 expanded
[t=0.192926s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.192954s, 431364 KB] g=53, 405 evaluated, 96 expanded
[t=0.193712s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.193741s, 431364 KB] g=54, 409 evaluated, 97 expanded
[t=0.197977s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.198012s, 431364 KB] g=58, 432 evaluated, 106 expanded
[t=0.198224s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.198252s, 431364 KB] g=58, 433 evaluated, 106 expanded
[t=0.199944s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.199976s, 431364 KB] g=62, 442 evaluated, 111 expanded
[t=0.200373s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.200402s, 431364 KB] g=63, 444 evaluated, 112 expanded
[t=0.200798s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.200832s, 431364 KB] g=64, 446 evaluated, 113 expanded
[t=0.201413s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.201443s, 431364 KB] g=66, 449 evaluated, 115 expanded
[t=0.201475s, 431364 KB] Solution found!
[t=0.201503s, 431364 KB] Actual search time: 0.102612s
put-down j (1)
unstack e a (1)
put-down e (1)
unstack a l (1)
stack a j (1)
pick-up g (1)
stack g a (1)
unstack b k (1)
put-down b (1)
unstack k h (1)
put-down k (1)
pick-up e (1)
stack e k (1)
pick-up h (1)
stack h l (1)
unstack g a (1)
stack g e (1)
unstack h l (1)
stack h a (1)
unstack d i (1)
stack d b (1)
unstack l f (1)
stack l d (1)
unstack g e (1)
stack g h (1)
pick-up f (1)
stack f e (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h f (1)
unstack a j (1)
stack a l (1)
unstack h f (1)
stack h g (1)
pick-up j (1)
stack j i (1)
unstack f e (1)
stack f j (1)
unstack a l (1)
stack a h (1)
unstack e k (1)
stack e l (1)
pick-up k (1)
stack k e (1)
unstack f j (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
stack l i (1)
unstack d b (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.201528s, 431364 KB] Plan length: 67 step(s).
[t=0.201528s, 431364 KB] Plan cost: 67
[t=0.201528s, 431364 KB] Expanded 117 state(s).
[t=0.201528s, 431364 KB] Reopened 0 state(s).
[t=0.201528s, 431364 KB] Evaluated 450 state(s).
[t=0.201528s, 431364 KB] Evaluations: 450
[t=0.201528s, 431364 KB] Generated 569 state(s).
[t=0.201528s, 431364 KB] Dead ends: 0 state(s).
[t=0.201528s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.201528s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.201528s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.201528s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.201528s, 431364 KB] Number of registered states: 450
[t=0.201528s, 431364 KB] Int hash set load factor: 450/512 = 0.878906
[t=0.201528s, 431364 KB] Int hash set resizes: 9
[t=0.201528s, 431364 KB] Search time: 0.175176s
[t=0.201528s, 431364 KB] Total time: 0.201528s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p114.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6045e-05s, 424928 KB] reading input...
[t=0.00215587s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261659s, 427536 KB] Building successor generator...done!
[t=0.026485s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265123s, 427536 KB] time for successor generation creation: 0.000188651s
[t=0.0265464s, 427536 KB] Variables: 25
[t=0.0265718s, 427536 KB] FactPairs: 182
[t=0.0265993s, 427536 KB] Bytes per state: 8
[t=0.0268267s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990002s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0990553s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990812s, 430128 KB] f = 132, 1 evaluated, 0 expanded
[t=0.0991083s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0991323s, 430128 KB] pruning method: none
[t=0.111142s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.111195s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117657s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.117702s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118132s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.118165s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.11839s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.118422s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.119035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.119065s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.122861s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.122894s, 431100 KB] g=6, 30 evaluated, 7 expanded
[t=0.125258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.125289s, 431100 KB] g=7, 43 evaluated, 10 expanded
[t=0.126096s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.126143s, 431100 KB] g=8, 47 evaluated, 11 expanded
[t=0.126567s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.126599s, 431100 KB] g=8, 49 evaluated, 11 expanded
[t=0.12702s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.12705s, 431100 KB] g=9, 51 evaluated, 12 expanded
[t=0.128156s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.128186s, 431100 KB] g=10, 57 evaluated, 13 expanded
[t=0.128758s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.128791s, 431100 KB] g=11, 60 evaluated, 14 expanded
[t=0.129359s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.129387s, 431100 KB] g=11, 63 evaluated, 14 expanded
[t=0.129796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.129827s, 431100 KB] g=12, 65 evaluated, 15 expanded
[t=0.131472s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.131505s, 431100 KB] g=14, 74 evaluated, 17 expanded
[t=0.133335s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.133365s, 431100 KB] g=17, 84 evaluated, 20 expanded
[t=0.144822s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.144856s, 431100 KB] g=23, 146 evaluated, 37 expanded
[t=0.145622s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.145654s, 431100 KB] g=24, 150 evaluated, 38 expanded
[t=0.147376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.147409s, 431100 KB] g=26, 159 evaluated, 42 expanded
[t=0.148593s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.148627s, 431100 KB] g=28, 165 evaluated, 44 expanded
[t=0.149428s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.14946s, 431100 KB] g=29, 169 evaluated, 45 expanded
[t=0.150644s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.150681s, 431232 KB] g=31, 175 evaluated, 47 expanded
[t=0.151663s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.151695s, 431232 KB] g=32, 180 evaluated, 48 expanded
[t=0.155554s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.155595s, 431232 KB] g=36, 200 evaluated, 57 expanded
[t=0.155993s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.156022s, 431232 KB] g=37, 202 evaluated, 58 expanded
[t=0.156418s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.156448s, 431232 KB] g=38, 204 evaluated, 59 expanded
[t=0.156481s, 431232 KB] Solution found!
[t=0.156507s, 431232 KB] Actual search time: 0.057371s
put-down l (1)
unstack b a (1)
stack b l (1)
unstack f g (1)
stack f a (1)
unstack c h (1)
stack c b (1)
unstack h k (1)
stack h g (1)
unstack f a (1)
stack f k (1)
pick-up a (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j c (1)
unstack e d (1)
stack e k (1)
pick-up d (1)
stack d i (1)
unstack j c (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.156531s, 431232 KB] Plan length: 39 step(s).
[t=0.156531s, 431232 KB] Plan cost: 39
[t=0.156531s, 431232 KB] Expanded 61 state(s).
[t=0.156531s, 431232 KB] Reopened 0 state(s).
[t=0.156531s, 431232 KB] Evaluated 205 state(s).
[t=0.156531s, 431232 KB] Evaluations: 205
[t=0.156531s, 431232 KB] Generated 263 state(s).
[t=0.156531s, 431232 KB] Dead ends: 0 state(s).
[t=0.156531s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.156531s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.156531s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.156531s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.156531s, 431232 KB] Number of registered states: 205
[t=0.156531s, 431232 KB] Int hash set load factor: 205/256 = 0.800781
[t=0.156531s, 431232 KB] Int hash set resizes: 8
[t=0.156531s, 431232 KB] Search time: 0.129706s
[t=0.156531s, 431232 KB] Total time: 0.156531s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p115.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5905e-05s, 424928 KB] reading input...
[t=0.00218932s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261268s, 427536 KB] Building successor generator...done!
[t=0.0264224s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264477s, 427536 KB] time for successor generation creation: 0.000178397s
[t=0.0264783s, 427536 KB] Variables: 25
[t=0.0265024s, 427536 KB] FactPairs: 182
[t=0.0265258s, 427536 KB] Bytes per state: 8
[t=0.026733s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991789s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0992299s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992556s, 430128 KB] f = 114, 1 evaluated, 0 expanded
[t=0.0992828s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0993065s, 430128 KB] pruning method: none
[t=0.111107s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.111159s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118297s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.11834s, 431100 KB] g=1, 7 evaluated, 1 expanded
[t=0.120127s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.120158s, 431100 KB] g=2, 17 evaluated, 3 expanded
[t=0.120718s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.120748s, 431100 KB] g=3, 20 evaluated, 4 expanded
[t=0.121306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.121335s, 431100 KB] g=4, 23 evaluated, 5 expanded
[t=0.124514s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.124558s, 431100 KB] g=4, 41 evaluated, 9 expanded
[t=0.125643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.125673s, 431100 KB] g=5, 47 evaluated, 10 expanded
[t=0.126764s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.126798s, 431100 KB] g=6, 53 evaluated, 12 expanded
[t=0.127357s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.127387s, 431100 KB] g=7, 56 evaluated, 13 expanded
[t=0.128646s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.128675s, 431100 KB] g=7, 63 evaluated, 15 expanded
[t=0.131192s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.131224s, 431100 KB] g=11, 77 evaluated, 19 expanded
[t=0.13354s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.133571s, 431100 KB] g=14, 90 evaluated, 22 expanded
[t=0.134138s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.134169s, 431100 KB] g=15, 93 evaluated, 23 expanded
[t=0.136822s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.136855s, 431100 KB] g=17, 108 evaluated, 26 expanded
[t=0.137239s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.137269s, 431100 KB] g=18, 110 evaluated, 27 expanded
[t=0.13994s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.139975s, 431100 KB] g=21, 125 evaluated, 31 expanded
[t=0.14107s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.141103s, 431100 KB] g=22, 131 evaluated, 32 expanded
[t=0.142023s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.142054s, 431100 KB] g=23, 136 evaluated, 33 expanded
[t=0.143844s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.143874s, 431100 KB] g=25, 146 evaluated, 35 expanded
[t=0.144786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.144815s, 431100 KB] g=27, 151 evaluated, 37 expanded
[t=0.146444s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.146476s, 431232 KB] g=29, 160 evaluated, 39 expanded
[t=0.150041s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.150083s, 431232 KB] g=32, 180 evaluated, 45 expanded
[t=0.151434s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.151464s, 431232 KB] g=34, 187 evaluated, 47 expanded
[t=0.161488s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.161525s, 431232 KB] g=36, 243 evaluated, 63 expanded
[t=0.162457s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.162489s, 431232 KB] g=37, 248 evaluated, 64 expanded
[t=0.163942s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.163971s, 431232 KB] g=39, 256 evaluated, 67 expanded
[t=0.164379s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.164411s, 431232 KB] g=40, 258 evaluated, 68 expanded
[t=0.165873s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.165904s, 431232 KB] g=44, 266 evaluated, 73 expanded
[t=0.166293s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.166323s, 431232 KB] g=45, 268 evaluated, 74 expanded
[t=0.166534s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.166563s, 431232 KB] g=46, 269 evaluated, 75 expanded
[t=0.166956s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.166985s, 431232 KB] g=48, 272 evaluated, 77 expanded
[t=0.167011s, 431232 KB] Solution found!
[t=0.167037s, 431232 KB] Actual search time: 0.0677263s
pick-up b (1)
stack b l (1)
pick-up k (1)
stack k b (1)
unstack e g (1)
stack e k (1)
unstack g a (1)
stack g e (1)
unstack a j (1)
stack a d (1)
unstack g e (1)
put-down g (1)
unstack j f (1)
stack j e (1)
unstack f h (1)
stack f i (1)
pick-up h (1)
stack h g (1)
unstack j e (1)
put-down j (1)
unstack a d (1)
stack a h (1)
unstack f i (1)
stack f a (1)
pick-up j (1)
stack j d (1)
unstack e k (1)
stack e j (1)
unstack k b (1)
stack k f (1)
unstack b l (1)
stack b i (1)
unstack e j (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.167061s, 431232 KB] Plan length: 48 step(s).
[t=0.167061s, 431232 KB] Plan cost: 48
[t=0.167061s, 431232 KB] Expanded 78 state(s).
[t=0.167061s, 431232 KB] Reopened 0 state(s).
[t=0.167061s, 431232 KB] Evaluated 272 state(s).
[t=0.167061s, 431232 KB] Evaluations: 272
[t=0.167061s, 431232 KB] Generated 349 state(s).
[t=0.167061s, 431232 KB] Dead ends: 0 state(s).
[t=0.167061s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.167061s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.167061s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.167061s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.167061s, 431232 KB] Number of registered states: 272
[t=0.167061s, 431232 KB] Int hash set load factor: 272/512 = 0.53125
[t=0.167061s, 431232 KB] Int hash set resizes: 9
[t=0.167061s, 431232 KB] Search time: 0.140329s
[t=0.167061s, 431232 KB] Total time: 0.167061s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p116.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9515e-05s, 424928 KB] reading input...
[t=0.00231533s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.028043s, 427536 KB] Building successor generator...done!
[t=0.0283488s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0283744s, 427536 KB] time for successor generation creation: 0.000187277s
[t=0.0284053s, 427536 KB] Variables: 25
[t=0.0284303s, 427536 KB] FactPairs: 182
[t=0.0284544s, 427536 KB] Bytes per state: 8
[t=0.0286581s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.101043s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.101105s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.101131s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.10116s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.101184s, 430128 KB] pruning method: none
[t=0.119879s, 431100 KB] f = 151, 5 evaluated, 1 expanded
[t=0.120296s, 431100 KB] f = 154, 7 evaluated, 2 expanded
[t=0.121218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.12125s, 431100 KB] g=3, 12 evaluated, 4 expanded
[t=0.121639s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.12167s, 431100 KB] g=4, 14 evaluated, 5 expanded
[t=0.122958s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.122992s, 431100 KB] g=6, 21 evaluated, 7 expanded
[t=0.125338s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.125369s, 431100 KB] g=8, 34 evaluated, 12 expanded
[t=0.129827s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.129861s, 431100 KB] g=8, 59 evaluated, 19 expanded
[t=0.140001s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.140037s, 431100 KB] g=14, 116 evaluated, 33 expanded
[t=0.167219s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.167261s, 431232 KB] g=17, 269 evaluated, 71 expanded
[t=0.184735s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.184773s, 431232 KB] g=22, 367 evaluated, 97 expanded
[t=0.205912s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.20595s, 431364 KB] g=24, 486 evaluated, 127 expanded
[t=0.247186s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.247229s, 431496 KB] g=27, 716 evaluated, 224 expanded, 42 reopened
[t=0.300017s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.30006s, 431496 KB] g=33, 1012 evaluated, 324 expanded, 70 reopened
[t=0.300454s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.300487s, 431496 KB] g=34, 1014 evaluated, 325 expanded, 70 reopened
[t=0.308414s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.308452s, 431632 KB] g=37, 1058 evaluated, 333 expanded, 70 reopened
[t=0.308844s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.308881s, 431632 KB] g=38, 1060 evaluated, 334 expanded, 70 reopened
[t=0.311413s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.311451s, 431632 KB] g=40, 1074 evaluated, 337 expanded, 70 reopened
[t=0.377172s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.377216s, 431764 KB] g=37, 1445 evaluated, 411 expanded, 71 reopened
[t=0.381517s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.381554s, 431764 KB] g=39, 1469 evaluated, 414 expanded, 71 reopened
[t=0.381771s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.381801s, 431764 KB] g=40, 1470 evaluated, 415 expanded, 71 reopened
[t=0.385397s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.385432s, 431764 KB] g=41, 1490 evaluated, 417 expanded, 71 reopened
[t=0.398622s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.398661s, 431764 KB] g=45, 1564 evaluated, 430 expanded, 71 reopened
[t=0.400128s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.40016s, 431764 KB] g=46, 1572 evaluated, 431 expanded, 71 reopened
[t=0.406233s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.40627s, 431764 KB] g=45, 1606 evaluated, 438 expanded, 72 reopened
[t=0.408798s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.408834s, 431764 KB] g=47, 1620 evaluated, 440 expanded, 72 reopened
[t=0.41065s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.410684s, 431764 KB] g=48, 1630 evaluated, 442 expanded, 72 reopened
[t=0.414833s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.41487s, 431896 KB] g=51, 1653 evaluated, 447 expanded, 72 reopened
[t=0.416683s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.416715s, 431896 KB] g=52, 1663 evaluated, 448 expanded, 72 reopened
[t=0.419073s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.41911s, 431896 KB] g=54, 1676 evaluated, 451 expanded, 72 reopened
[t=0.420565s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.420596s, 431896 KB] g=55, 1684 evaluated, 453 expanded, 72 reopened
[t=0.432234s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.432275s, 431896 KB] g=58, 1749 evaluated, 473 expanded, 72 reopened
[t=0.441934s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.441972s, 431896 KB] g=61, 1803 evaluated, 490 expanded, 72 reopened
[t=0.442759s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.442798s, 431896 KB] g=62, 1807 evaluated, 491 expanded, 72 reopened
[t=0.445751s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.445786s, 431896 KB] g=64, 1823 evaluated, 495 expanded, 72 reopened
[t=0.448319s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.448355s, 431896 KB] g=66, 1837 evaluated, 499 expanded, 72 reopened
[t=0.449813s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.449847s, 431896 KB] g=69, 1845 evaluated, 502 expanded, 72 reopened
[t=0.450054s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.450084s, 431896 KB] g=69, 1846 evaluated, 502 expanded, 72 reopened
[t=0.4512s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.451238s, 431896 KB] g=72, 1852 evaluated, 505 expanded, 72 reopened
[t=0.45163s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.451661s, 431896 KB] g=73, 1854 evaluated, 506 expanded, 72 reopened
[t=0.452048s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.452078s, 431896 KB] g=74, 1856 evaluated, 507 expanded, 72 reopened
[t=0.452293s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.452322s, 431896 KB] g=75, 1857 evaluated, 508 expanded, 72 reopened
[t=0.452713s, 431896 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.452742s, 431896 KB] g=76, 1859 evaluated, 509 expanded, 72 reopened
[t=0.452776s, 431896 KB] Solution found!
[t=0.452805s, 431896 KB] Actual search time: 0.351617s
stack i a (1)
unstack d e (1)
put-down d (1)
unstack i a (1)
put-down i (1)
pick-up c (1)
stack c i (1)
unstack a j (1)
stack a e (1)
unstack j h (1)
put-down j (1)
unstack h l (1)
stack h d (1)
unstack a e (1)
stack a l (1)
unstack c i (1)
stack c j (1)
unstack h d (1)
stack h a (1)
unstack e g (1)
put-down e (1)
pick-up d (1)
stack d e (1)
unstack g k (1)
stack g d (1)
unstack k b (1)
stack k c (1)
unstack b f (1)
put-down b (1)
unstack k c (1)
put-down k (1)
unstack g d (1)
put-down g (1)
unstack c j (1)
stack c b (1)
unstack d e (1)
put-down d (1)
pick-up f (1)
stack f k (1)
pick-up j (1)
stack j e (1)
unstack h a (1)
stack h g (1)
unstack a l (1)
stack a h (1)
pick-up i (1)
stack i c (1)
unstack j e (1)
stack j l (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack j l (1)
stack j d (1)
pick-up e (1)
stack e k (1)
unstack i c (1)
stack i l (1)
unstack c b (1)
put-down c (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
stack i c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.45283s, 431896 KB] Plan length: 77 step(s).
[t=0.45283s, 431896 KB] Plan cost: 77
[t=0.45283s, 431896 KB] Expanded 511 state(s).
[t=0.45283s, 431896 KB] Reopened 72 state(s).
[t=0.45283s, 431896 KB] Evaluated 1860 state(s).
[t=0.45283s, 431896 KB] Evaluations: 1860
[t=0.45283s, 431896 KB] Generated 2739 state(s).
[t=0.45283s, 431896 KB] Dead ends: 0 state(s).
[t=0.45283s, 431896 KB] Expanded until last jump: 2 state(s).
[t=0.45283s, 431896 KB] Reopened until last jump: 0 state(s).
[t=0.45283s, 431896 KB] Evaluated until last jump: 7 state(s).
[t=0.45283s, 431896 KB] Generated until last jump: 7 state(s).
[t=0.45283s, 431896 KB] Number of registered states: 1860
[t=0.45283s, 431896 KB] Int hash set load factor: 1860/2048 = 0.908203
[t=0.45283s, 431896 KB] Int hash set resizes: 11
[t=0.45283s, 431896 KB] Search time: 0.424173s
[t=0.45283s, 431896 KB] Total time: 0.45283s
Solution found.
Peak memory: 431896 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p117.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6364e-05s, 424928 KB] reading input...
[t=0.00211061s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259845s, 427536 KB] Building successor generator...done!
[t=0.0262618s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262858s, 427536 KB] time for successor generation creation: 0.000165603s
[t=0.0263149s, 427536 KB] Variables: 25
[t=0.0263382s, 427536 KB] FactPairs: 182
[t=0.0263605s, 427536 KB] Bytes per state: 8
[t=0.0265677s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099368s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.0994205s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994467s, 430128 KB] f = 80, 1 evaluated, 0 expanded
[t=0.0994745s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.0994985s, 430128 KB] pruning method: none
[t=0.118247s, 431100 KB] f = 82, 5 evaluated, 1 expanded
[t=0.118859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.118892s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119821s, 431100 KB] f = 85, 13 evaluated, 4 expanded
[t=0.120399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.12043s, 431100 KB] g=6, 16 evaluated, 6 expanded
[t=0.122067s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.122098s, 431100 KB] g=8, 25 evaluated, 9 expanded
[t=0.156292s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.156328s, 431100 KB] g=10, 215 evaluated, 85 expanded, 4 reopened
[t=0.171664s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.171702s, 431232 KB] g=18, 300 evaluated, 109 expanded, 4 reopened
[t=0.180541s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.180574s, 431232 KB] g=20, 349 evaluated, 121 expanded, 4 reopened
[t=0.191546s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.191581s, 431232 KB] g=27, 410 evaluated, 137 expanded, 4 reopened
[t=0.195015s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.195051s, 431232 KB] g=30, 429 evaluated, 141 expanded, 4 reopened
[t=0.197045s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.197076s, 431232 KB] g=32, 440 evaluated, 143 expanded, 4 reopened
[t=0.19874s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.198783s, 431232 KB] g=34, 449 evaluated, 145 expanded, 4 reopened
[t=0.20097s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.201001s, 431232 KB] g=37, 461 evaluated, 148 expanded, 4 reopened
[t=0.202484s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.202517s, 431232 KB] g=40, 469 evaluated, 151 expanded, 4 reopened
[t=0.205421s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.205452s, 431364 KB] g=43, 485 evaluated, 155 expanded, 4 reopened
[t=0.206199s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.206229s, 431364 KB] g=44, 489 evaluated, 156 expanded, 4 reopened
[t=0.206815s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.206846s, 431364 KB] g=45, 492 evaluated, 157 expanded, 4 reopened
[t=0.207417s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.207449s, 431364 KB] g=46, 495 evaluated, 158 expanded, 4 reopened
[t=0.207841s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.207873s, 431364 KB] g=47, 497 evaluated, 159 expanded, 4 reopened
[t=0.208265s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.208294s, 431364 KB] g=48, 499 evaluated, 160 expanded, 4 reopened
[t=0.209039s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.209069s, 431364 KB] g=49, 503 evaluated, 161 expanded, 4 reopened
[t=0.209461s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.20949s, 431364 KB] g=50, 505 evaluated, 162 expanded, 4 reopened
[t=0.210426s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.210461s, 431364 KB] g=52, 510 evaluated, 164 expanded, 4 reopened
[t=0.210679s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.210708s, 431364 KB] g=53, 511 evaluated, 165 expanded, 4 reopened
[t=0.211324s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.211357s, 431364 KB] g=55, 514 evaluated, 167 expanded, 4 reopened
[t=0.212484s, 431364 KB] Solution found!
[t=0.212517s, 431364 KB] Actual search time: 0.113016s
pick-up e (1)
stack e k (1)
unstack j f (1)
stack j e (1)
unstack a l (1)
put-down a (1)
unstack f h (1)
stack f j (1)
unstack h g (1)
put-down h (1)
unstack g d (1)
stack g h (1)
unstack f j (1)
stack f d (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h a (1)
unstack f d (1)
stack f l (1)
unstack j e (1)
put-down j (1)
unstack d i (1)
stack d j (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f l (1)
stack f d (1)
unstack l b (1)
stack l i (1)
unstack e k (1)
stack e l (1)
pick-up k (1)
stack k e (1)
unstack f d (1)
stack f a (1)
unstack d j (1)
stack d b (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.212543s, 431364 KB] Plan length: 58 step(s).
[t=0.212543s, 431364 KB] Plan cost: 58
[t=0.212543s, 431364 KB] Expanded 174 state(s).
[t=0.212543s, 431364 KB] Reopened 4 state(s).
[t=0.212543s, 431364 KB] Evaluated 521 state(s).
[t=0.212543s, 431364 KB] Evaluations: 521
[t=0.212543s, 431364 KB] Generated 718 state(s).
[t=0.212543s, 431364 KB] Dead ends: 0 state(s).
[t=0.212543s, 431364 KB] Expanded until last jump: 4 state(s).
[t=0.212543s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.212543s, 431364 KB] Evaluated until last jump: 13 state(s).
[t=0.212543s, 431364 KB] Generated until last jump: 15 state(s).
[t=0.212543s, 431364 KB] Number of registered states: 521
[t=0.212543s, 431364 KB] Int hash set load factor: 521/1024 = 0.508789
[t=0.212543s, 431364 KB] Int hash set resizes: 10
[t=0.212543s, 431364 KB] Search time: 0.185976s
[t=0.212543s, 431364 KB] Total time: 0.212543s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p118.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6959e-05s, 424928 KB] reading input...
[t=0.00224912s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259898s, 427536 KB] Building successor generator...done!
[t=0.0262703s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262937s, 427536 KB] time for successor generation creation: 0.000167567s
[t=0.0263226s, 427536 KB] Variables: 25
[t=0.0263453s, 427536 KB] FactPairs: 182
[t=0.0263681s, 427536 KB] Bytes per state: 8
[t=0.0265632s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987068s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0987592s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987853s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0988125s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0988369s, 430128 KB] pruning method: none
[t=0.11067s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.11072s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117887s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.117931s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.1185s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.118531s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.121227s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.12126s, 431100 KB] g=7, 25 evaluated, 9 expanded
[t=0.122894s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.122925s, 431100 KB] g=10, 34 evaluated, 12 expanded
[t=0.155004s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.155042s, 431232 KB] g=19, 215 evaluated, 64 expanded, 1 reopened
[t=0.163276s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.163311s, 431232 KB] g=22, 261 evaluated, 77 expanded, 1 reopened
[t=0.167245s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.167287s, 431232 KB] g=20, 283 evaluated, 83 expanded, 1 reopened
[t=0.170336s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.170377s, 431232 KB] g=22, 300 evaluated, 88 expanded, 1 reopened
[t=0.170763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.170795s, 431232 KB] g=22, 302 evaluated, 88 expanded, 1 reopened
[t=0.172616s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.172648s, 431232 KB] g=24, 312 evaluated, 91 expanded, 1 reopened
[t=0.173392s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.173422s, 431232 KB] g=25, 316 evaluated, 92 expanded, 1 reopened
[t=0.175942s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.175975s, 431232 KB] g=28, 330 evaluated, 96 expanded, 1 reopened
[t=0.177786s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.177819s, 431232 KB] g=30, 340 evaluated, 98 expanded, 1 reopened
[t=0.17838s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.178409s, 431232 KB] g=31, 343 evaluated, 99 expanded, 1 reopened
[t=0.179517s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.179549s, 431232 KB] g=32, 349 evaluated, 100 expanded, 1 reopened
[t=0.179761s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.179794s, 431232 KB] g=33, 350 evaluated, 101 expanded, 1 reopened
[t=0.180711s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.180744s, 431232 KB] g=34, 355 evaluated, 102 expanded, 1 reopened
[t=0.181663s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.181696s, 431232 KB] g=35, 360 evaluated, 103 expanded, 1 reopened
[t=0.182613s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.182647s, 431232 KB] g=36, 365 evaluated, 104 expanded, 1 reopened
[t=0.186393s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.186426s, 431232 KB] g=39, 386 evaluated, 109 expanded, 1 reopened
[t=0.188964s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.188997s, 431232 KB] g=42, 400 evaluated, 113 expanded, 1 reopened
[t=0.200768s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.200803s, 431364 KB] g=43, 466 evaluated, 131 expanded, 2 reopened
[t=0.201195s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.201231s, 431364 KB] g=44, 468 evaluated, 132 expanded, 2 reopened
[t=0.201623s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.201653s, 431364 KB] g=45, 470 evaluated, 133 expanded, 2 reopened
[t=0.203826s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.20386s, 431364 KB] g=47, 482 evaluated, 137 expanded, 2 reopened
[t=0.204074s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.204104s, 431364 KB] g=48, 483 evaluated, 138 expanded, 2 reopened
[t=0.204312s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.204341s, 431364 KB] g=48, 484 evaluated, 138 expanded, 2 reopened
[t=0.205626s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.205656s, 431364 KB] g=50, 491 evaluated, 140 expanded, 2 reopened
[t=0.206226s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.20626s, 431364 KB] g=51, 494 evaluated, 141 expanded, 2 reopened
[t=0.207366s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.207398s, 431364 KB] g=52, 500 evaluated, 142 expanded, 2 reopened
[t=0.207791s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.20782s, 431364 KB] g=53, 502 evaluated, 143 expanded, 2 reopened
[t=0.20821s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.208242s, 431364 KB] g=54, 504 evaluated, 144 expanded, 2 reopened
[t=0.20917s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.209199s, 431364 KB] g=56, 509 evaluated, 146 expanded, 2 reopened
[t=0.209589s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.209621s, 431364 KB] g=57, 511 evaluated, 147 expanded, 2 reopened
[t=0.210064s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.210097s, 431364 KB] g=59, 514 evaluated, 149 expanded, 2 reopened
[t=0.210124s, 431364 KB] Solution found!
[t=0.21015s, 431364 KB] Actual search time: 0.11131s
stack b a (1)
unstack e l (1)
put-down e (1)
pick-up d (1)
stack d b (1)
unstack l f (1)
put-down l (1)
unstack d b (1)
put-down d (1)
unstack b a (1)
stack b d (1)
unstack a i (1)
put-down a (1)
unstack i c (1)
stack i f (1)
pick-up c (1)
stack c i (1)
unstack b d (1)
stack b l (1)
unstack c i (1)
stack c b (1)
unstack i f (1)
stack i c (1)
pick-up a (1)
stack a d (1)
unstack f g (1)
stack f i (1)
unstack g k (1)
put-down g (1)
unstack k h (1)
stack k e (1)
unstack h j (1)
stack h g (1)
unstack a d (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.210175s, 431364 KB] Plan length: 59 step(s).
[t=0.210175s, 431364 KB] Plan cost: 59
[t=0.210175s, 431364 KB] Expanded 150 state(s).
[t=0.210175s, 431364 KB] Reopened 2 state(s).
[t=0.210175s, 431364 KB] Evaluated 514 state(s).
[t=0.210175s, 431364 KB] Evaluations: 514
[t=0.210175s, 431364 KB] Generated 673 state(s).
[t=0.210175s, 431364 KB] Dead ends: 0 state(s).
[t=0.210175s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.210175s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.210175s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.210175s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.210175s, 431364 KB] Number of registered states: 514
[t=0.210175s, 431364 KB] Int hash set load factor: 514/1024 = 0.501953
[t=0.210175s, 431364 KB] Int hash set resizes: 10
[t=0.210175s, 431364 KB] Search time: 0.183613s
[t=0.210175s, 431364 KB] Total time: 0.210175s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p119.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5644e-05s, 424928 KB] reading input...
[t=0.00212441s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256987s, 427536 KB] Building successor generator...done!
[t=0.0259773s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260011s, 427536 KB] time for successor generation creation: 0.000165372s
[t=0.0260301s, 427536 KB] Variables: 25
[t=0.0260525s, 427536 KB] FactPairs: 182
[t=0.0260746s, 427536 KB] Bytes per state: 8
[t=0.0262713s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982319s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.0982831s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983093s, 430128 KB] f = 98, 1 evaluated, 0 expanded
[t=0.0983371s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.0983616s, 430128 KB] pruning method: none
[t=0.110187s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.110238s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116995s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.117039s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117608s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.117638s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.123333s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.123381s, 431100 KB] g=6, 40 evaluated, 9 expanded
[t=0.125358s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.125389s, 431100 KB] g=5, 51 evaluated, 11 expanded
[t=0.126489s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.126519s, 431100 KB] g=7, 57 evaluated, 13 expanded
[t=0.131389s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.131426s, 431100 KB] g=12, 84 evaluated, 18 expanded
[t=0.141991s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.142025s, 431100 KB] g=16, 143 evaluated, 31 expanded
[t=0.145278s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.145314s, 431100 KB] g=15, 161 evaluated, 36 expanded
[t=0.148554s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.148589s, 431100 KB] g=18, 179 evaluated, 40 expanded
[t=0.169113s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.169158s, 431232 KB] g=19, 293 evaluated, 68 expanded, 2 reopened
[t=0.170087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.17012s, 431232 KB] g=20, 298 evaluated, 69 expanded, 2 reopened
[t=0.210523s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.210564s, 431364 KB] g=17, 522 evaluated, 143 expanded, 25 reopened
[t=0.217392s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.217429s, 431364 KB] g=22, 560 evaluated, 152 expanded, 25 reopened
[t=0.219067s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.219097s, 431364 KB] g=25, 569 evaluated, 155 expanded, 25 reopened
[t=0.221827s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.22186s, 431364 KB] g=25, 584 evaluated, 159 expanded, 25 reopened
[t=0.222074s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.222103s, 431364 KB] g=26, 585 evaluated, 160 expanded, 25 reopened
[t=0.222312s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.22234s, 431364 KB] g=26, 586 evaluated, 160 expanded, 25 reopened
[t=0.225253s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.225288s, 431364 KB] g=28, 602 evaluated, 165 expanded, 25 reopened
[t=0.234305s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.234341s, 431364 KB] g=33, 652 evaluated, 179 expanded, 25 reopened
[t=0.236183s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.236218s, 431364 KB] g=32, 662 evaluated, 182 expanded, 25 reopened
[t=0.236967s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.236998s, 431364 KB] g=33, 666 evaluated, 183 expanded, 25 reopened
[t=0.238102s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.238132s, 431364 KB] g=35, 672 evaluated, 185 expanded, 25 reopened
[t=0.239958s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.239994s, 431364 KB] g=37, 682 evaluated, 187 expanded, 25 reopened
[t=0.242341s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.242376s, 431364 KB] g=40, 695 evaluated, 190 expanded, 25 reopened
[t=0.243116s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.243152s, 431364 KB] g=41, 699 evaluated, 191 expanded, 25 reopened
[t=0.243377s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.243407s, 431364 KB] g=42, 700 evaluated, 192 expanded, 25 reopened
[t=0.24487s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.244904s, 431364 KB] g=44, 708 evaluated, 195 expanded, 25 reopened
[t=0.245118s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.245147s, 431364 KB] g=45, 709 evaluated, 196 expanded, 25 reopened
[t=0.245716s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.245745s, 431364 KB] g=47, 712 evaluated, 198 expanded, 25 reopened
[t=0.246868s, 431364 KB] Solution found!
[t=0.246904s, 431364 KB] Actual search time: 0.14854s
unstack j f (1)
stack j d (1)
unstack f i (1)
stack f b (1)
unstack l a (1)
put-down l (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a f (1)
unstack j d (1)
stack j i (1)
pick-up l (1)
stack l j (1)
unstack d k (1)
stack d e (1)
pick-up k (1)
stack k l (1)
unstack a f (1)
stack a h (1)
unstack f b (1)
stack f k (1)
unstack d e (1)
put-down d (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack l j (1)
put-down l (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.24693s, 431364 KB] Plan length: 50 step(s).
[t=0.24693s, 431364 KB] Plan cost: 50
[t=0.24693s, 431364 KB] Expanded 205 state(s).
[t=0.24693s, 431364 KB] Reopened 25 state(s).
[t=0.24693s, 431364 KB] Evaluated 719 state(s).
[t=0.24693s, 431364 KB] Evaluations: 719
[t=0.24693s, 431364 KB] Generated 1062 state(s).
[t=0.24693s, 431364 KB] Dead ends: 0 state(s).
[t=0.24693s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.24693s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.24693s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.24693s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.24693s, 431364 KB] Number of registered states: 719
[t=0.24693s, 431364 KB] Int hash set load factor: 719/1024 = 0.702148
[t=0.24693s, 431364 KB] Int hash set resizes: 10
[t=0.24693s, 431364 KB] Search time: 0.22066s
[t=0.24693s, 431364 KB] Total time: 0.24693s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p120.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5935e-05s, 424928 KB] reading input...
[t=0.00214707s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256657s, 427536 KB] Building successor generator...done!
[t=0.0259432s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259661s, 427536 KB] time for successor generation creation: 0.000167228s
[t=0.0259938s, 427536 KB] Variables: 25
[t=0.0260164s, 427536 KB] FactPairs: 182
[t=0.026038s, 427536 KB] Bytes per state: 8
[t=0.0262285s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978249s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0978771s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979036s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0979314s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0979554s, 430128 KB] pruning method: none
[t=0.116421s, 431100 KB] f = 152, 5 evaluated, 1 expanded
[t=0.116657s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.116689s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.11743s, 431100 KB] f = 153, 10 evaluated, 3 expanded
[t=0.11782s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.11785s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.119128s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.119173s, 431100 KB] g=6, 19 evaluated, 7 expanded
[t=0.119561s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.119591s, 431100 KB] g=7, 21 evaluated, 8 expanded
[t=0.119972s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.120002s, 431100 KB] g=7, 23 evaluated, 8 expanded
[t=0.121798s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.121829s, 431100 KB] g=10, 33 evaluated, 11 expanded
[t=0.123974s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.124007s, 431100 KB] g=12, 45 evaluated, 14 expanded
[t=0.126679s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.126718s, 431100 KB] g=16, 60 evaluated, 19 expanded
[t=0.127819s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.127855s, 431100 KB] g=17, 66 evaluated, 20 expanded
[t=0.128418s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.128448s, 431100 KB] g=18, 69 evaluated, 21 expanded
[t=0.13412s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.134155s, 431100 KB] g=23, 101 evaluated, 28 expanded
[t=0.13789s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.137926s, 431100 KB] g=26, 122 evaluated, 32 expanded
[t=0.138483s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.138512s, 431100 KB] g=26, 125 evaluated, 32 expanded
[t=0.139277s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.139313s, 431100 KB] g=27, 129 evaluated, 33 expanded
[t=0.139697s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.13973s, 431100 KB] g=27, 131 evaluated, 33 expanded
[t=0.140646s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.140679s, 431100 KB] g=28, 136 evaluated, 34 expanded
[t=0.141947s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.141977s, 431100 KB] g=30, 143 evaluated, 36 expanded
[t=0.142184s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.142213s, 431100 KB] g=30, 144 evaluated, 36 expanded
[t=0.156042s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.156086s, 431232 KB] g=33, 222 evaluated, 54 expanded
[t=0.156658s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.156689s, 431232 KB] g=34, 225 evaluated, 55 expanded
[t=0.157963s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.157996s, 431232 KB] g=36, 232 evaluated, 57 expanded
[t=0.159284s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.159318s, 431232 KB] g=38, 239 evaluated, 59 expanded
[t=0.161306s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.161337s, 431232 KB] g=42, 250 evaluated, 63 expanded
[t=0.161726s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.161756s, 431232 KB] g=43, 252 evaluated, 64 expanded
[t=0.162316s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.162349s, 431232 KB] g=44, 255 evaluated, 65 expanded
[t=0.163838s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.163873s, 431232 KB] g=46, 263 evaluated, 68 expanded
[t=0.164086s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.164115s, 431232 KB] g=47, 264 evaluated, 69 expanded
[t=0.164321s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.16435s, 431232 KB] g=47, 265 evaluated, 69 expanded
[t=0.16474s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.164769s, 431232 KB] g=48, 267 evaluated, 70 expanded
[t=0.165335s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.165365s, 431232 KB] g=49, 270 evaluated, 71 expanded
[t=0.165927s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.165957s, 431232 KB] g=50, 273 evaluated, 72 expanded
[t=0.166167s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.166196s, 431232 KB] g=51, 274 evaluated, 73 expanded
[t=0.168195s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.168231s, 431232 KB] g=54, 285 evaluated, 78 expanded
[t=0.168801s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.168834s, 431232 KB] g=56, 288 evaluated, 80 expanded
[t=0.169952s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.16999s, 431232 KB] g=59, 295 evaluated, 86 expanded
[t=0.170017s, 431232 KB] Solution found!
[t=0.170043s, 431232 KB] Actual search time: 0.0720845s
stack a j (1)
unstack g b (1)
stack g a (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d e (1)
unstack g a (1)
stack g b (1)
unstack a j (1)
stack a g (1)
unstack j k (1)
stack j d (1)
unstack k l (1)
put-down k (1)
unstack a g (1)
stack a k (1)
unstack g b (1)
stack g a (1)
unstack l f (1)
stack l b (1)
unstack g a (1)
put-down g (1)
unstack j d (1)
stack j i (1)
unstack f h (1)
stack f d (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k j (1)
unstack f d (1)
stack f k (1)
unstack d e (1)
stack d l (1)
pick-up e (1)
stack e d (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.170068s, 431232 KB] Plan length: 59 step(s).
[t=0.170068s, 431232 KB] Plan cost: 59
[t=0.170068s, 431232 KB] Expanded 87 state(s).
[t=0.170068s, 431232 KB] Reopened 0 state(s).
[t=0.170068s, 431232 KB] Evaluated 295 state(s).
[t=0.170068s, 431232 KB] Evaluations: 295
[t=0.170068s, 431232 KB] Generated 383 state(s).
[t=0.170068s, 431232 KB] Dead ends: 0 state(s).
[t=0.170068s, 431232 KB] Expanded until last jump: 3 state(s).
[t=0.170068s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.170068s, 431232 KB] Evaluated until last jump: 10 state(s).
[t=0.170068s, 431232 KB] Generated until last jump: 11 state(s).
[t=0.170068s, 431232 KB] Number of registered states: 295
[t=0.170068s, 431232 KB] Int hash set load factor: 295/512 = 0.576172
[t=0.170068s, 431232 KB] Int hash set resizes: 9
[t=0.170068s, 431232 KB] Search time: 0.14384s
[t=0.170068s, 431232 KB] Total time: 0.170068s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023102
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 5 test success: 20 of 20 (100.0%)

---------- FOLD 7/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 82 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.040623992681503296 (0.4255015552043915 vs. 0.3848775625228882), which occurred at index 49.
  _module_class,
 | avg_train_loss=0.098260 | avg_val_loss=0.093400
Epoch 2 | avg_train_loss=0.070408 | avg_val_loss=0.046617
Epoch 3 | avg_train_loss=0.040726 | avg_val_loss=0.039930
Epoch 4 | avg_train_loss=0.037068 | avg_val_loss=0.038523
Epoch 5 | avg_train_loss=0.035567 | avg_val_loss=0.037690
Epoch 6 | avg_train_loss=0.034582 | avg_val_loss=0.036219
Epoch 7 | avg_train_loss=0.033908 | avg_val_loss=0.035745
Epoch 8 | avg_train_loss=0.033279 | avg_val_loss=0.035089
Epoch 9 | avg_train_loss=0.032628 | avg_val_loss=0.034670
Epoch 10 | avg_train_loss=0.032121 | avg_val_loss=0.034288
Epoch 11 | avg_train_loss=0.031459 | avg_val_loss=0.033818
Epoch 12 | avg_train_loss=0.031219 | avg_val_loss=0.033762
Epoch 13 | avg_train_loss=0.030749 | avg_val_loss=0.032799
Epoch 14 | avg_train_loss=0.030347 | avg_val_loss=0.032681
Epoch 15 | avg_train_loss=0.030143 | avg_val_loss=0.032626
Epoch 16 | avg_train_loss=0.029803 | avg_val_loss=0.031987
Epoch 17 | avg_train_loss=0.029563 | avg_val_loss=0.031604
Epoch 18 | avg_train_loss=0.029194 | avg_val_loss=0.031275
Epoch 19 | avg_train_loss=0.029002 | avg_val_loss=0.031248
Epoch 20 | avg_train_loss=0.028467 | avg_val_loss=0.031123
Epoch 21 | avg_train_loss=0.028154 | avg_val_loss=0.030477
Epoch 22 | avg_train_loss=0.027925 | avg_val_loss=0.029856
Epoch 23 | avg_train_loss=0.027593 | avg_val_loss=0.029711
Epoch 24 | avg_train_loss=0.027331 | avg_val_loss=0.029316
Epoch 25 | avg_train_loss=0.027084 | avg_val_loss=0.029192
Epoch 26 | avg_train_loss=0.026666 | avg_val_loss=0.028594
Epoch 27 | avg_train_loss=0.026361 | avg_val_loss=0.028273
Epoch 28 | avg_train_loss=0.026071 | avg_val_loss=0.028107
Epoch 29 | avg_train_loss=0.025885 | avg_val_loss=0.028052
Epoch 30 | avg_train_loss=0.025560 | avg_val_loss=0.027795
Epoch 31 | avg_train_loss=0.025283 | avg_val_loss=0.027131
Epoch 32 | avg_train_loss=0.025098 | avg_val_loss=0.027202
Epoch 33 | avg_train_loss=0.024715 | avg_val_loss=0.026655
Epoch 34 | avg_train_loss=0.024400 | avg_val_loss=0.026627
Epoch 35 | avg_train_loss=0.024322 | avg_val_loss=0.026459
Epoch 36 | avg_train_loss=0.024128 | avg_val_loss=0.025985
Epoch 37 | avg_train_loss=0.023827 | avg_val_loss=0.026328
Epoch 38 | avg_train_loss=0.023648 | avg_val_loss=0.025991
Epoch 39 | avg_train_loss=0.023458 | avg_val_loss=0.025801
Epoch 40 | avg_train_loss=0.023217 | avg_val_loss=0.025590
Epoch 41 | avg_train_loss=0.023071 | avg_val_loss=0.025395
Epoch 42 | avg_train_loss=0.022868 | avg_val_loss=0.025806
Epoch 43 | avg_train_loss=0.022719 | avg_val_loss=0.025583
Epoch 44 | avg_train_loss=0.022697 | avg_val_loss=0.025228
Epoch 45 | avg_train_loss=0.022489 | avg_val_loss=0.024814
Epoch 46 | avg_train_loss=0.022282 | avg_val_loss=0.025137
Epoch 47 | avg_train_loss=0.022248 | avg_val_loss=0.024948
Epoch 48 | avg_train_loss=0.021973 | avg_val_loss=0.024833
Epoch 49 | avg_train_loss=0.021812 | avg_val_loss=0.024771
Epoch 50 | avg_train_loss=0.021622 | avg_val_loss=0.024430
Epoch 51 | avg_train_loss=0.021667 | avg_val_loss=0.024554
Epoch 52 | avg_train_loss=0.021410 | avg_val_loss=0.024681
Epoch 53 | avg_train_loss=0.021393 | avg_val_loss=0.024598
Epoch 54 | avg_train_loss=0.021074 | avg_val_loss=0.024513
Epoch 55 | avg_train_loss=0.021023 | avg_val_loss=0.024601
Epoch 56 | avg_train_loss=0.020905 | avg_val_loss=0.024191
Epoch 57 | avg_train_loss=0.020883 | avg_val_loss=0.024464
Epoch 58 | avg_train_loss=0.020726 | avg_val_loss=0.024543
Epoch 59 | avg_train_loss=0.020583 | avg_val_loss=0.024335
Epoch 60 | avg_train_loss=0.020505 | avg_val_loss=0.024111
Epoch 61 | avg_train_loss=0.020175 | avg_val_loss=0.024430
Epoch 62 | avg_train_loss=0.020143 | avg_val_loss=0.024364
Epoch 63 | avg_train_loss=0.020121 | avg_val_loss=0.024104
Epoch 64 | avg_train_loss=0.020082 | avg_val_loss=0.024382
Epoch 65 | avg_train_loss=0.019804 | avg_val_loss=0.023996
Epoch 66 | avg_train_loss=0.019793 | avg_val_loss=0.024375
Epoch 67 | avg_train_loss=0.019591 | avg_val_loss=0.023979
Epoch 68 | avg_train_loss=0.019532 | avg_val_loss=0.023845
Epoch 69 | avg_train_loss=0.019428 | avg_val_loss=0.024237
Epoch 70 | avg_train_loss=0.019357 | avg_val_loss=0.023953
Epoch 71 | avg_train_loss=0.019063 | avg_val_loss=0.024063
Epoch 72 | avg_train_loss=0.019096 | avg_val_loss=0.023449
Epoch 73 | avg_train_loss=0.018829 | avg_val_loss=0.024104
Epoch 74 | avg_train_loss=0.018815 | avg_val_loss=0.024033
Epoch 75 | avg_train_loss=0.018677 | avg_val_loss=0.024103
Epoch 76 | avg_train_loss=0.018468 | avg_val_loss=0.023926
Epoch 77 | avg_train_loss=0.018498 | avg_val_loss=0.023937
Epoch 78 | avg_train_loss=0.018459 | avg_val_loss=0.024361
Epoch 79 | avg_train_loss=0.018264 | avg_val_loss=0.024142
Epoch 80 | avg_train_loss=0.018130 | avg_val_loss=0.024669
Epoch 81 | avg_train_loss=0.018011 | avg_val_loss=0.024234
Epoch 82 | avg_train_loss=0.017934 | avg_val_loss=0.023716
Epoch 83 | avg_train_loss=0.017707 | avg_val_loss=0.023648
Epoch 84 | avg_train_loss=0.017687 | avg_val_loss=0.023602
Epoch 85 | avg_train_loss=0.017562 | avg_val_loss=0.024198
Epoch 86 | avg_train_loss=0.017584 | avg_val_loss=0.024056
Epoch 87 | avg_train_loss=0.017345 | avg_val_loss=0.024314
Epoch 88 | avg_train_loss=0.017421 | avg_val_loss=0.024120
Epoch 89 | avg_train_loss=0.017075 | avg_val_loss=0.024016
Epoch 90 | avg_train_loss=0.017013 | avg_val_loss=0.023827
Epoch 91 | avg_train_loss=0.017186 | avg_val_loss=0.024409
Epoch 92 | avg_train_loss=0.016918 | avg_val_loss=0.024678
Epoch 93 | avg_train_loss=0.016734 | avg_val_loss=0.024196
Epoch 94 | avg_train_loss=0.016608 | avg_val_loss=0.024368
Epoch 95 | avg_train_loss=0.016661 | avg_val_loss=0.023942
Epoch 96 | avg_train_loss=0.016529 | avg_val_loss=0.023955
Epoch 97 | avg_train_loss=0.016439 | avg_val_loss=0.024284
Epoch 98 | avg_train_loss=0.016292 | avg_val_loss=0.024895
Epoch 99 | avg_train_loss=0.016121 | avg_val_loss=0.023599
Epoch 100 | avg_train_loss=0.016187 | avg_val_loss=0.024457
Epoch 101 | avg_train_loss=0.016155 | avg_val_loss=0.024523
Epoch 102 | avg_train_loss=0.016005INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p121.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6773e-05s, 424928 KB] reading input...
[t=0.00217922s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257451s, 427536 KB] Building successor generator...done!
[t=0.0260267s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260505s, 427536 KB] time for successor generation creation: 0.000168618s
[t=0.0260793s, 427536 KB] Variables: 25
[t=0.0261023s, 427536 KB] FactPairs: 182
[t=0.0261243s, 427536 KB] Bytes per state: 8
[t=0.0263191s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.101454s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.101511s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.101537s, 430128 KB] f = 131, 1 evaluated, 0 expanded
[t=0.101564s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.101588s, 430128 KB] pruning method: none
[t=0.113448s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.113499s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.12015s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.120193s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.123392s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.123426s, 431100 KB] g=2, 22 evaluated, 4 expanded
[t=0.124336s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.124366s, 431100 KB] g=3, 27 evaluated, 5 expanded
[t=0.124574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.124604s, 431100 KB] g=3, 28 evaluated, 5 expanded
[t=0.126931s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.126964s, 431100 KB] g=5, 41 evaluated, 8 expanded
[t=0.127169s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.127198s, 431100 KB] g=5, 42 evaluated, 8 expanded
[t=0.128989s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.129019s, 431100 KB] g=7, 52 evaluated, 10 expanded
[t=0.12975s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.129783s, 431100 KB] g=7, 56 evaluated, 10 expanded
[t=0.14866s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.148696s, 431100 KB] g=10, 163 evaluated, 34 expanded
[t=0.212521s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.212561s, 431232 KB] g=9, 524 evaluated, 131 expanded, 2 reopened
[t=0.21278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.21281s, 431232 KB] g=9, 525 evaluated, 131 expanded, 2 reopened
[t=0.213373s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.213402s, 431232 KB] g=10, 528 evaluated, 132 expanded, 2 reopened
[t=0.215727s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.215762s, 431232 KB] g=12, 541 evaluated, 134 expanded, 2 reopened
[t=0.216677s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.21671s, 431232 KB] g=12, 546 evaluated, 134 expanded, 2 reopened
[t=0.217098s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.217127s, 431232 KB] g=13, 548 evaluated, 135 expanded, 2 reopened
[t=0.218212s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.218242s, 431232 KB] g=14, 554 evaluated, 136 expanded, 2 reopened
[t=0.220676s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.220709s, 431232 KB] g=15, 567 evaluated, 138 expanded, 2 reopened
[t=0.221442s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.221472s, 431232 KB] g=16, 571 evaluated, 139 expanded, 2 reopened
[t=0.22785s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.227889s, 431364 KB] g=19, 607 evaluated, 146 expanded, 2 reopened
[t=0.228813s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.228845s, 431364 KB] g=21, 612 evaluated, 148 expanded, 2 reopened
[t=0.229758s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.229791s, 431364 KB] g=22, 617 evaluated, 149 expanded, 2 reopened
[t=0.230177s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.230206s, 431364 KB] g=23, 619 evaluated, 150 expanded, 2 reopened
[t=0.232892s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.232927s, 431364 KB] g=27, 634 evaluated, 154 expanded, 2 reopened
[t=0.240526s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.240564s, 431364 KB] g=27, 677 evaluated, 165 expanded, 2 reopened
[t=0.241478s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.241508s, 431364 KB] g=29, 682 evaluated, 167 expanded, 2 reopened
[t=0.241892s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.24193s, 431364 KB] g=30, 684 evaluated, 168 expanded, 2 reopened
[t=0.242676s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.242709s, 431364 KB] g=31, 688 evaluated, 169 expanded, 2 reopened
[t=0.245209s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.245243s, 431364 KB] g=33, 702 evaluated, 176 expanded, 2 reopened
[t=0.246167s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.246198s, 431364 KB] g=36, 707 evaluated, 180 expanded, 2 reopened
[t=0.246589s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.246621s, 431364 KB] g=37, 709 evaluated, 181 expanded, 2 reopened
[t=0.247734s, 431364 KB] Solution found!
[t=0.247766s, 431364 KB] Actual search time: 0.146176s
unstack h j (1)
stack h f (1)
unstack d i (1)
stack d j (1)
unstack l e (1)
put-down l (1)
unstack b k (1)
stack b l (1)
unstack h f (1)
stack h g (1)
unstack f a (1)
stack f k (1)
pick-up a (1)
stack a h (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack d j (1)
put-down d (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.247792s, 431364 KB] Plan length: 40 step(s).
[t=0.247792s, 431364 KB] Plan cost: 40
[t=0.247792s, 431364 KB] Expanded 188 state(s).
[t=0.247792s, 431364 KB] Reopened 2 state(s).
[t=0.247792s, 431364 KB] Evaluated 716 state(s).
[t=0.247792s, 431364 KB] Evaluations: 716
[t=0.247792s, 431364 KB] Generated 959 state(s).
[t=0.247792s, 431364 KB] Dead ends: 0 state(s).
[t=0.247792s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.247792s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.247792s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.247792s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.247792s, 431364 KB] Number of registered states: 716
[t=0.247792s, 431364 KB] Int hash set load factor: 716/1024 = 0.699219
[t=0.247792s, 431364 KB] Int hash set resizes: 10
[t=0.247792s, 431364 KB] Search time: 0.221474s
[t=0.247792s, 431364 KB] Total time: 0.247792s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p122.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6942e-05s, 424928 KB] reading input...
[t=0.00214338s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258023s, 427536 KB] Building successor generator...done!
[t=0.026076s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260995s, 427536 KB] time for successor generation creation: 0.00016431s
[t=0.0261275s, 427536 KB] Variables: 25
[t=0.0261497s, 427536 KB] FactPairs: 182
[t=0.0261717s, 427536 KB] Bytes per state: 8
[t=0.026365s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980242s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0980762s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981026s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0981305s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0981544s, 430128 KB] pruning method: none
[t=0.109942s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.109991s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116753s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.116797s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.117037s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118501s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.118544s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.119828s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.119859s, 431100 KB] g=4, 21 evaluated, 6 expanded
[t=0.120064s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.120093s, 431100 KB] g=4, 22 evaluated, 6 expanded
[t=0.120298s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.120327s, 431100 KB] g=4, 23 evaluated, 6 expanded
[t=0.120536s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.120565s, 431100 KB] g=5, 24 evaluated, 7 expanded
[t=0.121659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.121689s, 431100 KB] g=6, 30 evaluated, 8 expanded
[t=0.123872s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.123904s, 431100 KB] g=9, 42 evaluated, 12 expanded
[t=0.13359s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.133624s, 431100 KB] g=14, 96 evaluated, 29 expanded
[t=0.141381s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.141415s, 431100 KB] g=15, 139 evaluated, 45 expanded, 3 reopened
[t=0.143942s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.143974s, 431100 KB] g=16, 153 evaluated, 48 expanded, 3 reopened
[t=0.146145s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.146176s, 431100 KB] g=18, 165 evaluated, 51 expanded, 3 reopened
[t=0.151045s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.151079s, 431232 KB] g=21, 192 evaluated, 59 expanded, 3 reopened
[t=0.154519s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.154552s, 431232 KB] g=23, 211 evaluated, 65 expanded, 3 reopened
[t=0.189838s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.189874s, 431232 KB] g=16, 408 evaluated, 125 expanded, 9 reopened
[t=0.190087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.190117s, 431232 KB] g=17, 409 evaluated, 126 expanded, 9 reopened
[t=0.19905s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.199089s, 431232 KB] g=19, 459 evaluated, 138 expanded, 9 reopened
[t=0.200189s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.200222s, 431232 KB] g=20, 465 evaluated, 139 expanded, 9 reopened
[t=0.201322s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.201355s, 431232 KB] g=22, 471 evaluated, 141 expanded, 9 reopened
[t=0.201748s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.201777s, 431232 KB] g=23, 473 evaluated, 142 expanded, 9 reopened
[t=0.20216s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.202189s, 431232 KB] g=23, 475 evaluated, 142 expanded, 9 reopened
[t=0.20639s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.206428s, 431232 KB] g=25, 498 evaluated, 149 expanded, 9 reopened
[t=0.209789s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.209822s, 431232 KB] g=27, 516 evaluated, 155 expanded, 9 reopened
[t=0.210759s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.210792s, 431232 KB] g=28, 521 evaluated, 156 expanded, 9 reopened
[t=0.211184s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.211216s, 431232 KB] g=29, 523 evaluated, 157 expanded, 9 reopened
[t=0.218723s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.218759s, 431364 KB] g=34, 564 evaluated, 168 expanded, 9 reopened
[t=0.229056s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.229093s, 431364 KB] g=37, 621 evaluated, 182 expanded, 9 reopened
[t=0.229487s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.229516s, 431364 KB] g=38, 623 evaluated, 183 expanded, 9 reopened
[t=0.241215s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.241252s, 431364 KB] g=38, 687 evaluated, 199 expanded, 9 reopened
[t=0.257728s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.257766s, 431364 KB] g=38, 779 evaluated, 225 expanded, 9 reopened
[t=0.258331s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.258368s, 431364 KB] g=38, 782 evaluated, 225 expanded, 9 reopened
[t=0.259469s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.259499s, 431364 KB] g=39, 788 evaluated, 227 expanded, 9 reopened
[t=0.259895s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.259925s, 431364 KB] g=39, 790 evaluated, 227 expanded, 9 reopened
[t=0.264066s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.264103s, 431364 KB] g=42, 813 evaluated, 234 expanded, 9 reopened
[t=0.26699s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.267025s, 431364 KB] g=42, 829 evaluated, 239 expanded, 9 reopened
[t=0.270079s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.270112s, 431364 KB] g=45, 846 evaluated, 244 expanded, 9 reopened
[t=0.270325s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.270363s, 431364 KB] g=46, 847 evaluated, 245 expanded, 9 reopened
[t=0.270932s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.270961s, 431364 KB] g=47, 850 evaluated, 246 expanded, 9 reopened
[t=0.271349s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.271381s, 431364 KB] g=48, 852 evaluated, 247 expanded, 9 reopened
[t=0.274275s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.274309s, 431364 KB] g=50, 868 evaluated, 257 expanded, 9 reopened
[t=0.27453s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.274561s, 431364 KB] g=51, 869 evaluated, 258 expanded, 9 reopened
[t=0.274597s, 431364 KB] Solution found!
[t=0.274624s, 431364 KB] Actual search time: 0.176466s
put-down d (1)
pick-up g (1)
stack g a (1)
unstack e l (1)
stack e g (1)
unstack l h (1)
stack l d (1)
unstack b f (1)
stack b l (1)
unstack f c (1)
stack f b (1)
unstack e g (1)
stack e c (1)
unstack g a (1)
put-down g (1)
unstack h j (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k e (1)
unstack f b (1)
stack f a (1)
unstack b l (1)
put-down b (1)
pick-up j (1)
stack j l (1)
unstack k e (1)
stack k f (1)
unstack e c (1)
stack e b (1)
unstack c i (1)
put-down c (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up b (1)
stack b i (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.274648s, 431364 KB] Plan length: 51 step(s).
[t=0.274648s, 431364 KB] Plan cost: 51
[t=0.274648s, 431364 KB] Expanded 261 state(s).
[t=0.274648s, 431364 KB] Reopened 9 state(s).
[t=0.274648s, 431364 KB] Evaluated 870 state(s).
[t=0.274648s, 431364 KB] Evaluations: 870
[t=0.274648s, 431364 KB] Generated 1191 state(s).
[t=0.274648s, 431364 KB] Dead ends: 0 state(s).
[t=0.274648s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.274648s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.274648s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.274648s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.274648s, 431364 KB] Number of registered states: 870
[t=0.274648s, 431364 KB] Int hash set load factor: 870/1024 = 0.849609
[t=0.274648s, 431364 KB] Int hash set resizes: 10
[t=0.274648s, 431364 KB] Search time: 0.248284s
[t=0.274648s, 431364 KB] Total time: 0.274648s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p123.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5722e-05s, 424928 KB] reading input...
[t=0.00218854s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258293s, 427536 KB] Building successor generator...done!
[t=0.0261245s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261486s, 427536 KB] time for successor generation creation: 0.000169911s
[t=0.026177s, 427536 KB] Variables: 25
[t=0.0261996s, 427536 KB] FactPairs: 182
[t=0.0262214s, 427536 KB] Bytes per state: 8
[t=0.0264156s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979117s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.0979739s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980004s, 430128 KB] f = 79, 1 evaluated, 0 expanded
[t=0.0980281s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.0980527s, 430128 KB] pruning method: none
[t=0.116567s, 431100 KB] f = 111, 5 evaluated, 1 expanded
[t=0.117339s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.117371s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.118659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.118692s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.12317s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.123203s, 431100 KB] g=5, 41 evaluated, 10 expanded
[t=0.151636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.151671s, 431100 KB] g=11, 201 evaluated, 52 expanded
[t=0.152584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.152618s, 431100 KB] g=12, 206 evaluated, 53 expanded
[t=0.166956s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.166994s, 431232 KB] g=16, 286 evaluated, 76 expanded
[t=0.23472s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.234759s, 431364 KB] g=22, 667 evaluated, 194 expanded, 2 reopened
[t=0.235509s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.235539s, 431364 KB] g=23, 671 evaluated, 195 expanded, 2 reopened
[t=0.235746s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.235775s, 431364 KB] g=23, 672 evaluated, 195 expanded, 2 reopened
[t=0.236338s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.23637s, 431364 KB] g=24, 675 evaluated, 196 expanded, 2 reopened
[t=0.238722s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.238756s, 431364 KB] g=26, 688 evaluated, 199 expanded, 2 reopened
[t=0.239498s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.23953s, 431364 KB] g=27, 692 evaluated, 200 expanded, 2 reopened
[t=0.251621s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.251656s, 431364 KB] g=33, 760 evaluated, 216 expanded, 2 reopened
[t=0.252042s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.252079s, 431364 KB] g=33, 762 evaluated, 216 expanded, 2 reopened
[t=0.253183s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.253215s, 431364 KB] g=35, 768 evaluated, 218 expanded, 2 reopened
[t=0.254501s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.254535s, 431364 KB] g=37, 775 evaluated, 220 expanded, 2 reopened
[t=0.259533s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.259567s, 431364 KB] g=39, 803 evaluated, 228 expanded, 2 reopened
[t=0.260674s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.260706s, 431364 KB] g=41, 809 evaluated, 230 expanded, 2 reopened
[t=0.260914s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.260943s, 431364 KB] g=41, 810 evaluated, 230 expanded, 2 reopened
[t=0.261155s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.261184s, 431364 KB] g=42, 811 evaluated, 231 expanded, 2 reopened
[t=0.261572s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.261601s, 431364 KB] g=43, 813 evaluated, 232 expanded, 2 reopened
[t=0.262039s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.262073s, 431364 KB] g=44, 815 evaluated, 233 expanded, 2 reopened
[t=0.262299s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.26233s, 431364 KB] g=45, 816 evaluated, 234 expanded, 2 reopened
[t=0.262751s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.262782s, 431364 KB] g=46, 818 evaluated, 235 expanded, 2 reopened
[t=0.263371s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.2634s, 431364 KB] g=47, 821 evaluated, 236 expanded, 2 reopened
[t=0.263789s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.263822s, 431364 KB] g=48, 823 evaluated, 237 expanded, 2 reopened
[t=0.264029s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.264057s, 431364 KB] g=48, 824 evaluated, 237 expanded, 2 reopened
[t=0.264269s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.264297s, 431364 KB] g=49, 825 evaluated, 238 expanded, 2 reopened
[t=0.264863s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.264898s, 431364 KB] g=51, 828 evaluated, 240 expanded, 2 reopened
[t=0.264932s, 431364 KB] Solution found!
[t=0.264958s, 431364 KB] Actual search time: 0.166901s
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d a (1)
unstack i c (1)
stack i d (1)
pick-up c (1)
stack c b (1)
unstack i d (1)
stack i c (1)
unstack d a (1)
put-down d (1)
unstack j e (1)
stack j d (1)
pick-up e (1)
stack e i (1)
unstack a k (1)
stack a j (1)
unstack k f (1)
put-down k (1)
unstack f h (1)
stack f e (1)
unstack h l (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack f e (1)
stack f k (1)
unstack j d (1)
stack j l (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
stack c i (1)
pick-up b (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.264982s, 431364 KB] Plan length: 52 step(s).
[t=0.264982s, 431364 KB] Plan cost: 52
[t=0.264982s, 431364 KB] Expanded 242 state(s).
[t=0.264982s, 431364 KB] Reopened 2 state(s).
[t=0.264982s, 431364 KB] Evaluated 829 state(s).
[t=0.264982s, 431364 KB] Evaluations: 829
[t=0.264982s, 431364 KB] Generated 1110 state(s).
[t=0.264982s, 431364 KB] Dead ends: 0 state(s).
[t=0.264982s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.264982s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.264982s, 431364 KB] Evaluated until last jump: 5 state(s).
[t=0.264982s, 431364 KB] Generated until last jump: 4 state(s).
[t=0.264982s, 431364 KB] Number of registered states: 829
[t=0.264982s, 431364 KB] Int hash set load factor: 829/1024 = 0.80957
[t=0.264982s, 431364 KB] Int hash set resizes: 10
[t=0.264982s, 431364 KB] Search time: 0.238568s
[t=0.264982s, 431364 KB] Total time: 0.264982s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p124.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8766e-05s, 424928 KB] reading input...
[t=0.00220706s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259313s, 427536 KB] Building successor generator...done!
[t=0.0262061s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262293s, 427536 KB] time for successor generation creation: 0.000166207s
[t=0.0262573s, 427536 KB] Variables: 25
[t=0.0262799s, 427536 KB] FactPairs: 182
[t=0.0263016s, 427536 KB] Bytes per state: 8
[t=0.0264938s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986564s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0987089s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987349s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0987617s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0987855s, 430128 KB] pruning method: none
[t=0.117605s, 431100 KB] f = 151, 6 evaluated, 1 expanded
[t=0.118059s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.118093s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118501s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.118531s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.12062s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.12065s, 431100 KB] g=5, 21 evaluated, 6 expanded
[t=0.122553s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.122585s, 431100 KB] g=7, 31 evaluated, 9 expanded
[t=0.124672s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.124702s, 431100 KB] g=7, 42 evaluated, 12 expanded
[t=0.127168s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.127199s, 431100 KB] g=9, 55 evaluated, 15 expanded
[t=0.129674s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.129718s, 431100 KB] g=11, 68 evaluated, 18 expanded
[t=0.131439s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.131471s, 431100 KB] g=13, 77 evaluated, 20 expanded
[t=0.145909s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.145943s, 431100 KB] g=15, 154 evaluated, 38 expanded
[t=0.147845s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.147881s, 431232 KB] g=17, 164 evaluated, 41 expanded
[t=0.175069s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.175106s, 431232 KB] g=21, 309 evaluated, 79 expanded
[t=0.221471s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.221507s, 431364 KB] g=21, 557 evaluated, 146 expanded, 10 reopened
[t=0.284019s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.284061s, 431496 KB] g=30, 893 evaluated, 232 expanded, 12 reopened
[t=0.28447s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.2845s, 431496 KB] g=31, 895 evaluated, 233 expanded, 12 reopened
[t=0.29033s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.290366s, 431496 KB] g=31, 926 evaluated, 242 expanded, 12 reopened
[t=0.291886s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.291916s, 431496 KB] g=32, 934 evaluated, 244 expanded, 12 reopened
[t=0.292318s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.29235s, 431496 KB] g=33, 936 evaluated, 245 expanded, 12 reopened
[t=0.295175s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.295207s, 431496 KB] g=34, 951 evaluated, 249 expanded, 12 reopened
[t=0.306463s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.306498s, 431496 KB] g=41, 1011 evaluated, 266 expanded, 12 reopened
[t=0.308672s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.308705s, 431628 KB] g=44, 1022 evaluated, 269 expanded, 12 reopened
[t=0.309302s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.309333s, 431628 KB] g=45, 1025 evaluated, 270 expanded, 12 reopened
[t=0.309753s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.309783s, 431628 KB] g=46, 1027 evaluated, 271 expanded, 12 reopened
[t=0.309997s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.310034s, 431628 KB] g=46, 1028 evaluated, 271 expanded, 12 reopened
[t=0.310814s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.310843s, 431628 KB] g=47, 1032 evaluated, 272 expanded, 12 reopened
[t=0.311621s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.31165s, 431628 KB] g=48, 1036 evaluated, 273 expanded, 12 reopened
[t=0.312242s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.31227s, 431628 KB] g=49, 1039 evaluated, 274 expanded, 12 reopened
[t=0.312488s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.312516s, 431628 KB] g=50, 1040 evaluated, 275 expanded, 12 reopened
[t=0.313299s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.313328s, 431628 KB] g=51, 1044 evaluated, 276 expanded, 12 reopened
[t=0.318054s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.318089s, 431628 KB] g=53, 1069 evaluated, 285 expanded, 12 reopened
[t=0.321287s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.321317s, 431628 KB] g=54, 1086 evaluated, 292 expanded, 12 reopened
[t=0.321537s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.321572s, 431628 KB] g=54, 1087 evaluated, 292 expanded, 12 reopened
[t=0.322539s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.322571s, 431628 KB] g=55, 1092 evaluated, 294 expanded, 12 reopened
[t=0.322976s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.323005s, 431628 KB] g=56, 1094 evaluated, 295 expanded, 12 reopened
[t=0.323593s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.323621s, 431628 KB] g=57, 1097 evaluated, 296 expanded, 12 reopened
[t=0.324594s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.324623s, 431628 KB] g=59, 1102 evaluated, 298 expanded, 12 reopened
[t=0.325595s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.325627s, 431628 KB] g=60, 1107 evaluated, 299 expanded, 12 reopened
[t=0.328272s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.328301s, 431628 KB] g=61, 1121 evaluated, 305 expanded, 12 reopened
[t=0.329661s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.329699s, 431628 KB] g=64, 1128 evaluated, 308 expanded, 12 reopened
[t=0.330111s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.330141s, 431628 KB] g=65, 1130 evaluated, 309 expanded, 12 reopened
[t=0.330548s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.330577s, 431628 KB] g=66, 1132 evaluated, 310 expanded, 12 reopened
[t=0.330608s, 431628 KB] Solution found!
[t=0.330635s, 431628 KB] Actual search time: 0.231846s
stack a c (1)
unstack f l (1)
stack f a (1)
unstack l k (1)
put-down l (1)
unstack k j (1)
stack k e (1)
unstack f a (1)
stack f i (1)
unstack a c (1)
stack a f (1)
unstack j g (1)
put-down j (1)
unstack k e (1)
put-down k (1)
pick-up j (1)
stack j c (1)
unstack e d (1)
stack e k (1)
pick-up l (1)
stack l d (1)
unstack j c (1)
stack j e (1)
unstack l d (1)
stack l j (1)
unstack d b (1)
stack d c (1)
unstack b h (1)
stack b d (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack l j (1)
put-down l (1)
pick-up i (1)
stack i f (1)
unstack b d (1)
stack b l (1)
unstack i f (1)
stack i b (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e j (1)
pick-up k (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack i b (1)
put-down i (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.330659s, 431628 KB] Plan length: 67 step(s).
[t=0.330659s, 431628 KB] Plan cost: 67
[t=0.330659s, 431628 KB] Expanded 312 state(s).
[t=0.330659s, 431628 KB] Reopened 12 state(s).
[t=0.330659s, 431628 KB] Evaluated 1133 state(s).
[t=0.330659s, 431628 KB] Evaluations: 1133
[t=0.330659s, 431628 KB] Generated 1522 state(s).
[t=0.330659s, 431628 KB] Dead ends: 0 state(s).
[t=0.330659s, 431628 KB] Expanded until last jump: 1 state(s).
[t=0.330659s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.330659s, 431628 KB] Evaluated until last jump: 6 state(s).
[t=0.330659s, 431628 KB] Generated until last jump: 5 state(s).
[t=0.330659s, 431628 KB] Number of registered states: 1133
[t=0.330659s, 431628 KB] Int hash set load factor: 1133/2048 = 0.553223
[t=0.330659s, 431628 KB] Int hash set resizes: 11
[t=0.330659s, 431628 KB] Search time: 0.304166s
[t=0.330659s, 431628 KB] Total time: 0.330659s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p125.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6194e-05s, 424928 KB] reading input...
[t=0.00216836s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257164s, 427536 KB] Building successor generator...done!
[t=0.0260012s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260245s, 427536 KB] time for successor generation creation: 0.000165607s
[t=0.0260529s, 427536 KB] Variables: 25
[t=0.0260761s, 427536 KB] FactPairs: 182
[t=0.0260983s, 427536 KB] Bytes per state: 8
[t=0.0262915s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0999351s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.0999944s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.10002s, 430128 KB] f = 98, 1 evaluated, 0 expanded
[t=0.100048s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.100071s, 430128 KB] pruning method: none
[t=0.118952s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.119012s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119431s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.119462s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.125279s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.125313s, 431100 KB] g=9, 35 evaluated, 17 expanded
[t=0.126364s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.12641s, 431100 KB] g=11, 40 evaluated, 19 expanded
[t=0.133387s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.13342s, 431100 KB] g=16, 76 evaluated, 34 expanded
[t=0.140273s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.14031s, 431100 KB] g=18, 111 evaluated, 48 expanded
[t=0.140714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.140747s, 431100 KB] g=18, 113 evaluated, 48 expanded
[t=0.142543s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.142577s, 431100 KB] g=20, 122 evaluated, 51 expanded
[t=0.148677s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.148712s, 431100 KB] g=22, 154 evaluated, 63 expanded
[t=0.154562s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.154598s, 431100 KB] g=22, 185 evaluated, 74 expanded
[t=0.158211s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.158245s, 431100 KB] g=26, 204 evaluated, 79 expanded
[t=0.162056s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.16209s, 431232 KB] g=29, 224 evaluated, 84 expanded
[t=0.163624s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.163656s, 431232 KB] g=31, 232 evaluated, 86 expanded
[t=0.164255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.164284s, 431232 KB] g=32, 235 evaluated, 87 expanded
[t=0.166015s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.166047s, 431232 KB] g=34, 244 evaluated, 89 expanded
[t=0.167019s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.167049s, 431232 KB] g=35, 249 evaluated, 90 expanded
[t=0.169742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.169777s, 431232 KB] g=37, 263 evaluated, 93 expanded
[t=0.172066s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.172097s, 431232 KB] g=39, 275 evaluated, 97 expanded
[t=0.17307s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.1731s, 431232 KB] g=40, 280 evaluated, 98 expanded
[t=0.174266s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.174309s, 431232 KB] g=42, 286 evaluated, 100 expanded
[t=0.175655s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.175685s, 431232 KB] g=44, 293 evaluated, 102 expanded
[t=0.176087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.176119s, 431232 KB] g=44, 295 evaluated, 102 expanded
[t=0.177849s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.177884s, 431232 KB] g=46, 304 evaluated, 105 expanded
[t=0.17829s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.178319s, 431232 KB] g=46, 306 evaluated, 105 expanded
[t=0.179103s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.179132s, 431232 KB] g=47, 310 evaluated, 106 expanded
[t=0.179914s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.179946s, 431232 KB] g=49, 314 evaluated, 108 expanded
[t=0.180545s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.180574s, 431232 KB] g=50, 317 evaluated, 109 expanded
[t=0.180797s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.180824s, 431232 KB] g=51, 318 evaluated, 110 expanded
[t=0.181421s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.18145s, 431232 KB] g=53, 321 evaluated, 112 expanded
[t=0.183957s, 431232 KB] Solution found!
[t=0.183995s, 431232 KB] Actual search time: 0.0839222s
pick-up j (1)
stack j g (1)
unstack k e (1)
put-down k (1)
unstack e b (1)
stack e j (1)
unstack b d (1)
stack b e (1)
unstack d i (1)
put-down d (1)
unstack b e (1)
put-down b (1)
pick-up k (1)
stack k i (1)
unstack e j (1)
stack e k (1)
pick-up d (1)
stack d b (1)
unstack j g (1)
stack j e (1)
unstack g h (1)
put-down g (1)
unstack h l (1)
stack h g (1)
unstack d b (1)
put-down d (1)
unstack l a (1)
stack l d (1)
unstack j e (1)
stack j l (1)
unstack e k (1)
stack e b (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.184022s, 431232 KB] Plan length: 56 step(s).
[t=0.184022s, 431232 KB] Plan cost: 56
[t=0.184022s, 431232 KB] Expanded 122 state(s).
[t=0.184022s, 431232 KB] Reopened 0 state(s).
[t=0.184022s, 431232 KB] Evaluated 335 state(s).
[t=0.184022s, 431232 KB] Evaluations: 335
[t=0.184022s, 431232 KB] Generated 462 state(s).
[t=0.184022s, 431232 KB] Dead ends: 0 state(s).
[t=0.184022s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.184022s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.184022s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.184022s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.184022s, 431232 KB] Number of registered states: 335
[t=0.184022s, 431232 KB] Int hash set load factor: 335/512 = 0.654297
[t=0.184022s, 431232 KB] Int hash set resizes: 9
[t=0.184022s, 431232 KB] Search time: 0.157731s
[t=0.184022s, 431232 KB] Total time: 0.184022s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p126.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6781e-05s, 424928 KB] reading input...
[t=0.0021333s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0263344s, 427536 KB] Building successor generator...done!
[t=0.026614s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026638s, 427536 KB] time for successor generation creation: 0.000168324s
[t=0.0266673s, 427536 KB] Variables: 25
[t=0.0266906s, 427536 KB] FactPairs: 182
[t=0.0267127s, 427536 KB] Bytes per state: 8
[t=0.0269074s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993565s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0994103s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994365s, 430128 KB] f = 108, 1 evaluated, 0 expanded
[t=0.099464s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0994882s, 430128 KB] pruning method: none
[t=0.111427s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.111479s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118331s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.118373s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.120044s, 431100 KB] f = 115, 14 evaluated, 6 expanded
[t=0.120619s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.120649s, 431100 KB] g=4, 17 evaluated, 7 expanded
[t=0.146031s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.146067s, 431100 KB] g=18, 158 evaluated, 43 expanded
[t=0.148808s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.148841s, 431100 KB] g=18, 173 evaluated, 46 expanded
[t=0.151767s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.151802s, 431232 KB] g=20, 189 evaluated, 50 expanded
[t=0.155257s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.155292s, 431232 KB] g=23, 208 evaluated, 53 expanded
[t=0.156587s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.156619s, 431232 KB] g=25, 215 evaluated, 55 expanded
[t=0.159012s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.159044s, 431232 KB] g=27, 228 evaluated, 58 expanded
[t=0.199874s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.199914s, 431364 KB] g=31, 454 evaluated, 128 expanded, 3 reopened
[t=0.202465s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.202497s, 431364 KB] g=33, 468 evaluated, 131 expanded, 3 reopened
[t=0.20309s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.203121s, 431364 KB] g=34, 471 evaluated, 132 expanded, 3 reopened
[t=0.20423s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.204264s, 431364 KB] g=35, 477 evaluated, 133 expanded, 3 reopened
[t=0.204475s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.204512s, 431364 KB] g=35, 478 evaluated, 133 expanded, 3 reopened
[t=0.209435s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.20947s, 431364 KB] g=38, 505 evaluated, 139 expanded, 3 reopened
[t=0.210226s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.210256s, 431364 KB] g=39, 509 evaluated, 140 expanded, 3 reopened
[t=0.215511s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.215546s, 431364 KB] g=41, 538 evaluated, 147 expanded, 3 reopened
[t=0.216479s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.216511s, 431364 KB] g=42, 543 evaluated, 148 expanded, 3 reopened
[t=0.217259s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.217292s, 431364 KB] g=43, 547 evaluated, 149 expanded, 3 reopened
[t=0.217685s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.217714s, 431364 KB] g=44, 549 evaluated, 150 expanded, 3 reopened
[t=0.218283s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.218312s, 431364 KB] g=45, 552 evaluated, 151 expanded, 3 reopened
[t=0.219254s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.219292s, 431364 KB] g=46, 557 evaluated, 152 expanded, 3 reopened
[t=0.219871s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.2199s, 431364 KB] g=48, 560 evaluated, 154 expanded, 3 reopened
[t=0.220294s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.220324s, 431364 KB] g=49, 562 evaluated, 155 expanded, 3 reopened
[t=0.220356s, 431364 KB] Solution found!
[t=0.220383s, 431364 KB] Actual search time: 0.120891s
unstack b d (1)
put-down b (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
unstack e f (1)
stack e d (1)
unstack f j (1)
stack f e (1)
unstack j a (1)
stack j b (1)
unstack a k (1)
stack a f (1)
unstack k l (1)
stack k i (1)
unstack l g (1)
stack l j (1)
unstack g h (1)
put-down g (1)
unstack l j (1)
stack l k (1)
pick-up h (1)
stack h a (1)
unstack j b (1)
stack j c (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack l k (1)
stack l b (1)
unstack f e (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j c (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.220408s, 431364 KB] Plan length: 50 step(s).
[t=0.220408s, 431364 KB] Plan cost: 50
[t=0.220408s, 431364 KB] Expanded 157 state(s).
[t=0.220408s, 431364 KB] Reopened 3 state(s).
[t=0.220408s, 431364 KB] Evaluated 563 state(s).
[t=0.220408s, 431364 KB] Evaluations: 563
[t=0.220408s, 431364 KB] Generated 745 state(s).
[t=0.220408s, 431364 KB] Dead ends: 0 state(s).
[t=0.220408s, 431364 KB] Expanded until last jump: 6 state(s).
[t=0.220408s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.220408s, 431364 KB] Evaluated until last jump: 14 state(s).
[t=0.220408s, 431364 KB] Generated until last jump: 18 state(s).
[t=0.220408s, 431364 KB] Number of registered states: 563
[t=0.220408s, 431364 KB] Int hash set load factor: 563/1024 = 0.549805
[t=0.220408s, 431364 KB] Int hash set resizes: 10
[t=0.220408s, 431364 KB] Search time: 0.193501s
[t=0.220408s, 431364 KB] Total time: 0.220408s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p127.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6376e-05s, 424928 KB] reading input...
[t=0.00219808s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025956s, 427536 KB] Building successor generator...done!
[t=0.0262613s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262854s, 427536 KB] time for successor generation creation: 0.000165308s
[t=0.0263143s, 427536 KB] Variables: 25
[t=0.0263375s, 427536 KB] FactPairs: 182
[t=0.0263599s, 427536 KB] Bytes per state: 8
[t=0.0265554s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988591s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0989119s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989382s, 430128 KB] f = 142, 1 evaluated, 0 expanded
[t=0.0989665s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0989913s, 430128 KB] pruning method: none
[t=0.11087s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.110922s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117402s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.117445s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118048s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.118081s, 431100 KB] g=3, 6 evaluated, 3 expanded
[t=0.119728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.11976s, 431100 KB] g=4, 15 evaluated, 8 expanded
[t=0.12033s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.120361s, 431100 KB] g=5, 18 evaluated, 9 expanded
[t=0.121642s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.121673s, 431100 KB] g=7, 25 evaluated, 12 expanded
[t=0.121882s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.121911s, 431100 KB] g=7, 26 evaluated, 12 expanded
[t=0.128186s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.12822s, 431100 KB] g=15, 61 evaluated, 27 expanded
[t=0.13987s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.139908s, 431100 KB] g=17, 126 evaluated, 53 expanded
[t=0.140125s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.140155s, 431100 KB] g=18, 127 evaluated, 54 expanded
[t=0.195989s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.196032s, 431364 KB] g=18, 436 evaluated, 287 expanded, 86 reopened
[t=0.210499s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.21054s, 431364 KB] g=27, 516 evaluated, 307 expanded, 86 reopened
[t=0.211831s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.211863s, 431364 KB] g=28, 523 evaluated, 308 expanded, 86 reopened
[t=0.212437s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.212472s, 431364 KB] g=29, 526 evaluated, 309 expanded, 86 reopened
[t=0.220826s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.220863s, 431364 KB] g=30, 572 evaluated, 327 expanded, 93 reopened
[t=0.22768s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.227716s, 431364 KB] g=33, 610 evaluated, 334 expanded, 93 reopened
[t=0.230436s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.230471s, 431364 KB] g=36, 625 evaluated, 337 expanded, 93 reopened
[t=0.231212s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.231246s, 431364 KB] g=36, 629 evaluated, 337 expanded, 93 reopened
[t=0.231999s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.23203s, 431364 KB] g=37, 633 evaluated, 338 expanded, 93 reopened
[t=0.235651s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.235689s, 431364 KB] g=37, 653 evaluated, 343 expanded, 93 reopened
[t=0.236796s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.236833s, 431496 KB] g=39, 659 evaluated, 345 expanded, 93 reopened
[t=0.237583s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.237616s, 431496 KB] g=40, 663 evaluated, 346 expanded, 93 reopened
[t=0.24356s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.243597s, 431496 KB] g=39, 696 evaluated, 356 expanded, 93 reopened
[t=0.244344s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.244374s, 431496 KB] g=40, 700 evaluated, 357 expanded, 93 reopened
[t=0.244765s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.244795s, 431496 KB] g=41, 702 evaluated, 358 expanded, 93 reopened
[t=0.247981s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.248016s, 431496 KB] g=43, 719 evaluated, 363 expanded, 93 reopened
[t=0.249831s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.249862s, 431496 KB] g=45, 729 evaluated, 366 expanded, 93 reopened
[t=0.250619s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.250657s, 431496 KB] g=46, 733 evaluated, 367 expanded, 93 reopened
[t=0.25123s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.251264s, 431496 KB] g=47, 736 evaluated, 368 expanded, 93 reopened
[t=0.25291s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.252942s, 431496 KB] g=51, 745 evaluated, 372 expanded, 93 reopened
[t=0.253689s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.253723s, 431496 KB] g=53, 749 evaluated, 374 expanded, 93 reopened
[t=0.253756s, 431496 KB] Solution found!
[t=0.253784s, 431496 KB] Actual search time: 0.154789s
unstack f j (1)
put-down f (1)
unstack l c (1)
put-down l (1)
unstack c a (1)
put-down c (1)
pick-up j (1)
stack j l (1)
unstack a g (1)
stack a j (1)
unstack g h (1)
stack g a (1)
unstack h i (1)
stack h g (1)
unstack i b (1)
stack i h (1)
unstack b k (1)
stack b c (1)
unstack k e (1)
put-down k (1)
unstack i h (1)
stack i b (1)
unstack e d (1)
stack e k (1)
unstack h g (1)
stack h e (1)
unstack g a (1)
put-down g (1)
unstack h e (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack e k (1)
stack e i (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i b (1)
put-down i (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.253809s, 431496 KB] Plan length: 54 step(s).
[t=0.253809s, 431496 KB] Plan cost: 54
[t=0.253809s, 431496 KB] Expanded 376 state(s).
[t=0.253809s, 431496 KB] Reopened 93 state(s).
[t=0.253809s, 431496 KB] Evaluated 750 state(s).
[t=0.253809s, 431496 KB] Evaluations: 750
[t=0.253809s, 431496 KB] Generated 1425 state(s).
[t=0.253809s, 431496 KB] Dead ends: 0 state(s).
[t=0.253809s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.253809s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.253809s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.253809s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.253809s, 431496 KB] Number of registered states: 750
[t=0.253809s, 431496 KB] Int hash set load factor: 750/1024 = 0.732422
[t=0.253809s, 431496 KB] Int hash set resizes: 10
[t=0.253809s, 431496 KB] Search time: 0.227254s
[t=0.253809s, 431496 KB] Total time: 0.253809s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p128.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6133e-05s, 424928 KB] reading input...
[t=0.00212018s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260832s, 427536 KB] Building successor generator...done!
[t=0.026363s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263869s, 427536 KB] time for successor generation creation: 0.000167991s
[t=0.0264154s, 427536 KB] Variables: 25
[t=0.0264385s, 427536 KB] FactPairs: 182
[t=0.0264608s, 427536 KB] Bytes per state: 8
[t=0.026675s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990625s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0991137s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991399s, 430128 KB] f = 111, 1 evaluated, 0 expanded
[t=0.0991677s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0991923s, 430128 KB] pruning method: none
[t=0.111077s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.111129s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118341s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.118384s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118973s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.119006s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.121385s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.121426s, 431100 KB] g=5, 23 evaluated, 6 expanded
[t=0.141295s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.141331s, 431100 KB] g=13, 132 evaluated, 43 expanded
[t=0.146106s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.14614s, 431100 KB] g=19, 158 evaluated, 52 expanded
[t=0.211058s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.2111s, 431364 KB] g=22, 513 evaluated, 182 expanded, 3 reopened
[t=0.22152s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.221558s, 431364 KB] g=23, 570 evaluated, 197 expanded, 3 reopened
[t=0.233182s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.233217s, 431364 KB] g=24, 634 evaluated, 216 expanded, 3 reopened
[t=0.23453s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.234562s, 431364 KB] g=26, 641 evaluated, 218 expanded, 3 reopened
[t=0.236403s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.236433s, 431364 KB] g=28, 651 evaluated, 220 expanded, 3 reopened
[t=0.239007s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.23904s, 431364 KB] g=30, 665 evaluated, 222 expanded, 3 reopened
[t=0.239973s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.240002s, 431364 KB] g=31, 670 evaluated, 223 expanded, 3 reopened
[t=0.2413s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.241332s, 431364 KB] g=32, 677 evaluated, 224 expanded, 3 reopened
[t=0.241729s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.241758s, 431364 KB] g=33, 679 evaluated, 225 expanded, 3 reopened
[t=0.243972s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.244005s, 431364 KB] g=34, 691 evaluated, 227 expanded, 3 reopened
[t=0.24694s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.246976s, 431364 KB] g=36, 707 evaluated, 231 expanded, 3 reopened
[t=0.247368s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.247398s, 431364 KB] g=36, 709 evaluated, 231 expanded, 3 reopened
[t=0.247794s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.24783s, 431364 KB] g=37, 711 evaluated, 232 expanded, 3 reopened
[t=0.262256s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.262296s, 431496 KB] g=41, 790 evaluated, 249 expanded, 3 reopened
[t=0.27306s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.273096s, 431496 KB] g=41, 849 evaluated, 263 expanded, 3 reopened
[t=0.273675s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.273705s, 431496 KB] g=42, 852 evaluated, 264 expanded, 3 reopened
[t=0.27828s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.278316s, 431496 KB] g=46, 877 evaluated, 270 expanded, 3 reopened
[t=0.282363s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.282398s, 431496 KB] g=47, 899 evaluated, 275 expanded, 3 reopened
[t=0.283538s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.28357s, 431496 KB] g=49, 905 evaluated, 277 expanded, 3 reopened
[t=0.283784s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.283813s, 431496 KB] g=49, 906 evaluated, 277 expanded, 3 reopened
[t=0.284574s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.284606s, 431496 KB] g=50, 910 evaluated, 278 expanded, 3 reopened
[t=0.285556s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.285586s, 431496 KB] g=51, 915 evaluated, 279 expanded, 3 reopened
[t=0.290926s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.290964s, 431496 KB] g=54, 944 evaluated, 288 expanded, 3 reopened
[t=0.291548s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.291578s, 431496 KB] g=55, 947 evaluated, 289 expanded, 3 reopened
[t=0.292161s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.292191s, 431496 KB] g=56, 950 evaluated, 290 expanded, 3 reopened
[t=0.294054s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.294085s, 431496 KB] g=57, 960 evaluated, 294 expanded, 3 reopened
[t=0.294861s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.294897s, 431496 KB] g=59, 964 evaluated, 296 expanded, 3 reopened
[t=0.297691s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.297722s, 431496 KB] g=62, 979 evaluated, 303 expanded, 3 reopened
[t=0.298128s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.298161s, 431496 KB] g=63, 981 evaluated, 304 expanded, 3 reopened
[t=0.298194s, 431496 KB] Solution found!
[t=0.298221s, 431496 KB] Actual search time: 0.199025s
unstack c g (1)
put-down c (1)
unstack g j (1)
stack g h (1)
pick-up j (1)
stack j l (1)
unstack g h (1)
stack g k (1)
pick-up c (1)
stack c j (1)
unstack g k (1)
stack g h (1)
unstack k a (1)
put-down k (1)
unstack a b (1)
stack a k (1)
unstack b e (1)
stack b c (1)
unstack g h (1)
stack g e (1)
unstack b c (1)
put-down b (1)
unstack c j (1)
stack c b (1)
unstack g e (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f k (1)
unstack e i (1)
stack e c (1)
unstack i d (1)
stack i j (1)
unstack e c (1)
stack e d (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack c b (1)
put-down c (1)
unstack e d (1)
stack e k (1)
unstack i j (1)
stack i c (1)
pick-up d (1)
stack d b (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.298246s, 431496 KB] Plan length: 64 step(s).
[t=0.298246s, 431496 KB] Plan cost: 64
[t=0.298246s, 431496 KB] Expanded 306 state(s).
[t=0.298246s, 431496 KB] Reopened 3 state(s).
[t=0.298246s, 431496 KB] Evaluated 982 state(s).
[t=0.298246s, 431496 KB] Evaluations: 982
[t=0.298246s, 431496 KB] Generated 1345 state(s).
[t=0.298246s, 431496 KB] Dead ends: 0 state(s).
[t=0.298246s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.298246s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.298246s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.298246s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.298246s, 431496 KB] Number of registered states: 982
[t=0.298246s, 431496 KB] Int hash set load factor: 982/1024 = 0.958984
[t=0.298246s, 431496 KB] Int hash set resizes: 10
[t=0.298246s, 431496 KB] Search time: 0.271572s
[t=0.298246s, 431496 KB] Total time: 0.298246s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p129.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7182e-05s, 424928 KB] reading input...
[t=0.00231095s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261538s, 427536 KB] Building successor generator...done!
[t=0.0264331s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264567s, 427536 KB] time for successor generation creation: 0.000168227s
[t=0.0264854s, 427536 KB] Variables: 25
[t=0.0265084s, 427536 KB] FactPairs: 182
[t=0.0265311s, 427536 KB] Bytes per state: 8
[t=0.0267272s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992654s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.0993178s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993439s, 430128 KB] f = 113, 1 evaluated, 0 expanded
[t=0.0993712s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.0993949s, 430128 KB] pruning method: none
[t=0.111261s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.111314s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.117834s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118422s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.118453s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.11885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.11888s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.119635s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119666s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.119881s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.11992s, 431100 KB] g=5, 13 evaluated, 5 expanded
[t=0.123043s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.12308s, 431100 KB] g=7, 30 evaluated, 11 expanded
[t=0.125466s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.125499s, 431100 KB] g=9, 43 evaluated, 16 expanded
[t=0.125887s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.125917s, 431100 KB] g=9, 45 evaluated, 16 expanded
[t=0.130791s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.130825s, 431100 KB] g=10, 72 evaluated, 25 expanded
[t=0.135167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.135202s, 431100 KB] g=12, 96 evaluated, 34 expanded
[t=0.136666s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.1367s, 431100 KB] g=14, 104 evaluated, 37 expanded
[t=0.139436s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.13947s, 431100 KB] g=12, 119 evaluated, 43 expanded
[t=0.185272s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.18531s, 431232 KB] g=22, 374 evaluated, 132 expanded
[t=0.185888s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.185923s, 431232 KB] g=23, 377 evaluated, 133 expanded
[t=0.201261s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.201301s, 431232 KB] g=37, 462 evaluated, 157 expanded, 2 reopened
[t=0.205824s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.205858s, 431232 KB] g=37, 487 evaluated, 166 expanded, 2 reopened
[t=0.206971s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.207002s, 431232 KB] g=39, 493 evaluated, 168 expanded, 2 reopened
[t=0.207391s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.207423s, 431232 KB] g=39, 495 evaluated, 168 expanded, 2 reopened
[t=0.208177s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.208207s, 431232 KB] g=40, 499 evaluated, 170 expanded, 2 reopened
[t=0.208599s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.208629s, 431232 KB] g=41, 501 evaluated, 171 expanded, 2 reopened
[t=0.209211s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.209251s, 431232 KB] g=42, 504 evaluated, 172 expanded, 2 reopened
[t=0.209468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.209497s, 431232 KB] g=43, 505 evaluated, 173 expanded, 2 reopened
[t=0.210069s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.210099s, 431232 KB] g=44, 508 evaluated, 174 expanded, 2 reopened
[t=0.210491s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.210526s, 431364 KB] g=45, 510 evaluated, 175 expanded, 2 reopened
[t=0.213146s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.213183s, 431364 KB] g=48, 524 evaluated, 180 expanded, 2 reopened
[t=0.214648s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.214681s, 431364 KB] g=50, 532 evaluated, 182 expanded, 2 reopened
[t=0.218303s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.218338s, 431364 KB] g=53, 552 evaluated, 188 expanded, 2 reopened
[t=0.21873s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.218763s, 431364 KB] g=54, 554 evaluated, 189 expanded, 2 reopened
[t=0.22005s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.220083s, 431364 KB] g=55, 561 evaluated, 191 expanded, 2 reopened
[t=0.220477s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.220507s, 431364 KB] g=56, 563 evaluated, 192 expanded, 2 reopened
[t=0.221269s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.2213s, 431364 KB] g=58, 567 evaluated, 194 expanded, 2 reopened
[t=0.221874s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.221903s, 431364 KB] g=60, 570 evaluated, 196 expanded, 2 reopened
[t=0.224288s, 431364 KB] Solution found!
[t=0.224323s, 431364 KB] Actual search time: 0.124926s
stack g h (1)
unstack j e (1)
stack j g (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
stack b e (1)
unstack j g (1)
put-down j (1)
unstack d i (1)
stack d g (1)
pick-up j (1)
stack j i (1)
unstack b e (1)
put-down b (1)
unstack d g (1)
stack d j (1)
unstack e k (1)
stack e d (1)
unstack g h (1)
put-down g (1)
unstack k a (1)
stack k e (1)
unstack a f (1)
stack a b (1)
unstack k e (1)
stack k f (1)
unstack h l (1)
stack h a (1)
pick-up l (1)
stack l e (1)
unstack h a (1)
stack h g (1)
unstack k f (1)
stack k l (1)
unstack a b (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack l e (1)
stack l b (1)
unstack e d (1)
stack e k (1)
unstack l b (1)
put-down l (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.224349s, 431364 KB] Plan length: 63 step(s).
[t=0.224349s, 431364 KB] Plan cost: 63
[t=0.224349s, 431364 KB] Expanded 205 state(s).
[t=0.224349s, 431364 KB] Reopened 2 state(s).
[t=0.224349s, 431364 KB] Evaluated 584 state(s).
[t=0.224349s, 431364 KB] Evaluations: 584
[t=0.224349s, 431364 KB] Generated 819 state(s).
[t=0.224349s, 431364 KB] Dead ends: 0 state(s).
[t=0.224349s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.224349s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.224349s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.224349s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.224349s, 431364 KB] Number of registered states: 584
[t=0.224349s, 431364 KB] Int hash set load factor: 584/1024 = 0.570312
[t=0.224349s, 431364 KB] Int hash set resizes: 10
[t=0.224349s, 431364 KB] Search time: 0.197622s
[t=0.224349s, 431364 KB] Total time: 0.224349s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p130.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.683e-05s, 424928 KB] reading input...
[t=0.00220411s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260509s, 427536 KB] Building successor generator...done!
[t=0.0263295s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263529s, 427536 KB] time for successor generation creation: 0.000164345s
[t=0.0263814s, 427536 KB] Variables: 25
[t=0.0264045s, 427536 KB] FactPairs: 182
[t=0.0264272s, 427536 KB] Bytes per state: 8
[t=0.0266237s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099138s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.099191s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992168s, 430128 KB] f = 129, 1 evaluated, 0 expanded
[t=0.0992446s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0992696s, 430128 KB] pruning method: none
[t=0.117786s, 431100 KB] f = 130, 4 evaluated, 1 expanded
[t=0.118029s, 431100 KB] f = 131, 5 evaluated, 2 expanded
[t=0.118249s, 431100 KB] f = 134, 6 evaluated, 3 expanded
[t=0.118643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.118673s, 431100 KB] g=3, 8 evaluated, 4 expanded
[t=0.118885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.118914s, 431100 KB] g=4, 9 evaluated, 5 expanded
[t=0.119846s, 431100 KB] f = 144, 14 evaluated, 7 expanded
[t=0.120959s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.12099s, 431100 KB] g=7, 20 evaluated, 10 expanded
[t=0.124418s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.124453s, 431100 KB] g=10, 39 evaluated, 15 expanded
[t=0.13433s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.134365s, 431100 KB] g=15, 94 evaluated, 29 expanded
[t=0.135832s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.135865s, 431100 KB] g=16, 102 evaluated, 31 expanded
[t=0.136969s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.137002s, 431100 KB] g=17, 108 evaluated, 32 expanded
[t=0.142577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.142614s, 431100 KB] g=20, 139 evaluated, 39 expanded
[t=0.143539s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.14357s, 431100 KB] g=21, 144 evaluated, 40 expanded
[t=0.145026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.145068s, 431100 KB] g=22, 152 evaluated, 41 expanded
[t=0.151912s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.151951s, 431232 KB] g=22, 190 evaluated, 48 expanded
[t=0.152879s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.15291s, 431232 KB] g=23, 195 evaluated, 49 expanded
[t=0.155104s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.155137s, 431232 KB] g=26, 207 evaluated, 52 expanded
[t=0.155889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.155922s, 431232 KB] g=27, 211 evaluated, 53 expanded
[t=0.161702s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.161736s, 431232 KB] g=30, 243 evaluated, 60 expanded
[t=0.162308s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.162338s, 431232 KB] g=31, 246 evaluated, 61 expanded
[t=0.163444s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.163476s, 431232 KB] g=32, 252 evaluated, 62 expanded
[t=0.164784s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.164815s, 431232 KB] g=33, 259 evaluated, 63 expanded
[t=0.166652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.166685s, 431232 KB] g=35, 269 evaluated, 65 expanded
[t=0.167255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.167284s, 431232 KB] g=35, 272 evaluated, 65 expanded
[t=0.168037s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.168067s, 431232 KB] g=36, 276 evaluated, 66 expanded
[t=0.169725s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.16976s, 431232 KB] g=38, 285 evaluated, 68 expanded
[t=0.170332s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.170363s, 431232 KB] g=39, 288 evaluated, 69 expanded
[t=0.170572s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.170603s, 431232 KB] g=39, 289 evaluated, 69 expanded
[t=0.172241s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.172272s, 431232 KB] g=41, 298 evaluated, 71 expanded
[t=0.172843s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.172879s, 431232 KB] g=42, 301 evaluated, 72 expanded
[t=0.173287s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.17332s, 431232 KB] g=42, 303 evaluated, 72 expanded
[t=0.17389s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.173921s, 431232 KB] g=43, 306 evaluated, 73 expanded
[t=0.1752s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.175231s, 431232 KB] g=45, 313 evaluated, 75 expanded
[t=0.175806s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.175836s, 431232 KB] g=47, 316 evaluated, 77 expanded
[t=0.176043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.176071s, 431232 KB] g=47, 317 evaluated, 77 expanded
[t=0.177007s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.177039s, 431232 KB] g=49, 322 evaluated, 79 expanded
[t=0.177615s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.177645s, 431232 KB] g=48, 325 evaluated, 81 expanded
[t=0.180539s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.18057s, 431232 KB] g=51, 341 evaluated, 88 expanded
[t=0.181692s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.181725s, 431232 KB] g=53, 347 evaluated, 90 expanded
[t=0.182302s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.182332s, 431232 KB] g=55, 350 evaluated, 92 expanded
[t=0.182726s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.182758s, 431232 KB] g=56, 352 evaluated, 93 expanded
[t=0.182789s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.182814s, 431232 KB] g=57, 353 evaluated, 94 expanded
[t=0.18284s, 431232 KB] Solution found!
[t=0.182866s, 431232 KB] Actual search time: 0.0835929s
stack g a (1)
unstack f k (1)
put-down f (1)
unstack g a (1)
put-down g (1)
unstack a l (1)
stack a g (1)
unstack k j (1)
put-down k (1)
unstack l h (1)
stack l k (1)
unstack h e (1)
stack h a (1)
unstack l k (1)
put-down l (1)
unstack e b (1)
stack e j (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d k (1)
pick-up f (1)
stack f e (1)
unstack h a (1)
stack h f (1)
unstack a g (1)
stack a b (1)
unstack d k (1)
put-down d (1)
unstack h f (1)
stack h g (1)
unstack a b (1)
stack a h (1)
pick-up k (1)
stack k i (1)
unstack f e (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.182892s, 431232 KB] Plan length: 57 step(s).
[t=0.182892s, 431232 KB] Plan cost: 57
[t=0.182892s, 431232 KB] Expanded 95 state(s).
[t=0.182892s, 431232 KB] Reopened 0 state(s).
[t=0.182892s, 431232 KB] Evaluated 353 state(s).
[t=0.182892s, 431232 KB] Evaluations: 353
[t=0.182892s, 431232 KB] Generated 449 state(s).
[t=0.182892s, 431232 KB] Dead ends: 0 state(s).
[t=0.182892s, 431232 KB] Expanded until last jump: 7 state(s).
[t=0.182892s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.182892s, 431232 KB] Evaluated until last jump: 14 state(s).
[t=0.182892s, 431232 KB] Generated until last jump: 19 state(s).
[t=0.182892s, 431232 KB] Number of registered states: 353
[t=0.182892s, 431232 KB] Int hash set load factor: 353/512 = 0.689453
[t=0.182892s, 431232 KB] Int hash set resizes: 9
[t=0.182892s, 431232 KB] Search time: 0.156269s
[t=0.182892s, 431232 KB] Total time: 0.182892s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p131.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.668e-05s, 424928 KB] reading input...
[t=0.00212712s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257849s, 427536 KB] Building successor generator...done!
[t=0.0260622s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260854s, 427536 KB] time for successor generation creation: 0.000166153s
[t=0.0261138s, 427536 KB] Variables: 25
[t=0.0261364s, 427536 KB] FactPairs: 182
[t=0.0261583s, 427536 KB] Bytes per state: 8
[t=0.0263532s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981121s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.0981631s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981891s, 430128 KB] f = 77, 1 evaluated, 0 expanded
[t=0.0982165s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.0982404s, 430128 KB] pruning method: none
[t=0.116474s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.116524s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116753s, 431100 KB] f = 100, 4 evaluated, 2 expanded
[t=0.116788s, 431100 KB] f = 101, 4 evaluated, 3 expanded
[t=0.117711s, 431100 KB] f = 110, 9 evaluated, 6 expanded
[t=0.118106s, 431100 KB] f = 115, 11 evaluated, 7 expanded
[t=0.11832s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.118349s, 431100 KB] g=5, 12 evaluated, 8 expanded
[t=0.119113s, 431100 KB] f = 119, 16 evaluated, 10 expanded
[t=0.119869s, 431100 KB] f = 120, 20 evaluated, 13 expanded
[t=0.122386s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.122416s, 431100 KB] g=8, 34 evaluated, 19 expanded
[t=0.135616s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.135651s, 431100 KB] g=20, 108 evaluated, 49 expanded
[t=0.136578s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.136608s, 431100 KB] g=21, 113 evaluated, 51 expanded
[t=0.137529s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.137561s, 431100 KB] g=23, 118 evaluated, 53 expanded
[t=0.137951s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.13798s, 431100 KB] g=24, 120 evaluated, 54 expanded
[t=0.140878s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.140913s, 431100 KB] g=28, 136 evaluated, 60 expanded
[t=0.141483s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.141513s, 431100 KB] g=29, 139 evaluated, 61 expanded
[t=0.146904s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.146948s, 431100 KB] g=34, 169 evaluated, 73 expanded
[t=0.147162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.147191s, 431100 KB] g=34, 170 evaluated, 73 expanded
[t=0.147754s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.147783s, 431100 KB] g=35, 173 evaluated, 74 expanded
[t=0.159049s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.159089s, 431232 KB] g=42, 235 evaluated, 97 expanded
[t=0.159512s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.159544s, 431232 KB] g=43, 237 evaluated, 98 expanded
[t=0.174736s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.174771s, 431232 KB] g=37, 322 evaluated, 133 expanded, 2 reopened
[t=0.175516s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.175546s, 431232 KB] g=36, 326 evaluated, 135 expanded, 2 reopened
[t=0.175932s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.175961s, 431232 KB] g=37, 328 evaluated, 136 expanded, 2 reopened
[t=0.1767s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.17673s, 431232 KB] g=39, 332 evaluated, 138 expanded, 2 reopened
[t=0.177293s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.177323s, 431232 KB] g=41, 335 evaluated, 140 expanded, 2 reopened
[t=0.178431s, 431232 KB] Solution found!
[t=0.178465s, 431232 KB] Actual search time: 0.0802217s
unstack h l (1)
put-down h (1)
unstack l g (1)
put-down l (1)
pick-up j (1)
stack j l (1)
unstack g a (1)
stack g h (1)
unstack a f (1)
stack a g (1)
unstack f k (1)
put-down f (1)
unstack a g (1)
stack a k (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
pick-up f (1)
stack f j (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.178491s, 431232 KB] Plan length: 44 step(s).
[t=0.178491s, 431232 KB] Plan cost: 44
[t=0.178491s, 431232 KB] Expanded 147 state(s).
[t=0.178491s, 431232 KB] Reopened 2 state(s).
[t=0.178491s, 431232 KB] Evaluated 342 state(s).
[t=0.178491s, 431232 KB] Evaluations: 342
[t=0.178491s, 431232 KB] Generated 500 state(s).
[t=0.178491s, 431232 KB] Dead ends: 0 state(s).
[t=0.178491s, 431232 KB] Expanded until last jump: 13 state(s).
[t=0.178491s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.178491s, 431232 KB] Evaluated until last jump: 20 state(s).
[t=0.178491s, 431232 KB] Generated until last jump: 31 state(s).
[t=0.178491s, 431232 KB] Number of registered states: 342
[t=0.178491s, 431232 KB] Int hash set load factor: 342/512 = 0.667969
[t=0.178491s, 431232 KB] Int hash set resizes: 9
[t=0.178491s, 431232 KB] Search time: 0.152138s
[t=0.178491s, 431232 KB] Total time: 0.178491s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p132.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.533e-05s, 424928 KB] reading input...
[t=0.00215142s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259932s, 427536 KB] Building successor generator...done!
[t=0.0262754s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262985s, 427536 KB] time for successor generation creation: 0.000170251s
[t=0.0263274s, 427536 KB] Variables: 25
[t=0.0263501s, 427536 KB] FactPairs: 182
[t=0.0263725s, 427536 KB] Bytes per state: 8
[t=0.02657s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0989786s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.0990304s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990568s, 430128 KB] f = 106, 1 evaluated, 0 expanded
[t=0.0990845s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.0991083s, 430128 KB] pruning method: none
[t=0.111046s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.111098s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.117829s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118942s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.118973s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.119539s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.119569s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.122636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.122669s, 431100 KB] g=5, 30 evaluated, 7 expanded
[t=0.126985s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.127017s, 431100 KB] g=9, 54 evaluated, 13 expanded
[t=0.127767s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.127797s, 431100 KB] g=10, 58 evaluated, 14 expanded
[t=0.128546s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.128576s, 431100 KB] g=11, 62 evaluated, 15 expanded
[t=0.136116s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.13615s, 431100 KB] g=14, 104 evaluated, 27 expanded
[t=0.139764s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.1398s, 431100 KB] g=17, 124 evaluated, 32 expanded
[t=0.153965s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.154001s, 431100 KB] g=14, 203 evaluated, 53 expanded
[t=0.15798s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.158016s, 431232 KB] g=17, 225 evaluated, 59 expanded
[t=0.158591s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.15862s, 431232 KB] g=18, 228 evaluated, 60 expanded
[t=0.162412s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.162455s, 431232 KB] g=21, 249 evaluated, 66 expanded
[t=0.168271s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.168305s, 431232 KB] g=22, 281 evaluated, 76 expanded, 1 reopened
[t=0.169238s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.169271s, 431232 KB] g=24, 286 evaluated, 78 expanded, 1 reopened
[t=0.170384s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.170417s, 431232 KB] g=25, 292 evaluated, 79 expanded, 1 reopened
[t=0.170631s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.17066s, 431232 KB] g=26, 293 evaluated, 80 expanded, 1 reopened
[t=0.174111s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.174147s, 431232 KB] g=27, 312 evaluated, 87 expanded, 1 reopened
[t=0.174906s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.174936s, 431232 KB] g=29, 316 evaluated, 89 expanded, 1 reopened
[t=0.175679s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.175709s, 431232 KB] g=30, 320 evaluated, 90 expanded, 1 reopened
[t=0.175923s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.175952s, 431232 KB] g=31, 321 evaluated, 91 expanded, 1 reopened
[t=0.181907s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.181945s, 431232 KB] g=37, 354 evaluated, 99 expanded, 1 reopened
[t=0.182689s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.182719s, 431232 KB] g=38, 358 evaluated, 100 expanded, 1 reopened
[t=0.183288s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.183318s, 431232 KB] g=39, 361 evaluated, 101 expanded, 1 reopened
[t=0.183886s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.183917s, 431232 KB] g=40, 364 evaluated, 102 expanded, 1 reopened
[t=0.184839s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.18487s, 431232 KB] g=41, 369 evaluated, 103 expanded, 1 reopened
[t=0.185439s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.185469s, 431232 KB] g=42, 372 evaluated, 104 expanded, 1 reopened
[t=0.185689s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.185721s, 431232 KB] g=43, 373 evaluated, 105 expanded, 1 reopened
[t=0.1863s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.186334s, 431232 KB] g=44, 376 evaluated, 106 expanded, 1 reopened
[t=0.186726s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.186756s, 431232 KB] g=45, 378 evaluated, 107 expanded, 1 reopened
[t=0.18751s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.187543s, 431232 KB] g=47, 382 evaluated, 109 expanded, 1 reopened
[t=0.187574s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.187599s, 431232 KB] g=48, 383 evaluated, 110 expanded, 1 reopened
[t=0.187625s, 431232 KB] Solution found!
[t=0.187651s, 431232 KB] Actual search time: 0.0885392s
unstack i c (1)
put-down i (1)
unstack b f (1)
stack b i (1)
unstack f k (1)
stack f b (1)
unstack l e (1)
stack l d (1)
pick-up c (1)
stack c l (1)
unstack k a (1)
stack k f (1)
unstack e h (1)
stack e c (1)
unstack a g (1)
put-down a (1)
pick-up h (1)
stack h g (1)
unstack k f (1)
put-down k (1)
pick-up a (1)
stack a h (1)
unstack f b (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e c (1)
stack e b (1)
unstack c l (1)
put-down c (1)
unstack e b (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.187676s, 431232 KB] Plan length: 48 step(s).
[t=0.187676s, 431232 KB] Plan cost: 48
[t=0.187676s, 431232 KB] Expanded 111 state(s).
[t=0.187676s, 431232 KB] Reopened 1 state(s).
[t=0.187676s, 431232 KB] Evaluated 383 state(s).
[t=0.187676s, 431232 KB] Evaluations: 383
[t=0.187676s, 431232 KB] Generated 500 state(s).
[t=0.187676s, 431232 KB] Dead ends: 0 state(s).
[t=0.187676s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.187676s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.187676s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.187676s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.187676s, 431232 KB] Number of registered states: 383
[t=0.187676s, 431232 KB] Int hash set load factor: 383/512 = 0.748047
[t=0.187676s, 431232 KB] Int hash set resizes: 9
[t=0.187676s, 431232 KB] Search time: 0.161107s
[t=0.187676s, 431232 KB] Total time: 0.187676s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p133.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0105e-05s, 424928 KB] reading input...
[t=0.00217135s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261083s, 427536 KB] Building successor generator...done!
[t=0.0263873s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264114s, 427536 KB] time for successor generation creation: 0.000166795s
[t=0.0264396s, 427536 KB] Variables: 25
[t=0.0264627s, 427536 KB] FactPairs: 182
[t=0.0264847s, 427536 KB] Bytes per state: 8
[t=0.0266829s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990639s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0991177s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991442s, 430128 KB] f = 152, 1 evaluated, 0 expanded
[t=0.0991713s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.099195s, 430128 KB] pruning method: none
[t=0.117504s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.117554s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.11798s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118725s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.118756s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.120032s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.120073s, 431100 KB] g=3, 16 evaluated, 3 expanded
[t=0.120646s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.120676s, 431100 KB] g=4, 19 evaluated, 4 expanded
[t=0.123036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.123069s, 431100 KB] g=6, 32 evaluated, 6 expanded
[t=0.123284s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.123313s, 431100 KB] g=6, 33 evaluated, 6 expanded
[t=0.124236s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.124266s, 431100 KB] g=7, 38 evaluated, 7 expanded
[t=0.125728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.125761s, 431100 KB] g=9, 46 evaluated, 9 expanded
[t=0.130979s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.131013s, 431100 KB] g=11, 75 evaluated, 15 expanded
[t=0.134075s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.134111s, 431100 KB] g=13, 92 evaluated, 18 expanded
[t=0.136095s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.136128s, 431100 KB] g=15, 103 evaluated, 20 expanded
[t=0.138823s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.138859s, 431100 KB] g=17, 118 evaluated, 23 expanded
[t=0.139245s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.139274s, 431100 KB] g=17, 120 evaluated, 23 expanded
[t=0.14163s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.141667s, 431100 KB] g=20, 133 evaluated, 27 expanded
[t=0.146299s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.146335s, 431100 KB] g=21, 159 evaluated, 35 expanded
[t=0.150642s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.150676s, 431232 KB] g=23, 183 evaluated, 42 expanded
[t=0.151061s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.151094s, 431232 KB] g=23, 185 evaluated, 42 expanded
[t=0.154669s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.154704s, 431232 KB] g=26, 205 evaluated, 47 expanded
[t=0.157571s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.15761s, 431232 KB] g=29, 221 evaluated, 50 expanded
[t=0.168521s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.168556s, 431232 KB] g=25, 282 evaluated, 66 expanded
[t=0.170207s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.17024s, 431232 KB] g=27, 291 evaluated, 68 expanded
[t=0.170627s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.170659s, 431232 KB] g=27, 293 evaluated, 68 expanded
[t=0.171762s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.171792s, 431232 KB] g=29, 299 evaluated, 70 expanded
[t=0.173965s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.174001s, 431232 KB] g=28, 311 evaluated, 73 expanded
[t=0.175631s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.175662s, 431232 KB] g=30, 320 evaluated, 75 expanded
[t=0.17605s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.176082s, 431232 KB] g=31, 322 evaluated, 76 expanded
[t=0.210786s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.210825s, 431364 KB] g=38, 517 evaluated, 130 expanded
[t=0.211393s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.211423s, 431364 KB] g=39, 520 evaluated, 131 expanded
[t=0.2127s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.212733s, 431364 KB] g=40, 527 evaluated, 133 expanded
[t=0.213123s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.213156s, 431364 KB] g=41, 529 evaluated, 134 expanded
[t=0.213915s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.213948s, 431364 KB] g=43, 533 evaluated, 136 expanded
[t=0.214518s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.214548s, 431364 KB] g=45, 536 evaluated, 138 expanded
[t=0.215658s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.215688s, 431364 KB] g=48, 543 evaluated, 143 expanded
[t=0.215715s, 431364 KB] Solution found!
[t=0.215742s, 431364 KB] Actual search time: 0.116543s
unstack j h (1)
stack j e (1)
unstack h d (1)
stack h a (1)
pick-up d (1)
stack d k (1)
unstack l g (1)
put-down l (1)
unstack h a (1)
stack h g (1)
unstack d k (1)
stack d j (1)
unstack a c (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k l (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j c (1)
unstack k l (1)
stack k f (1)
unstack e i (1)
stack e j (1)
unstack i b (1)
stack i l (1)
pick-up d (1)
stack d i (1)
unstack e j (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i l (1)
stack i c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.215767s, 431364 KB] Plan length: 48 step(s).
[t=0.215767s, 431364 KB] Plan cost: 48
[t=0.215767s, 431364 KB] Expanded 144 state(s).
[t=0.215767s, 431364 KB] Reopened 0 state(s).
[t=0.215767s, 431364 KB] Evaluated 543 state(s).
[t=0.215767s, 431364 KB] Evaluations: 543
[t=0.215767s, 431364 KB] Generated 691 state(s).
[t=0.215767s, 431364 KB] Dead ends: 0 state(s).
[t=0.215767s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.215767s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.215767s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.215767s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.215767s, 431364 KB] Number of registered states: 543
[t=0.215767s, 431364 KB] Int hash set load factor: 543/1024 = 0.530273
[t=0.215767s, 431364 KB] Int hash set resizes: 10
[t=0.215767s, 431364 KB] Search time: 0.189085s
[t=0.215767s, 431364 KB] Total time: 0.215767s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p134.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6047e-05s, 424928 KB] reading input...
[t=0.00217296s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259605s, 427536 KB] Building successor generator...done!
[t=0.0262322s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262554s, 427536 KB] time for successor generation creation: 0.000162427s
[t=0.0262838s, 427536 KB] Variables: 25
[t=0.0263068s, 427536 KB] FactPairs: 182
[t=0.0263292s, 427536 KB] Bytes per state: 8
[t=0.026523s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988723s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.0989241s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989503s, 430128 KB] f = 120, 1 evaluated, 0 expanded
[t=0.0989785s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.0990027s, 430128 KB] pruning method: none
[t=0.117488s, 431100 KB] f = 144, 4 evaluated, 1 expanded
[t=0.117734s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.117765s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.119674s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.119704s, 431100 KB] g=8, 15 evaluated, 8 expanded
[t=0.121255s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.121287s, 431100 KB] g=11, 23 evaluated, 12 expanded
[t=0.121696s, 431100 KB] f = 145, 25 evaluated, 13 expanded
[t=0.122666s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.122696s, 431100 KB] g=12, 30 evaluated, 16 expanded
[t=0.125549s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.12558s, 431100 KB] g=4, 45 evaluated, 25 expanded
[t=0.126727s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.126756s, 431100 KB] g=6, 51 evaluated, 27 expanded
[t=0.132942s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.132978s, 431100 KB] g=11, 84 evaluated, 36 expanded
[t=0.139552s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.139584s, 431100 KB] g=12, 119 evaluated, 46 expanded
[t=0.142613s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.142658s, 431100 KB] g=15, 135 evaluated, 49 expanded
[t=0.144184s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.144215s, 431100 KB] g=17, 143 evaluated, 51 expanded
[t=0.155882s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.155918s, 431232 KB] g=21, 205 evaluated, 67 expanded
[t=0.158768s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.1588s, 431232 KB] g=22, 220 evaluated, 70 expanded
[t=0.162216s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.162251s, 431232 KB] g=24, 238 evaluated, 74 expanded
[t=0.167565s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.167597s, 431232 KB] g=26, 266 evaluated, 80 expanded
[t=0.178741s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.178777s, 431232 KB] g=25, 324 evaluated, 94 expanded
[t=0.267581s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.267623s, 431364 KB] g=29, 797 evaluated, 211 expanded, 3 reopened
[t=0.273475s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.273508s, 431364 KB] g=31, 828 evaluated, 218 expanded, 3 reopened
[t=0.27541s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.27544s, 431364 KB] g=32, 838 evaluated, 219 expanded, 3 reopened
[t=0.278679s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.278711s, 431364 KB] g=34, 855 evaluated, 223 expanded, 3 reopened
[t=0.378561s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.3786s, 431496 KB] g=33, 1387 evaluated, 356 expanded, 12 reopened
[t=0.386486s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.38652s, 431496 KB] g=39, 1429 evaluated, 366 expanded, 12 reopened
[t=0.387307s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.387337s, 431496 KB] g=40, 1433 evaluated, 367 expanded, 12 reopened
[t=0.396012s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.396046s, 431496 KB] g=47, 1479 evaluated, 379 expanded, 12 reopened
[t=0.396455s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.396488s, 431496 KB] g=48, 1481 evaluated, 380 expanded, 12 reopened
[t=0.397646s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.397683s, 431496 KB] g=49, 1487 evaluated, 381 expanded, 12 reopened
[t=0.398283s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.398312s, 431496 KB] g=50, 1490 evaluated, 382 expanded, 12 reopened
[t=0.410362s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.410397s, 431496 KB] g=56, 1554 evaluated, 398 expanded, 12 reopened
[t=0.413451s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.413483s, 431628 KB] g=58, 1570 evaluated, 401 expanded, 12 reopened
[t=0.414081s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.41411s, 431628 KB] g=59, 1573 evaluated, 402 expanded, 12 reopened
[t=0.415082s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.415112s, 431628 KB] g=60, 1578 evaluated, 403 expanded, 12 reopened
[t=0.416649s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.416679s, 431628 KB] g=62, 1586 evaluated, 405 expanded, 12 reopened
[t=0.416907s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.41694s, 431628 KB] g=62, 1587 evaluated, 405 expanded, 12 reopened
[t=0.418098s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.418127s, 431628 KB] g=63, 1593 evaluated, 406 expanded, 12 reopened
[t=0.419098s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.419128s, 431628 KB] g=64, 1598 evaluated, 407 expanded, 12 reopened
[t=0.425579s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.425614s, 431628 KB] g=66, 1632 evaluated, 417 expanded, 12 reopened
[t=0.427154s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.427184s, 431628 KB] g=68, 1640 evaluated, 419 expanded, 12 reopened
[t=0.427592s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.427621s, 431628 KB] g=69, 1642 evaluated, 420 expanded, 12 reopened
[t=0.428032s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.428061s, 431628 KB] g=70, 1644 evaluated, 421 expanded, 12 reopened
[t=0.428659s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.428688s, 431628 KB] g=71, 1647 evaluated, 422 expanded, 12 reopened
[t=0.428918s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.428953s, 431628 KB] g=72, 1648 evaluated, 423 expanded, 12 reopened
[t=0.429367s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.429395s, 431628 KB] g=73, 1650 evaluated, 424 expanded, 12 reopened
[t=0.429998s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.43003s, 431628 KB] g=75, 1653 evaluated, 426 expanded, 12 reopened
[t=0.43044s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.430469s, 431628 KB] g=76, 1655 evaluated, 427 expanded, 12 reopened
[t=0.4305s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.430524s, 431628 KB] g=77, 1656 evaluated, 428 expanded, 12 reopened
[t=0.43055s, 431628 KB] Solution found!
[t=0.430576s, 431628 KB] Actual search time: 0.33157s
stack c f (1)
unstack i j (1)
put-down i (1)
unstack j l (1)
put-down j (1)
unstack l k (1)
stack l i (1)
unstack k h (1)
put-down k (1)
unstack h g (1)
stack h k (1)
unstack g a (1)
stack g h (1)
unstack l i (1)
stack l j (1)
unstack a d (1)
stack a c (1)
unstack l j (1)
stack l i (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
unstack a c (1)
stack a l (1)
unstack g h (1)
put-down g (1)
unstack h k (1)
stack h a (1)
unstack c f (1)
put-down c (1)
pick-up i (1)
stack i c (1)
unstack f b (1)
stack f i (1)
unstack b e (1)
put-down b (1)
pick-up k (1)
stack k b (1)
pick-up e (1)
stack e f (1)
unstack h a (1)
stack h g (1)
unstack e f (1)
put-down e (1)
unstack f i (1)
stack f k (1)
unstack a l (1)
stack a h (1)
pick-up e (1)
stack e i (1)
unstack l d (1)
put-down l (1)
unstack e i (1)
stack e d (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.430601s, 431628 KB] Plan length: 77 step(s).
[t=0.430601s, 431628 KB] Plan cost: 77
[t=0.430601s, 431628 KB] Expanded 429 state(s).
[t=0.430601s, 431628 KB] Reopened 12 state(s).
[t=0.430601s, 431628 KB] Evaluated 1656 state(s).
[t=0.430601s, 431628 KB] Evaluations: 1656
[t=0.430601s, 431628 KB] Generated 2200 state(s).
[t=0.430601s, 431628 KB] Dead ends: 0 state(s).
[t=0.430601s, 431628 KB] Expanded until last jump: 13 state(s).
[t=0.430601s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.430601s, 431628 KB] Evaluated until last jump: 25 state(s).
[t=0.430601s, 431628 KB] Generated until last jump: 36 state(s).
[t=0.430601s, 431628 KB] Number of registered states: 1656
[t=0.430601s, 431628 KB] Int hash set load factor: 1656/2048 = 0.808594
[t=0.430601s, 431628 KB] Int hash set resizes: 11
[t=0.430601s, 431628 KB] Search time: 0.404078s
[t=0.430601s, 431628 KB] Total time: 0.430601s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p135.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7772e-05s, 424928 KB] reading input...
[t=0.0021629s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259706s, 427536 KB] Building successor generator...done!
[t=0.0262519s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262759s, 427536 KB] time for successor generation creation: 0.000169561s
[t=0.0263043s, 427536 KB] Variables: 25
[t=0.0263268s, 427536 KB] FactPairs: 182
[t=0.026349s, 427536 KB] Bytes per state: 8
[t=0.0265441s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983835s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0984363s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098463s, 430128 KB] f = 133, 1 evaluated, 0 expanded
[t=0.0984903s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0985143s, 430128 KB] pruning method: none
[t=0.1168s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.11686s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.117291s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117865s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.117895s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118464s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.118494s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.118701s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.11873s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.119475s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.119506s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.125648s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.125687s, 431100 KB] g=6, 50 evaluated, 15 expanded
[t=0.132376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.132412s, 431100 KB] g=12, 87 evaluated, 27 expanded
[t=0.134423s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.134456s, 431100 KB] g=12, 98 evaluated, 30 expanded
[t=0.135026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.135059s, 431100 KB] g=13, 101 evaluated, 31 expanded
[t=0.13634s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.136371s, 431100 KB] g=14, 108 evaluated, 32 expanded
[t=0.145743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.145782s, 431100 KB] g=17, 160 evaluated, 47 expanded
[t=0.154585s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.154622s, 431232 KB] g=16, 208 evaluated, 67 expanded, 3 reopened
[t=0.15772s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.157754s, 431232 KB] g=20, 225 evaluated, 71 expanded, 3 reopened
[t=0.159042s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.159072s, 431232 KB] g=21, 232 evaluated, 72 expanded, 3 reopened
[t=0.159467s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.159499s, 431232 KB] g=22, 234 evaluated, 73 expanded, 3 reopened
[t=0.160815s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.160855s, 431232 KB] g=23, 241 evaluated, 74 expanded, 3 reopened
[t=0.161665s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.161697s, 431232 KB] g=24, 245 evaluated, 75 expanded, 3 reopened
[t=0.163543s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.163577s, 431232 KB] g=26, 255 evaluated, 77 expanded, 3 reopened
[t=0.164169s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.164201s, 431232 KB] g=27, 258 evaluated, 78 expanded, 3 reopened
[t=0.164794s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.164829s, 431232 KB] g=28, 261 evaluated, 79 expanded, 3 reopened
[t=0.165039s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.165068s, 431232 KB] g=28, 262 evaluated, 79 expanded, 3 reopened
[t=0.166533s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.166563s, 431232 KB] g=30, 270 evaluated, 81 expanded, 3 reopened
[t=0.167492s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.167522s, 431232 KB] g=31, 275 evaluated, 82 expanded, 3 reopened
[t=0.170788s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.17082s, 431232 KB] g=32, 293 evaluated, 86 expanded, 3 reopened
[t=0.171388s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.171417s, 431232 KB] g=33, 296 evaluated, 87 expanded, 3 reopened
[t=0.181154s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.181191s, 431232 KB] g=34, 350 evaluated, 106 expanded, 3 reopened
[t=0.18265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.18268s, 431232 KB] g=36, 358 evaluated, 108 expanded, 3 reopened
[t=0.18307s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.183103s, 431232 KB] g=37, 360 evaluated, 109 expanded, 3 reopened
[t=0.183495s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.183525s, 431232 KB] g=38, 362 evaluated, 110 expanded, 3 reopened
[t=0.184095s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.184129s, 431232 KB] g=39, 365 evaluated, 111 expanded, 3 reopened
[t=0.185977s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.18601s, 431232 KB] g=41, 375 evaluated, 115 expanded, 3 reopened
[t=0.186414s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.186444s, 431232 KB] g=43, 377 evaluated, 117 expanded, 3 reopened
[t=0.186836s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.186865s, 431232 KB] g=44, 379 evaluated, 118 expanded, 3 reopened
[t=0.186898s, 431232 KB] Solution found!
[t=0.186925s, 431232 KB] Actual search time: 0.0884071s
stack f i (1)
unstack d g (1)
stack d f (1)
unstack g h (1)
put-down g (1)
pick-up e (1)
stack e d (1)
unstack h k (1)
stack h e (1)
unstack b a (1)
put-down b (1)
unstack h e (1)
stack h a (1)
unstack e d (1)
stack e b (1)
unstack d f (1)
stack d k (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack d k (1)
stack d j (1)
unstack f i (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.18695s, 431232 KB] Plan length: 45 step(s).
[t=0.18695s, 431232 KB] Plan cost: 45
[t=0.18695s, 431232 KB] Expanded 120 state(s).
[t=0.18695s, 431232 KB] Reopened 3 state(s).
[t=0.18695s, 431232 KB] Evaluated 380 state(s).
[t=0.18695s, 431232 KB] Evaluations: 380
[t=0.18695s, 431232 KB] Generated 513 state(s).
[t=0.18695s, 431232 KB] Dead ends: 0 state(s).
[t=0.18695s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.18695s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.18695s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.18695s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.18695s, 431232 KB] Number of registered states: 380
[t=0.18695s, 431232 KB] Int hash set load factor: 380/512 = 0.742188
[t=0.18695s, 431232 KB] Int hash set resizes: 9
[t=0.18695s, 431232 KB] Search time: 0.160407s
[t=0.18695s, 431232 KB] Total time: 0.18695s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p136.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.014e-05s, 424928 KB] reading input...
[t=0.00215741s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258519s, 427536 KB] Building successor generator...done!
[t=0.0261315s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261545s, 427536 KB] time for successor generation creation: 0.000168624s
[t=0.0261821s, 427536 KB] Variables: 25
[t=0.0262043s, 427536 KB] FactPairs: 182
[t=0.0262257s, 427536 KB] Bytes per state: 8
[t=0.0264205s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0976685s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.0977205s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.097746s, 430128 KB] f = 106, 1 evaluated, 0 expanded
[t=0.097773s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.097797s, 430128 KB] pruning method: none
[t=0.109535s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.109584s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.115981s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.116038s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116609s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.116642s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118084s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.118115s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.119566s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.119596s, 431100 KB] g=6, 22 evaluated, 6 expanded
[t=0.120345s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.120388s, 431100 KB] g=7, 26 evaluated, 7 expanded
[t=0.121311s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.121342s, 431100 KB] g=8, 31 evaluated, 9 expanded
[t=0.122262s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.122293s, 431100 KB] g=10, 36 evaluated, 11 expanded
[t=0.165595s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.165635s, 431232 KB] g=14, 279 evaluated, 109 expanded, 10 reopened
[t=0.167953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.167984s, 431232 KB] g=17, 292 evaluated, 112 expanded, 10 reopened
[t=0.169798s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.169831s, 431232 KB] g=19, 302 evaluated, 114 expanded, 10 reopened
[t=0.170394s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.170424s, 431232 KB] g=20, 305 evaluated, 115 expanded, 10 reopened
[t=0.171512s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.171543s, 431232 KB] g=21, 311 evaluated, 116 expanded, 10 reopened
[t=0.172652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.172685s, 431232 KB] g=23, 317 evaluated, 119 expanded, 10 reopened
[t=0.174302s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.174333s, 431232 KB] g=25, 326 evaluated, 122 expanded, 10 reopened
[t=0.174543s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.174573s, 431232 KB] g=26, 327 evaluated, 123 expanded, 10 reopened
[t=0.175488s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.175521s, 431232 KB] g=27, 332 evaluated, 125 expanded, 10 reopened
[t=0.17645s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.176482s, 431232 KB] g=29, 337 evaluated, 127 expanded, 10 reopened
[t=0.181083s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.18112s, 431232 KB] g=29, 363 evaluated, 137 expanded, 10 reopened
[t=0.18168s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.18171s, 431232 KB] g=30, 366 evaluated, 138 expanded, 10 reopened
[t=0.182267s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.1823s, 431232 KB] g=31, 369 evaluated, 139 expanded, 10 reopened
[t=0.182689s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.18272s, 431232 KB] g=32, 371 evaluated, 140 expanded, 10 reopened
[t=0.18293s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.18296s, 431232 KB] g=33, 372 evaluated, 141 expanded, 10 reopened
[t=0.183523s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.183553s, 431232 KB] g=35, 375 evaluated, 143 expanded, 10 reopened
[t=0.184121s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.184153s, 431232 KB] g=37, 378 evaluated, 145 expanded, 10 reopened
[t=0.186834s, 431232 KB] Solution found!
[t=0.186871s, 431232 KB] Actual search time: 0.0890725s
unstack j h (1)
stack j b (1)
unstack l e (1)
put-down l (1)
unstack e g (1)
stack e k (1)
unstack j b (1)
put-down j (1)
unstack b d (1)
stack b l (1)
unstack h a (1)
stack h g (1)
pick-up j (1)
stack j b (1)
unstack e k (1)
stack e d (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.186898s, 431232 KB] Plan length: 40 step(s).
[t=0.186898s, 431232 KB] Plan cost: 40
[t=0.186898s, 431232 KB] Expanded 156 state(s).
[t=0.186898s, 431232 KB] Reopened 10 state(s).
[t=0.186898s, 431232 KB] Evaluated 394 state(s).
[t=0.186898s, 431232 KB] Evaluations: 394
[t=0.186898s, 431232 KB] Generated 608 state(s).
[t=0.186898s, 431232 KB] Dead ends: 0 state(s).
[t=0.186898s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.186898s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.186898s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.186898s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.186898s, 431232 KB] Number of registered states: 394
[t=0.186898s, 431232 KB] Int hash set load factor: 394/512 = 0.769531
[t=0.186898s, 431232 KB] Int hash set resizes: 9
[t=0.186898s, 431232 KB] Search time: 0.160478s
[t=0.186898s, 431232 KB] Total time: 0.186898s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p137.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6743e-05s, 424928 KB] reading input...
[t=0.0021571s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258461s, 427536 KB] Building successor generator...done!
[t=0.0261455s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261687s, 427536 KB] time for successor generation creation: 0.000168762s
[t=0.0261972s, 427536 KB] Variables: 25
[t=0.0262199s, 427536 KB] FactPairs: 182
[t=0.026242s, 427536 KB] Bytes per state: 8
[t=0.0264361s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987425s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.0987942s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988196s, 430128 KB] f = 79, 1 evaluated, 0 expanded
[t=0.0988481s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.098872s, 430128 KB] pruning method: none
[t=0.117537s, 431100 KB] f = 80, 5 evaluated, 1 expanded
[t=0.117992s, 431100 KB] f = 83, 7 evaluated, 2 expanded
[t=0.118407s, 431100 KB] f = 85, 9 evaluated, 3 expanded
[t=0.119194s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.119224s, 431100 KB] g=4, 13 evaluated, 5 expanded
[t=0.121877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.12191s, 431100 KB] g=8, 27 evaluated, 10 expanded
[t=0.123799s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.12383s, 431100 KB] g=9, 37 evaluated, 13 expanded
[t=0.125917s, 431100 KB] f = 86, 48 evaluated, 16 expanded
[t=0.150061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.1501s, 431100 KB] g=10, 177 evaluated, 54 expanded
[t=0.15051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.15054s, 431100 KB] g=11, 179 evaluated, 55 expanded
[t=0.166114s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.166152s, 431232 KB] g=18, 262 evaluated, 77 expanded
[t=0.167494s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.167527s, 431232 KB] g=19, 269 evaluated, 79 expanded
[t=0.192527s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.192563s, 431232 KB] g=18, 402 evaluated, 116 expanded
[t=0.195225s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.195262s, 431232 KB] g=19, 416 evaluated, 120 expanded
[t=0.215222s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.215258s, 431232 KB] g=24, 522 evaluated, 152 expanded
[t=0.218865s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.218902s, 431232 KB] g=28, 541 evaluated, 158 expanded
[t=0.219311s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.219341s, 431232 KB] g=29, 543 evaluated, 159 expanded
[t=0.23557s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.235608s, 431364 KB] g=32, 629 evaluated, 195 expanded, 1 reopened
[t=0.236964s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.236994s, 431364 KB] g=35, 636 evaluated, 198 expanded, 1 reopened
[t=0.237782s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.237822s, 431364 KB] g=36, 640 evaluated, 199 expanded, 1 reopened
[t=0.238233s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.238263s, 431364 KB] g=37, 642 evaluated, 200 expanded, 1 reopened
[t=0.241314s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.241349s, 431364 KB] g=42, 658 evaluated, 209 expanded, 1 reopened
[t=0.241566s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.241595s, 431364 KB] g=42, 659 evaluated, 209 expanded, 1 reopened
[t=0.242759s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.242796s, 431364 KB] g=44, 665 evaluated, 211 expanded, 1 reopened
[t=0.243768s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.243799s, 431364 KB] g=45, 670 evaluated, 212 expanded, 1 reopened
[t=0.24402s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.244049s, 431364 KB] g=46, 671 evaluated, 213 expanded, 1 reopened
[t=0.253429s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.253463s, 431364 KB] g=47, 721 evaluated, 230 expanded, 1 reopened
[t=0.257627s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.257661s, 431364 KB] g=47, 742 evaluated, 266 expanded, 31 reopened
[t=0.258079s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.258114s, 431364 KB] g=48, 744 evaluated, 267 expanded, 31 reopened
[t=0.262262s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.262296s, 431364 KB] g=51, 766 evaluated, 273 expanded, 31 reopened
[t=0.264194s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.264225s, 431364 KB] g=52, 776 evaluated, 276 expanded, 31 reopened
[t=0.264814s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.264844s, 431364 KB] g=53, 779 evaluated, 277 expanded, 31 reopened
[t=0.265826s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.265861s, 431364 KB] g=55, 784 evaluated, 279 expanded, 31 reopened
[t=0.266084s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.266113s, 431364 KB] g=56, 785 evaluated, 280 expanded, 31 reopened
[t=0.266708s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.266738s, 431364 KB] g=58, 788 evaluated, 282 expanded, 31 reopened
[t=0.267333s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.267363s, 431364 KB] g=60, 791 evaluated, 284 expanded, 31 reopened
[t=0.268531s, 431364 KB] Solution found!
[t=0.268568s, 431364 KB] Actual search time: 0.169693s
stack a l (1)
unstack i c (1)
put-down i (1)
unstack c e (1)
stack c d (1)
pick-up i (1)
stack i c (1)
unstack e j (1)
put-down e (1)
unstack j g (1)
stack j e (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a l (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack l b (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack j e (1)
stack j f (1)
pick-up e (1)
stack e b (1)
unstack j f (1)
stack j e (1)
unstack i c (1)
stack i j (1)
unstack c d (1)
stack c i (1)
unstack d k (1)
put-down d (1)
pick-up k (1)
stack k f (1)
unstack c i (1)
put-down c (1)
unstack i j (1)
stack i c (1)
unstack j e (1)
stack j d (1)
unstack e b (1)
stack e j (1)
unstack b l (1)
stack b i (1)
unstack e j (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.268593s, 431364 KB] Plan length: 63 step(s).
[t=0.268593s, 431364 KB] Plan cost: 63
[t=0.268593s, 431364 KB] Expanded 290 state(s).
[t=0.268593s, 431364 KB] Reopened 31 state(s).
[t=0.268593s, 431364 KB] Evaluated 798 state(s).
[t=0.268593s, 431364 KB] Evaluations: 798
[t=0.268593s, 431364 KB] Generated 1211 state(s).
[t=0.268593s, 431364 KB] Dead ends: 0 state(s).
[t=0.268593s, 431364 KB] Expanded until last jump: 16 state(s).
[t=0.268593s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.268593s, 431364 KB] Evaluated until last jump: 48 state(s).
[t=0.268593s, 431364 KB] Generated until last jump: 62 state(s).
[t=0.268593s, 431364 KB] Number of registered states: 798
[t=0.268593s, 431364 KB] Int hash set load factor: 798/1024 = 0.779297
[t=0.268593s, 431364 KB] Int hash set resizes: 10
[t=0.268593s, 431364 KB] Search time: 0.242158s
[t=0.268593s, 431364 KB] Total time: 0.268593s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p138.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5557e-05s, 424928 KB] reading input...
[t=0.00218791s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260986s, 427536 KB] Building successor generator...done!
[t=0.0263757s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263996s, 427536 KB] time for successor generation creation: 0.000165047s
[t=0.0264286s, 427536 KB] Variables: 25
[t=0.0264516s, 427536 KB] FactPairs: 182
[t=0.0264741s, 427536 KB] Bytes per state: 8
[t=0.0266731s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992658s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.0993187s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993445s, 430128 KB] f = 156, 1 evaluated, 0 expanded
[t=0.0993727s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.0993978s, 430128 KB] pruning method: none
[t=0.111286s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.111337s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.119866s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.119911s, 431100 KB] g=5, 14 evaluated, 6 expanded
[t=0.120126s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.120156s, 431100 KB] g=5, 15 evaluated, 6 expanded
[t=0.120559s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.120589s, 431100 KB] g=6, 17 evaluated, 7 expanded
[t=0.121723s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.121755s, 431100 KB] g=8, 23 evaluated, 9 expanded
[t=0.12215s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.122179s, 431100 KB] g=8, 25 evaluated, 9 expanded
[t=0.138214s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.138249s, 431100 KB] g=15, 112 evaluated, 34 expanded
[t=0.152861s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.152899s, 431232 KB] g=17, 191 evaluated, 61 expanded
[t=0.207738s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.207778s, 431232 KB] g=22, 487 evaluated, 192 expanded, 16 reopened
[t=0.278064s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.278118s, 431364 KB] g=29, 869 evaluated, 289 expanded, 19 reopened
[t=0.285351s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.285387s, 431496 KB] g=32, 908 evaluated, 297 expanded, 19 reopened
[t=0.293536s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.293571s, 431496 KB] g=30, 952 evaluated, 306 expanded, 19 reopened
[t=0.498184s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.498232s, 431628 KB] g=32, 2069 evaluated, 565 expanded, 21 reopened
[t=0.503569s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.503604s, 431628 KB] g=36, 2098 evaluated, 572 expanded, 21 reopened
[t=0.564142s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.564182s, 431628 KB] g=35, 2430 evaluated, 652 expanded, 22 reopened
[t=0.56495s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.564984s, 431628 KB] g=36, 2434 evaluated, 653 expanded, 22 reopened
[t=0.565587s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.56562s, 431628 KB] g=37, 2437 evaluated, 654 expanded, 22 reopened
[t=0.566751s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.566785s, 431628 KB] g=38, 2443 evaluated, 655 expanded, 22 reopened
[t=0.567366s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.567397s, 431628 KB] g=39, 2446 evaluated, 656 expanded, 22 reopened
[t=0.572749s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.572787s, 431760 KB] g=42, 2475 evaluated, 662 expanded, 22 reopened
[t=0.575035s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.575068s, 431760 KB] g=44, 2487 evaluated, 665 expanded, 22 reopened
[t=0.575471s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.575501s, 431760 KB] g=45, 2489 evaluated, 666 expanded, 22 reopened
[t=0.577382s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.577415s, 431760 KB] g=47, 2499 evaluated, 668 expanded, 22 reopened
[t=0.578368s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.578398s, 431760 KB] g=48, 2504 evaluated, 669 expanded, 22 reopened
[t=0.579342s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.579382s, 431760 KB] g=49, 2509 evaluated, 670 expanded, 22 reopened
[t=0.583458s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.583492s, 431760 KB] g=51, 2531 evaluated, 677 expanded, 22 reopened
[t=0.584994s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.585028s, 431760 KB] g=53, 2539 evaluated, 679 expanded, 22 reopened
[t=0.588753s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.588788s, 431760 KB] g=56, 2559 evaluated, 685 expanded, 22 reopened
[t=0.600989s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.601026s, 431760 KB] g=59, 2625 evaluated, 708 expanded, 22 reopened
[t=0.601255s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.601288s, 431760 KB] g=60, 2626 evaluated, 709 expanded, 22 reopened
[t=0.601872s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.601903s, 431760 KB] g=61, 2629 evaluated, 710 expanded, 22 reopened
[t=0.602307s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.60234s, 431760 KB] g=62, 2631 evaluated, 711 expanded, 22 reopened
[t=0.602743s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.602772s, 431760 KB] g=63, 2633 evaluated, 712 expanded, 22 reopened
[t=0.60317s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.603203s, 431760 KB] g=64, 2635 evaluated, 713 expanded, 22 reopened
[t=0.603235s, 431760 KB] Solution found!
[t=0.603263s, 431760 KB] Actual search time: 0.503862s
put-down c (1)
unstack f j (1)
stack f c (1)
unstack j h (1)
put-down j (1)
unstack f c (1)
put-down f (1)
unstack g i (1)
stack g f (1)
pick-up c (1)
stack c i (1)
unstack h e (1)
stack h j (1)
unstack e l (1)
put-down e (1)
unstack l d (1)
stack l c (1)
unstack d b (1)
put-down d (1)
unstack l c (1)
stack l d (1)
unstack b k (1)
stack b c (1)
unstack g f (1)
stack g k (1)
pick-up f (1)
stack f l (1)
unstack g k (1)
put-down g (1)
unstack k a (1)
stack k e (1)
unstack h j (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f l (1)
stack f k (1)
unstack b c (1)
stack b l (1)
unstack c i (1)
put-down c (1)
pick-up j (1)
stack j b (1)
unstack f k (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.603288s, 431760 KB] Plan length: 65 step(s).
[t=0.603288s, 431760 KB] Plan cost: 65
[t=0.603288s, 431760 KB] Expanded 715 state(s).
[t=0.603288s, 431760 KB] Reopened 22 state(s).
[t=0.603288s, 431760 KB] Evaluated 2636 state(s).
[t=0.603288s, 431760 KB] Evaluations: 2636
[t=0.603288s, 431760 KB] Generated 3559 state(s).
[t=0.603288s, 431760 KB] Dead ends: 0 state(s).
[t=0.603288s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.603288s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.603288s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.603288s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.603288s, 431760 KB] Number of registered states: 2636
[t=0.603288s, 431760 KB] Int hash set load factor: 2636/4096 = 0.643555
[t=0.603288s, 431760 KB] Int hash set resizes: 12
[t=0.603288s, 431760 KB] Search time: 0.576615s
[t=0.603288s, 431760 KB] Total time: 0.603288s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p139.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.62e-05s, 424928 KB] reading input...
[t=0.00215506s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259305s, 427536 KB] Building successor generator...done!
[t=0.0262043s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262278s, 427536 KB] time for successor generation creation: 0.0001644s
[t=0.0262659s, 427536 KB] Variables: 25
[t=0.0262889s, 427536 KB] FactPairs: 182
[t=0.026311s, 427536 KB] Bytes per state: 8
[t=0.0265029s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106119s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.106173s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106199s, 430128 KB] f = 130, 1 evaluated, 0 expanded
[t=0.106226s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.106251s, 430128 KB] pruning method: none
[t=0.124959s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.125009s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.125936s, 431100 KB] f = 135, 11 evaluated, 2 expanded
[t=0.12668s, 431100 KB] f = 136, 15 evaluated, 3 expanded
[t=0.128339s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.128371s, 431100 KB] g=3, 24 evaluated, 6 expanded
[t=0.130003s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.130033s, 431100 KB] g=5, 33 evaluated, 8 expanded
[t=0.13309s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.133122s, 431100 KB] g=7, 50 evaluated, 12 expanded
[t=0.133869s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.133899s, 431100 KB] g=8, 54 evaluated, 13 expanded
[t=0.136441s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.136477s, 431100 KB] g=11, 68 evaluated, 17 expanded
[t=0.154235s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.154269s, 431100 KB] g=19, 167 evaluated, 51 expanded
[t=0.156811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.156846s, 431100 KB] g=21, 181 evaluated, 54 expanded
[t=0.161705s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.161739s, 431232 KB] g=23, 208 evaluated, 59 expanded
[t=0.164097s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.16413s, 431232 KB] g=25, 221 evaluated, 62 expanded
[t=0.177258s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.177295s, 431232 KB] g=27, 294 evaluated, 79 expanded
[t=0.246775s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.246812s, 431364 KB] g=31, 685 evaluated, 167 expanded
[t=0.249689s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.249728s, 431364 KB] g=33, 701 evaluated, 171 expanded
[t=0.251731s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.251768s, 431364 KB] g=34, 712 evaluated, 173 expanded
[t=0.254479s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.254512s, 431364 KB] g=37, 727 evaluated, 177 expanded
[t=0.2599s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.259932s, 431364 KB] g=38, 757 evaluated, 183 expanded
[t=0.318779s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.318817s, 431364 KB] g=39, 1086 evaluated, 291 expanded, 28 reopened
[t=0.319208s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.319238s, 431364 KB] g=40, 1088 evaluated, 292 expanded, 28 reopened
[t=0.321213s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.321244s, 431364 KB] g=41, 1099 evaluated, 294 expanded, 28 reopened
[t=0.322167s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.322196s, 431496 KB] g=42, 1104 evaluated, 295 expanded, 28 reopened
[t=0.330246s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.330283s, 431496 KB] g=43, 1149 evaluated, 304 expanded, 28 reopened
[t=0.333178s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.333213s, 431496 KB] g=46, 1165 evaluated, 307 expanded, 28 reopened
[t=0.343202s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.343241s, 431496 KB] g=45, 1221 evaluated, 320 expanded, 28 reopened
[t=0.343989s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.344019s, 431496 KB] g=46, 1225 evaluated, 321 expanded, 28 reopened
[t=0.347622s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.347657s, 431496 KB] g=49, 1245 evaluated, 325 expanded, 28 reopened
[t=0.348406s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.348438s, 431496 KB] g=50, 1249 evaluated, 326 expanded, 28 reopened
[t=0.350608s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.35065s, 431496 KB] g=52, 1261 evaluated, 330 expanded, 28 reopened
[t=0.352113s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.352152s, 431496 KB] g=54, 1269 evaluated, 332 expanded, 28 reopened
[t=0.352726s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.352758s, 431496 KB] g=55, 1272 evaluated, 333 expanded, 28 reopened
[t=0.353141s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.35317s, 431496 KB] g=55, 1274 evaluated, 333 expanded, 28 reopened
[t=0.353737s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.353766s, 431496 KB] g=56, 1277 evaluated, 334 expanded, 28 reopened
[t=0.355239s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.355271s, 431496 KB] g=58, 1285 evaluated, 336 expanded, 28 reopened
[t=0.364063s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.3641s, 431496 KB] g=62, 1334 evaluated, 349 expanded, 28 reopened
[t=0.364309s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.364338s, 431496 KB] g=62, 1335 evaluated, 349 expanded, 28 reopened
[t=0.365266s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.365298s, 431496 KB] g=64, 1340 evaluated, 351 expanded, 28 reopened
[t=0.36569s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.365722s, 431496 KB] g=65, 1342 evaluated, 352 expanded, 28 reopened
[t=0.366467s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.366496s, 431496 KB] g=66, 1346 evaluated, 353 expanded, 28 reopened
[t=0.367254s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.367286s, 431496 KB] g=67, 1350 evaluated, 354 expanded, 28 reopened
[t=0.368755s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.368785s, 431496 KB] g=70, 1358 evaluated, 357 expanded, 28 reopened
[t=0.369172s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.369201s, 431496 KB] g=70, 1360 evaluated, 357 expanded, 28 reopened
[t=0.372453s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.372488s, 431496 KB] g=73, 1378 evaluated, 362 expanded, 28 reopened
[t=0.374308s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.374344s, 431628 KB] g=75, 1388 evaluated, 366 expanded, 28 reopened
[t=0.375109s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.375149s, 431628 KB] g=76, 1392 evaluated, 368 expanded, 28 reopened
[t=0.375722s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.375751s, 431628 KB] g=77, 1395 evaluated, 369 expanded, 28 reopened
[t=0.376682s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.376714s, 431628 KB] g=79, 1400 evaluated, 371 expanded, 28 reopened
[t=0.377104s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.377133s, 431628 KB] g=80, 1402 evaluated, 372 expanded, 28 reopened
[t=0.377525s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.377554s, 431628 KB] g=81, 1404 evaluated, 373 expanded, 28 reopened
[t=0.377587s, 431628 KB] Solution found!
[t=0.377615s, 431628 KB] Actual search time: 0.27136s
unstack k d (1)
stack k e (1)
unstack b a (1)
stack b i (1)
unstack a g (1)
stack a b (1)
pick-up g (1)
stack g a (1)
unstack k e (1)
put-down k (1)
pick-up c (1)
stack c k (1)
unstack g a (1)
stack g d (1)
unstack e j (1)
stack e c (1)
unstack j h (1)
put-down j (1)
unstack e c (1)
stack e j (1)
unstack a b (1)
stack a g (1)
unstack h l (1)
stack h e (1)
unstack a g (1)
stack a c (1)
unstack g d (1)
stack g h (1)
unstack l f (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack a c (1)
put-down a (1)
unstack c k (1)
stack c b (1)
unstack g h (1)
stack g i (1)
pick-up f (1)
stack f k (1)
unstack h e (1)
stack h f (1)
unstack e j (1)
stack e c (1)
unstack g i (1)
put-down g (1)
pick-up j (1)
stack j e (1)
pick-up a (1)
stack a i (1)
unstack h f (1)
stack h g (1)
unstack a i (1)
stack a h (1)
unstack j e (1)
stack j i (1)
unstack e c (1)
stack e j (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack c b (1)
put-down c (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
stack b c (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.377639s, 431628 KB] Plan length: 82 step(s).
[t=0.377639s, 431628 KB] Plan cost: 82
[t=0.377639s, 431628 KB] Expanded 375 state(s).
[t=0.377639s, 431628 KB] Reopened 28 state(s).
[t=0.377639s, 431628 KB] Evaluated 1405 state(s).
[t=0.377639s, 431628 KB] Evaluations: 1405
[t=0.377639s, 431628 KB] Generated 1936 state(s).
[t=0.377639s, 431628 KB] Dead ends: 0 state(s).
[t=0.377639s, 431628 KB] Expanded until last jump: 3 state(s).
[t=0.377639s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.377639s, 431628 KB] Evaluated until last jump: 15 state(s).
[t=0.377639s, 431628 KB] Generated until last jump: 16 state(s).
[t=0.377639s, 431628 KB] Number of registered states: 1405
[t=0.377639s, 431628 KB] Int hash set load factor: 1405/2048 = 0.686035
[t=0.377639s, 431628 KB] Int hash set resizes: 11
[t=0.377639s, 431628 KB] Search time: 0.351137s
[t=0.377639s, 431628 KB] Total time: 0.377639s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p140.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5748e-05s, 424928 KB] reading input...
[t=0.00214967s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256969s, 427536 KB] Building successor generator...done!
[t=0.0259759s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259989s, 427536 KB] time for successor generation creation: 0.000167803s
[t=0.0260273s, 427536 KB] Variables: 25
[t=0.0260499s, 427536 KB] FactPairs: 182
[t=0.0260712s, 427536 KB] Bytes per state: 8
[t=0.0262667s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0976381s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.0976912s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0977171s, 430128 KB] f = 120, 1 evaluated, 0 expanded
[t=0.0977443s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.0977677s, 430128 KB] pruning method: none
[t=0.109547s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.109596s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117011s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.117055s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.119394s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119427s, 431100 KB] g=6, 21 evaluated, 7 expanded
[t=0.11999s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.12002s, 431100 KB] g=7, 24 evaluated, 8 expanded
[t=0.120225s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.120254s, 431100 KB] g=7, 25 evaluated, 8 expanded
[t=0.12172s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.121751s, 431100 KB] g=9, 33 evaluated, 11 expanded
[t=0.133641s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.133676s, 431100 KB] g=13, 100 evaluated, 33 expanded
[t=0.140242s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.140278s, 431100 KB] g=17, 137 evaluated, 42 expanded
[t=0.146116s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.146152s, 431100 KB] g=11, 170 evaluated, 50 expanded
[t=0.149534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.149567s, 431100 KB] g=14, 189 evaluated, 56 expanded
[t=0.151003s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.151033s, 431100 KB] g=16, 197 evaluated, 59 expanded
[t=0.151951s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.151983s, 431232 KB] g=17, 202 evaluated, 60 expanded
[t=0.153957s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.153991s, 431232 KB] g=19, 213 evaluated, 63 expanded
[t=0.161066s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.161099s, 431232 KB] g=21, 253 evaluated, 73 expanded
[t=0.164159s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.164194s, 431232 KB] g=24, 270 evaluated, 77 expanded
[t=0.171802s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.171838s, 431232 KB] g=26, 313 evaluated, 89 expanded
[t=0.173456s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.173489s, 431232 KB] g=28, 322 evaluated, 91 expanded
[t=0.173694s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.173733s, 431232 KB] g=28, 323 evaluated, 91 expanded
[t=0.175871s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.175901s, 431232 KB] g=30, 335 evaluated, 95 expanded
[t=0.176458s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.176489s, 431232 KB] g=30, 338 evaluated, 95 expanded
[t=0.178641s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.178673s, 431232 KB] g=33, 350 evaluated, 98 expanded
[t=0.18732s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.187357s, 431232 KB] g=35, 399 evaluated, 111 expanded
[t=0.187738s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.187767s, 431232 KB] g=35, 401 evaluated, 111 expanded
[t=0.188153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.188182s, 431232 KB] g=36, 403 evaluated, 112 expanded
[t=0.189977s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.190013s, 431232 KB] g=38, 413 evaluated, 114 expanded
[t=0.198662s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.198695s, 431364 KB] g=41, 462 evaluated, 125 expanded
[t=0.205241s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.205275s, 431364 KB] g=43, 499 evaluated, 134 expanded
[t=0.207064s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.207097s, 431364 KB] g=45, 509 evaluated, 136 expanded
[t=0.208405s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.208437s, 431364 KB] g=46, 516 evaluated, 137 expanded
[t=0.209892s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.209924s, 431364 KB] g=48, 524 evaluated, 139 expanded
[t=0.21031s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.210341s, 431364 KB] g=49, 526 evaluated, 140 expanded
[t=0.211253s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.211283s, 431364 KB] g=50, 531 evaluated, 141 expanded
[t=0.211494s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.211522s, 431364 KB] g=51, 532 evaluated, 142 expanded
[t=0.212257s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.212292s, 431364 KB] g=53, 536 evaluated, 144 expanded
[t=0.212325s, 431364 KB] Solution found!
[t=0.212351s, 431364 KB] Actual search time: 0.11458s
unstack b e (1)
put-down b (1)
unstack e c (1)
stack e i (1)
unstack c d (1)
stack c b (1)
unstack d k (1)
stack d e (1)
unstack k j (1)
stack k c (1)
unstack j a (1)
stack j d (1)
unstack a g (1)
stack a k (1)
unstack g h (1)
put-down g (1)
unstack a k (1)
put-down a (1)
pick-up f (1)
stack f k (1)
pick-up a (1)
stack a f (1)
unstack h l (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack j d (1)
stack j l (1)
unstack d e (1)
put-down d (1)
unstack e i (1)
stack e d (1)
unstack f k (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack j l (1)
stack j c (1)
unstack e d (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.212375s, 431364 KB] Plan length: 54 step(s).
[t=0.212375s, 431364 KB] Plan cost: 54
[t=0.212375s, 431364 KB] Expanded 146 state(s).
[t=0.212375s, 431364 KB] Reopened 0 state(s).
[t=0.212375s, 431364 KB] Evaluated 537 state(s).
[t=0.212375s, 431364 KB] Evaluations: 537
[t=0.212375s, 431364 KB] Generated 685 state(s).
[t=0.212375s, 431364 KB] Dead ends: 0 state(s).
[t=0.212375s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.212375s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.212375s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.212375s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.212375s, 431364 KB] Number of registered states: 537
[t=0.212375s, 431364 KB] Int hash set load factor: 537/1024 = 0.524414
[t=0.212375s, 431364 KB] Int hash set resizes: 10
[t=0.212375s, 431364 KB] Search time: 0.186109s
[t=0.212375s, 431364 KB] Total time: 0.212375s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.024382
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 6 test success: 20 of 20 (100.0%)

---------- FOLD 8/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 66 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.20711588859558105 (0.7137913107872009 vs. 0.5066754221916199), which occurred at index 49.
  _module_class,
 | avg_train_loss=0.098781 | avg_val_loss=0.093109
Epoch 2 | avg_train_loss=0.064693 | avg_val_loss=0.043628
Epoch 3 | avg_train_loss=0.040429 | avg_val_loss=0.038208
Epoch 4 | avg_train_loss=0.037099 | avg_val_loss=0.036346
Epoch 5 | avg_train_loss=0.035851 | avg_val_loss=0.035433
Epoch 6 | avg_train_loss=0.034881 | avg_val_loss=0.034354
Epoch 7 | avg_train_loss=0.034175 | avg_val_loss=0.034220
Epoch 8 | avg_train_loss=0.033475 | avg_val_loss=0.033312
Epoch 9 | avg_train_loss=0.032900 | avg_val_loss=0.032938
Epoch 10 | avg_train_loss=0.032458 | avg_val_loss=0.032096
Epoch 11 | avg_train_loss=0.031821 | avg_val_loss=0.032052
Epoch 12 | avg_train_loss=0.031265 | avg_val_loss=0.031712
Epoch 13 | avg_train_loss=0.030865 | avg_val_loss=0.031227
Epoch 14 | avg_train_loss=0.030447 | avg_val_loss=0.030821
Epoch 15 | avg_train_loss=0.029944 | avg_val_loss=0.030336
Epoch 16 | avg_train_loss=0.029709 | avg_val_loss=0.030306
Epoch 17 | avg_train_loss=0.029299 | avg_val_loss=0.030147
Epoch 18 | avg_train_loss=0.028988 | avg_val_loss=0.030244
Epoch 19 | avg_train_loss=0.028747 | avg_val_loss=0.030078
Epoch 20 | avg_train_loss=0.028217 | avg_val_loss=0.029483
Epoch 21 | avg_train_loss=0.028016 | avg_val_loss=0.029102
Epoch 22 | avg_train_loss=0.027850 | avg_val_loss=0.029199
Epoch 23 | avg_train_loss=0.027476 | avg_val_loss=0.028321
Epoch 24 | avg_train_loss=0.027147 | avg_val_loss=0.028307
Epoch 25 | avg_train_loss=0.026765 | avg_val_loss=0.027702
Epoch 26 | avg_train_loss=0.026457 | avg_val_loss=0.027443
Epoch 27 | avg_train_loss=0.026228 | avg_val_loss=0.027342
Epoch 28 | avg_train_loss=0.025862 | avg_val_loss=0.027214
Epoch 29 | avg_train_loss=0.025755 | avg_val_loss=0.026613
Epoch 30 | avg_train_loss=0.025484 | avg_val_loss=0.026763
Epoch 31 | avg_train_loss=0.025180 | avg_val_loss=0.026300
Epoch 32 | avg_train_loss=0.024983 | avg_val_loss=0.026084
Epoch 33 | avg_train_loss=0.024579 | avg_val_loss=0.025926
Epoch 34 | avg_train_loss=0.024387 | avg_val_loss=0.025670
Epoch 35 | avg_train_loss=0.024180 | avg_val_loss=0.025588
Epoch 36 | avg_train_loss=0.023977 | avg_val_loss=0.025451
Epoch 37 | avg_train_loss=0.023823 | avg_val_loss=0.025621
Epoch 38 | avg_train_loss=0.023708 | avg_val_loss=0.024946
Epoch 39 | avg_train_loss=0.023469 | avg_val_loss=0.025046
Epoch 40 | avg_train_loss=0.023280 | avg_val_loss=0.024966
Epoch 41 | avg_train_loss=0.023169 | avg_val_loss=0.024794
Epoch 42 | avg_train_loss=0.022948 | avg_val_loss=0.024572
Epoch 43 | avg_train_loss=0.022693 | avg_val_loss=0.024226
Epoch 44 | avg_train_loss=0.022638 | avg_val_loss=0.024132
Epoch 45 | avg_train_loss=0.022418 | avg_val_loss=0.024453
Epoch 46 | avg_train_loss=0.022207 | avg_val_loss=0.024505
Epoch 47 | avg_train_loss=0.022096 | avg_val_loss=0.024271
Epoch 48 | avg_train_loss=0.022009 | avg_val_loss=0.024365
Epoch 49 | avg_train_loss=0.021792 | avg_val_loss=0.024566
Epoch 50 | avg_train_loss=0.021840 | avg_val_loss=0.023782
Epoch 51 | avg_train_loss=0.021682 | avg_val_loss=0.023963
Epoch 52 | avg_train_loss=0.021518 | avg_val_loss=0.023733
Epoch 53 | avg_train_loss=0.021444 | avg_val_loss=0.023625
Epoch 54 | avg_train_loss=0.021306 | avg_val_loss=0.023906
Epoch 55 | avg_train_loss=0.021180 | avg_val_loss=0.023700
Epoch 56 | avg_train_loss=0.021036 | avg_val_loss=0.023853
Epoch 57 | avg_train_loss=0.020797 | avg_val_loss=0.023306
Epoch 58 | avg_train_loss=0.020735 | avg_val_loss=0.023834
Epoch 59 | avg_train_loss=0.020658 | avg_val_loss=0.023485
Epoch 60 | avg_train_loss=0.020442 | avg_val_loss=0.023662
Epoch 61 | avg_train_loss=0.020316 | avg_val_loss=0.023740
Epoch 62 | avg_train_loss=0.020289 | avg_val_loss=0.023200
Epoch 63 | avg_train_loss=0.020177 | avg_val_loss=0.023287
Epoch 64 | avg_train_loss=0.020029 | avg_val_loss=0.023400
Epoch 65 | avg_train_loss=0.020007 | avg_val_loss=0.023315
Epoch 66 | avg_train_loss=0.019855 | avg_val_loss=0.023453
Epoch 67 | avg_train_loss=0.019714 | avg_val_loss=0.023831
Epoch 68 | avg_train_loss=0.019665 | avg_val_loss=0.023843
Epoch 69 | avg_train_loss=0.019509 | avg_val_loss=0.023360
Epoch 70 | avg_train_loss=0.019383 | avg_val_loss=0.023211
Epoch 71 | avg_train_loss=0.019248 | avg_val_loss=0.023315
Epoch 72 | avg_train_loss=0.019220 | avg_val_loss=0.023111
Epoch 73 | avg_train_loss=0.019113 | avg_val_loss=0.023549
Epoch 74 | avg_train_loss=0.018932 | avg_val_loss=0.023330
Epoch 75 | avg_train_loss=0.018658 | avg_val_loss=0.023592
Epoch 76 | avg_train_loss=0.018686 | avg_val_loss=0.023625
Epoch 77 | avg_train_loss=0.018702 | avg_val_loss=0.023580
Epoch 78 | avg_train_loss=0.018450 | avg_val_loss=0.023609
Epoch 79 | avg_train_loss=0.018498 | avg_val_loss=0.023278
Epoch 80 | avg_train_loss=0.018278 | avg_val_loss=0.023125
Epoch 81 | avg_train_loss=0.018138 | avg_val_loss=0.023314
Epoch 82 | avg_train_loss=0.018191 | avg_val_loss=0.023825
Epoch 83 | avg_train_loss=0.017895 | avg_val_loss=0.023338
Epoch 84 | avg_train_loss=0.018072 | avg_val_loss=0.023415
Epoch 85 | avg_train_loss=0.017772 | avg_val_loss=0.023533
Epoch 86 | avg_train_loss=0.017670 | avg_val_loss=0.023089
Epoch 87 | avg_train_loss=0.017425 | avg_val_loss=0.023729
Epoch 88 | avg_train_loss=0.017411 | avg_val_loss=0.023519
Epoch 89 | avg_train_loss=0.017346 | avg_val_loss=0.023560
Epoch 90 | avg_train_loss=0.017315 | avg_val_loss=0.023047
Epoch 91 | avg_train_loss=0.017080 | avg_val_loss=0.023137
Epoch 92 | avg_train_loss=0.017212 | avg_val_loss=0.023495
Epoch 93 | avg_train_loss=0.017016 | avg_val_loss=0.023292
Epoch 94 | avg_train_loss=0.016837 | avg_val_loss=0.023837
Epoch 95 | avg_train_loss=0.016881 | avg_val_loss=0.023803
Epoch 96 | avg_train_loss=0.016686 | avg_val_loss=0.024171
Epoch 97 | avg_train_loss=0.016708 | avg_val_loss=0.023494
Epoch 98 | avg_train_loss=0.016572 | avg_val_loss=0.024054
Epoch 99 | avg_train_loss=0.016347 | avg_val_loss=0.023781
Epoch 100 | avg_train_loss=0.016405 | avg_val_loss=0.023525
Epoch 101 | avg_train_loss=0.016309 | avg_val_loss=0.024288
Epoch 102 | avg_train_loss=0.016215INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p141.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9137e-05s, 424928 KB] reading input...
[t=0.0021056s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259897s, 427536 KB] Building successor generator...done!
[t=0.026292s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263159s, 427536 KB] time for successor generation creation: 0.000189017s
[t=0.0263445s, 427536 KB] Variables: 25
[t=0.0263673s, 427536 KB] FactPairs: 182
[t=0.0263896s, 427536 KB] Bytes per state: 8
[t=0.0265859s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.10771s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.107763s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107789s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.107816s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.10784s, 430128 KB] pruning method: none
[t=0.119679s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.119731s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.126189s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.126231s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.127006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.12704s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.127248s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.127277s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.127485s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.127515s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.129147s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.129178s, 431100 KB] g=4, 18 evaluated, 5 expanded
[t=0.129384s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.129413s, 431100 KB] g=4, 19 evaluated, 5 expanded
[t=0.130155s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.130184s, 431100 KB] g=5, 23 evaluated, 6 expanded
[t=0.130946s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.130978s, 431100 KB] g=6, 27 evaluated, 7 expanded
[t=0.138846s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.13888s, 431100 KB] g=9, 71 evaluated, 20 expanded
[t=0.139448s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.139479s, 431100 KB] g=10, 74 evaluated, 21 expanded
[t=0.14538s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.145424s, 431100 KB] g=11, 107 evaluated, 29 expanded
[t=0.150284s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.150318s, 431100 KB] g=14, 134 evaluated, 35 expanded
[t=0.158535s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.15857s, 431232 KB] g=19, 180 evaluated, 45 expanded
[t=0.159862s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.159895s, 431232 KB] g=20, 187 evaluated, 47 expanded
[t=0.162237s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.162268s, 431232 KB] g=23, 200 evaluated, 50 expanded
[t=0.162656s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.162688s, 431232 KB] g=23, 202 evaluated, 50 expanded
[t=0.163269s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.163303s, 431232 KB] g=24, 205 evaluated, 51 expanded
[t=0.164582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.164612s, 431232 KB] g=25, 212 evaluated, 53 expanded
[t=0.166064s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.166094s, 431232 KB] g=26, 220 evaluated, 54 expanded
[t=0.170209s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.170242s, 431232 KB] g=29, 243 evaluated, 60 expanded
[t=0.170628s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.170658s, 431232 KB] g=29, 245 evaluated, 60 expanded
[t=0.173737s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.173773s, 431232 KB] g=30, 262 evaluated, 65 expanded
[t=0.179491s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.179527s, 431232 KB] g=34, 294 evaluated, 74 expanded
[t=0.186624s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.186658s, 431232 KB] g=32, 334 evaluated, 86 expanded
[t=0.187407s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.187441s, 431232 KB] g=33, 338 evaluated, 87 expanded
[t=0.188179s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.188209s, 431232 KB] g=34, 342 evaluated, 88 expanded
[t=0.190367s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.190407s, 431232 KB] g=36, 354 evaluated, 93 expanded
[t=0.191164s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.191196s, 431232 KB] g=37, 358 evaluated, 95 expanded
[t=0.191404s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.191433s, 431232 KB] g=37, 359 evaluated, 95 expanded
[t=0.191828s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.191858s, 431232 KB] g=39, 361 evaluated, 97 expanded
[t=0.192245s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.192277s, 431232 KB] g=40, 363 evaluated, 98 expanded
[t=0.193392s, 431232 KB] Solution found!
[t=0.19343s, 431232 KB] Actual search time: 0.0855875s
stack k d (1)
unstack f a (1)
stack f i (1)
unstack a h (1)
stack a k (1)
unstack g b (1)
put-down g (1)
unstack h j (1)
stack h f (1)
unstack b e (1)
put-down b (1)
pick-up j (1)
stack j b (1)
unstack h f (1)
put-down h (1)
unstack f i (1)
stack f e (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k d (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.193457s, 431232 KB] Plan length: 43 step(s).
[t=0.193457s, 431232 KB] Plan cost: 43
[t=0.193457s, 431232 KB] Expanded 105 state(s).
[t=0.193457s, 431232 KB] Reopened 0 state(s).
[t=0.193457s, 431232 KB] Evaluated 370 state(s).
[t=0.193457s, 431232 KB] Evaluations: 370
[t=0.193457s, 431232 KB] Generated 481 state(s).
[t=0.193457s, 431232 KB] Dead ends: 0 state(s).
[t=0.193457s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.193457s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.193457s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.193457s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.193457s, 431232 KB] Number of registered states: 370
[t=0.193457s, 431232 KB] Int hash set load factor: 370/512 = 0.722656
[t=0.193457s, 431232 KB] Int hash set resizes: 9
[t=0.193457s, 431232 KB] Search time: 0.166872s
[t=0.193457s, 431232 KB] Total time: 0.193457s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p142.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5899e-05s, 424928 KB] reading input...
[t=0.00214087s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258969s, 427536 KB] Building successor generator...done!
[t=0.026176s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261993s, 427536 KB] time for successor generation creation: 0.000166646s
[t=0.0262278s, 427536 KB] Variables: 25
[t=0.0262507s, 427536 KB] FactPairs: 182
[t=0.0262729s, 427536 KB] Bytes per state: 8
[t=0.0264645s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984916s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.098544s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985699s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0985971s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.098621s, 430128 KB] pruning method: none
[t=0.117128s, 431100 KB] f = 141, 4 evaluated, 1 expanded
[t=0.117366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.117397s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.121031s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.121064s, 431100 KB] g=6, 25 evaluated, 8 expanded
[t=0.121455s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.121485s, 431100 KB] g=7, 27 evaluated, 9 expanded
[t=0.123329s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.123362s, 431100 KB] g=10, 37 evaluated, 13 expanded
[t=0.133253s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.133289s, 431100 KB] g=17, 92 evaluated, 33 expanded
[t=0.133864s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.133894s, 431100 KB] g=18, 95 evaluated, 34 expanded
[t=0.134466s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.134499s, 431100 KB] g=19, 98 evaluated, 35 expanded
[t=0.139225s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.13926s, 431100 KB] g=23, 124 evaluated, 42 expanded
[t=0.13983s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.13986s, 431100 KB] g=24, 127 evaluated, 43 expanded
[t=0.140802s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.140834s, 431100 KB] g=26, 132 evaluated, 45 expanded
[t=0.141401s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.141431s, 431100 KB] g=27, 135 evaluated, 46 expanded
[t=0.142364s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.142396s, 431100 KB] g=29, 140 evaluated, 48 expanded
[t=0.143524s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.143556s, 431100 KB] g=31, 146 evaluated, 50 expanded
[t=0.143949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.143978s, 431100 KB] g=32, 148 evaluated, 51 expanded
[t=0.14527s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.145303s, 431100 KB] g=35, 155 evaluated, 54 expanded
[t=0.145872s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.145902s, 431100 KB] g=36, 158 evaluated, 55 expanded
[t=0.146474s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.146504s, 431100 KB] g=37, 161 evaluated, 56 expanded
[t=0.147448s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.14748s, 431100 KB] g=39, 166 evaluated, 58 expanded
[t=0.147871s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.1479s, 431100 KB] g=40, 168 evaluated, 59 expanded
[t=0.148658s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.148694s, 431232 KB] g=42, 172 evaluated, 61 expanded
[t=0.148904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.148933s, 431232 KB] g=42, 173 evaluated, 61 expanded
[t=0.14987s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.149899s, 431232 KB] g=44, 178 evaluated, 63 expanded
[t=0.151755s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.151788s, 431232 KB] g=46, 188 evaluated, 69 expanded
[t=0.152179s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.152209s, 431232 KB] g=47, 190 evaluated, 70 expanded
[t=0.152422s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.152451s, 431232 KB] g=48, 191 evaluated, 71 expanded
[t=0.152843s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.152872s, 431232 KB] g=49, 193 evaluated, 72 expanded
[t=0.154181s, 431232 KB] Solution found!
[t=0.154214s, 431232 KB] Actual search time: 0.0555897s
unstack b d (1)
put-down b (1)
unstack j g (1)
stack j b (1)
unstack g f (1)
stack g l (1)
pick-up f (1)
stack f d (1)
unstack j b (1)
stack j f (1)
unstack g l (1)
put-down g (1)
unstack l e (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack e a (1)
stack e b (1)
unstack j f (1)
stack j e (1)
unstack a k (1)
stack a f (1)
unstack k h (1)
stack k j (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j d (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.15424s, 431232 KB] Plan length: 52 step(s).
[t=0.15424s, 431232 KB] Plan cost: 52
[t=0.15424s, 431232 KB] Expanded 80 state(s).
[t=0.15424s, 431232 KB] Reopened 0 state(s).
[t=0.15424s, 431232 KB] Evaluated 201 state(s).
[t=0.15424s, 431232 KB] Evaluations: 201
[t=0.15424s, 431232 KB] Generated 284 state(s).
[t=0.15424s, 431232 KB] Dead ends: 0 state(s).
[t=0.15424s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.15424s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.15424s, 431232 KB] Evaluated until last jump: 4 state(s).
[t=0.15424s, 431232 KB] Generated until last jump: 3 state(s).
[t=0.15424s, 431232 KB] Number of registered states: 201
[t=0.15424s, 431232 KB] Int hash set load factor: 201/256 = 0.785156
[t=0.15424s, 431232 KB] Int hash set resizes: 8
[t=0.15424s, 431232 KB] Search time: 0.127777s
[t=0.15424s, 431232 KB] Total time: 0.15424s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p143.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5892e-05s, 424928 KB] reading input...
[t=0.00225205s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026051s, 427536 KB] Building successor generator...done!
[t=0.0263286s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263519s, 427536 KB] time for successor generation creation: 0.000168732s
[t=0.0263801s, 427536 KB] Variables: 25
[t=0.026423s, 427536 KB] FactPairs: 182
[t=0.0264453s, 427536 KB] Bytes per state: 8
[t=0.0266422s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990525s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0991039s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991296s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.099157s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0991811s, 430128 KB] pruning method: none
[t=0.117479s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.11754s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.119127s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.119718s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.119748s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.120712s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.120741s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.124128s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.124161s, 431100 KB] g=7, 37 evaluated, 9 expanded
[t=0.124376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.124404s, 431100 KB] g=7, 38 evaluated, 9 expanded
[t=0.12462s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.124648s, 431100 KB] g=7, 39 evaluated, 9 expanded
[t=0.124862s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.12489s, 431100 KB] g=7, 40 evaluated, 9 expanded
[t=0.127352s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.127385s, 431100 KB] g=8, 53 evaluated, 12 expanded
[t=0.129281s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.129315s, 431100 KB] g=10, 63 evaluated, 14 expanded
[t=0.130097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.130126s, 431100 KB] g=11, 67 evaluated, 15 expanded
[t=0.131284s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.131315s, 431100 KB] g=12, 73 evaluated, 16 expanded
[t=0.133024s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.133056s, 431100 KB] g=13, 82 evaluated, 18 expanded
[t=0.14859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.148627s, 431100 KB] g=16, 165 evaluated, 37 expanded
[t=0.21044s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.210477s, 431232 KB] g=21, 495 evaluated, 120 expanded
[t=0.215039s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.215075s, 431232 KB] g=23, 519 evaluated, 126 expanded
[t=0.215667s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.215703s, 431232 KB] g=24, 522 evaluated, 127 expanded
[t=0.217601s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.217634s, 431232 KB] g=26, 532 evaluated, 129 expanded
[t=0.218222s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.218254s, 431232 KB] g=27, 535 evaluated, 130 expanded
[t=0.220354s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.22039s, 431232 KB] g=29, 546 evaluated, 134 expanded
[t=0.222278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.222315s, 431232 KB] g=32, 556 evaluated, 137 expanded
[t=0.222531s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.22256s, 431232 KB] g=32, 557 evaluated, 137 expanded
[t=0.222774s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.222802s, 431232 KB] g=32, 558 evaluated, 137 expanded
[t=0.227512s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.227547s, 431364 KB] g=37, 583 evaluated, 145 expanded
[t=0.228141s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.228171s, 431364 KB] g=39, 586 evaluated, 147 expanded
[t=0.228388s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.228417s, 431364 KB] g=40, 587 evaluated, 148 expanded
[t=0.230323s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.230359s, 431364 KB] g=45, 597 evaluated, 153 expanded
[t=0.230951s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.23098s, 431364 KB] g=46, 600 evaluated, 154 expanded
[t=0.231385s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.231414s, 431364 KB] g=47, 602 evaluated, 155 expanded
[t=0.231629s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.231657s, 431364 KB] g=47, 603 evaluated, 155 expanded
[t=0.239333s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.239367s, 431364 KB] g=52, 644 evaluated, 170 expanded
[t=0.239772s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.239802s, 431364 KB] g=53, 646 evaluated, 171 expanded
[t=0.240581s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.240619s, 431364 KB] g=55, 650 evaluated, 173 expanded
[t=0.240837s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.240866s, 431364 KB] g=55, 651 evaluated, 173 expanded
[t=0.246709s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.246745s, 431364 KB] g=57, 682 evaluated, 187 expanded
[t=0.246968s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.246998s, 431364 KB] g=58, 683 evaluated, 188 expanded
[t=0.247404s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.247433s, 431364 KB] g=59, 685 evaluated, 189 expanded
[t=0.247651s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.247679s, 431364 KB] g=60, 686 evaluated, 190 expanded
[t=0.24808s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.248109s, 431364 KB] g=61, 688 evaluated, 191 expanded
[t=0.249268s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.249298s, 431364 KB] g=64, 695 evaluated, 197 expanded
[t=0.249324s, 431364 KB] Solution found!
[t=0.249351s, 431364 KB] Actual search time: 0.150166s
unstack d b (1)
put-down d (1)
unstack b f (1)
stack b a (1)
unstack f l (1)
put-down f (1)
pick-up d (1)
stack d b (1)
unstack h g (1)
stack h e (1)
unstack g i (1)
stack g h (1)
unstack l j (1)
stack l f (1)
pick-up j (1)
stack j i (1)
unstack d b (1)
stack d j (1)
unstack b a (1)
stack b d (1)
unstack l f (1)
stack l b (1)
unstack g h (1)
put-down g (1)
pick-up f (1)
stack f l (1)
unstack h e (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f l (1)
stack f k (1)
pick-up e (1)
stack e l (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b e (1)
unstack d j (1)
stack d l (1)
unstack b e (1)
put-down b (1)
unstack j i (1)
stack j e (1)
pick-up b (1)
stack b i (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.249376s, 431364 KB] Plan length: 64 step(s).
[t=0.249376s, 431364 KB] Plan cost: 64
[t=0.249376s, 431364 KB] Expanded 198 state(s).
[t=0.249376s, 431364 KB] Reopened 0 state(s).
[t=0.249376s, 431364 KB] Evaluated 695 state(s).
[t=0.249376s, 431364 KB] Evaluations: 695
[t=0.249376s, 431364 KB] Generated 911 state(s).
[t=0.249376s, 431364 KB] Dead ends: 0 state(s).
[t=0.249376s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.249376s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.249376s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.249376s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.249376s, 431364 KB] Number of registered states: 695
[t=0.249376s, 431364 KB] Int hash set load factor: 695/1024 = 0.678711
[t=0.249376s, 431364 KB] Int hash set resizes: 10
[t=0.249376s, 431364 KB] Search time: 0.222734s
[t=0.249376s, 431364 KB] Total time: 0.249376s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p144.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.020s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6683e-05s, 424928 KB] reading input...
[t=0.00219378s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257472s, 427536 KB] Building successor generator...done!
[t=0.026028s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260515s, 427536 KB] time for successor generation creation: 0.000168342s
[t=0.0260806s, 427536 KB] Variables: 25
[t=0.0261036s, 427536 KB] FactPairs: 182
[t=0.0261256s, 427536 KB] Bytes per state: 8
[t=0.02632s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977697s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.097822s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978473s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0978842s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0979085s, 430128 KB] pruning method: none
[t=0.116451s, 431100 KB] f = 146, 5 evaluated, 1 expanded
[t=0.116691s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.116722s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118571s, 431100 KB] f = 147, 16 evaluated, 4 expanded
[t=0.118796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.118826s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.119037s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.119067s, 431100 KB] g=4, 18 evaluated, 5 expanded
[t=0.119462s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.119492s, 431100 KB] g=5, 20 evaluated, 6 expanded
[t=0.121134s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.121167s, 431100 KB] g=6, 29 evaluated, 9 expanded
[t=0.121919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.12195s, 431100 KB] g=8, 33 evaluated, 11 expanded
[t=0.13304s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.133076s, 431100 KB] g=20, 95 evaluated, 32 expanded
[t=0.134186s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.134219s, 431100 KB] g=22, 101 evaluated, 34 expanded
[t=0.135137s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.135168s, 431100 KB] g=23, 106 evaluated, 35 expanded
[t=0.138765s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.1388s, 431100 KB] g=26, 126 evaluated, 41 expanded
[t=0.13901s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.139039s, 431100 KB] g=26, 127 evaluated, 41 expanded
[t=0.139439s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.139472s, 431100 KB] g=27, 129 evaluated, 42 expanded
[t=0.13968s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.139709s, 431100 KB] g=27, 130 evaluated, 42 expanded
[t=0.147573s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.14761s, 431100 KB] g=31, 174 evaluated, 51 expanded
[t=0.147996s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.148032s, 431100 KB] g=31, 176 evaluated, 51 expanded
[t=0.148249s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.148279s, 431100 KB] g=32, 177 evaluated, 52 expanded
[t=0.152614s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.152648s, 431232 KB] g=36, 201 evaluated, 57 expanded
[t=0.154647s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.154682s, 431232 KB] g=38, 212 evaluated, 59 expanded
[t=0.15794s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.157974s, 431232 KB] g=40, 230 evaluated, 63 expanded
[t=0.158184s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.158213s, 431232 KB] g=40, 231 evaluated, 63 expanded
[t=0.160027s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.160062s, 431232 KB] g=42, 241 evaluated, 65 expanded
[t=0.162414s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.162447s, 431232 KB] g=44, 254 evaluated, 68 expanded
[t=0.169962s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.169999s, 431232 KB] g=48, 296 evaluated, 76 expanded
[t=0.171457s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.171489s, 431232 KB] g=49, 304 evaluated, 78 expanded
[t=0.173831s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.173864s, 431232 KB] g=51, 317 evaluated, 80 expanded
[t=0.174074s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.174103s, 431232 KB] g=51, 318 evaluated, 80 expanded
[t=0.17467s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.174701s, 431232 KB] g=52, 321 evaluated, 81 expanded
[t=0.175797s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.17583s, 431232 KB] g=53, 327 evaluated, 82 expanded
[t=0.177112s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.177148s, 431232 KB] g=54, 334 evaluated, 83 expanded
[t=0.177891s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.177922s, 431232 KB] g=55, 338 evaluated, 84 expanded
[t=0.178841s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.178881s, 431232 KB] g=57, 343 evaluated, 86 expanded
[t=0.179622s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.179653s, 431232 KB] g=58, 347 evaluated, 87 expanded
[t=0.182357s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.18239s, 431232 KB] g=61, 362 evaluated, 91 expanded
[t=0.182961s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.182993s, 431232 KB] g=62, 365 evaluated, 92 expanded
[t=0.183209s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.183238s, 431232 KB] g=63, 366 evaluated, 93 expanded
[t=0.183806s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.183836s, 431232 KB] g=64, 369 evaluated, 94 expanded
[t=0.184049s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.184078s, 431232 KB] g=65, 370 evaluated, 95 expanded
[t=0.184289s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.184318s, 431232 KB] g=66, 371 evaluated, 96 expanded
[t=0.18471s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.18474s, 431232 KB] g=67, 373 evaluated, 97 expanded
[t=0.184772s, 431232 KB] Solution found!
[t=0.184799s, 431232 KB] Actual search time: 0.0868866s
unstack i c (1)
stack i d (1)
pick-up c (1)
stack c i (1)
unstack k b (1)
put-down k (1)
pick-up b (1)
stack b j (1)
unstack c i (1)
stack c k (1)
unstack b j (1)
stack b c (1)
unstack i d (1)
put-down i (1)
unstack j a (1)
put-down j (1)
unstack a l (1)
stack a i (1)
pick-up d (1)
stack d j (1)
unstack l e (1)
stack l d (1)
unstack e h (1)
stack e l (1)
unstack h f (1)
put-down h (1)
unstack e l (1)
put-down e (1)
unstack f g (1)
stack f l (1)
pick-up h (1)
stack h g (1)
unstack b c (1)
put-down b (1)
unstack c k (1)
stack c b (1)
pick-up k (1)
stack k c (1)
unstack a i (1)
stack a h (1)
unstack k c (1)
stack k e (1)
unstack f l (1)
stack f k (1)
unstack l d (1)
put-down l (1)
unstack f k (1)
stack f a (1)
unstack d j (1)
stack d l (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
stack c i (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.184824s, 431232 KB] Plan length: 68 step(s).
[t=0.184824s, 431232 KB] Plan cost: 68
[t=0.184824s, 431232 KB] Expanded 99 state(s).
[t=0.184824s, 431232 KB] Reopened 0 state(s).
[t=0.184824s, 431232 KB] Evaluated 374 state(s).
[t=0.184824s, 431232 KB] Evaluations: 374
[t=0.184824s, 431232 KB] Generated 472 state(s).
[t=0.184824s, 431232 KB] Dead ends: 0 state(s).
[t=0.184824s, 431232 KB] Expanded until last jump: 4 state(s).
[t=0.184824s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.184824s, 431232 KB] Evaluated until last jump: 16 state(s).
[t=0.184824s, 431232 KB] Generated until last jump: 18 state(s).
[t=0.184824s, 431232 KB] Number of registered states: 374
[t=0.184824s, 431232 KB] Int hash set load factor: 374/512 = 0.730469
[t=0.184824s, 431232 KB] Int hash set resizes: 9
[t=0.184824s, 431232 KB] Search time: 0.158504s
[t=0.184824s, 431232 KB] Total time: 0.184824s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p145.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6667e-05s, 424928 KB] reading input...
[t=0.00219621s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261113s, 427536 KB] Building successor generator...done!
[t=0.0263858s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264099s, 427536 KB] time for successor generation creation: 0.000161867s
[t=0.0264395s, 427536 KB] Variables: 25
[t=0.0264628s, 427536 KB] FactPairs: 182
[t=0.0264851s, 427536 KB] Bytes per state: 8
[t=0.0266812s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990803s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0991426s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991688s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0991965s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0992205s, 430128 KB] pruning method: none
[t=0.117566s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.117616s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11802s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.118051s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.118263s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.118292s, 431100 KB] g=3, 6 evaluated, 3 expanded
[t=0.11904s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.11907s, 431100 KB] g=5, 10 evaluated, 5 expanded
[t=0.11928s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.119309s, 431100 KB] g=6, 11 evaluated, 6 expanded
[t=0.119695s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.119724s, 431100 KB] g=7, 13 evaluated, 7 expanded
[t=0.1221s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.122133s, 431100 KB] g=12, 26 evaluated, 13 expanded
[t=0.122883s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.122913s, 431100 KB] g=14, 30 evaluated, 15 expanded
[t=0.12581s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.125843s, 431100 KB] g=19, 46 evaluated, 21 expanded
[t=0.130879s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.130911s, 431100 KB] g=20, 74 evaluated, 31 expanded
[t=0.177378s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.177415s, 431232 KB] g=25, 334 evaluated, 114 expanded
[t=0.179416s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.179446s, 431232 KB] g=27, 345 evaluated, 118 expanded
[t=0.192917s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.192953s, 431232 KB] g=28, 420 evaluated, 145 expanded
[t=0.219231s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.219267s, 431232 KB] g=30, 565 evaluated, 238 expanded, 44 reopened
[t=0.22091s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.220941s, 431232 KB] g=32, 574 evaluated, 241 expanded, 44 reopened
[t=0.240437s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.240472s, 431364 KB] g=42, 683 evaluated, 271 expanded, 44 reopened
[t=0.242117s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.242149s, 431364 KB] g=44, 692 evaluated, 273 expanded, 44 reopened
[t=0.242533s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.242562s, 431364 KB] g=44, 694 evaluated, 273 expanded, 44 reopened
[t=0.246347s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.246382s, 431364 KB] g=46, 715 evaluated, 279 expanded, 44 reopened
[t=0.249624s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.249659s, 431364 KB] g=49, 733 evaluated, 284 expanded, 44 reopened
[t=0.249872s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.249901s, 431364 KB] g=50, 734 evaluated, 285 expanded, 44 reopened
[t=0.251182s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.251212s, 431364 KB] g=51, 741 evaluated, 287 expanded, 44 reopened
[t=0.251423s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.251452s, 431364 KB] g=52, 742 evaluated, 288 expanded, 44 reopened
[t=0.255611s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.255645s, 431364 KB] g=53, 765 evaluated, 297 expanded, 45 reopened
[t=0.257477s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.257512s, 431364 KB] g=55, 775 evaluated, 300 expanded, 45 reopened
[t=0.258258s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.25829s, 431364 KB] g=56, 779 evaluated, 301 expanded, 45 reopened
[t=0.258682s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.258711s, 431364 KB] g=57, 781 evaluated, 302 expanded, 45 reopened
[t=0.259097s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.259125s, 431364 KB] g=57, 783 evaluated, 302 expanded, 45 reopened
[t=0.259331s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.259359s, 431364 KB] g=57, 784 evaluated, 302 expanded, 45 reopened
[t=0.264736s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.264775s, 431364 KB] g=62, 814 evaluated, 311 expanded, 45 reopened
[t=0.265364s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.265396s, 431364 KB] g=63, 817 evaluated, 312 expanded, 45 reopened
[t=0.266858s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.266888s, 431364 KB] g=65, 825 evaluated, 315 expanded, 45 reopened
[t=0.26728s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.267309s, 431364 KB] g=67, 827 evaluated, 317 expanded, 45 reopened
[t=0.267879s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.267908s, 431364 KB] g=69, 830 evaluated, 319 expanded, 45 reopened
[t=0.268297s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.268326s, 431364 KB] g=70, 832 evaluated, 320 expanded, 45 reopened
[t=0.269457s, 431364 KB] Solution found!
[t=0.269492s, 431364 KB] Actual search time: 0.17027s
stack c e (1)
unstack d b (1)
stack d c (1)
unstack b i (1)
put-down b (1)
unstack d c (1)
stack d i (1)
pick-up b (1)
stack b c (1)
unstack d i (1)
put-down d (1)
unstack i a (1)
stack i b (1)
unstack a h (1)
stack a i (1)
unstack h g (1)
stack h a (1)
unstack g k (1)
stack g h (1)
unstack k l (1)
put-down k (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j d (1)
pick-up k (1)
stack k l (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a i (1)
stack a k (1)
unstack i b (1)
stack i h (1)
unstack b c (1)
stack b j (1)
unstack i h (1)
stack i b (1)
unstack c e (1)
put-down c (1)
unstack e f (1)
stack e i (1)
pick-up c (1)
stack c e (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack c e (1)
put-down c (1)
unstack k l (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack i b (1)
stack i c (1)
unstack b j (1)
stack b i (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.269519s, 431364 KB] Plan length: 73 step(s).
[t=0.269519s, 431364 KB] Plan cost: 73
[t=0.269519s, 431364 KB] Expanded 327 state(s).
[t=0.269519s, 431364 KB] Reopened 45 state(s).
[t=0.269519s, 431364 KB] Evaluated 839 state(s).
[t=0.269519s, 431364 KB] Evaluations: 839
[t=0.269519s, 431364 KB] Generated 1329 state(s).
[t=0.269519s, 431364 KB] Dead ends: 0 state(s).
[t=0.269519s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.269519s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.269519s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.269519s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.269519s, 431364 KB] Number of registered states: 839
[t=0.269519s, 431364 KB] Int hash set load factor: 839/1024 = 0.819336
[t=0.269519s, 431364 KB] Int hash set resizes: 10
[t=0.269519s, 431364 KB] Search time: 0.242838s
[t=0.269519s, 431364 KB] Total time: 0.269519s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p146.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5864e-05s, 424928 KB] reading input...
[t=0.00224705s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262717s, 427536 KB] Building successor generator...done!
[t=0.0265521s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026576s, 427536 KB] time for successor generation creation: 0.000169005s
[t=0.0266046s, 427536 KB] Variables: 25
[t=0.026628s, 427536 KB] FactPairs: 182
[t=0.02665s, 427536 KB] Bytes per state: 8
[t=0.026846s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0996507s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.099704s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0997302s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0997571s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.099782s, 430128 KB] pruning method: none
[t=0.11851s, 431100 KB] f = 144, 5 evaluated, 1 expanded
[t=0.119653s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.119685s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.120794s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.120825s, 431100 KB] g=5, 17 evaluated, 6 expanded
[t=0.121034s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.121064s, 431100 KB] g=5, 18 evaluated, 6 expanded
[t=0.121472s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.121506s, 431100 KB] g=6, 20 evaluated, 7 expanded
[t=0.122429s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.122459s, 431100 KB] g=7, 25 evaluated, 8 expanded
[t=0.123743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.123773s, 431100 KB] g=9, 32 evaluated, 10 expanded
[t=0.135492s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.135532s, 431100 KB] g=18, 97 evaluated, 25 expanded
[t=0.139925s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.139965s, 431100 KB] g=21, 121 evaluated, 29 expanded
[t=0.141824s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.141858s, 431100 KB] g=21, 131 evaluated, 32 expanded
[t=0.15207s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.152106s, 431100 KB] g=24, 172 evaluated, 38 expanded
[t=0.152679s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.152709s, 431100 KB] g=25, 175 evaluated, 39 expanded
[t=0.152919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.152947s, 431100 KB] g=25, 176 evaluated, 39 expanded
[t=0.154608s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.154645s, 431232 KB] g=26, 185 evaluated, 41 expanded
[t=0.159509s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.159544s, 431232 KB] g=29, 212 evaluated, 46 expanded
[t=0.159755s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.159784s, 431232 KB] g=29, 213 evaluated, 46 expanded
[t=0.163235s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.163276s, 431232 KB] g=31, 232 evaluated, 50 expanded
[t=0.169263s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.169298s, 431232 KB] g=35, 265 evaluated, 57 expanded
[t=0.17761s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.177649s, 431232 KB] g=33, 311 evaluated, 69 expanded
[t=0.178408s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.178438s, 431232 KB] g=34, 315 evaluated, 70 expanded
[t=0.180278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.180309s, 431232 KB] g=37, 325 evaluated, 73 expanded
[t=0.180699s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.180731s, 431232 KB] g=37, 327 evaluated, 73 expanded
[t=0.18167s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.181702s, 431232 KB] g=38, 332 evaluated, 74 expanded
[t=0.181911s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.18194s, 431232 KB] g=38, 333 evaluated, 74 expanded
[t=0.182332s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.182365s, 431232 KB] g=39, 335 evaluated, 75 expanded
[t=0.183291s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.18332s, 431232 KB] g=40, 340 evaluated, 76 expanded
[t=0.183535s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.183568s, 431232 KB] g=41, 341 evaluated, 77 expanded
[t=0.190767s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.190805s, 431232 KB] g=44, 365 evaluated, 86 expanded
[t=0.191201s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.191231s, 431232 KB] g=45, 367 evaluated, 87 expanded
[t=0.192162s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.192192s, 431232 KB] g=46, 372 evaluated, 89 expanded
[t=0.192769s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.192799s, 431232 KB] g=47, 375 evaluated, 90 expanded
[t=0.195905s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.19594s, 431232 KB] g=52, 392 evaluated, 96 expanded
[t=0.199034s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.199073s, 431232 KB] g=55, 409 evaluated, 101 expanded
[t=0.200014s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.200044s, 431232 KB] g=57, 414 evaluated, 103 expanded
[t=0.200258s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.200287s, 431232 KB] g=58, 415 evaluated, 104 expanded
[t=0.200498s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.200527s, 431232 KB] g=59, 416 evaluated, 105 expanded
[t=0.200922s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.200951s, 431232 KB] g=60, 418 evaluated, 106 expanded
[t=0.202639s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.202674s, 431232 KB] g=63, 428 evaluated, 113 expanded
[t=0.202702s, 431232 KB] Solution found!
[t=0.202729s, 431232 KB] Actual search time: 0.102933s
stack j a (1)
unstack l i (1)
stack l d (1)
unstack j a (1)
put-down j (1)
unstack i g (1)
put-down i (1)
unstack a c (1)
stack a j (1)
unstack g b (1)
stack g l (1)
unstack b e (1)
stack b c (1)
unstack e k (1)
stack e g (1)
unstack k h (1)
put-down k (1)
unstack e g (1)
stack e k (1)
unstack g l (1)
put-down g (1)
unstack b c (1)
stack b l (1)
pick-up i (1)
stack i b (1)
unstack h f (1)
stack h g (1)
unstack a j (1)
stack a h (1)
pick-up c (1)
stack c i (1)
pick-up f (1)
stack f a (1)
unstack c i (1)
put-down c (1)
unstack e k (1)
stack e i (1)
pick-up j (1)
stack j c (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack i b (1)
stack i c (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.202753s, 431232 KB] Plan length: 63 step(s).
[t=0.202753s, 431232 KB] Plan cost: 63
[t=0.202753s, 431232 KB] Expanded 114 state(s).
[t=0.202753s, 431232 KB] Reopened 0 state(s).
[t=0.202753s, 431232 KB] Evaluated 428 state(s).
[t=0.202753s, 431232 KB] Evaluations: 428
[t=0.202753s, 431232 KB] Generated 547 state(s).
[t=0.202753s, 431232 KB] Dead ends: 0 state(s).
[t=0.202753s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.202753s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.202753s, 431232 KB] Evaluated until last jump: 5 state(s).
[t=0.202753s, 431232 KB] Generated until last jump: 4 state(s).
[t=0.202753s, 431232 KB] Number of registered states: 428
[t=0.202753s, 431232 KB] Int hash set load factor: 428/512 = 0.835938
[t=0.202753s, 431232 KB] Int hash set resizes: 9
[t=0.202753s, 431232 KB] Search time: 0.175908s
[t=0.202753s, 431232 KB] Total time: 0.202753s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p147.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5684e-05s, 424928 KB] reading input...
[t=0.00211325s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259004s, 427536 KB] Building successor generator...done!
[t=0.0261754s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261988s, 427536 KB] time for successor generation creation: 0.00016367s
[t=0.026227s, 427536 KB] Variables: 25
[t=0.0262496s, 427536 KB] FactPairs: 182
[t=0.0262715s, 427536 KB] Bytes per state: 8
[t=0.02647s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983543s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0984066s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984326s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0984601s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0984844s, 430128 KB] pruning method: none
[t=0.117087s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.117137s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.119518s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.11956s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.121236s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.12127s, 431100 KB] g=6, 27 evaluated, 8 expanded
[t=0.122382s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.122413s, 431100 KB] g=7, 33 evaluated, 9 expanded
[t=0.124065s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.124099s, 431100 KB] g=9, 42 evaluated, 11 expanded
[t=0.124312s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.124341s, 431100 KB] g=9, 43 evaluated, 11 expanded
[t=0.124556s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.124585s, 431100 KB] g=10, 44 evaluated, 12 expanded
[t=0.126778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.126813s, 431100 KB] g=11, 56 evaluated, 14 expanded
[t=0.133345s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.133382s, 431100 KB] g=15, 92 evaluated, 22 expanded
[t=0.139729s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.139765s, 431100 KB] g=22, 127 evaluated, 30 expanded
[t=0.147212s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.147249s, 431232 KB] g=25, 168 evaluated, 38 expanded
[t=0.149444s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.149482s, 431232 KB] g=27, 180 evaluated, 41 expanded
[t=0.151136s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.151169s, 431232 KB] g=29, 189 evaluated, 43 expanded
[t=0.151381s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.151409s, 431232 KB] g=29, 190 evaluated, 43 expanded
[t=0.151619s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.151647s, 431232 KB] g=29, 191 evaluated, 43 expanded
[t=0.152413s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.152445s, 431232 KB] g=30, 195 evaluated, 44 expanded
[t=0.155904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.155938s, 431232 KB] g=31, 214 evaluated, 48 expanded
[t=0.156336s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.156372s, 431232 KB] g=32, 216 evaluated, 49 expanded
[t=0.157846s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.157877s, 431232 KB] g=34, 224 evaluated, 51 expanded
[t=0.158451s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.158484s, 431232 KB] g=35, 227 evaluated, 52 expanded
[t=0.161058s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.161091s, 431232 KB] g=36, 241 evaluated, 56 expanded
[t=0.161484s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.161514s, 431232 KB] g=37, 243 evaluated, 57 expanded
[t=0.162447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.162477s, 431232 KB] g=38, 248 evaluated, 58 expanded
[t=0.163411s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.163441s, 431232 KB] g=40, 253 evaluated, 60 expanded
[t=0.16423s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.164266s, 431232 KB] g=42, 257 evaluated, 62 expanded
[t=0.169176s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.16921s, 431232 KB] g=47, 284 evaluated, 70 expanded
[t=0.173583s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.17362s, 431232 KB] g=47, 308 evaluated, 78 expanded
[t=0.17602s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.176053s, 431232 KB] g=50, 321 evaluated, 84 expanded
[t=0.177891s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.177924s, 431232 KB] g=50, 331 evaluated, 87 expanded
[t=0.178314s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.178346s, 431232 KB] g=51, 333 evaluated, 88 expanded
[t=0.178742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.178772s, 431232 KB] g=52, 335 evaluated, 89 expanded
[t=0.179345s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.179375s, 431232 KB] g=53, 338 evaluated, 90 expanded
[t=0.179774s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.179812s, 431232 KB] g=55, 340 evaluated, 92 expanded
[t=0.180023s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.180057s, 431232 KB] g=55, 341 evaluated, 92 expanded
[t=0.180634s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.180664s, 431232 KB] g=56, 344 evaluated, 94 expanded
[t=0.182153s, 431232 KB] Solution found!
[t=0.182191s, 431232 KB] Actual search time: 0.0837045s
put-down j (1)
unstack a e (1)
stack a j (1)
unstack l h (1)
put-down l (1)
unstack g k (1)
stack g e (1)
unstack k f (1)
put-down k (1)
pick-up h (1)
stack h a (1)
unstack g e (1)
stack g h (1)
unstack e b (1)
stack e k (1)
unstack g h (1)
stack g e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d b (1)
unstack g e (1)
put-down g (1)
pick-up f (1)
stack f e (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a h (1)
pick-up j (1)
stack j i (1)
unstack d b (1)
stack d j (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack b l (1)
put-down b (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.182218s, 431232 KB] Plan length: 59 step(s).
[t=0.182218s, 431232 KB] Plan cost: 59
[t=0.182218s, 431232 KB] Expanded 102 state(s).
[t=0.182218s, 431232 KB] Reopened 0 state(s).
[t=0.182218s, 431232 KB] Evaluated 353 state(s).
[t=0.182218s, 431232 KB] Evaluations: 353
[t=0.182218s, 431232 KB] Generated 454 state(s).
[t=0.182218s, 431232 KB] Dead ends: 0 state(s).
[t=0.182218s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.182218s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.182218s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.182218s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.182218s, 431232 KB] Number of registered states: 353
[t=0.182218s, 431232 KB] Int hash set load factor: 353/512 = 0.689453
[t=0.182218s, 431232 KB] Int hash set resizes: 9
[t=0.182218s, 431232 KB] Search time: 0.155748s
[t=0.182218s, 431232 KB] Total time: 0.182218s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p148.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9314e-05s, 424928 KB] reading input...
[t=0.00218915s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026062s, 427536 KB] Building successor generator...done!
[t=0.0263401s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263636s, 427536 KB] time for successor generation creation: 0.000164462s
[t=0.0263929s, 427536 KB] Variables: 25
[t=0.0264162s, 427536 KB] FactPairs: 182
[t=0.0264391s, 427536 KB] Bytes per state: 8
[t=0.0266352s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987835s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0988357s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988616s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0988999s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.098925s, 430128 KB] pruning method: none
[t=0.110838s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.110903s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117372s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.117415s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119993s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.120029s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.120604s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.120636s, 431100 KB] g=5, 20 evaluated, 6 expanded
[t=0.134178s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.134216s, 431100 KB] g=11, 95 evaluated, 30 expanded
[t=0.134796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.134841s, 431100 KB] g=13, 98 evaluated, 32 expanded
[t=0.135061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.135094s, 431100 KB] g=13, 99 evaluated, 32 expanded
[t=0.135852s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.135886s, 431100 KB] g=15, 103 evaluated, 34 expanded
[t=0.146218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.146257s, 431100 KB] g=25, 160 evaluated, 55 expanded
[t=0.150096s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.150131s, 431100 KB] g=27, 181 evaluated, 61 expanded
[t=0.153986s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.154021s, 431232 KB] g=31, 202 evaluated, 67 expanded
[t=0.164163s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.164202s, 431232 KB] g=29, 257 evaluated, 95 expanded, 12 reopened
[t=0.17692s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.176959s, 431232 KB] g=34, 327 evaluated, 119 expanded, 12 reopened
[t=0.179713s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.179751s, 431232 KB] g=33, 342 evaluated, 126 expanded, 12 reopened
[t=0.180327s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.180358s, 431232 KB] g=34, 345 evaluated, 127 expanded, 12 reopened
[t=0.180934s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.180964s, 431232 KB] g=35, 348 evaluated, 128 expanded, 12 reopened
[t=0.181175s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.181204s, 431232 KB] g=35, 349 evaluated, 128 expanded, 12 reopened
[t=0.182143s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.182174s, 431232 KB] g=36, 354 evaluated, 130 expanded, 12 reopened
[t=0.184567s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.184604s, 431232 KB] g=41, 367 evaluated, 135 expanded, 12 reopened
[t=0.185908s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.185942s, 431232 KB] g=44, 374 evaluated, 138 expanded, 12 reopened
[t=0.186336s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.186366s, 431232 KB] g=45, 376 evaluated, 139 expanded, 12 reopened
[t=0.191298s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.191336s, 431232 KB] g=49, 403 evaluated, 149 expanded, 12 reopened
[t=0.191554s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.191584s, 431232 KB] g=50, 404 evaluated, 150 expanded, 12 reopened
[t=0.193069s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.193102s, 431232 KB] g=52, 412 evaluated, 153 expanded, 12 reopened
[t=0.197138s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.197177s, 431364 KB] g=52, 434 evaluated, 162 expanded, 12 reopened
[t=0.199215s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.199251s, 431364 KB] g=55, 445 evaluated, 167 expanded, 12 reopened
[t=0.19947s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.199499s, 431364 KB] g=56, 446 evaluated, 168 expanded, 12 reopened
[t=0.199897s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.199927s, 431364 KB] g=57, 448 evaluated, 169 expanded, 12 reopened
[t=0.201064s, 431364 KB] Solution found!
[t=0.201098s, 431364 KB] Actual search time: 0.102171s
unstack e j (1)
put-down e (1)
unstack g b (1)
stack g f (1)
unstack b k (1)
put-down b (1)
pick-up e (1)
stack e k (1)
pick-up b (1)
stack b j (1)
unstack e k (1)
stack e b (1)
unstack g f (1)
put-down g (1)
unstack k h (1)
stack k f (1)
pick-up g (1)
stack g h (1)
unstack e b (1)
stack e k (1)
unstack b j (1)
put-down b (1)
unstack j a (1)
stack j e (1)
unstack g h (1)
put-down g (1)
unstack h l (1)
stack h a (1)
pick-up l (1)
stack l b (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack j e (1)
stack j l (1)
unstack e k (1)
stack e j (1)
unstack k f (1)
stack k e (1)
unstack f d (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.201125s, 431364 KB] Plan length: 60 step(s).
[t=0.201125s, 431364 KB] Plan cost: 60
[t=0.201125s, 431364 KB] Expanded 175 state(s).
[t=0.201125s, 431364 KB] Reopened 12 state(s).
[t=0.201125s, 431364 KB] Evaluated 455 state(s).
[t=0.201125s, 431364 KB] Evaluations: 455
[t=0.201125s, 431364 KB] Generated 690 state(s).
[t=0.201125s, 431364 KB] Dead ends: 0 state(s).
[t=0.201125s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.201125s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.201125s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.201125s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.201125s, 431364 KB] Number of registered states: 455
[t=0.201125s, 431364 KB] Int hash set load factor: 455/512 = 0.888672
[t=0.201125s, 431364 KB] Int hash set resizes: 9
[t=0.201125s, 431364 KB] Search time: 0.174491s
[t=0.201125s, 431364 KB] Total time: 0.201125s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p149.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9077e-05s, 424928 KB] reading input...
[t=0.0021524s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257224s, 427536 KB] Building successor generator...done!
[t=0.0260037s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260272s, 427536 KB] time for successor generation creation: 0.000170121s
[t=0.0260554s, 427536 KB] Variables: 25
[t=0.0260778s, 427536 KB] FactPairs: 182
[t=0.0260999s, 427536 KB] Bytes per state: 8
[t=0.0262963s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978265s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0978796s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979058s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0979338s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0979683s, 430128 KB] pruning method: none
[t=0.109872s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.109924s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116723s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.116767s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.116985s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.117029s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.12338s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.123415s, 431100 KB] g=8, 41 evaluated, 12 expanded
[t=0.124705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.124736s, 431100 KB] g=9, 48 evaluated, 13 expanded
[t=0.12515s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.125183s, 431100 KB] g=10, 50 evaluated, 14 expanded
[t=0.130069s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.130103s, 431100 KB] g=12, 77 evaluated, 20 expanded
[t=0.132636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.132667s, 431100 KB] g=14, 91 evaluated, 23 expanded
[t=0.135752s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.135786s, 431100 KB] g=17, 108 evaluated, 27 expanded
[t=0.136178s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.136207s, 431100 KB] g=17, 110 evaluated, 27 expanded
[t=0.136779s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.13681s, 431100 KB] g=18, 113 evaluated, 28 expanded
[t=0.137211s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.137244s, 431100 KB] g=18, 115 evaluated, 28 expanded
[t=0.140147s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.140179s, 431100 KB] g=20, 131 evaluated, 32 expanded
[t=0.141482s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.141515s, 431100 KB] g=22, 138 evaluated, 34 expanded
[t=0.145324s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.145359s, 431100 KB] g=23, 159 evaluated, 41 expanded
[t=0.147366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.147405s, 431100 KB] g=26, 170 evaluated, 45 expanded
[t=0.147615s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.147644s, 431100 KB] g=26, 171 evaluated, 45 expanded
[t=0.15056s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.150594s, 431232 KB] g=30, 187 evaluated, 51 expanded
[t=0.151532s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.151565s, 431232 KB] g=32, 192 evaluated, 53 expanded
[t=0.15178s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.151809s, 431232 KB] g=33, 193 evaluated, 54 expanded
[t=0.153105s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.153138s, 431232 KB] g=35, 200 evaluated, 56 expanded
[t=0.153534s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.153564s, 431232 KB] g=36, 202 evaluated, 57 expanded
[t=0.153772s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.1538s, 431232 KB] g=36, 203 evaluated, 57 expanded
[t=0.159585s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.159619s, 431232 KB] g=40, 235 evaluated, 66 expanded
[t=0.159836s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.159865s, 431232 KB] g=41, 236 evaluated, 67 expanded
[t=0.160797s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.160828s, 431232 KB] g=42, 241 evaluated, 68 expanded
[t=0.161408s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.161444s, 431232 KB] g=43, 244 evaluated, 69 expanded
[t=0.16238s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.16241s, 431232 KB] g=42, 249 evaluated, 71 expanded
[t=0.163519s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.163552s, 431232 KB] g=44, 255 evaluated, 73 expanded
[t=0.164327s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.164357s, 431232 KB] g=46, 259 evaluated, 75 expanded
[t=0.166391s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.166428s, 431232 KB] g=48, 270 evaluated, 79 expanded
[t=0.167547s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.167583s, 431232 KB] g=50, 276 evaluated, 82 expanded
[t=0.169433s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.169467s, 431232 KB] g=52, 286 evaluated, 86 expanded
[t=0.170227s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.170258s, 431232 KB] g=53, 290 evaluated, 87 expanded
[t=0.170473s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.170502s, 431232 KB] g=54, 291 evaluated, 88 expanded
[t=0.170897s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.170926s, 431232 KB] g=55, 293 evaluated, 89 expanded
[t=0.171861s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.171894s, 431232 KB] g=57, 298 evaluated, 91 expanded
[t=0.172643s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.172672s, 431232 KB] g=58, 302 evaluated, 92 expanded
[t=0.181017s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.181052s, 431232 KB] g=62, 348 evaluated, 117 expanded
[t=0.181448s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.181479s, 431232 KB] g=63, 350 evaluated, 118 expanded
[t=0.181876s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.181906s, 431232 KB] g=65, 353 evaluated, 120 expanded
[t=0.181933s, 431232 KB] Solution found!
[t=0.181959s, 431232 KB] Actual search time: 0.083986s
put-down l (1)
unstack g k (1)
stack g j (1)
unstack k b (1)
stack k f (1)
unstack g j (1)
put-down g (1)
unstack b e (1)
stack b l (1)
unstack e d (1)
stack e k (1)
unstack j a (1)
stack j e (1)
unstack a h (1)
stack a b (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
stack i a (1)
pick-up c (1)
stack c d (1)
pick-up h (1)
stack h g (1)
unstack i a (1)
stack i c (1)
unstack a b (1)
stack a h (1)
unstack i c (1)
stack i a (1)
unstack c d (1)
stack c b (1)
unstack i a (1)
stack i c (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e d (1)
unstack k f (1)
stack k e (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i c (1)
put-down i (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.181983s, 431232 KB] Plan length: 65 step(s).
[t=0.181983s, 431232 KB] Plan cost: 65
[t=0.181983s, 431232 KB] Expanded 121 state(s).
[t=0.181983s, 431232 KB] Reopened 0 state(s).
[t=0.181983s, 431232 KB] Evaluated 353 state(s).
[t=0.181983s, 431232 KB] Evaluations: 353
[t=0.181983s, 431232 KB] Generated 472 state(s).
[t=0.181983s, 431232 KB] Dead ends: 0 state(s).
[t=0.181983s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.181983s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.181983s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.181983s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.181983s, 431232 KB] Number of registered states: 353
[t=0.181983s, 431232 KB] Int hash set load factor: 353/512 = 0.689453
[t=0.181983s, 431232 KB] Int hash set resizes: 9
[t=0.181983s, 431232 KB] Search time: 0.155688s
[t=0.181983s, 431232 KB] Total time: 0.181983s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p150.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6415e-05s, 424928 KB] reading input...
[t=0.00218937s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258561s, 427536 KB] Building successor generator...done!
[t=0.0261353s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026178s, 427536 KB] time for successor generation creation: 0.000167226s
[t=0.0262076s, 427536 KB] Variables: 25
[t=0.0262413s, 427536 KB] FactPairs: 182
[t=0.0262645s, 427536 KB] Bytes per state: 8
[t=0.0264619s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982901s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.098343s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983686s, 430128 KB] f = 92, 1 evaluated, 0 expanded
[t=0.0983955s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.0984189s, 430128 KB] pruning method: none
[t=0.11677s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.11682s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118289s, 431100 KB] f = 93, 12 evaluated, 3 expanded
[t=0.120803s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.120834s, 431100 KB] g=6, 26 evaluated, 7 expanded
[t=0.122301s, 431100 KB] f = 94, 34 evaluated, 8 expanded
[t=0.122694s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.122724s, 431100 KB] g=6, 36 evaluated, 9 expanded
[t=0.124343s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.124373s, 431100 KB] g=7, 45 evaluated, 11 expanded
[t=0.124938s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.124968s, 431100 KB] g=8, 48 evaluated, 12 expanded
[t=0.129798s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.12983s, 431100 KB] g=13, 75 evaluated, 18 expanded
[t=0.130411s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.130442s, 431100 KB] g=14, 78 evaluated, 19 expanded
[t=0.150543s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.150578s, 431232 KB] g=11, 191 evaluated, 48 expanded
[t=0.153997s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.15403s, 431232 KB] g=15, 210 evaluated, 53 expanded
[t=0.156325s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.156357s, 431232 KB] g=16, 222 evaluated, 56 expanded
[t=0.159944s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.159978s, 431232 KB] g=18, 242 evaluated, 62 expanded
[t=0.18016s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.180199s, 431232 KB] g=22, 354 evaluated, 93 expanded
[t=0.183445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.183489s, 431232 KB] g=25, 372 evaluated, 99 expanded
[t=0.183882s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.183912s, 431232 KB] g=26, 374 evaluated, 100 expanded
[t=0.184833s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.184866s, 431232 KB] g=28, 379 evaluated, 102 expanded
[t=0.186566s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.186601s, 431232 KB] g=30, 388 evaluated, 105 expanded
[t=0.188826s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.188855s, 431232 KB] g=32, 400 evaluated, 110 expanded
[t=0.189246s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.189275s, 431232 KB] g=33, 402 evaluated, 111 expanded
[t=0.191291s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.191323s, 431232 KB] g=37, 413 evaluated, 115 expanded
[t=0.19582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.195853s, 431232 KB] g=39, 438 evaluated, 124 expanded
[t=0.198551s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.198586s, 431232 KB] g=41, 453 evaluated, 129 expanded
[t=0.198796s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.198825s, 431232 KB] g=41, 454 evaluated, 129 expanded
[t=0.199749s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.199779s, 431232 KB] g=43, 459 evaluated, 131 expanded
[t=0.20106s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.20109s, 431232 KB] g=45, 466 evaluated, 136 expanded
[t=0.20148s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.201509s, 431232 KB] g=46, 468 evaluated, 137 expanded
[t=0.202093s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.202125s, 431232 KB] g=48, 471 evaluated, 139 expanded
[t=0.203246s, 431232 KB] Solution found!
[t=0.20328s, 431232 KB] Actual search time: 0.104859s
stack k e (1)
unstack c d (1)
put-down c (1)
unstack b g (1)
stack b l (1)
unstack k e (1)
stack k c (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j d (1)
unstack e i (1)
stack e k (1)
unstack i f (1)
stack i h (1)
unstack f a (1)
stack f e (1)
unstack i h (1)
stack i j (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e i (1)
unstack k c (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack i j (1)
stack i c (1)
unstack j d (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.203306s, 431232 KB] Plan length: 51 step(s).
[t=0.203306s, 431232 KB] Plan cost: 51
[t=0.203306s, 431232 KB] Expanded 146 state(s).
[t=0.203306s, 431232 KB] Reopened 0 state(s).
[t=0.203306s, 431232 KB] Evaluated 478 state(s).
[t=0.203306s, 431232 KB] Evaluations: 478
[t=0.203306s, 431232 KB] Generated 635 state(s).
[t=0.203306s, 431232 KB] Dead ends: 0 state(s).
[t=0.203306s, 431232 KB] Expanded until last jump: 8 state(s).
[t=0.203306s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.203306s, 431232 KB] Evaluated until last jump: 34 state(s).
[t=0.203306s, 431232 KB] Generated until last jump: 40 state(s).
[t=0.203306s, 431232 KB] Number of registered states: 478
[t=0.203306s, 431232 KB] Int hash set load factor: 478/512 = 0.933594
[t=0.203306s, 431232 KB] Int hash set resizes: 9
[t=0.203306s, 431232 KB] Search time: 0.176845s
[t=0.203306s, 431232 KB] Total time: 0.203306s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p151.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8144e-05s, 424928 KB] reading input...
[t=0.00214313s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025753s, 427536 KB] Building successor generator...done!
[t=0.0260315s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260551s, 427536 KB] time for successor generation creation: 0.000166887s
[t=0.0260835s, 427536 KB] Variables: 25
[t=0.0261062s, 427536 KB] FactPairs: 182
[t=0.0261279s, 427536 KB] Bytes per state: 8
[t=0.0263219s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098934s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0989893s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990154s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0990435s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0990691s, 430128 KB] pruning method: none
[t=0.110851s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.110901s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117841s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.117884s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.118124s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118333s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.118363s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118763s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.118795s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.120071s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.120102s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.12334s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.123373s, 431100 KB] g=7, 35 evaluated, 9 expanded
[t=0.124817s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.124848s, 431100 KB] g=8, 43 evaluated, 10 expanded
[t=0.128977s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.129011s, 431100 KB] g=12, 66 evaluated, 15 expanded
[t=0.130655s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.130688s, 431100 KB] g=14, 75 evaluated, 17 expanded
[t=0.131797s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.131827s, 431100 KB] g=15, 81 evaluated, 18 expanded
[t=0.134168s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.134198s, 431100 KB] g=18, 94 evaluated, 22 expanded
[t=0.13655s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.136584s, 431100 KB] g=20, 107 evaluated, 25 expanded
[t=0.13697s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.136999s, 431100 KB] g=20, 109 evaluated, 25 expanded
[t=0.137206s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.137234s, 431100 KB] g=20, 110 evaluated, 25 expanded
[t=0.138336s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.138367s, 431100 KB] g=21, 116 evaluated, 27 expanded
[t=0.141445s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.141478s, 431100 KB] g=23, 133 evaluated, 30 expanded
[t=0.142223s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.142253s, 431100 KB] g=24, 137 evaluated, 31 expanded
[t=0.143361s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.143393s, 431100 KB] g=25, 143 evaluated, 32 expanded
[t=0.145212s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.145244s, 431100 KB] g=27, 153 evaluated, 34 expanded
[t=0.146167s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.146202s, 431232 KB] g=28, 158 evaluated, 35 expanded
[t=0.147143s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.147178s, 431232 KB] g=29, 163 evaluated, 36 expanded
[t=0.148468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.1485s, 431232 KB] g=31, 170 evaluated, 38 expanded
[t=0.148888s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.148917s, 431232 KB] g=31, 172 evaluated, 38 expanded
[t=0.14913s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.149159s, 431232 KB] g=32, 173 evaluated, 39 expanded
[t=0.156365s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.156398s, 431232 KB] g=37, 213 evaluated, 52 expanded
[t=0.15697s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.157005s, 431232 KB] g=39, 216 evaluated, 54 expanded
[t=0.157574s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.157603s, 431232 KB] g=40, 219 evaluated, 55 expanded
[t=0.157998s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.158026s, 431232 KB] g=42, 221 evaluated, 57 expanded
[t=0.158415s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.158453s, 431232 KB] g=43, 223 evaluated, 58 expanded
[t=0.158668s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.158696s, 431232 KB] g=44, 224 evaluated, 59 expanded
[t=0.158903s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.15893s, 431232 KB] g=44, 225 evaluated, 59 expanded
[t=0.160226s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.160258s, 431232 KB] g=47, 232 evaluated, 63 expanded
[t=0.161374s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.161403s, 431232 KB] g=49, 238 evaluated, 65 expanded
[t=0.163415s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.163447s, 431232 KB] g=52, 249 evaluated, 71 expanded
[t=0.163843s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.163872s, 431232 KB] g=53, 251 evaluated, 72 expanded
[t=0.164084s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.164113s, 431232 KB] g=54, 252 evaluated, 73 expanded
[t=0.164502s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.16453s, 431232 KB] g=55, 254 evaluated, 74 expanded
[t=0.16567s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.165701s, 431232 KB] g=57, 260 evaluated, 79 expanded
[t=0.165733s, 431232 KB] Solution found!
[t=0.165761s, 431232 KB] Actual search time: 0.0666871s
unstack b d (1)
stack b l (1)
unstack h k (1)
put-down h (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
pick-up h (1)
stack h k (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack h k (1)
put-down h (1)
unstack j a (1)
stack j d (1)
unstack a g (1)
put-down a (1)
unstack g e (1)
put-down g (1)
pick-up h (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack e f (1)
stack e i (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack j d (1)
put-down j (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
stack i d (1)
unstack c b (1)
put-down c (1)
unstack i d (1)
stack i c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.165786s, 431232 KB] Plan length: 58 step(s).
[t=0.165786s, 431232 KB] Plan cost: 58
[t=0.165786s, 431232 KB] Expanded 81 state(s).
[t=0.165786s, 431232 KB] Reopened 0 state(s).
[t=0.165786s, 431232 KB] Evaluated 261 state(s).
[t=0.165786s, 431232 KB] Evaluations: 261
[t=0.165786s, 431232 KB] Generated 342 state(s).
[t=0.165786s, 431232 KB] Dead ends: 0 state(s).
[t=0.165786s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.165786s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.165786s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.165786s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.165786s, 431232 KB] Number of registered states: 261
[t=0.165786s, 431232 KB] Int hash set load factor: 261/512 = 0.509766
[t=0.165786s, 431232 KB] Int hash set resizes: 9
[t=0.165786s, 431232 KB] Search time: 0.139464s
[t=0.165786s, 431232 KB] Total time: 0.165786s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p152.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5858e-05s, 424928 KB] reading input...
[t=0.0021545s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262014s, 427536 KB] Building successor generator...done!
[t=0.0264781s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265019s, 427536 KB] time for successor generation creation: 0.000166895s
[t=0.02653s, 427536 KB] Variables: 25
[t=0.0265527s, 427536 KB] FactPairs: 182
[t=0.0265747s, 427536 KB] Bytes per state: 8
[t=0.0267689s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987352s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.0987865s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988122s, 430128 KB] f = 89, 1 evaluated, 0 expanded
[t=0.0988395s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.0988633s, 430128 KB] pruning method: none
[t=0.110666s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.110717s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117308s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.117351s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118281s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.118312s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.119592s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.119622s, 431100 KB] g=5, 16 evaluated, 5 expanded
[t=0.121609s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.121641s, 431100 KB] g=8, 27 evaluated, 8 expanded
[t=0.123095s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.123125s, 431100 KB] g=10, 35 evaluated, 10 expanded
[t=0.125484s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.125517s, 431100 KB] g=12, 48 evaluated, 14 expanded
[t=0.129291s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.129328s, 431100 KB] g=14, 69 evaluated, 21 expanded
[t=0.130425s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.130455s, 431100 KB] g=15, 75 evaluated, 22 expanded
[t=0.13138s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.13141s, 431100 KB] g=17, 80 evaluated, 24 expanded
[t=0.133056s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.133101s, 431100 KB] g=19, 89 evaluated, 28 expanded
[t=0.136905s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.136941s, 431100 KB] g=22, 110 evaluated, 39 expanded
[t=0.148223s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.148257s, 431100 KB] g=27, 173 evaluated, 60 expanded
[t=0.149556s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.14959s, 431100 KB] g=29, 180 evaluated, 62 expanded
[t=0.149797s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.149826s, 431100 KB] g=29, 181 evaluated, 62 expanded
[t=0.150572s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.150601s, 431100 KB] g=31, 185 evaluated, 64 expanded
[t=0.151351s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.151383s, 431100 KB] g=33, 189 evaluated, 66 expanded
[t=0.151596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.151625s, 431100 KB] g=34, 190 evaluated, 67 expanded
[t=0.152012s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.152041s, 431100 KB] g=35, 192 evaluated, 68 expanded
[t=0.153172s, 431100 KB] Solution found!
[t=0.153208s, 431100 KB] Actual search time: 0.0543428s
unstack k l (1)
put-down k (1)
unstack f a (1)
stack f k (1)
unstack b e (1)
stack b l (1)
unstack a j (1)
stack a f (1)
unstack e h (1)
stack e b (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e j (1)
unstack b l (1)
put-down b (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.153235s, 431100 KB] Plan length: 38 step(s).
[t=0.153235s, 431100 KB] Plan cost: 38
[t=0.153235s, 431100 KB] Expanded 75 state(s).
[t=0.153235s, 431100 KB] Reopened 0 state(s).
[t=0.153235s, 431100 KB] Evaluated 199 state(s).
[t=0.153235s, 431100 KB] Evaluations: 199
[t=0.153235s, 431100 KB] Generated 273 state(s).
[t=0.153235s, 431100 KB] Dead ends: 0 state(s).
[t=0.153235s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.153235s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.153235s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.153235s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.153235s, 431100 KB] Number of registered states: 199
[t=0.153235s, 431100 KB] Int hash set load factor: 199/256 = 0.777344
[t=0.153235s, 431100 KB] Int hash set resizes: 8
[t=0.153235s, 431100 KB] Search time: 0.126467s
[t=0.153235s, 431100 KB] Total time: 0.153235s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p153.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8234e-05s, 424928 KB] reading input...
[t=0.00218813s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025913s, 427536 KB] Building successor generator...done!
[t=0.0261877s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262104s, 427536 KB] time for successor generation creation: 0.000165732s
[t=0.0262384s, 427536 KB] Variables: 25
[t=0.0262609s, 427536 KB] FactPairs: 182
[t=0.0262829s, 427536 KB] Bytes per state: 8
[t=0.0264767s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985337s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.0985859s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098612s, 430128 KB] f = 91, 1 evaluated, 0 expanded
[t=0.0986389s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.0986728s, 430128 KB] pruning method: none
[t=0.117442s, 431100 KB] f = 94, 6 evaluated, 1 expanded
[t=0.118248s, 431100 KB] f = 96, 10 evaluated, 2 expanded
[t=0.119031s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.119061s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.120032s, 431100 KB] f = 101, 19 evaluated, 4 expanded
[t=0.12271s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.122742s, 431100 KB] g=3, 33 evaluated, 10 expanded
[t=0.123893s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.123921s, 431100 KB] g=4, 39 evaluated, 11 expanded
[t=0.125448s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.125479s, 431100 KB] g=5, 47 evaluated, 14 expanded
[t=0.129457s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.129493s, 431100 KB] g=6, 68 evaluated, 21 expanded
[t=0.150163s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.150203s, 431232 KB] g=8, 178 evaluated, 57 expanded, 1 reopened
[t=0.155114s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.155146s, 431232 KB] g=10, 204 evaluated, 63 expanded, 1 reopened
[t=0.1799s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.179937s, 431232 KB] g=17, 336 evaluated, 105 expanded, 5 reopened
[t=0.181283s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.181315s, 431232 KB] g=19, 343 evaluated, 107 expanded, 5 reopened
[t=0.184718s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.18475s, 431232 KB] g=21, 361 evaluated, 112 expanded, 5 reopened
[t=0.187397s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.187427s, 431232 KB] g=24, 375 evaluated, 115 expanded, 5 reopened
[t=0.188021s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.188052s, 431232 KB] g=25, 378 evaluated, 116 expanded, 5 reopened
[t=0.189779s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.189815s, 431232 KB] g=27, 387 evaluated, 118 expanded, 5 reopened
[t=0.190779s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.190811s, 431232 KB] g=28, 392 evaluated, 119 expanded, 5 reopened
[t=0.191955s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.191994s, 431232 KB] g=29, 398 evaluated, 120 expanded, 5 reopened
[t=0.193347s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.193379s, 431232 KB] g=31, 405 evaluated, 122 expanded, 5 reopened
[t=0.194905s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.194937s, 431232 KB] g=32, 413 evaluated, 123 expanded, 5 reopened
[t=0.195345s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.195373s, 431232 KB] g=33, 415 evaluated, 124 expanded, 5 reopened
[t=0.197473s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.197506s, 431232 KB] g=35, 426 evaluated, 127 expanded, 5 reopened
[t=0.199969s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.199999s, 431364 KB] g=39, 439 evaluated, 131 expanded, 5 reopened
[t=0.200219s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.200247s, 431364 KB] g=40, 440 evaluated, 132 expanded, 5 reopened
[t=0.203268s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.2033s, 431364 KB] g=42, 456 evaluated, 135 expanded, 5 reopened
[t=0.207253s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.207286s, 431364 KB] g=43, 477 evaluated, 140 expanded, 5 reopened
[t=0.20863s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.208662s, 431364 KB] g=44, 484 evaluated, 141 expanded, 5 reopened
[t=0.210002s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.210032s, 431364 KB] g=44, 491 evaluated, 143 expanded, 5 reopened
[t=0.2202s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.220234s, 431364 KB] g=47, 545 evaluated, 157 expanded, 5 reopened
[t=0.221035s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.221068s, 431364 KB] g=48, 549 evaluated, 158 expanded, 5 reopened
[t=0.22166s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.221688s, 431364 KB] g=49, 552 evaluated, 159 expanded, 5 reopened
[t=0.221907s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.221935s, 431364 KB] g=50, 553 evaluated, 160 expanded, 5 reopened
[t=0.222524s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.222558s, 431364 KB] g=51, 556 evaluated, 161 expanded, 5 reopened
[t=0.222966s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.222997s, 431364 KB] g=52, 558 evaluated, 162 expanded, 5 reopened
[t=0.223404s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.223434s, 431364 KB] g=53, 560 evaluated, 163 expanded, 5 reopened
[t=0.223846s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.223875s, 431364 KB] g=55, 563 evaluated, 165 expanded, 5 reopened
[t=0.223902s, 431364 KB] Solution found!
[t=0.223928s, 431364 KB] Actual search time: 0.125251s
stack e g (1)
unstack c k (1)
stack c e (1)
unstack k a (1)
put-down k (1)
unstack a f (1)
stack a k (1)
pick-up i (1)
stack i a (1)
unstack c e (1)
stack c i (1)
unstack e g (1)
put-down e (1)
pick-up h (1)
stack h g (1)
unstack c i (1)
stack c e (1)
unstack h g (1)
stack h f (1)
unstack g b (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack c e (1)
stack c b (1)
unstack i a (1)
stack i c (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack e j (1)
stack e k (1)
unstack b d (1)
stack b i (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.223952s, 431364 KB] Plan length: 55 step(s).
[t=0.223952s, 431364 KB] Plan cost: 55
[t=0.223952s, 431364 KB] Expanded 166 state(s).
[t=0.223952s, 431364 KB] Reopened 5 state(s).
[t=0.223952s, 431364 KB] Evaluated 563 state(s).
[t=0.223952s, 431364 KB] Evaluations: 563
[t=0.223952s, 431364 KB] Generated 754 state(s).
[t=0.223952s, 431364 KB] Dead ends: 0 state(s).
[t=0.223952s, 431364 KB] Expanded until last jump: 4 state(s).
[t=0.223952s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.223952s, 431364 KB] Evaluated until last jump: 19 state(s).
[t=0.223952s, 431364 KB] Generated until last jump: 21 state(s).
[t=0.223952s, 431364 KB] Number of registered states: 563
[t=0.223952s, 431364 KB] Int hash set load factor: 563/1024 = 0.549805
[t=0.223952s, 431364 KB] Int hash set resizes: 10
[t=0.223952s, 431364 KB] Search time: 0.197476s
[t=0.223952s, 431364 KB] Total time: 0.223952s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p154.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6277e-05s, 424928 KB] reading input...
[t=0.00224447s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259293s, 427536 KB] Building successor generator...done!
[t=0.0262072s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026231s, 427536 KB] time for successor generation creation: 0.00016684s
[t=0.0262599s, 427536 KB] Variables: 25
[t=0.0262833s, 427536 KB] FactPairs: 182
[t=0.0263054s, 427536 KB] Bytes per state: 8
[t=0.0265003s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981426s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0981933s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982189s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0982467s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0982706s, 430128 KB] pruning method: none
[t=0.11647s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.11652s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117289s, 431100 KB] f = 150, 7 evaluated, 2 expanded
[t=0.117681s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.117711s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.118103s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.118132s, 431100 KB] g=4, 11 evaluated, 5 expanded
[t=0.118521s, 431100 KB] f = 151, 13 evaluated, 6 expanded
[t=0.119814s, 431100 KB] f = 152, 20 evaluated, 9 expanded
[t=0.130878s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.130913s, 431100 KB] g=6, 82 evaluated, 35 expanded
[t=0.131121s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.13115s, 431100 KB] g=6, 83 evaluated, 35 expanded
[t=0.132413s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.132443s, 431100 KB] g=7, 90 evaluated, 36 expanded
[t=0.1339s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.133933s, 431100 KB] g=9, 98 evaluated, 38 expanded
[t=0.134671s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.134701s, 431100 KB] g=10, 102 evaluated, 39 expanded
[t=0.142192s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.142229s, 431100 KB] g=12, 144 evaluated, 49 expanded
[t=0.143672s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.143706s, 431100 KB] g=14, 152 evaluated, 51 expanded
[t=0.149936s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.14997s, 431100 KB] g=18, 187 evaluated, 60 expanded
[t=0.152651s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.152683s, 431100 KB] g=19, 202 evaluated, 64 expanded
[t=0.154319s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.154356s, 431100 KB] g=21, 211 evaluated, 66 expanded
[t=0.155267s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.155296s, 431100 KB] g=22, 216 evaluated, 67 expanded
[t=0.156214s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.156243s, 431232 KB] g=23, 221 evaluated, 68 expanded
[t=0.170444s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.170481s, 431232 KB] g=30, 301 evaluated, 91 expanded
[t=0.247245s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.247287s, 431368 KB] g=28, 734 evaluated, 243 expanded, 8 reopened
[t=0.247499s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.247528s, 431368 KB] g=28, 735 evaluated, 243 expanded, 8 reopened
[t=0.247914s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.24795s, 431368 KB] g=29, 737 evaluated, 244 expanded, 8 reopened
[t=0.249762s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.249798s, 431368 KB] g=30, 747 evaluated, 246 expanded, 8 reopened
[t=0.252832s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.252873s, 431368 KB] g=32, 764 evaluated, 250 expanded, 8 reopened
[t=0.253973s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.254004s, 431368 KB] g=34, 770 evaluated, 252 expanded, 8 reopened
[t=0.254388s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.25442s, 431368 KB] g=34, 772 evaluated, 252 expanded, 8 reopened
[t=0.254805s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.254834s, 431368 KB] g=35, 774 evaluated, 253 expanded, 8 reopened
[t=0.255573s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.255604s, 431368 KB] g=36, 778 evaluated, 254 expanded, 8 reopened
[t=0.25617s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.2562s, 431368 KB] g=37, 781 evaluated, 255 expanded, 8 reopened
[t=0.259948s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.259982s, 431368 KB] g=40, 802 evaluated, 262 expanded, 8 reopened
[t=0.260543s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.260574s, 431368 KB] g=41, 805 evaluated, 263 expanded, 8 reopened
[t=0.261143s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.261174s, 431368 KB] g=42, 808 evaluated, 264 expanded, 8 reopened
[t=0.261557s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.26159s, 431368 KB] g=43, 810 evaluated, 265 expanded, 8 reopened
[t=0.262507s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.262536s, 431368 KB] g=45, 815 evaluated, 267 expanded, 8 reopened
[t=0.262746s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.262775s, 431368 KB] g=46, 816 evaluated, 268 expanded, 8 reopened
[t=0.262984s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.263012s, 431368 KB] g=47, 817 evaluated, 269 expanded, 8 reopened
[t=0.263218s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.263247s, 431368 KB] g=47, 818 evaluated, 269 expanded, 8 reopened
[t=0.263818s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.263848s, 431368 KB] g=48, 821 evaluated, 271 expanded, 8 reopened
[t=0.265504s, 431368 KB] Solution found!
[t=0.26554s, 431368 KB] Actual search time: 0.167267s
put-down j (1)
unstack l k (1)
stack l i (1)
unstack k d (1)
put-down k (1)
unstack d b (1)
put-down d (1)
unstack b f (1)
stack b j (1)
pick-up g (1)
stack g b (1)
unstack f a (1)
stack f d (1)
unstack g b (1)
put-down g (1)
pick-up k (1)
stack k f (1)
unstack a e (1)
stack a k (1)
unstack e h (1)
stack e l (1)
pick-up h (1)
stack h g (1)
unstack b j (1)
put-down b (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k e (1)
unstack f d (1)
stack f a (1)
pick-up j (1)
stack j b (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.265566s, 431368 KB] Plan length: 51 step(s).
[t=0.265566s, 431368 KB] Plan cost: 51
[t=0.265566s, 431368 KB] Expanded 280 state(s).
[t=0.265566s, 431368 KB] Reopened 8 state(s).
[t=0.265566s, 431368 KB] Evaluated 831 state(s).
[t=0.265566s, 431368 KB] Evaluations: 831
[t=0.265566s, 431368 KB] Generated 1210 state(s).
[t=0.265566s, 431368 KB] Dead ends: 0 state(s).
[t=0.265566s, 431368 KB] Expanded until last jump: 9 state(s).
[t=0.265566s, 431368 KB] Reopened until last jump: 0 state(s).
[t=0.265566s, 431368 KB] Evaluated until last jump: 20 state(s).
[t=0.265566s, 431368 KB] Generated until last jump: 27 state(s).
[t=0.265566s, 431368 KB] Number of registered states: 831
[t=0.265566s, 431368 KB] Int hash set load factor: 831/1024 = 0.811523
[t=0.265566s, 431368 KB] Int hash set resizes: 10
[t=0.265566s, 431368 KB] Search time: 0.239066s
[t=0.265566s, 431368 KB] Total time: 0.265566s
Solution found.
Peak memory: 431368 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p155.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5531e-05s, 424928 KB] reading input...
[t=0.00211538s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259933s, 427536 KB] Building successor generator...done!
[t=0.0262686s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262918s, 427536 KB] time for successor generation creation: 0.000165279s
[t=0.0263206s, 427536 KB] Variables: 25
[t=0.0263434s, 427536 KB] FactPairs: 182
[t=0.0263662s, 427536 KB] Bytes per state: 8
[t=0.0265616s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992362s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0992882s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993139s, 430128 KB] f = 116, 1 evaluated, 0 expanded
[t=0.0993419s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.099366s, 430128 KB] pruning method: none
[t=0.117935s, 431100 KB] f = 142, 4 evaluated, 1 expanded
[t=0.118709s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.11874s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.119667s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.119697s, 431100 KB] g=3, 13 evaluated, 5 expanded
[t=0.120289s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.120322s, 431100 KB] g=4, 16 evaluated, 6 expanded
[t=0.120708s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.120737s, 431100 KB] g=4, 18 evaluated, 6 expanded
[t=0.131828s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.131868s, 431100 KB] g=7, 80 evaluated, 25 expanded
[t=0.133681s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.133715s, 431100 KB] g=9, 90 evaluated, 27 expanded
[t=0.134118s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.134148s, 431100 KB] g=10, 92 evaluated, 28 expanded
[t=0.138451s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.138487s, 431100 KB] g=11, 116 evaluated, 33 expanded
[t=0.147608s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.147643s, 431100 KB] g=14, 167 evaluated, 45 expanded
[t=0.238521s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.238564s, 431364 KB] g=22, 678 evaluated, 199 expanded, 19 reopened
[t=0.239133s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.239163s, 431364 KB] g=23, 681 evaluated, 200 expanded, 19 reopened
[t=0.239912s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.239947s, 431364 KB] g=23, 685 evaluated, 200 expanded, 19 reopened
[t=0.244552s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.244586s, 431364 KB] g=26, 711 evaluated, 205 expanded, 19 reopened
[t=0.249024s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.249058s, 431364 KB] g=29, 736 evaluated, 211 expanded, 19 reopened
[t=0.25262s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.252659s, 431496 KB] g=29, 756 evaluated, 217 expanded, 19 reopened
[t=0.252869s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.252898s, 431496 KB] g=29, 757 evaluated, 217 expanded, 19 reopened
[t=0.257184s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.257221s, 431496 KB] g=30, 781 evaluated, 225 expanded, 19 reopened
[t=0.372174s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.372217s, 431764 KB] g=32, 1427 evaluated, 490 expanded, 53 reopened
[t=0.540377s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.540424s, 431904 KB] g=44, 2371 evaluated, 905 expanded, 117 reopened
[t=0.540992s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.541022s, 431904 KB] g=45, 2374 evaluated, 906 expanded, 117 reopened
[t=0.547779s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.547815s, 431904 KB] g=43, 2412 evaluated, 914 expanded, 117 reopened
[t=0.549271s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.54931s, 431904 KB] g=45, 2420 evaluated, 917 expanded, 117 reopened
[t=0.553785s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.553821s, 431904 KB] g=48, 2445 evaluated, 924 expanded, 117 reopened
[t=0.554923s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.554956s, 431904 KB] g=51, 2451 evaluated, 927 expanded, 117 reopened
[t=0.556239s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.556272s, 431904 KB] g=54, 2458 evaluated, 930 expanded, 117 reopened
[t=0.55702s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.55705s, 431904 KB] g=55, 2462 evaluated, 931 expanded, 117 reopened
[t=0.557437s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.557467s, 431904 KB] g=56, 2464 evaluated, 932 expanded, 117 reopened
[t=0.559274s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.559305s, 431904 KB] g=58, 2474 evaluated, 936 expanded, 117 reopened
[t=0.559705s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.55974s, 431904 KB] g=59, 2476 evaluated, 937 expanded, 117 reopened
[t=0.560307s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.560337s, 431904 KB] g=60, 2479 evaluated, 938 expanded, 117 reopened
[t=0.560725s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.560754s, 431904 KB] g=62, 2481 evaluated, 940 expanded, 117 reopened
[t=0.565403s, 431904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.56544s, 431904 KB] g=63, 2507 evaluated, 952 expanded, 117 reopened
[t=0.566555s, 432036 KB] Solution found!
[t=0.566596s, 432036 KB] Actual search time: 0.467227s
unstack i a (1)
put-down i (1)
unstack a g (1)
put-down a (1)
unstack c e (1)
stack c i (1)
unstack e d (1)
put-down e (1)
unstack c i (1)
stack c b (1)
pick-up d (1)
stack d c (1)
unstack g k (1)
put-down g (1)
unstack k h (1)
stack k i (1)
unstack h j (1)
put-down h (1)
unstack j l (1)
stack j d (1)
unstack l f (1)
stack l j (1)
pick-up e (1)
stack e l (1)
pick-up h (1)
stack h f (1)
unstack k i (1)
put-down k (1)
unstack e l (1)
put-down e (1)
pick-up a (1)
stack a k (1)
unstack l j (1)
put-down l (1)
pick-up e (1)
stack e l (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e l (1)
stack e k (1)
pick-up i (1)
stack i l (1)
unstack j d (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack i l (1)
stack i c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.566622s, 432036 KB] Plan length: 66 step(s).
[t=0.566622s, 432036 KB] Plan cost: 66
[t=0.566622s, 432036 KB] Expanded 959 state(s).
[t=0.566622s, 432036 KB] Reopened 117 state(s).
[t=0.566622s, 432036 KB] Evaluated 2514 state(s).
[t=0.566622s, 432036 KB] Evaluations: 2514
[t=0.566622s, 432036 KB] Generated 4175 state(s).
[t=0.566622s, 432036 KB] Dead ends: 0 state(s).
[t=0.566622s, 432036 KB] Expanded until last jump: 1 state(s).
[t=0.566622s, 432036 KB] Reopened until last jump: 0 state(s).
[t=0.566622s, 432036 KB] Evaluated until last jump: 4 state(s).
[t=0.566622s, 432036 KB] Generated until last jump: 3 state(s).
[t=0.566622s, 432036 KB] Number of registered states: 2514
[t=0.566622s, 432036 KB] Int hash set load factor: 2514/4096 = 0.61377
[t=0.566622s, 432036 KB] Int hash set resizes: 12
[t=0.566622s, 432036 KB] Search time: 0.540061s
[t=0.566622s, 432036 KB] Total time: 0.566622s
Solution found.
Peak memory: 432036 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p156.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9574e-05s, 424928 KB] reading input...
[t=0.00216611s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260246s, 427536 KB] Building successor generator...done!
[t=0.0263029s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263266s, 427536 KB] time for successor generation creation: 0.000167039s
[t=0.0263549s, 427536 KB] Variables: 25
[t=0.0263781s, 427536 KB] FactPairs: 182
[t=0.0264007s, 427536 KB] Bytes per state: 8
[t=0.0265964s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.10905s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.109119s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109145s, 430128 KB] f = 127, 1 evaluated, 0 expanded
[t=0.109173s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.109209s, 430128 KB] pruning method: none
[t=0.127573s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.127623s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.128738s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.128769s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.141009s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.141048s, 431100 KB] g=10, 77 evaluated, 30 expanded
[t=0.151435s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.151472s, 431100 KB] g=15, 135 evaluated, 46 expanded
[t=0.152036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.152068s, 431100 KB] g=15, 138 evaluated, 46 expanded
[t=0.162201s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.162238s, 431232 KB] g=20, 195 evaluated, 59 expanded
[t=0.166169s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.166201s, 431232 KB] g=18, 217 evaluated, 63 expanded
[t=0.167664s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.167698s, 431232 KB] g=20, 225 evaluated, 65 expanded
[t=0.168617s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.168647s, 431232 KB] g=21, 230 evaluated, 66 expanded
[t=0.169563s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.169595s, 431232 KB] g=22, 235 evaluated, 67 expanded
[t=0.183834s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.18387s, 431232 KB] g=26, 315 evaluated, 86 expanded
[t=0.190825s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.190869s, 431232 KB] g=27, 354 evaluated, 96 expanded
[t=0.193033s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.193064s, 431232 KB] g=29, 366 evaluated, 99 expanded
[t=0.201608s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.201642s, 431232 KB] g=28, 414 evaluated, 110 expanded
[t=0.204347s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.204379s, 431232 KB] g=31, 429 evaluated, 115 expanded
[t=0.205653s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.205686s, 431232 KB] g=32, 436 evaluated, 116 expanded
[t=0.220486s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.220524s, 431364 KB] g=30, 518 evaluated, 137 expanded
[t=0.258909s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.258946s, 431364 KB] g=32, 732 evaluated, 192 expanded, 4 reopened
[t=0.262534s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.262566s, 431364 KB] g=33, 752 evaluated, 197 expanded, 4 reopened
[t=0.265642s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.265679s, 431364 KB] g=34, 769 evaluated, 203 expanded, 4 reopened
[t=0.267508s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.26754s, 431364 KB] g=36, 779 evaluated, 205 expanded, 4 reopened
[t=0.281714s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.281752s, 431496 KB] g=45, 858 evaluated, 225 expanded, 4 reopened
[t=0.287514s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.287549s, 431496 KB] g=49, 890 evaluated, 235 expanded, 4 reopened
[t=0.288479s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.288511s, 431496 KB] g=51, 895 evaluated, 237 expanded, 4 reopened
[t=0.29034s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.290372s, 431496 KB] g=51, 905 evaluated, 240 expanded, 4 reopened
[t=0.292198s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.292233s, 431496 KB] g=53, 915 evaluated, 243 expanded, 4 reopened
[t=0.292803s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.29284s, 431496 KB] g=54, 918 evaluated, 244 expanded, 4 reopened
[t=0.304815s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.304853s, 431496 KB] g=59, 985 evaluated, 264 expanded, 4 reopened
[t=0.305953s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.305986s, 431496 KB] g=61, 991 evaluated, 266 expanded, 4 reopened
[t=0.330216s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.330253s, 431628 KB] g=61, 1126 evaluated, 301 expanded, 4 reopened
[t=0.33119s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.331225s, 431628 KB] g=62, 1131 evaluated, 302 expanded, 4 reopened
[t=0.331975s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.332004s, 431628 KB] g=63, 1135 evaluated, 303 expanded, 4 reopened
[t=0.337754s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.33779s, 431628 KB] g=66, 1167 evaluated, 311 expanded, 4 reopened
[t=0.340335s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.340368s, 431628 KB] g=67, 1181 evaluated, 315 expanded, 4 reopened
[t=0.342188s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.342221s, 431628 KB] g=69, 1191 evaluated, 318 expanded, 4 reopened
[t=0.342435s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.342463s, 431628 KB] g=70, 1192 evaluated, 319 expanded, 4 reopened
[t=0.343398s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.343432s, 431628 KB] g=72, 1197 evaluated, 321 expanded, 4 reopened
[t=0.343823s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.343852s, 431628 KB] g=73, 1199 evaluated, 322 expanded, 4 reopened
[t=0.344244s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.344275s, 431628 KB] g=74, 1201 evaluated, 323 expanded, 4 reopened
[t=0.344308s, 431628 KB] Solution found!
[t=0.344336s, 431628 KB] Actual search time: 0.235122s
stack e j (1)
unstack k c (1)
stack k e (1)
unstack b g (1)
stack b c (1)
unstack k e (1)
put-down k (1)
unstack e j (1)
stack e k (1)
unstack b c (1)
put-down b (1)
unstack g a (1)
stack g e (1)
unstack a h (1)
stack a b (1)
unstack h l (1)
stack h a (1)
unstack j d (1)
stack j c (1)
unstack d i (1)
stack d j (1)
unstack h a (1)
stack h d (1)
unstack g e (1)
put-down g (1)
unstack l f (1)
stack l a (1)
pick-up f (1)
stack f e (1)
unstack l a (1)
stack l i (1)
unstack h d (1)
stack h g (1)
unstack a b (1)
put-down a (1)
pick-up b (1)
stack b d (1)
pick-up a (1)
stack a f (1)
unstack l i (1)
put-down l (1)
pick-up i (1)
stack i b (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e l (1)
pick-up k (1)
stack k e (1)
unstack i b (1)
put-down i (1)
unstack b d (1)
stack b i (1)
unstack d j (1)
put-down d (1)
unstack j c (1)
stack j b (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.34436s, 431628 KB] Plan length: 75 step(s).
[t=0.34436s, 431628 KB] Plan cost: 75
[t=0.34436s, 431628 KB] Expanded 325 state(s).
[t=0.34436s, 431628 KB] Reopened 4 state(s).
[t=0.34436s, 431628 KB] Evaluated 1202 state(s).
[t=0.34436s, 431628 KB] Evaluations: 1202
[t=0.34436s, 431628 KB] Generated 1571 state(s).
[t=0.34436s, 431628 KB] Dead ends: 0 state(s).
[t=0.34436s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.34436s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.34436s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.34436s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.34436s, 431628 KB] Number of registered states: 1202
[t=0.34436s, 431628 KB] Int hash set load factor: 1202/2048 = 0.586914
[t=0.34436s, 431628 KB] Int hash set resizes: 11
[t=0.34436s, 431628 KB] Search time: 0.317765s
[t=0.34436s, 431628 KB] Total time: 0.34436s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p157.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6537e-05s, 424928 KB] reading input...
[t=0.00210857s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261697s, 427536 KB] Building successor generator...done!
[t=0.0264497s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264729s, 427536 KB] time for successor generation creation: 0.000167166s
[t=0.026501s, 427536 KB] Variables: 25
[t=0.0265231s, 427536 KB] FactPairs: 182
[t=0.0265446s, 427536 KB] Bytes per state: 8
[t=0.0267394s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991341s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0991854s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.099211s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.099239s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0992627s, 430128 KB] pruning method: none
[t=0.111191s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.111245s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.120539s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.120664s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.122582s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.122615s, 431100 KB] g=3, 13 evaluated, 4 expanded
[t=0.122837s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.122866s, 431100 KB] g=4, 14 evaluated, 5 expanded
[t=0.123082s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.123111s, 431100 KB] g=4, 15 evaluated, 5 expanded
[t=0.123896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.123926s, 431100 KB] g=5, 19 evaluated, 6 expanded
[t=0.124894s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.124924s, 431100 KB] g=6, 24 evaluated, 8 expanded
[t=0.125142s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.12517s, 431100 KB] g=6, 25 evaluated, 8 expanded
[t=0.130467s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.130503s, 431100 KB] g=9, 53 evaluated, 14 expanded
[t=0.132036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.132077s, 431100 KB] g=10, 61 evaluated, 16 expanded
[t=0.140944s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.140984s, 431100 KB] g=12, 108 evaluated, 25 expanded
[t=0.143462s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.143498s, 431100 KB] g=13, 121 evaluated, 28 expanded
[t=0.144838s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.144872s, 431100 KB] g=14, 128 evaluated, 29 expanded
[t=0.146233s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.146267s, 431100 KB] g=16, 135 evaluated, 31 expanded
[t=0.156415s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.15645s, 431232 KB] g=20, 189 evaluated, 44 expanded
[t=0.159869s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.159905s, 431232 KB] g=22, 207 evaluated, 48 expanded
[t=0.162751s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.162784s, 431232 KB] g=21, 222 evaluated, 51 expanded
[t=0.164126s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.164158s, 431232 KB] g=22, 229 evaluated, 53 expanded
[t=0.165321s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.165352s, 431232 KB] g=23, 235 evaluated, 54 expanded
[t=0.168555s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.168586s, 431232 KB] g=25, 252 evaluated, 58 expanded
[t=0.172764s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.172801s, 431232 KB] g=27, 274 evaluated, 63 expanded
[t=0.174343s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.174375s, 431232 KB] g=30, 282 evaluated, 66 expanded
[t=0.175159s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.175192s, 431232 KB] g=31, 286 evaluated, 67 expanded
[t=0.277081s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.277133s, 431496 KB] g=30, 828 evaluated, 215 expanded, 13 reopened
[t=0.280856s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.280889s, 431496 KB] g=34, 847 evaluated, 221 expanded, 13 reopened
[t=0.282631s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.282665s, 431496 KB] g=36, 856 evaluated, 223 expanded, 13 reopened
[t=0.283075s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.283104s, 431496 KB] g=37, 858 evaluated, 224 expanded, 13 reopened
[t=0.284827s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.28486s, 431496 KB] g=39, 867 evaluated, 226 expanded, 13 reopened
[t=0.288659s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.288691s, 431496 KB] g=42, 887 evaluated, 232 expanded, 13 reopened
[t=0.289486s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.289519s, 431496 KB] g=43, 891 evaluated, 233 expanded, 13 reopened
[t=0.290312s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.290342s, 431496 KB] g=44, 895 evaluated, 235 expanded, 13 reopened
[t=0.290562s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.29059s, 431496 KB] g=44, 896 evaluated, 235 expanded, 13 reopened
[t=0.290812s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.29084s, 431496 KB] g=45, 897 evaluated, 236 expanded, 13 reopened
[t=0.292375s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.292406s, 431496 KB] g=48, 905 evaluated, 239 expanded, 13 reopened
[t=0.297528s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.297564s, 431496 KB] g=50, 932 evaluated, 248 expanded, 13 reopened
[t=0.300614s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.300647s, 431496 KB] g=52, 948 evaluated, 255 expanded, 13 reopened
[t=0.301262s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.301294s, 431496 KB] g=53, 951 evaluated, 256 expanded, 13 reopened
[t=0.301709s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.301738s, 431496 KB] g=55, 953 evaluated, 258 expanded, 13 reopened
[t=0.302149s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.302178s, 431496 KB] g=56, 955 evaluated, 259 expanded, 13 reopened
[t=0.30343s, 431496 KB] Solution found!
[t=0.303463s, 431496 KB] Actual search time: 0.204198s
stack h a (1)
unstack k g (1)
put-down k (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d b (1)
unstack g e (1)
stack g h (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
stack j d (1)
unstack l f (1)
put-down l (1)
unstack g h (1)
put-down g (1)
pick-up f (1)
stack f e (1)
unstack j d (1)
stack j i (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a f (1)
pick-up l (1)
stack l j (1)
unstack a f (1)
stack a h (1)
unstack l j (1)
stack l d (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
put-down e (1)
pick-up k (1)
stack k e (1)
unstack j i (1)
stack j l (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.303489s, 431496 KB] Plan length: 59 step(s).
[t=0.303489s, 431496 KB] Plan cost: 59
[t=0.303489s, 431496 KB] Expanded 266 state(s).
[t=0.303489s, 431496 KB] Reopened 13 state(s).
[t=0.303489s, 431496 KB] Evaluated 962 state(s).
[t=0.303489s, 431496 KB] Evaluations: 962
[t=0.303489s, 431496 KB] Generated 1310 state(s).
[t=0.303489s, 431496 KB] Dead ends: 0 state(s).
[t=0.303489s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.303489s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.303489s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.303489s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.303489s, 431496 KB] Number of registered states: 962
[t=0.303489s, 431496 KB] Int hash set load factor: 962/2048 = 0.469727
[t=0.303489s, 431496 KB] Int hash set resizes: 11
[t=0.303489s, 431496 KB] Search time: 0.27675s
[t=0.303489s, 431496 KB] Total time: 0.303489s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p158.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5462e-05s, 424928 KB] reading input...
[t=0.00223484s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259804s, 427536 KB] Building successor generator...done!
[t=0.0262701s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262934s, 427536 KB] time for successor generation creation: 0.000178118s
[t=0.0263226s, 427536 KB] Variables: 25
[t=0.0263458s, 427536 KB] FactPairs: 182
[t=0.0263681s, 427536 KB] Bytes per state: 8
[t=0.0265657s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981711s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.0982231s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098249s, 430128 KB] f = 85, 1 evaluated, 0 expanded
[t=0.0982764s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.098301s, 430128 KB] pruning method: none
[t=0.116688s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.116739s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117678s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.11771s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.121852s, 431100 KB] f = 86, 32 evaluated, 10 expanded
[t=0.12368s, 431100 KB] f = 89, 42 evaluated, 14 expanded
[t=0.124253s, 431100 KB] f = 90, 45 evaluated, 15 expanded
[t=0.12858s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.128613s, 431100 KB] g=5, 69 evaluated, 23 expanded
[t=0.131518s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.131555s, 431100 KB] g=5, 85 evaluated, 29 expanded
[t=0.136393s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.136426s, 431100 KB] g=7, 112 evaluated, 37 expanded
[t=0.155085s, 431232 KB] f = 91, 216 evaluated, 72 expanded
[t=0.155305s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.155335s, 431232 KB] g=13, 217 evaluated, 73 expanded
[t=0.163798s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.163832s, 431232 KB] g=12, 264 evaluated, 87 expanded
[t=0.165126s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.165169s, 431232 KB] g=14, 271 evaluated, 89 expanded
[t=0.166095s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.166128s, 431232 KB] g=15, 276 evaluated, 90 expanded
[t=0.169025s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.169058s, 431232 KB] g=17, 292 evaluated, 93 expanded
[t=0.169447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.169476s, 431232 KB] g=18, 294 evaluated, 94 expanded
[t=0.17576s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.175795s, 431232 KB] g=20, 329 evaluated, 103 expanded
[t=0.17618s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.176209s, 431232 KB] g=20, 331 evaluated, 103 expanded
[t=0.177143s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.177175s, 431232 KB] g=21, 336 evaluated, 104 expanded
[t=0.17738s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.177409s, 431232 KB] g=21, 337 evaluated, 104 expanded
[t=0.177973s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.178006s, 431232 KB] g=22, 340 evaluated, 105 expanded
[t=0.179105s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.179135s, 431232 KB] g=24, 346 evaluated, 107 expanded
[t=0.196445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.19648s, 431232 KB] g=23, 443 evaluated, 132 expanded
[t=0.198828s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.198863s, 431232 KB] g=25, 456 evaluated, 135 expanded
[t=0.199075s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.199104s, 431232 KB] g=26, 457 evaluated, 136 expanded
[t=0.199846s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.199876s, 431232 KB] g=27, 461 evaluated, 137 expanded
[t=0.200266s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.200296s, 431364 KB] g=27, 463 evaluated, 137 expanded
[t=0.200508s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.200536s, 431364 KB] g=28, 464 evaluated, 138 expanded
[t=0.202172s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.202211s, 431364 KB] g=30, 473 evaluated, 140 expanded
[t=0.202961s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.202991s, 431364 KB] g=31, 477 evaluated, 141 expanded
[t=0.204628s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.20466s, 431364 KB] g=34, 486 evaluated, 144 expanded
[t=0.206295s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.206326s, 431364 KB] g=34, 495 evaluated, 147 expanded
[t=0.206709s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.206741s, 431364 KB] g=34, 497 evaluated, 147 expanded
[t=0.206954s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.206983s, 431364 KB] g=35, 498 evaluated, 148 expanded
[t=0.208122s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.208154s, 431364 KB] g=37, 504 evaluated, 150 expanded
[t=0.208542s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.208571s, 431364 KB] g=38, 506 evaluated, 151 expanded
[t=0.208793s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.208823s, 431364 KB] g=39, 507 evaluated, 152 expanded
[t=0.209034s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.209063s, 431364 KB] g=40, 508 evaluated, 153 expanded
[t=0.209453s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.209482s, 431364 KB] g=41, 510 evaluated, 154 expanded
[t=0.209693s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.209722s, 431364 KB] g=42, 511 evaluated, 155 expanded
[t=0.210114s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.210145s, 431364 KB] g=43, 513 evaluated, 156 expanded
[t=0.21126s, 431364 KB] Solution found!
[t=0.211293s, 431364 KB] Actual search time: 0.112989s
unstack l e (1)
put-down l (1)
pick-up h (1)
stack h f (1)
unstack g k (1)
stack g e (1)
unstack k b (1)
put-down k (1)
unstack b a (1)
stack b l (1)
unstack g e (1)
put-down g (1)
pick-up k (1)
stack k b (1)
unstack a j (1)
stack a k (1)
pick-up j (1)
stack j e (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack j e (1)
stack j b (1)
unstack e d (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.211319s, 431364 KB] Plan length: 46 step(s).
[t=0.211319s, 431364 KB] Plan cost: 46
[t=0.211319s, 431364 KB] Expanded 162 state(s).
[t=0.211319s, 431364 KB] Reopened 0 state(s).
[t=0.211319s, 431364 KB] Evaluated 520 state(s).
[t=0.211319s, 431364 KB] Evaluations: 520
[t=0.211319s, 431364 KB] Generated 698 state(s).
[t=0.211319s, 431364 KB] Dead ends: 0 state(s).
[t=0.211319s, 431364 KB] Expanded until last jump: 72 state(s).
[t=0.211319s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.211319s, 431364 KB] Evaluated until last jump: 216 state(s).
[t=0.211319s, 431364 KB] Generated until last jump: 299 state(s).
[t=0.211319s, 431364 KB] Number of registered states: 520
[t=0.211319s, 431364 KB] Int hash set load factor: 520/1024 = 0.507812
[t=0.211319s, 431364 KB] Int hash set resizes: 10
[t=0.211319s, 431364 KB] Search time: 0.184754s
[t=0.211319s, 431364 KB] Total time: 0.211319s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p159.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5335e-05s, 424928 KB] reading input...
[t=0.00216991s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261039s, 427536 KB] Building successor generator...done!
[t=0.0263827s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264066s, 427536 KB] time for successor generation creation: 0.00016775s
[t=0.0264352s, 427536 KB] Variables: 25
[t=0.0264587s, 427536 KB] FactPairs: 182
[t=0.0264811s, 427536 KB] Bytes per state: 8
[t=0.0266745s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990145s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0990671s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990933s, 430128 KB] f = 131, 1 evaluated, 0 expanded
[t=0.0991211s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0991461s, 430128 KB] pruning method: none
[t=0.111033s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.111084s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.117576s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118163s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.118193s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.119146s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.119179s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.120478s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.120509s, 431100 KB] g=6, 18 evaluated, 6 expanded
[t=0.121802s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.121832s, 431100 KB] g=7, 25 evaluated, 7 expanded
[t=0.123149s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.123182s, 431100 KB] g=10, 32 evaluated, 10 expanded
[t=0.131048s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.131088s, 431100 KB] g=16, 75 evaluated, 24 expanded
[t=0.133202s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.133235s, 431100 KB] g=17, 86 evaluated, 26 expanded
[t=0.133453s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.133482s, 431100 KB] g=18, 87 evaluated, 27 expanded
[t=0.133692s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.133721s, 431100 KB] g=18, 88 evaluated, 27 expanded
[t=0.134124s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.134156s, 431100 KB] g=18, 90 evaluated, 27 expanded
[t=0.13637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.136407s, 431100 KB] g=20, 102 evaluated, 30 expanded
[t=0.1368s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.13683s, 431100 KB] g=20, 104 evaluated, 30 expanded
[t=0.137224s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.137254s, 431100 KB] g=21, 106 evaluated, 31 expanded
[t=0.139472s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.139507s, 431100 KB] g=23, 118 evaluated, 34 expanded
[t=0.139907s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.139936s, 431100 KB] g=24, 120 evaluated, 35 expanded
[t=0.140513s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.140543s, 431100 KB] g=25, 123 evaluated, 36 expanded
[t=0.141673s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.141703s, 431100 KB] g=26, 129 evaluated, 37 expanded
[t=0.141919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.141951s, 431100 KB] g=27, 130 evaluated, 38 expanded
[t=0.142705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.142735s, 431100 KB] g=28, 134 evaluated, 39 expanded
[t=0.146045s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.14608s, 431100 KB] g=30, 152 evaluated, 46 expanded
[t=0.148843s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.148875s, 431100 KB] g=31, 167 evaluated, 51 expanded
[t=0.152525s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.152562s, 431100 KB] g=34, 187 evaluated, 56 expanded
[t=0.156594s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.156626s, 431232 KB] g=35, 209 evaluated, 61 expanded
[t=0.157024s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.157056s, 431232 KB] g=36, 211 evaluated, 62 expanded
[t=0.160891s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.160924s, 431232 KB] g=38, 232 evaluated, 66 expanded
[t=0.161872s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.161905s, 431232 KB] g=39, 237 evaluated, 67 expanded
[t=0.162668s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.162699s, 431232 KB] g=41, 241 evaluated, 69 expanded
[t=0.163646s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.163677s, 431232 KB] g=42, 246 evaluated, 70 expanded
[t=0.163889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.163917s, 431232 KB] g=42, 247 evaluated, 70 expanded
[t=0.164132s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.164163s, 431232 KB] g=43, 248 evaluated, 71 expanded
[t=0.165104s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.165135s, 431232 KB] g=44, 253 evaluated, 73 expanded
[t=0.165345s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.165373s, 431232 KB] g=44, 254 evaluated, 73 expanded
[t=0.16652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.166552s, 431232 KB] g=46, 260 evaluated, 76 expanded
[t=0.166959s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.166991s, 431232 KB] g=47, 262 evaluated, 77 expanded
[t=0.167391s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.16742s, 431232 KB] g=48, 264 evaluated, 78 expanded
[t=0.167453s, 431232 KB] Solution found!
[t=0.16748s, 431232 KB] Actual search time: 0.0683302s
stack k a (1)
unstack g d (1)
put-down g (1)
unstack c h (1)
put-down c (1)
pick-up g (1)
stack g k (1)
pick-up c (1)
stack c d (1)
unstack h i (1)
put-down h (1)
unstack i f (1)
stack i c (1)
unstack g k (1)
put-down g (1)
unstack k a (1)
put-down k (1)
pick-up a (1)
stack a k (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack i c (1)
put-down i (1)
unstack c d (1)
put-down c (1)
unstack j e (1)
stack j d (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.167505s, 431232 KB] Plan length: 49 step(s).
[t=0.167505s, 431232 KB] Plan cost: 49
[t=0.167505s, 431232 KB] Expanded 80 state(s).
[t=0.167505s, 431232 KB] Reopened 0 state(s).
[t=0.167505s, 431232 KB] Evaluated 265 state(s).
[t=0.167505s, 431232 KB] Evaluations: 265
[t=0.167505s, 431232 KB] Generated 346 state(s).
[t=0.167505s, 431232 KB] Dead ends: 0 state(s).
[t=0.167505s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.167505s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.167505s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.167505s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.167505s, 431232 KB] Number of registered states: 265
[t=0.167505s, 431232 KB] Int hash set load factor: 265/512 = 0.517578
[t=0.167505s, 431232 KB] Int hash set resizes: 9
[t=0.167505s, 431232 KB] Search time: 0.140831s
[t=0.167505s, 431232 KB] Total time: 0.167505s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p160.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9917e-05s, 424928 KB] reading input...
[t=0.00220475s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257932s, 427536 KB] Building successor generator...done!
[t=0.026073s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260957s, 427536 KB] time for successor generation creation: 0.000167516s
[t=0.026124s, 427536 KB] Variables: 25
[t=0.0261466s, 427536 KB] FactPairs: 182
[t=0.0261686s, 427536 KB] Bytes per state: 8
[t=0.0263631s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980695s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0981218s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981479s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0981746s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0981983s, 430128 KB] pruning method: none
[t=0.116352s, 431100 KB] f = 144, 3 evaluated, 1 expanded
[t=0.116957s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.116989s, 431100 KB] g=3, 6 evaluated, 3 expanded
[t=0.11756s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.11759s, 431100 KB] g=5, 9 evaluated, 5 expanded
[t=0.118334s, 431100 KB] f = 146, 13 evaluated, 6 expanded
[t=0.1191s, 431100 KB] f = 148, 17 evaluated, 8 expanded
[t=0.119498s, 431100 KB] f = 149, 19 evaluated, 9 expanded
[t=0.12042s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.12045s, 431100 KB] g=8, 24 evaluated, 11 expanded
[t=0.122441s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.122472s, 431100 KB] g=11, 35 evaluated, 15 expanded
[t=0.122863s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.122893s, 431100 KB] g=12, 37 evaluated, 16 expanded
[t=0.124352s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.124385s, 431100 KB] g=15, 45 evaluated, 19 expanded
[t=0.128179s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.128212s, 431100 KB] g=21, 66 evaluated, 25 expanded
[t=0.129856s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.129887s, 431100 KB] g=23, 75 evaluated, 27 expanded
[t=0.130992s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.131023s, 431100 KB] g=24, 81 evaluated, 28 expanded
[t=0.1325s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.132531s, 431100 KB] g=26, 89 evaluated, 30 expanded
[t=0.140978s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.141014s, 431100 KB] g=25, 136 evaluated, 44 expanded
[t=0.141585s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.141615s, 431100 KB] g=26, 139 evaluated, 45 expanded
[t=0.143617s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.143658s, 431100 KB] g=28, 150 evaluated, 47 expanded
[t=0.144577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.144612s, 431100 KB] g=29, 155 evaluated, 48 expanded
[t=0.144824s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.144853s, 431100 KB] g=30, 156 evaluated, 49 expanded
[t=0.14506s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.145091s, 431100 KB] g=30, 157 evaluated, 49 expanded
[t=0.146537s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.146572s, 431232 KB] g=31, 165 evaluated, 51 expanded
[t=0.147505s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.147537s, 431232 KB] g=32, 170 evaluated, 52 expanded
[t=0.148284s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.148314s, 431232 KB] g=33, 174 evaluated, 53 expanded
[t=0.148521s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.148549s, 431232 KB] g=33, 175 evaluated, 53 expanded
[t=0.149112s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.149141s, 431232 KB] g=34, 178 evaluated, 54 expanded
[t=0.152215s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.152247s, 431232 KB] g=37, 195 evaluated, 58 expanded
[t=0.154603s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.154636s, 431232 KB] g=40, 208 evaluated, 61 expanded
[t=0.155387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.155419s, 431232 KB] g=41, 212 evaluated, 62 expanded
[t=0.15634s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.156374s, 431232 KB] g=43, 217 evaluated, 64 expanded
[t=0.157117s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.157147s, 431232 KB] g=44, 221 evaluated, 65 expanded
[t=0.158599s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.158629s, 431232 KB] g=45, 229 evaluated, 67 expanded
[t=0.168854s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.168889s, 431232 KB] g=49, 286 evaluated, 83 expanded
[t=0.177135s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.177178s, 431232 KB] g=51, 332 evaluated, 99 expanded
[t=0.17757s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.1776s, 431232 KB] g=52, 334 evaluated, 100 expanded
[t=0.178534s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.178564s, 431232 KB] g=55, 339 evaluated, 104 expanded
[t=0.178775s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.178805s, 431232 KB] g=56, 340 evaluated, 105 expanded
[t=0.179204s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.179236s, 431232 KB] g=57, 342 evaluated, 106 expanded
[t=0.180361s, 431232 KB] Solution found!
[t=0.180394s, 431232 KB] Actual search time: 0.0821937s
unstack h e (1)
stack h j (1)
unstack e l (1)
put-down e (1)
unstack h j (1)
stack h e (1)
unstack j k (1)
put-down j (1)
unstack h e (1)
stack h k (1)
pick-up j (1)
stack j e (1)
unstack l g (1)
put-down l (1)
unstack g b (1)
stack g j (1)
unstack b d (1)
stack b h (1)
unstack g j (1)
put-down g (1)
unstack b h (1)
stack b l (1)
unstack d i (1)
stack d b (1)
unstack h k (1)
stack h g (1)
unstack d b (1)
stack d j (1)
unstack k a (1)
stack k b (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j d (1)
pick-up e (1)
stack e j (1)
unstack k b (1)
stack k f (1)
unstack b l (1)
stack b i (1)
unstack e j (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.18042s, 431232 KB] Plan length: 60 step(s).
[t=0.18042s, 431232 KB] Plan cost: 60
[t=0.18042s, 431232 KB] Expanded 113 state(s).
[t=0.18042s, 431232 KB] Reopened 0 state(s).
[t=0.18042s, 431232 KB] Evaluated 349 state(s).
[t=0.18042s, 431232 KB] Evaluations: 349
[t=0.18042s, 431232 KB] Generated 468 state(s).
[t=0.18042s, 431232 KB] Dead ends: 0 state(s).
[t=0.18042s, 431232 KB] Expanded until last jump: 9 state(s).
[t=0.18042s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.18042s, 431232 KB] Evaluated until last jump: 19 state(s).
[t=0.18042s, 431232 KB] Generated until last jump: 26 state(s).
[t=0.18042s, 431232 KB] Number of registered states: 349
[t=0.18042s, 431232 KB] Int hash set load factor: 349/512 = 0.681641
[t=0.18042s, 431232 KB] Int hash set resizes: 9
[t=0.18042s, 431232 KB] Search time: 0.154058s
[t=0.18042s, 431232 KB] Total time: 0.18042s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023739
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 7 test success: 20 of 20 (100.0%)

---------- FOLD 9/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 39 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.24822837114334106 (0.8408023118972778 vs. 0.5925739407539368), which occurred at index 46.
  _module_class,
 | avg_train_loss=0.098420 | avg_val_loss=0.092357
Epoch 2 | avg_train_loss=0.067054 | avg_val_loss=0.044357
Epoch 3 | avg_train_loss=0.040752 | avg_val_loss=0.038484
Epoch 4 | avg_train_loss=0.037272 | avg_val_loss=0.036697
Epoch 5 | avg_train_loss=0.035820 | avg_val_loss=0.035837
Epoch 6 | avg_train_loss=0.034852 | avg_val_loss=0.034861
Epoch 7 | avg_train_loss=0.033983 | avg_val_loss=0.034729
Epoch 8 | avg_train_loss=0.033508 | avg_val_loss=0.033453
Epoch 9 | avg_train_loss=0.032786 | avg_val_loss=0.033332
Epoch 10 | avg_train_loss=0.032321 | avg_val_loss=0.032549
Epoch 11 | avg_train_loss=0.031719 | avg_val_loss=0.032162
Epoch 12 | avg_train_loss=0.031216 | avg_val_loss=0.032161
Epoch 13 | avg_train_loss=0.031008 | avg_val_loss=0.031511
Epoch 14 | avg_train_loss=0.030473 | avg_val_loss=0.031109
Epoch 15 | avg_train_loss=0.030190 | avg_val_loss=0.030874
Epoch 16 | avg_train_loss=0.029860 | avg_val_loss=0.030595
Epoch 17 | avg_train_loss=0.029413 | avg_val_loss=0.030691
Epoch 18 | avg_train_loss=0.029206 | avg_val_loss=0.030105
Epoch 19 | avg_train_loss=0.028891 | avg_val_loss=0.029588
Epoch 20 | avg_train_loss=0.028423 | avg_val_loss=0.029365
Epoch 21 | avg_train_loss=0.028126 | avg_val_loss=0.029293
Epoch 22 | avg_train_loss=0.027779 | avg_val_loss=0.029515
Epoch 23 | avg_train_loss=0.027542 | avg_val_loss=0.028762
Epoch 24 | avg_train_loss=0.027180 | avg_val_loss=0.028521
Epoch 25 | avg_train_loss=0.026964 | avg_val_loss=0.028366
Epoch 26 | avg_train_loss=0.026537 | avg_val_loss=0.027884
Epoch 27 | avg_train_loss=0.026379 | avg_val_loss=0.027862
Epoch 28 | avg_train_loss=0.026023 | avg_val_loss=0.027770
Epoch 29 | avg_train_loss=0.025840 | avg_val_loss=0.027175
Epoch 30 | avg_train_loss=0.025491 | avg_val_loss=0.026991
Epoch 31 | avg_train_loss=0.025431 | avg_val_loss=0.026529
Epoch 32 | avg_train_loss=0.024951 | avg_val_loss=0.026650
Epoch 33 | avg_train_loss=0.024766 | avg_val_loss=0.026213
Epoch 34 | avg_train_loss=0.024527 | avg_val_loss=0.026140
Epoch 35 | avg_train_loss=0.024126 | avg_val_loss=0.026135
Epoch 36 | avg_train_loss=0.024016 | avg_val_loss=0.026115
Epoch 37 | avg_train_loss=0.023992 | avg_val_loss=0.026072
Epoch 38 | avg_train_loss=0.023626 | avg_val_loss=0.025784
Epoch 39 | avg_train_loss=0.023472 | avg_val_loss=0.025423
Epoch 40 | avg_train_loss=0.023342 | avg_val_loss=0.025561
Epoch 41 | avg_train_loss=0.023087 | avg_val_loss=0.025554
Epoch 42 | avg_train_loss=0.022978 | avg_val_loss=0.025289
Epoch 43 | avg_train_loss=0.022834 | avg_val_loss=0.025154
Epoch 44 | avg_train_loss=0.022696 | avg_val_loss=0.024997
Epoch 45 | avg_train_loss=0.022426 | avg_val_loss=0.024948
Epoch 46 | avg_train_loss=0.022445 | avg_val_loss=0.024867
Epoch 47 | avg_train_loss=0.022160 | avg_val_loss=0.024465
Epoch 48 | avg_train_loss=0.022120 | avg_val_loss=0.024722
Epoch 49 | avg_train_loss=0.022027 | avg_val_loss=0.025126
Epoch 50 | avg_train_loss=0.021748 | avg_val_loss=0.024427
Epoch 51 | avg_train_loss=0.021635 | avg_val_loss=0.024653
Epoch 52 | avg_train_loss=0.021507 | avg_val_loss=0.024701
Epoch 53 | avg_train_loss=0.021557 | avg_val_loss=0.024380
Epoch 54 | avg_train_loss=0.021365 | avg_val_loss=0.024227
Epoch 55 | avg_train_loss=0.021129 | avg_val_loss=0.024401
Epoch 56 | avg_train_loss=0.021147 | avg_val_loss=0.024373
Epoch 57 | avg_train_loss=0.020984 | avg_val_loss=0.023894
Epoch 58 | avg_train_loss=0.020763 | avg_val_loss=0.024275
Epoch 59 | avg_train_loss=0.020626 | avg_val_loss=0.024059
Epoch 60 | avg_train_loss=0.020599 | avg_val_loss=0.024387
Epoch 61 | avg_train_loss=0.020387 | avg_val_loss=0.024706
Epoch 62 | avg_train_loss=0.020416 | avg_val_loss=0.024536
Epoch 63 | avg_train_loss=0.020173 | avg_val_loss=0.024417
Epoch 64 | avg_train_loss=0.020055 | avg_val_loss=0.024150
Epoch 65 | avg_train_loss=0.019895 | avg_val_loss=0.024125
Epoch 66 | avg_train_loss=0.019814 | avg_val_loss=0.023777
Epoch 67 | avg_train_loss=0.019779 | avg_val_loss=0.023888
Epoch 68 | avg_train_loss=0.019621 | avg_val_loss=0.023949
Epoch 69 | avg_train_loss=0.019491 | avg_val_loss=0.023590
Epoch 70 | avg_train_loss=0.019337 | avg_val_loss=0.024121
Epoch 71 | avg_train_loss=0.019247 | avg_val_loss=0.023269
Epoch 72 | avg_train_loss=0.019127 | avg_val_loss=0.023798
Epoch 73 | avg_train_loss=0.019011 | avg_val_loss=0.023644
Epoch 74 | avg_train_loss=0.018731 | avg_val_loss=0.023813
Epoch 75 | avg_train_loss=0.018710 | avg_val_loss=0.024367
Epoch 76 | avg_train_loss=0.018716 | avg_val_loss=0.023925
Epoch 77 | avg_train_loss=0.018605 | avg_val_loss=0.023991
Epoch 78 | avg_train_loss=0.018423 | avg_val_loss=0.024055
Epoch 79 | avg_train_loss=0.018196 | avg_val_loss=0.024393
Epoch 80 | avg_train_loss=0.018261 | avg_val_loss=0.024252
Epoch 81 | avg_train_loss=0.018088 | avg_val_loss=0.024325
Epoch 82 | avg_train_loss=0.018040 | avg_val_loss=0.023701
Epoch 83 | avg_train_loss=0.017862 | avg_val_loss=0.023789
Epoch 84 | avg_train_loss=0.017687 | avg_val_loss=0.023979
Epoch 85 | avg_train_loss=0.017634 | avg_val_loss=0.024130
Epoch 86 | avg_train_loss=0.017584 | avg_val_loss=0.023575
Epoch 87 | avg_train_loss=0.017478 | avg_val_loss=0.023858
Epoch 88 | avg_train_loss=0.017424 | avg_val_loss=0.023967
Epoch 89 | avg_train_loss=0.017295 | avg_val_loss=0.024110
Epoch 90 | avg_train_loss=0.017021 | avg_val_loss=0.023874
Epoch 91 | avg_train_loss=0.017065 | avg_val_loss=0.023941
Epoch 92 | avg_train_loss=0.016931 | avg_val_loss=0.023819
Epoch 93 | avg_train_loss=0.016887 | avg_val_loss=0.023777
Epoch 94 | avg_train_loss=0.016722 | avg_val_loss=0.023878
Epoch 95 | avg_train_loss=0.016446 | avg_val_loss=0.023891
Epoch 96 | avg_train_loss=0.016538 | avg_val_loss=0.023859
Epoch 97 | avg_train_loss=0.016531 | avg_val_loss=0.023648
Epoch 98 | avg_train_loss=0.016260 | avg_val_loss=0.023701
Epoch 99 | avg_train_loss=0.016248 | avg_val_loss=0.023767
Epoch 100 | avg_train_loss=0.016352 | avg_val_loss=0.024175
Epoch 101 | avg_train_loss=0.016009 | avg_val_loss=0.023916
Epoch 102 | avg_train_loss=0.016059INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p161.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6939e-05s, 424928 KB] reading input...
[t=0.00215671s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257222s, 427536 KB] Building successor generator...done!
[t=0.0259998s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026023s, 427536 KB] time for successor generation creation: 0.000165225s
[t=0.0260511s, 427536 KB] Variables: 25
[t=0.0260736s, 427536 KB] FactPairs: 182
[t=0.0260953s, 427536 KB] Bytes per state: 8
[t=0.0262884s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.108876s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.108932s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.108958s, 430128 KB] f = 113, 1 evaluated, 0 expanded
[t=0.108985s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.109008s, 430128 KB] pruning method: none
[t=0.12752s, 431100 KB] f = 117, 5 evaluated, 1 expanded
[t=0.127938s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.127969s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.128534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.128564s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.129306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.129337s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.130082s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.130112s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.131231s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.131263s, 431100 KB] g=6, 24 evaluated, 7 expanded
[t=0.131469s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.131497s, 431100 KB] g=6, 25 evaluated, 7 expanded
[t=0.137393s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.137431s, 431100 KB] g=12, 58 evaluated, 16 expanded
[t=0.138354s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.138394s, 431100 KB] g=13, 63 evaluated, 17 expanded
[t=0.138982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.139016s, 431100 KB] g=14, 66 evaluated, 18 expanded
[t=0.144929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.144963s, 431100 KB] g=18, 99 evaluated, 25 expanded
[t=0.145175s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.145204s, 431100 KB] g=19, 100 evaluated, 26 expanded
[t=0.146295s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.146326s, 431100 KB] g=20, 106 evaluated, 27 expanded
[t=0.147787s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.147822s, 431100 KB] g=21, 114 evaluated, 28 expanded
[t=0.14821s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.14824s, 431100 KB] g=22, 116 evaluated, 29 expanded
[t=0.156106s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.15614s, 431232 KB] g=24, 160 evaluated, 39 expanded
[t=0.157597s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.157629s, 431232 KB] g=25, 168 evaluated, 41 expanded
[t=0.159092s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.159128s, 431232 KB] g=27, 176 evaluated, 43 expanded
[t=0.159517s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.159549s, 431232 KB] g=28, 178 evaluated, 44 expanded
[t=0.159757s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.159785s, 431232 KB] g=28, 179 evaluated, 44 expanded
[t=0.16035s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.160379s, 431232 KB] g=29, 182 evaluated, 45 expanded
[t=0.165059s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.165095s, 431232 KB] g=32, 208 evaluated, 52 expanded
[t=0.166376s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.166406s, 431232 KB] g=34, 215 evaluated, 54 expanded
[t=0.168057s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.16809s, 431232 KB] g=36, 224 evaluated, 56 expanded
[t=0.169369s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.169407s, 431232 KB] g=37, 231 evaluated, 57 expanded
[t=0.171237s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.171268s, 431232 KB] g=40, 241 evaluated, 60 expanded
[t=0.171831s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.171861s, 431232 KB] g=41, 244 evaluated, 61 expanded
[t=0.172245s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.172274s, 431232 KB] g=41, 246 evaluated, 61 expanded
[t=0.172486s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.172514s, 431232 KB] g=42, 247 evaluated, 62 expanded
[t=0.172722s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.17275s, 431232 KB] g=42, 248 evaluated, 62 expanded
[t=0.173675s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.173704s, 431232 KB] g=44, 253 evaluated, 64 expanded
[t=0.174094s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.174123s, 431232 KB] g=45, 255 evaluated, 65 expanded
[t=0.174545s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.17458s, 431232 KB] g=46, 257 evaluated, 66 expanded
[t=0.174967s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.174997s, 431232 KB] g=47, 259 evaluated, 67 expanded
[t=0.175029s, 431232 KB] Solution found!
[t=0.175055s, 431232 KB] Actual search time: 0.0660437s
unstack d i (1)
stack d b (1)
unstack a g (1)
stack a i (1)
unstack g j (1)
stack g a (1)
unstack d b (1)
stack d j (1)
unstack g a (1)
put-down g (1)
unstack b h (1)
stack b d (1)
unstack h f (1)
stack h g (1)
unstack a i (1)
stack a b (1)
unstack l k (1)
put-down l (1)
unstack a b (1)
stack a h (1)
pick-up k (1)
stack k i (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e b (1)
unstack k i (1)
stack k f (1)
unstack i c (1)
put-down i (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
stack b c (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.17508s, 431232 KB] Plan length: 48 step(s).
[t=0.17508s, 431232 KB] Plan cost: 48
[t=0.17508s, 431232 KB] Expanded 69 state(s).
[t=0.17508s, 431232 KB] Reopened 0 state(s).
[t=0.17508s, 431232 KB] Evaluated 260 state(s).
[t=0.17508s, 431232 KB] Evaluations: 260
[t=0.17508s, 431232 KB] Generated 330 state(s).
[t=0.17508s, 431232 KB] Dead ends: 0 state(s).
[t=0.17508s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.17508s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.17508s, 431232 KB] Evaluated until last jump: 5 state(s).
[t=0.17508s, 431232 KB] Generated until last jump: 4 state(s).
[t=0.17508s, 431232 KB] Number of registered states: 260
[t=0.17508s, 431232 KB] Int hash set load factor: 260/512 = 0.507812
[t=0.17508s, 431232 KB] Int hash set resizes: 9
[t=0.17508s, 431232 KB] Search time: 0.148792s
[t=0.17508s, 431232 KB] Total time: 0.17508s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p162.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6819e-05s, 424928 KB] reading input...
[t=0.00218268s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260369s, 427536 KB] Building successor generator...done!
[t=0.0263153s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263381s, 427536 KB] time for successor generation creation: 0.000167497s
[t=0.0263667s, 427536 KB] Variables: 25
[t=0.0263896s, 427536 KB] FactPairs: 182
[t=0.0264118s, 427536 KB] Bytes per state: 8
[t=0.0266038s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0989328s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0989947s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990212s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0990483s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0990734s, 430128 KB] pruning method: none
[t=0.117536s, 431100 KB] f = 147, 4 evaluated, 1 expanded
[t=0.117782s, 431100 KB] f = 148, 5 evaluated, 2 expanded
[t=0.118191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.118222s, 431100 KB] g=3, 7 evaluated, 3 expanded
[t=0.118631s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.118661s, 431100 KB] g=4, 9 evaluated, 4 expanded
[t=0.123045s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.123077s, 431100 KB] g=10, 32 evaluated, 12 expanded
[t=0.123481s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.123511s, 431100 KB] g=10, 34 evaluated, 12 expanded
[t=0.125236s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.125268s, 431100 KB] g=12, 43 evaluated, 15 expanded
[t=0.129611s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.129648s, 431100 KB] g=16, 66 evaluated, 20 expanded
[t=0.133431s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.133464s, 431100 KB] g=17, 86 evaluated, 25 expanded
[t=0.133873s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.133905s, 431100 KB] g=18, 88 evaluated, 26 expanded
[t=0.141469s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.141505s, 431100 KB] g=24, 128 evaluated, 38 expanded
[t=0.149833s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.149869s, 431232 KB] g=30, 172 evaluated, 49 expanded
[t=0.152159s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.152191s, 431232 KB] g=31, 184 evaluated, 51 expanded
[t=0.157891s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.157924s, 431232 KB] g=34, 214 evaluated, 58 expanded
[t=0.158142s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.15817s, 431232 KB] g=34, 215 evaluated, 58 expanded
[t=0.164397s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.164437s, 431232 KB] g=38, 248 evaluated, 66 expanded
[t=0.165791s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.165825s, 431232 KB] g=40, 255 evaluated, 68 expanded
[t=0.166441s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.166473s, 431232 KB] g=41, 258 evaluated, 69 expanded
[t=0.167628s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.167657s, 431232 KB] g=43, 264 evaluated, 71 expanded
[t=0.169948s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.169982s, 431232 KB] g=44, 276 evaluated, 75 expanded
[t=0.171898s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.17193s, 431232 KB] g=44, 286 evaluated, 78 expanded
[t=0.176834s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.176866s, 431232 KB] g=49, 312 evaluated, 87 expanded
[t=0.177471s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.177506s, 431232 KB] g=50, 315 evaluated, 88 expanded
[t=0.1813s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.181333s, 431232 KB] g=48, 335 evaluated, 95 expanded
[t=0.181742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.181774s, 431232 KB] g=49, 337 evaluated, 96 expanded
[t=0.182556s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.182588s, 431232 KB] g=50, 341 evaluated, 97 expanded
[t=0.184128s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.184158s, 431232 KB] g=53, 349 evaluated, 102 expanded
[t=0.184565s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.184594s, 431232 KB] g=54, 351 evaluated, 103 expanded
[t=0.184811s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.184839s, 431232 KB] g=55, 352 evaluated, 104 expanded
[t=0.185255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.185286s, 431232 KB] g=56, 354 evaluated, 105 expanded
[t=0.186464s, 431232 KB] Solution found!
[t=0.186496s, 431232 KB] Actual search time: 0.0874194s
stack g e (1)
unstack f j (1)
put-down f (1)
unstack j l (1)
put-down j (1)
unstack g e (1)
stack g j (1)
unstack e k (1)
stack e l (1)
unstack k h (1)
put-down k (1)
unstack g j (1)
put-down g (1)
pick-up j (1)
stack j e (1)
pick-up f (1)
stack f k (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a f (1)
unstack b d (1)
stack b j (1)
unstack d i (1)
put-down d (1)
unstack a f (1)
stack a h (1)
unstack b j (1)
stack b d (1)
unstack j e (1)
stack j i (1)
unstack b d (1)
stack b j (1)
unstack e l (1)
stack e d (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack b j (1)
stack b l (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.186522s, 431232 KB] Plan length: 59 step(s).
[t=0.186522s, 431232 KB] Plan cost: 59
[t=0.186522s, 431232 KB] Expanded 112 state(s).
[t=0.186522s, 431232 KB] Reopened 0 state(s).
[t=0.186522s, 431232 KB] Evaluated 361 state(s).
[t=0.186522s, 431232 KB] Evaluations: 361
[t=0.186522s, 431232 KB] Generated 472 state(s).
[t=0.186522s, 431232 KB] Dead ends: 0 state(s).
[t=0.186522s, 431232 KB] Expanded until last jump: 2 state(s).
[t=0.186522s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.186522s, 431232 KB] Evaluated until last jump: 5 state(s).
[t=0.186522s, 431232 KB] Generated until last jump: 5 state(s).
[t=0.186522s, 431232 KB] Number of registered states: 361
[t=0.186522s, 431232 KB] Int hash set load factor: 361/512 = 0.705078
[t=0.186522s, 431232 KB] Int hash set resizes: 9
[t=0.186522s, 431232 KB] Search time: 0.159919s
[t=0.186522s, 431232 KB] Total time: 0.186522s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p163.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5431e-05s, 424928 KB] reading input...
[t=0.00219054s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259097s, 427536 KB] Building successor generator...done!
[t=0.0261862s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262097s, 427536 KB] time for successor generation creation: 0.000166381s
[t=0.0262388s, 427536 KB] Variables: 25
[t=0.0262619s, 427536 KB] FactPairs: 182
[t=0.026284s, 427536 KB] Bytes per state: 8
[t=0.0264985s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978597s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0979108s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979363s, 430128 KB] f = 133, 1 evaluated, 0 expanded
[t=0.097964s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0979881s, 430128 KB] pruning method: none
[t=0.116694s, 431100 KB] f = 134, 6 evaluated, 1 expanded
[t=0.117291s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.117321s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.118074s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.118105s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.118334s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.118365s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.12037s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.120401s, 431100 KB] g=6, 25 evaluated, 6 expanded
[t=0.121155s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.121185s, 431100 KB] g=7, 29 evaluated, 7 expanded
[t=0.122659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.122692s, 431100 KB] g=8, 37 evaluated, 8 expanded
[t=0.122905s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.122934s, 431100 KB] g=9, 38 evaluated, 9 expanded
[t=0.123144s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.123173s, 431100 KB] g=9, 39 evaluated, 9 expanded
[t=0.125354s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.125399s, 431100 KB] g=11, 51 evaluated, 11 expanded
[t=0.126155s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.126184s, 431100 KB] g=12, 55 evaluated, 12 expanded
[t=0.127671s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.127702s, 431100 KB] g=14, 63 evaluated, 14 expanded
[t=0.131528s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.131562s, 431100 KB] g=15, 84 evaluated, 18 expanded
[t=0.136634s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.136667s, 431100 KB] g=17, 112 evaluated, 23 expanded
[t=0.137055s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.137084s, 431100 KB] g=17, 114 evaluated, 23 expanded
[t=0.14883s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.148865s, 431100 KB] g=18, 179 evaluated, 36 expanded
[t=0.149804s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.149834s, 431100 KB] g=19, 184 evaluated, 37 expanded
[t=0.150241s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.150275s, 431100 KB] g=19, 186 evaluated, 37 expanded
[t=0.15103s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.15106s, 431100 KB] g=20, 190 evaluated, 38 expanded
[t=0.151446s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.151475s, 431100 KB] g=20, 192 evaluated, 38 expanded
[t=0.152054s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.152086s, 431232 KB] g=21, 195 evaluated, 39 expanded
[t=0.153018s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.153048s, 431232 KB] g=22, 200 evaluated, 40 expanded
[t=0.153257s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.153288s, 431232 KB] g=22, 201 evaluated, 40 expanded
[t=0.153863s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.153892s, 431232 KB] g=23, 204 evaluated, 41 expanded
[t=0.155007s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.155038s, 431232 KB] g=24, 210 evaluated, 42 expanded
[t=0.155966s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.156002s, 431232 KB] g=26, 215 evaluated, 44 expanded
[t=0.158375s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.158411s, 431232 KB] g=29, 228 evaluated, 48 expanded
[t=0.160242s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.160275s, 431232 KB] g=31, 238 evaluated, 51 expanded
[t=0.160842s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.160871s, 431232 KB] g=31, 241 evaluated, 51 expanded
[t=0.164889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.164923s, 431232 KB] g=36, 263 evaluated, 57 expanded
[t=0.165138s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.165167s, 431232 KB] g=36, 264 evaluated, 57 expanded
[t=0.167544s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.167576s, 431232 KB] g=39, 277 evaluated, 62 expanded
[t=0.184955s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.184993s, 431232 KB] g=38, 373 evaluated, 94 expanded
[t=0.18809s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.188123s, 431232 KB] g=42, 390 evaluated, 99 expanded
[t=0.189408s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.189441s, 431232 KB] g=43, 397 evaluated, 101 expanded
[t=0.18965s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.189678s, 431232 KB] g=43, 398 evaluated, 101 expanded
[t=0.190618s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.19065s, 431232 KB] g=45, 403 evaluated, 103 expanded
[t=0.191045s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.191075s, 431232 KB] g=46, 405 evaluated, 104 expanded
[t=0.191468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.191498s, 431232 KB] g=47, 407 evaluated, 105 expanded
[t=0.191891s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.191923s, 431232 KB] g=48, 409 evaluated, 106 expanded
[t=0.191956s, 431232 KB] Solution found!
[t=0.191982s, 431232 KB] Actual search time: 0.0939905s
put-down j (1)
unstack d l (1)
stack d j (1)
unstack i c (1)
stack i g (1)
unstack b k (1)
stack b c (1)
unstack l h (1)
stack l d (1)
unstack i g (1)
put-down i (1)
unstack k a (1)
stack k l (1)
unstack g f (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up e (1)
stack e b (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b c (1)
stack b e (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j d (1)
unstack b e (1)
stack b c (1)
unstack j d (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.192007s, 431232 KB] Plan length: 49 step(s).
[t=0.192007s, 431232 KB] Plan cost: 49
[t=0.192007s, 431232 KB] Expanded 108 state(s).
[t=0.192007s, 431232 KB] Reopened 0 state(s).
[t=0.192007s, 431232 KB] Evaluated 410 state(s).
[t=0.192007s, 431232 KB] Evaluations: 410
[t=0.192007s, 431232 KB] Generated 516 state(s).
[t=0.192007s, 431232 KB] Dead ends: 0 state(s).
[t=0.192007s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.192007s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.192007s, 431232 KB] Evaluated until last jump: 6 state(s).
[t=0.192007s, 431232 KB] Generated until last jump: 5 state(s).
[t=0.192007s, 431232 KB] Number of registered states: 410
[t=0.192007s, 431232 KB] Int hash set load factor: 410/512 = 0.800781
[t=0.192007s, 431232 KB] Int hash set resizes: 9
[t=0.192007s, 431232 KB] Search time: 0.165509s
[t=0.192007s, 431232 KB] Total time: 0.192007s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p164.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6659e-05s, 424928 KB] reading input...
[t=0.00212815s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258378s, 427536 KB] Building successor generator...done!
[t=0.0261165s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261397s, 427536 KB] time for successor generation creation: 0.000167064s
[t=0.0261678s, 427536 KB] Variables: 25
[t=0.0261909s, 427536 KB] FactPairs: 182
[t=0.0262126s, 427536 KB] Bytes per state: 8
[t=0.0264051s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979145s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0979679s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.097994s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0980207s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0980449s, 430128 KB] pruning method: none
[t=0.109843s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.109893s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117412s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.117455s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.117665s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.117694s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.118086s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.118116s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.119222s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.119255s, 431100 KB] g=4, 18 evaluated, 4 expanded
[t=0.119638s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.119668s, 431100 KB] g=4, 20 evaluated, 4 expanded
[t=0.120234s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.120264s, 431100 KB] g=5, 23 evaluated, 5 expanded
[t=0.120827s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.120857s, 431100 KB] g=6, 26 evaluated, 6 expanded
[t=0.121951s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.121991s, 431100 KB] g=7, 32 evaluated, 7 expanded
[t=0.123464s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.123497s, 431100 KB] g=9, 40 evaluated, 9 expanded
[t=0.126351s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.126386s, 431100 KB] g=13, 56 evaluated, 13 expanded
[t=0.127666s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.127698s, 431100 KB] g=14, 63 evaluated, 15 expanded
[t=0.147198s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.147235s, 431100 KB] g=23, 172 evaluated, 51 expanded
[t=0.147981s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.148016s, 431100 KB] g=24, 176 evaluated, 52 expanded
[t=0.148762s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.148795s, 431100 KB] g=25, 180 evaluated, 53 expanded
[t=0.149183s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.149213s, 431100 KB] g=26, 182 evaluated, 54 expanded
[t=0.1496s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.149635s, 431232 KB] g=27, 184 evaluated, 55 expanded
[t=0.150205s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.150234s, 431232 KB] g=28, 187 evaluated, 56 expanded
[t=0.150812s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.150844s, 431232 KB] g=29, 190 evaluated, 57 expanded
[t=0.159053s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.159087s, 431232 KB] g=32, 236 evaluated, 73 expanded
[t=0.166469s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.166507s, 431232 KB] g=38, 277 evaluated, 85 expanded
[t=0.166899s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.166929s, 431232 KB] g=39, 279 evaluated, 86 expanded
[t=0.168029s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.168059s, 431232 KB] g=40, 285 evaluated, 88 expanded
[t=0.168981s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.16901s, 431232 KB] g=42, 290 evaluated, 90 expanded
[t=0.169577s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.169607s, 431232 KB] g=43, 293 evaluated, 91 expanded
[t=0.171448s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.171484s, 431232 KB] g=46, 303 evaluated, 96 expanded
[t=0.172059s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.172089s, 431232 KB] g=48, 306 evaluated, 98 expanded
[t=0.17266s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.17269s, 431232 KB] g=50, 309 evaluated, 100 expanded
[t=0.173805s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.173835s, 431232 KB] g=52, 315 evaluated, 104 expanded
[t=0.173867s, 431232 KB] Solution found!
[t=0.173894s, 431232 KB] Actual search time: 0.0758451s
stack d g (1)
unstack j h (1)
stack j b (1)
unstack k e (1)
stack k i (1)
unstack d g (1)
stack d j (1)
pick-up g (1)
stack g e (1)
unstack d j (1)
stack d k (1)
unstack j b (1)
stack j d (1)
unstack g e (1)
put-down g (1)
unstack h l (1)
stack h g (1)
pick-up b (1)
stack b l (1)
unstack e f (1)
stack e b (1)
unstack f a (1)
stack f e (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack j d (1)
stack j e (1)
unstack d k (1)
put-down d (1)
unstack k i (1)
stack k f (1)
unstack j e (1)
stack j i (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.173919s, 431232 KB] Plan length: 53 step(s).
[t=0.173919s, 431232 KB] Plan cost: 53
[t=0.173919s, 431232 KB] Expanded 106 state(s).
[t=0.173919s, 431232 KB] Reopened 0 state(s).
[t=0.173919s, 431232 KB] Evaluated 316 state(s).
[t=0.173919s, 431232 KB] Evaluations: 316
[t=0.173919s, 431232 KB] Generated 422 state(s).
[t=0.173919s, 431232 KB] Dead ends: 0 state(s).
[t=0.173919s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.173919s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.173919s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.173919s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.173919s, 431232 KB] Number of registered states: 316
[t=0.173919s, 431232 KB] Int hash set load factor: 316/512 = 0.617188
[t=0.173919s, 431232 KB] Int hash set resizes: 9
[t=0.173919s, 431232 KB] Search time: 0.147515s
[t=0.173919s, 431232 KB] Total time: 0.173919s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p165.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7005e-05s, 424928 KB] reading input...
[t=0.00216789s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257716s, 427536 KB] Building successor generator...done!
[t=0.0260515s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260747s, 427536 KB] time for successor generation creation: 0.000167896s
[t=0.0261035s, 427536 KB] Variables: 25
[t=0.0261267s, 427536 KB] FactPairs: 182
[t=0.0261495s, 427536 KB] Bytes per state: 8
[t=0.0263479s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982011s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0982515s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982773s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0983049s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0983288s, 430128 KB] pruning method: none
[t=0.116571s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.116621s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117553s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.117584s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.117793s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.117823s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.11803s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.118069s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.11887s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.118905s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.119517s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.119549s, 431100 KB] g=4, 17 evaluated, 4 expanded
[t=0.125645s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.125678s, 431100 KB] g=8, 51 evaluated, 13 expanded
[t=0.126637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.126672s, 431100 KB] g=9, 56 evaluated, 14 expanded
[t=0.13161s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.131643s, 431100 KB] g=12, 83 evaluated, 23 expanded
[t=0.132208s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.132238s, 431100 KB] g=12, 86 evaluated, 23 expanded
[t=0.132626s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.132658s, 431100 KB] g=13, 88 evaluated, 24 expanded
[t=0.133758s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.133792s, 431100 KB] g=14, 94 evaluated, 26 expanded
[t=0.138939s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.138974s, 431100 KB] g=16, 122 evaluated, 35 expanded
[t=0.142235s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.142269s, 431100 KB] g=19, 140 evaluated, 45 expanded
[t=0.143919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.143954s, 431100 KB] g=21, 149 evaluated, 48 expanded
[t=0.145772s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.145802s, 431100 KB] g=20, 159 evaluated, 53 expanded
[t=0.146013s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.146042s, 431100 KB] g=20, 160 evaluated, 53 expanded
[t=0.14929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.149324s, 431100 KB] g=25, 178 evaluated, 59 expanded
[t=0.15025s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.150281s, 431232 KB] g=26, 183 evaluated, 60 expanded
[t=0.150509s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.150546s, 431232 KB] g=27, 184 evaluated, 61 expanded
[t=0.151654s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.151684s, 431232 KB] g=28, 190 evaluated, 62 expanded
[t=0.152794s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.152824s, 431232 KB] g=30, 196 evaluated, 64 expanded
[t=0.153573s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.153604s, 431232 KB] g=31, 200 evaluated, 65 expanded
[t=0.154353s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.15439s, 431232 KB] g=33, 204 evaluated, 67 expanded
[t=0.154962s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.154992s, 431232 KB] g=34, 207 evaluated, 68 expanded
[t=0.155381s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.155411s, 431232 KB] g=35, 209 evaluated, 69 expanded
[t=0.1558s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.155829s, 431232 KB] g=36, 211 evaluated, 70 expanded
[t=0.156221s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.156253s, 431232 KB] g=37, 213 evaluated, 71 expanded
[t=0.158979s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.159016s, 431232 KB] g=42, 228 evaluated, 79 expanded
[t=0.160294s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.160325s, 431232 KB] g=44, 235 evaluated, 82 expanded
[t=0.170207s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.170245s, 431232 KB] g=44, 290 evaluated, 106 expanded
[t=0.171194s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.171226s, 431232 KB] g=47, 296 evaluated, 110 expanded
[t=0.171254s, 431232 KB] Solution found!
[t=0.17128s, 431232 KB] Actual search time: 0.0729473s
stack b a (1)
unstack j h (1)
stack j d (1)
unstack g f (1)
stack g j (1)
pick-up h (1)
stack h f (1)
unstack g j (1)
put-down g (1)
unstack b a (1)
stack b j (1)
pick-up l (1)
stack l b (1)
pick-up a (1)
stack a l (1)
unstack h f (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack l b (1)
put-down l (1)
unstack b j (1)
stack b l (1)
unstack j d (1)
stack j b (1)
unstack f k (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.171305s, 431232 KB] Plan length: 47 step(s).
[t=0.171305s, 431232 KB] Plan cost: 47
[t=0.171305s, 431232 KB] Expanded 111 state(s).
[t=0.171305s, 431232 KB] Reopened 0 state(s).
[t=0.171305s, 431232 KB] Evaluated 296 state(s).
[t=0.171305s, 431232 KB] Evaluations: 296
[t=0.171305s, 431232 KB] Generated 412 state(s).
[t=0.171305s, 431232 KB] Dead ends: 0 state(s).
[t=0.171305s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.171305s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.171305s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.171305s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.171305s, 431232 KB] Number of registered states: 296
[t=0.171305s, 431232 KB] Int hash set load factor: 296/512 = 0.578125
[t=0.171305s, 431232 KB] Int hash set resizes: 9
[t=0.171305s, 431232 KB] Search time: 0.144958s
[t=0.171305s, 431232 KB] Total time: 0.171305s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p166.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1466 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9431e-05s, 424928 KB] reading input...
[t=0.00214016s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257501s, 427536 KB] Building successor generator...done!
[t=0.0260314s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260544s, 427536 KB] time for successor generation creation: 0.000169722s
[t=0.0260822s, 427536 KB] Variables: 25
[t=0.0261041s, 427536 KB] FactPairs: 182
[t=0.0261257s, 427536 KB] Bytes per state: 8
[t=0.0263189s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977378s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0977904s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978162s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0978441s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0978681s, 430128 KB] pruning method: none
[t=0.11602s, 431100 KB] f = 147, 3 evaluated, 1 expanded
[t=0.116075s, 431100 KB] f = 149, 3 evaluated, 2 expanded
[t=0.11665s, 431100 KB] f = 150, 6 evaluated, 4 expanded
[t=0.118093s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.118123s, 431100 KB] g=6, 14 evaluated, 8 expanded
[t=0.118712s, 431100 KB] f = 151, 17 evaluated, 10 expanded
[t=0.118928s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.118957s, 431100 KB] g=7, 18 evaluated, 11 expanded
[t=0.120219s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.120249s, 431100 KB] g=9, 25 evaluated, 13 expanded
[t=0.120636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.120665s, 431100 KB] g=10, 27 evaluated, 14 expanded
[t=0.120877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.120905s, 431100 KB] g=11, 28 evaluated, 15 expanded
[t=0.121639s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.121669s, 431100 KB] g=12, 32 evaluated, 16 expanded
[t=0.127531s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.127565s, 431100 KB] g=17, 65 evaluated, 28 expanded
[t=0.149956s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.149996s, 431100 KB] g=27, 191 evaluated, 74 expanded
[t=0.150386s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.150419s, 431100 KB] g=28, 193 evaluated, 75 expanded
[t=0.156836s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.15687s, 431232 KB] g=31, 229 evaluated, 84 expanded
[t=0.159936s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.159969s, 431232 KB] g=34, 246 evaluated, 90 expanded
[t=0.168754s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.168788s, 431232 KB] g=37, 295 evaluated, 111 expanded, 2 reopened
[t=0.169355s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.169388s, 431232 KB] g=38, 298 evaluated, 112 expanded, 2 reopened
[t=0.171911s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.171944s, 431232 KB] g=40, 312 evaluated, 116 expanded, 2 reopened
[t=0.172861s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.172891s, 431232 KB] g=42, 317 evaluated, 118 expanded, 2 reopened
[t=0.177187s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.177222s, 431232 KB] g=46, 341 evaluated, 127 expanded, 2 reopened
[t=0.177609s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.17764s, 431232 KB] g=47, 343 evaluated, 128 expanded, 2 reopened
[t=0.178029s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.178058s, 431232 KB] g=48, 345 evaluated, 129 expanded, 2 reopened
[t=0.178804s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.178836s, 431232 KB] g=49, 349 evaluated, 130 expanded, 2 reopened
[t=0.179046s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.179075s, 431232 KB] g=50, 350 evaluated, 131 expanded, 2 reopened
[t=0.180348s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.180381s, 431232 KB] g=52, 357 evaluated, 133 expanded, 2 reopened
[t=0.180946s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.180975s, 431232 KB] g=53, 360 evaluated, 134 expanded, 2 reopened
[t=0.18118s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.181208s, 431232 KB] g=53, 361 evaluated, 134 expanded, 2 reopened
[t=0.182843s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.182875s, 431232 KB] g=55, 370 evaluated, 136 expanded, 2 reopened
[t=0.185921s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.185952s, 431232 KB] g=59, 387 evaluated, 141 expanded, 2 reopened
[t=0.18651s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.186555s, 431232 KB] g=59, 390 evaluated, 141 expanded, 2 reopened
[t=0.18783s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.18786s, 431232 KB] g=60, 397 evaluated, 144 expanded, 2 reopened
[t=0.189127s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.18916s, 431232 KB] g=62, 404 evaluated, 146 expanded, 2 reopened
[t=0.189372s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.189401s, 431232 KB] g=63, 405 evaluated, 147 expanded, 2 reopened
[t=0.192448s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.192483s, 431232 KB] g=64, 422 evaluated, 154 expanded, 2 reopened
[t=0.192693s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.192721s, 431232 KB] g=65, 423 evaluated, 155 expanded, 2 reopened
[t=0.193103s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.193135s, 431232 KB] g=66, 425 evaluated, 156 expanded, 2 reopened
[t=0.194242s, 431232 KB] Solution found!
[t=0.194275s, 431232 KB] Actual search time: 0.0964044s
put-down h (1)
unstack l a (1)
put-down l (1)
unstack a f (1)
stack a h (1)
unstack f g (1)
stack f a (1)
unstack g j (1)
stack g l (1)
unstack j k (1)
stack j g (1)
unstack k e (1)
stack k f (1)
unstack j g (1)
stack j e (1)
unstack g l (1)
put-down g (1)
unstack j e (1)
stack j l (1)
unstack e b (1)
stack e j (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d k (1)
unstack e j (1)
stack e i (1)
unstack j l (1)
stack j e (1)
pick-up l (1)
stack l b (1)
unstack d k (1)
stack d j (1)
unstack k f (1)
stack k l (1)
unstack f a (1)
stack f d (1)
unstack a h (1)
stack a f (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j d (1)
unstack e i (1)
stack e k (1)
unstack l b (1)
put-down l (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.1943s, 431232 KB] Plan length: 69 step(s).
[t=0.1943s, 431232 KB] Plan cost: 69
[t=0.1943s, 431232 KB] Expanded 162 state(s).
[t=0.1943s, 431232 KB] Reopened 2 state(s).
[t=0.1943s, 431232 KB] Evaluated 432 state(s).
[t=0.1943s, 431232 KB] Evaluations: 432
[t=0.1943s, 431232 KB] Generated 607 state(s).
[t=0.1943s, 431232 KB] Dead ends: 0 state(s).
[t=0.1943s, 431232 KB] Expanded until last jump: 10 state(s).
[t=0.1943s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.1943s, 431232 KB] Evaluated until last jump: 17 state(s).
[t=0.1943s, 431232 KB] Generated until last jump: 25 state(s).
[t=0.1943s, 431232 KB] Number of registered states: 432
[t=0.1943s, 431232 KB] Int hash set load factor: 432/512 = 0.84375
[t=0.1943s, 431232 KB] Int hash set resizes: 9
[t=0.1943s, 431232 KB] Search time: 0.167982s
[t=0.1943s, 431232 KB] Total time: 0.1943s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p167.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6289e-05s, 424928 KB] reading input...
[t=0.00214814s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261791s, 427536 KB] Building successor generator...done!
[t=0.0264594s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264829s, 427536 KB] time for successor generation creation: 0.000167615s
[t=0.026512s, 427536 KB] Variables: 25
[t=0.0265352s, 427536 KB] FactPairs: 182
[t=0.026558s, 427536 KB] Bytes per state: 8
[t=0.0267569s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992958s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0993472s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993729s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0994007s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0994344s, 430128 KB] pruning method: none
[t=0.117966s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.118026s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118958s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.11899s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.12099s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.12102s, 431100 KB] g=6, 20 evaluated, 7 expanded
[t=0.121227s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.121256s, 431100 KB] g=6, 21 evaluated, 7 expanded
[t=0.121646s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.121676s, 431100 KB] g=7, 23 evaluated, 8 expanded
[t=0.122974s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.123006s, 431100 KB] g=9, 30 evaluated, 10 expanded
[t=0.124109s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.124139s, 431100 KB] g=11, 36 evaluated, 12 expanded
[t=0.125956s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.125997s, 431100 KB] g=14, 46 evaluated, 15 expanded
[t=0.126387s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.126417s, 431100 KB] g=14, 48 evaluated, 15 expanded
[t=0.134851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.134888s, 431100 KB] g=17, 95 evaluated, 30 expanded
[t=0.135984s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.136013s, 431100 KB] g=19, 101 evaluated, 32 expanded
[t=0.138376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.138408s, 431100 KB] g=21, 114 evaluated, 38 expanded
[t=0.138616s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.138644s, 431100 KB] g=21, 115 evaluated, 38 expanded
[t=0.138855s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.138884s, 431100 KB] g=22, 116 evaluated, 39 expanded
[t=0.139447s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.13948s, 431100 KB] g=23, 119 evaluated, 40 expanded
[t=0.140043s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.140079s, 431100 KB] g=24, 122 evaluated, 41 expanded
[t=0.14047s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.1405s, 431100 KB] g=25, 124 evaluated, 42 expanded
[t=0.143418s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.143451s, 431100 KB] g=28, 140 evaluated, 48 expanded
[t=0.14384s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.143869s, 431100 KB] g=29, 142 evaluated, 49 expanded
[t=0.144439s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.144468s, 431100 KB] g=30, 145 evaluated, 50 expanded
[t=0.144857s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.144886s, 431100 KB] g=31, 147 evaluated, 51 expanded
[t=0.145815s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.145844s, 431100 KB] g=31, 152 evaluated, 53 expanded
[t=0.146607s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.146643s, 431100 KB] g=32, 156 evaluated, 54 expanded
[t=0.147919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.147952s, 431100 KB] g=34, 163 evaluated, 56 expanded
[t=0.148343s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.148372s, 431100 KB] g=35, 165 evaluated, 57 expanded
[t=0.149116s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.149151s, 431232 KB] g=37, 169 evaluated, 59 expanded
[t=0.149365s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.149393s, 431232 KB] g=38, 170 evaluated, 60 expanded
[t=0.149782s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.149811s, 431232 KB] g=39, 172 evaluated, 61 expanded
[t=0.150936s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.150968s, 431232 KB] g=41, 178 evaluated, 66 expanded
[t=0.151001s, 431232 KB] Solution found!
[t=0.151027s, 431232 KB] Actual search time: 0.0515884s
unstack f h (1)
put-down f (1)
pick-up a (1)
stack a f (1)
unstack h j (1)
stack h a (1)
unstack g e (1)
put-down g (1)
unstack j k (1)
stack j e (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a j (1)
pick-up f (1)
stack f k (1)
unstack a j (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack j e (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.151052s, 431232 KB] Plan length: 42 step(s).
[t=0.151052s, 431232 KB] Plan cost: 42
[t=0.151052s, 431232 KB] Expanded 68 state(s).
[t=0.151052s, 431232 KB] Reopened 0 state(s).
[t=0.151052s, 431232 KB] Evaluated 179 state(s).
[t=0.151052s, 431232 KB] Evaluations: 179
[t=0.151052s, 431232 KB] Generated 245 state(s).
[t=0.151052s, 431232 KB] Dead ends: 0 state(s).
[t=0.151052s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.151052s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.151052s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.151052s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.151052s, 431232 KB] Number of registered states: 179
[t=0.151052s, 431232 KB] Int hash set load factor: 179/256 = 0.699219
[t=0.151052s, 431232 KB] Int hash set resizes: 8
[t=0.151052s, 431232 KB] Search time: 0.124296s
[t=0.151052s, 431232 KB] Total time: 0.151052s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p168.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6176e-05s, 424928 KB] reading input...
[t=0.00214775s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257559s, 427536 KB] Building successor generator...done!
[t=0.0260288s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026052s, 427536 KB] time for successor generation creation: 0.000162725s
[t=0.0260804s, 427536 KB] Variables: 25
[t=0.0261037s, 427536 KB] FactPairs: 182
[t=0.0261264s, 427536 KB] Bytes per state: 8
[t=0.026321s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981881s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0982387s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982645s, 430128 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0982924s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0983167s, 430128 KB] pruning method: none
[t=0.116737s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.116787s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.117036s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.118677s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.118709s, 431100 KB] g=5, 14 evaluated, 5 expanded
[t=0.118923s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.118952s, 431100 KB] g=6, 15 evaluated, 6 expanded
[t=0.120263s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.120297s, 431100 KB] g=8, 22 evaluated, 8 expanded
[t=0.123009s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.123041s, 431100 KB] g=12, 37 evaluated, 12 expanded
[t=0.123623s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.123656s, 431100 KB] g=13, 40 evaluated, 13 expanded
[t=0.124406s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.124436s, 431100 KB] g=14, 44 evaluated, 14 expanded
[t=0.124647s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.124676s, 431100 KB] g=14, 45 evaluated, 14 expanded
[t=0.124891s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.12492s, 431100 KB] g=15, 46 evaluated, 15 expanded
[t=0.125309s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.125349s, 431100 KB] g=15, 48 evaluated, 15 expanded
[t=0.125921s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.125951s, 431100 KB] g=16, 51 evaluated, 16 expanded
[t=0.131563s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.1316s, 431100 KB] g=21, 82 evaluated, 25 expanded
[t=0.133962s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.133996s, 431100 KB] g=25, 95 evaluated, 29 expanded
[t=0.134209s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.134239s, 431100 KB] g=26, 96 evaluated, 30 expanded
[t=0.15296s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.153s, 431232 KB] g=20, 200 evaluated, 66 expanded, 2 reopened
[t=0.16511s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.165148s, 431232 KB] g=25, 267 evaluated, 84 expanded, 3 reopened
[t=0.166434s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.166467s, 431232 KB] g=26, 274 evaluated, 85 expanded, 3 reopened
[t=0.167044s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.167075s, 431232 KB] g=27, 277 evaluated, 86 expanded, 3 reopened
[t=0.170177s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.170212s, 431232 KB] g=30, 294 evaluated, 91 expanded, 3 reopened
[t=0.171325s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.171356s, 431232 KB] g=31, 300 evaluated, 92 expanded, 3 reopened
[t=0.172116s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.172151s, 431232 KB] g=32, 304 evaluated, 93 expanded, 3 reopened
[t=0.172904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.172934s, 431232 KB] g=33, 308 evaluated, 94 expanded, 3 reopened
[t=0.175295s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.175326s, 431232 KB] g=36, 321 evaluated, 97 expanded, 3 reopened
[t=0.175729s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.175762s, 431232 KB] g=37, 323 evaluated, 98 expanded, 3 reopened
[t=0.176688s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.176721s, 431232 KB] g=38, 328 evaluated, 99 expanded, 3 reopened
[t=0.178015s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.178046s, 431232 KB] g=41, 335 evaluated, 102 expanded, 3 reopened
[t=0.179153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.179184s, 431232 KB] g=43, 341 evaluated, 104 expanded, 3 reopened
[t=0.180118s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.180153s, 431232 KB] g=45, 346 evaluated, 106 expanded, 3 reopened
[t=0.180362s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.180394s, 431232 KB] g=45, 347 evaluated, 106 expanded, 3 reopened
[t=0.18366s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.183694s, 431232 KB] g=48, 365 evaluated, 112 expanded, 3 reopened
[t=0.184442s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.184472s, 431232 KB] g=49, 369 evaluated, 113 expanded, 3 reopened
[t=0.185944s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.185976s, 431232 KB] g=52, 377 evaluated, 116 expanded, 3 reopened
[t=0.187087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.187118s, 431232 KB] g=54, 383 evaluated, 118 expanded, 3 reopened
[t=0.18897s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.189004s, 431232 KB] g=51, 393 evaluated, 122 expanded, 3 reopened
[t=0.189757s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.189791s, 431232 KB] g=53, 397 evaluated, 124 expanded, 3 reopened
[t=0.190007s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.190037s, 431232 KB] g=54, 398 evaluated, 125 expanded, 3 reopened
[t=0.190612s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.190645s, 431232 KB] g=56, 401 evaluated, 127 expanded, 3 reopened
[t=0.192318s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.192352s, 431232 KB] g=58, 410 evaluated, 133 expanded, 3 reopened
[t=0.192385s, 431232 KB] Solution found!
[t=0.192413s, 431232 KB] Actual search time: 0.0940924s
put-down k (1)
unstack h f (1)
stack h j (1)
unstack f l (1)
put-down f (1)
unstack h j (1)
stack h f (1)
unstack j e (1)
stack j h (1)
unstack e b (1)
stack e k (1)
unstack j h (1)
stack j e (1)
unstack l g (1)
put-down l (1)
unstack g a (1)
put-down g (1)
pick-up a (1)
stack a j (1)
unstack b d (1)
stack b l (1)
unstack a j (1)
stack a b (1)
unstack h f (1)
stack h g (1)
pick-up f (1)
stack f d (1)
unstack j e (1)
put-down j (1)
unstack a b (1)
stack a h (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k e (1)
unstack f d (1)
stack f a (1)
pick-up j (1)
stack j d (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
put-down b (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.192438s, 431232 KB] Plan length: 59 step(s).
[t=0.192438s, 431232 KB] Plan cost: 59
[t=0.192438s, 431232 KB] Expanded 135 state(s).
[t=0.192438s, 431232 KB] Reopened 3 state(s).
[t=0.192438s, 431232 KB] Evaluated 411 state(s).
[t=0.192438s, 431232 KB] Evaluations: 411
[t=0.192438s, 431232 KB] Generated 562 state(s).
[t=0.192438s, 431232 KB] Dead ends: 0 state(s).
[t=0.192438s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.192438s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.192438s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.192438s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.192438s, 431232 KB] Number of registered states: 411
[t=0.192438s, 431232 KB] Int hash set load factor: 411/512 = 0.802734
[t=0.192438s, 431232 KB] Int hash set resizes: 9
[t=0.192438s, 431232 KB] Search time: 0.166118s
[t=0.192438s, 431232 KB] Total time: 0.192438s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p169.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9276e-05s, 424928 KB] reading input...
[t=0.00214031s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257526s, 427536 KB] Building successor generator...done!
[t=0.0260276s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026051s, 427536 KB] time for successor generation creation: 0.000163138s
[t=0.026079s, 427536 KB] Variables: 25
[t=0.0261021s, 427536 KB] FactPairs: 182
[t=0.0261239s, 427536 KB] Bytes per state: 8
[t=0.0263169s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978208s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.0978717s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978977s, 430128 KB] f = 99, 1 evaluated, 0 expanded
[t=0.0979247s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.0979486s, 430128 KB] pruning method: none
[t=0.109719s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.109771s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117278s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.117321s, 431100 KB] g=2, 9 evaluated, 3 expanded
[t=0.118622s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.118651s, 431100 KB] g=5, 16 evaluated, 6 expanded
[t=0.119586s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.119616s, 431100 KB] g=7, 21 evaluated, 8 expanded
[t=0.120554s, 431100 KB] f = 100, 26 evaluated, 11 expanded
[t=0.125446s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.125479s, 431100 KB] g=8, 53 evaluated, 19 expanded
[t=0.133444s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.133477s, 431100 KB] g=12, 97 evaluated, 32 expanded
[t=0.136965s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.136997s, 431100 KB] g=17, 116 evaluated, 41 expanded
[t=0.137753s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.137783s, 431100 KB] g=18, 120 evaluated, 42 expanded
[t=0.139076s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.139108s, 431100 KB] g=19, 127 evaluated, 45 expanded
[t=0.145035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.145072s, 431100 KB] g=15, 159 evaluated, 71 expanded, 11 reopened
[t=0.247058s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.247101s, 431364 KB] g=19, 718 evaluated, 317 expanded, 39 reopened
[t=0.249329s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.249363s, 431364 KB] g=19, 730 evaluated, 320 expanded, 39 reopened
[t=0.251385s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.251415s, 431364 KB] g=21, 741 evaluated, 322 expanded, 39 reopened
[t=0.252359s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.252392s, 431364 KB] g=23, 746 evaluated, 324 expanded, 39 reopened
[t=0.253155s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.253186s, 431364 KB] g=24, 750 evaluated, 325 expanded, 39 reopened
[t=0.255939s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.255973s, 431364 KB] g=26, 765 evaluated, 329 expanded, 39 reopened
[t=0.260184s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.260219s, 431364 KB] g=28, 788 evaluated, 336 expanded, 39 reopened
[t=0.263888s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.263924s, 431496 KB] g=31, 808 evaluated, 342 expanded, 39 reopened
[t=0.265057s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.265089s, 431496 KB] g=32, 814 evaluated, 343 expanded, 39 reopened
[t=0.271822s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.271857s, 431496 KB] g=36, 851 evaluated, 356 expanded, 39 reopened
[t=0.272992s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.273027s, 431496 KB] g=37, 857 evaluated, 358 expanded, 39 reopened
[t=0.273424s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.273452s, 431496 KB] g=38, 859 evaluated, 359 expanded, 39 reopened
[t=0.274926s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.274958s, 431496 KB] g=40, 867 evaluated, 361 expanded, 39 reopened
[t=0.279709s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.279745s, 431496 KB] g=43, 893 evaluated, 370 expanded, 39 reopened
[t=0.280695s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.280734s, 431496 KB] g=45, 898 evaluated, 372 expanded, 39 reopened
[t=0.28113s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.281159s, 431496 KB] g=45, 900 evaluated, 372 expanded, 39 reopened
[t=0.281375s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.281403s, 431496 KB] g=46, 901 evaluated, 373 expanded, 39 reopened
[t=0.282349s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.282379s, 431496 KB] g=49, 907 evaluated, 377 expanded, 39 reopened
[t=0.282406s, 431496 KB] Solution found!
[t=0.282432s, 431496 KB] Actual search time: 0.184479s
put-down g (1)
unstack h b (1)
stack h g (1)
unstack b d (1)
stack b h (1)
unstack e f (1)
stack e b (1)
unstack f j (1)
stack f d (1)
unstack l a (1)
stack l j (1)
unstack a k (1)
stack a f (1)
unstack e b (1)
stack e k (1)
unstack b h (1)
put-down b (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k l (1)
unstack a f (1)
stack a h (1)
unstack k l (1)
stack k e (1)
unstack f d (1)
stack f a (1)
unstack l j (1)
stack l d (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.282456s, 431496 KB] Plan length: 49 step(s).
[t=0.282456s, 431496 KB] Plan cost: 49
[t=0.282456s, 431496 KB] Expanded 378 state(s).
[t=0.282456s, 431496 KB] Reopened 39 state(s).
[t=0.282456s, 431496 KB] Evaluated 907 state(s).
[t=0.282456s, 431496 KB] Evaluations: 907
[t=0.282456s, 431496 KB] Generated 1466 state(s).
[t=0.282456s, 431496 KB] Dead ends: 0 state(s).
[t=0.282456s, 431496 KB] Expanded until last jump: 11 state(s).
[t=0.282456s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.282456s, 431496 KB] Evaluated until last jump: 26 state(s).
[t=0.282456s, 431496 KB] Generated until last jump: 35 state(s).
[t=0.282456s, 431496 KB] Number of registered states: 907
[t=0.282456s, 431496 KB] Int hash set load factor: 907/1024 = 0.885742
[t=0.282456s, 431496 KB] Int hash set resizes: 10
[t=0.282456s, 431496 KB] Search time: 0.25614s
[t=0.282456s, 431496 KB] Total time: 0.282456s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p170.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7328e-05s, 424928 KB] reading input...
[t=0.00216549s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260287s, 427536 KB] Building successor generator...done!
[t=0.0263069s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263307s, 427536 KB] time for successor generation creation: 0.000166268s
[t=0.0263599s, 427536 KB] Variables: 25
[t=0.0263834s, 427536 KB] FactPairs: 182
[t=0.026406s, 427536 KB] Bytes per state: 8
[t=0.0266017s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990916s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0991435s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991695s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0991971s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0992208s, 430128 KB] pruning method: none
[t=0.117625s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.117675s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119708s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.11974s, 431100 KB] g=3, 14 evaluated, 4 expanded
[t=0.119954s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.119983s, 431100 KB] g=4, 15 evaluated, 5 expanded
[t=0.124011s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.124054s, 431100 KB] g=6, 37 evaluated, 11 expanded
[t=0.124451s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.124481s, 431100 KB] g=7, 39 evaluated, 12 expanded
[t=0.124691s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.12472s, 431100 KB] g=7, 40 evaluated, 12 expanded
[t=0.126393s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.126426s, 431100 KB] g=9, 49 evaluated, 15 expanded
[t=0.126636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.126665s, 431100 KB] g=9, 50 evaluated, 15 expanded
[t=0.127242s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.127272s, 431100 KB] g=10, 53 evaluated, 16 expanded
[t=0.128211s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.128241s, 431100 KB] g=12, 58 evaluated, 18 expanded
[t=0.130298s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.13033s, 431100 KB] g=13, 69 evaluated, 24 expanded
[t=0.132913s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.132944s, 431100 KB] g=15, 83 evaluated, 31 expanded
[t=0.133154s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.133184s, 431100 KB] g=15, 84 evaluated, 31 expanded
[t=0.133586s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.133618s, 431100 KB] g=16, 86 evaluated, 32 expanded
[t=0.13745s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.137484s, 431100 KB] g=20, 107 evaluated, 39 expanded
[t=0.138794s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.138829s, 431100 KB] g=22, 114 evaluated, 41 expanded
[t=0.140302s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.140335s, 431100 KB] g=23, 122 evaluated, 44 expanded
[t=0.141083s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.141113s, 431100 KB] g=24, 126 evaluated, 45 expanded
[t=0.142079s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.142112s, 431100 KB] g=26, 131 evaluated, 47 expanded
[t=0.143051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.143087s, 431100 KB] g=28, 136 evaluated, 49 expanded
[t=0.14892s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.148959s, 431232 KB] g=31, 168 evaluated, 61 expanded
[t=0.150635s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.150668s, 431232 KB] g=35, 177 evaluated, 65 expanded
[t=0.153797s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.15383s, 431232 KB] g=38, 194 evaluated, 74 expanded
[t=0.155142s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.155174s, 431232 KB] g=37, 201 evaluated, 79 expanded
[t=0.15557s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.155599s, 431232 KB] g=38, 203 evaluated, 80 expanded
[t=0.156737s, 431232 KB] Solution found!
[t=0.15677s, 431232 KB] Actual search time: 0.057547s
put-down k (1)
unstack j f (1)
put-down j (1)
pick-up k (1)
stack k f (1)
unstack l a (1)
stack l k (1)
unstack a h (1)
stack a l (1)
pick-up h (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack l k (1)
put-down l (1)
unstack k f (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.156796s, 431232 KB] Plan length: 41 step(s).
[t=0.156796s, 431232 KB] Plan cost: 41
[t=0.156796s, 431232 KB] Expanded 87 state(s).
[t=0.156796s, 431232 KB] Reopened 0 state(s).
[t=0.156796s, 431232 KB] Evaluated 210 state(s).
[t=0.156796s, 431232 KB] Evaluations: 210
[t=0.156796s, 431232 KB] Generated 297 state(s).
[t=0.156796s, 431232 KB] Dead ends: 0 state(s).
[t=0.156796s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.156796s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.156796s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.156796s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.156796s, 431232 KB] Number of registered states: 210
[t=0.156796s, 431232 KB] Int hash set load factor: 210/256 = 0.820312
[t=0.156796s, 431232 KB] Int hash set resizes: 8
[t=0.156796s, 431232 KB] Search time: 0.130195s
[t=0.156796s, 431232 KB] Total time: 0.156796s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p171.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7183e-05s, 424928 KB] reading input...
[t=0.00214215s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026032s, 427536 KB] Building successor generator...done!
[t=0.026315s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263394s, 427536 KB] time for successor generation creation: 0.000168739s
[t=0.0263688s, 427536 KB] Variables: 25
[t=0.0263931s, 427536 KB] FactPairs: 182
[t=0.0264155s, 427536 KB] Bytes per state: 8
[t=0.0266091s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990797s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.099132s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991582s, 430128 KB] f = 124, 1 evaluated, 0 expanded
[t=0.0991861s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0992109s, 430128 KB] pruning method: none
[t=0.111136s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.111189s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118053s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.118097s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.119213s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.119256s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.119643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.119673s, 431100 KB] g=4, 13 evaluated, 4 expanded
[t=0.120792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.120825s, 431100 KB] g=6, 19 evaluated, 6 expanded
[t=0.121036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.121066s, 431100 KB] g=6, 20 evaluated, 6 expanded
[t=0.123949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.12398s, 431100 KB] g=8, 36 evaluated, 11 expanded
[t=0.124925s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.124958s, 431100 KB] g=8, 41 evaluated, 13 expanded
[t=0.135212s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.135247s, 431100 KB] g=12, 98 evaluated, 33 expanded
[t=0.167687s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.167727s, 431232 KB] g=18, 278 evaluated, 88 expanded, 2 reopened
[t=0.177865s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.1779s, 431232 KB] g=12, 334 evaluated, 107 expanded, 2 reopened
[t=0.240763s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.240805s, 431364 KB] g=30, 683 evaluated, 237 expanded, 9 reopened
[t=0.241021s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.241049s, 431364 KB] g=30, 684 evaluated, 237 expanded, 9 reopened
[t=0.241805s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.241835s, 431364 KB] g=31, 688 evaluated, 239 expanded, 9 reopened
[t=0.249584s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.24962s, 431364 KB] g=36, 731 evaluated, 253 expanded, 9 reopened
[t=0.252523s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.252576s, 431364 KB] g=39, 747 evaluated, 258 expanded, 9 reopened
[t=0.252976s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.253007s, 431364 KB] g=40, 749 evaluated, 259 expanded, 9 reopened
[t=0.25645s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.256484s, 431364 KB] g=43, 768 evaluated, 264 expanded, 9 reopened
[t=0.257262s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.257304s, 431364 KB] g=44, 772 evaluated, 265 expanded, 9 reopened
[t=0.258054s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.258085s, 431364 KB] g=45, 776 evaluated, 266 expanded, 9 reopened
[t=0.258657s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.258687s, 431364 KB] g=46, 779 evaluated, 267 expanded, 9 reopened
[t=0.259261s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.259294s, 431364 KB] g=47, 782 evaluated, 268 expanded, 9 reopened
[t=0.259869s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.259899s, 431364 KB] g=48, 785 evaluated, 269 expanded, 9 reopened
[t=0.260469s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.260502s, 431364 KB] g=49, 788 evaluated, 270 expanded, 9 reopened
[t=0.261982s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.262017s, 431364 KB] g=52, 796 evaluated, 273 expanded, 9 reopened
[t=0.26314s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.263171s, 431364 KB] g=55, 802 evaluated, 277 expanded, 9 reopened
[t=0.263384s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.263414s, 431364 KB] g=56, 803 evaluated, 278 expanded, 9 reopened
[t=0.263805s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.263835s, 431364 KB] g=57, 805 evaluated, 279 expanded, 9 reopened
[t=0.264971s, 431364 KB] Solution found!
[t=0.26501s, 431364 KB] Actual search time: 0.165797s
unstack g j (1)
put-down g (1)
unstack b d (1)
stack b j (1)
unstack e h (1)
stack e d (1)
pick-up g (1)
stack g h (1)
unstack b j (1)
put-down b (1)
unstack e d (1)
stack e b (1)
unstack j l (1)
stack j e (1)
unstack l k (1)
stack l j (1)
pick-up k (1)
stack k l (1)
unstack g h (1)
put-down g (1)
unstack d i (1)
put-down d (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up d (1)
stack d i (1)
pick-up f (1)
stack f d (1)
unstack k l (1)
stack k f (1)
unstack l j (1)
put-down l (1)
unstack j e (1)
stack j l (1)
unstack k f (1)
stack k e (1)
unstack f d (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up b (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.265037s, 431364 KB] Plan length: 60 step(s).
[t=0.265037s, 431364 KB] Plan cost: 60
[t=0.265037s, 431364 KB] Expanded 286 state(s).
[t=0.265037s, 431364 KB] Reopened 9 state(s).
[t=0.265037s, 431364 KB] Evaluated 812 state(s).
[t=0.265037s, 431364 KB] Evaluations: 812
[t=0.265037s, 431364 KB] Generated 1170 state(s).
[t=0.265037s, 431364 KB] Dead ends: 0 state(s).
[t=0.265037s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.265037s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.265037s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.265037s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.265037s, 431364 KB] Number of registered states: 812
[t=0.265037s, 431364 KB] Int hash set load factor: 812/1024 = 0.792969
[t=0.265037s, 431364 KB] Int hash set resizes: 10
[t=0.265037s, 431364 KB] Search time: 0.238429s
[t=0.265037s, 431364 KB] Total time: 0.265037s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p172.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6912e-05s, 424928 KB] reading input...
[t=0.00223701s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260367s, 427536 KB] Building successor generator...done!
[t=0.0263148s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263484s, 427536 KB] time for successor generation creation: 0.000165716s
[t=0.0263775s, 427536 KB] Variables: 25
[t=0.0264003s, 427536 KB] FactPairs: 182
[t=0.0264228s, 427536 KB] Bytes per state: 8
[t=0.0266185s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990716s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.0991237s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991494s, 430128 KB] f = 127, 1 evaluated, 0 expanded
[t=0.0991766s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.0992005s, 430128 KB] pruning method: none
[t=0.117573s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.117623s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.118608s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119551s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.119582s, 431100 KB] g=4, 13 evaluated, 4 expanded
[t=0.120726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.120758s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.120974s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.121004s, 431100 KB] g=6, 20 evaluated, 6 expanded
[t=0.121756s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.121786s, 431100 KB] g=7, 24 evaluated, 7 expanded
[t=0.123635s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.123666s, 431100 KB] g=10, 34 evaluated, 10 expanded
[t=0.126232s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.126265s, 431100 KB] g=12, 48 evaluated, 14 expanded
[t=0.128656s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.128692s, 431100 KB] g=12, 61 evaluated, 19 expanded
[t=0.129258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.129288s, 431100 KB] g=12, 64 evaluated, 19 expanded
[t=0.132234s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.132267s, 431100 KB] g=15, 80 evaluated, 24 expanded
[t=0.138262s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.138298s, 431100 KB] g=19, 113 evaluated, 32 expanded
[t=0.160056s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.1601s, 431232 KB] g=24, 233 evaluated, 69 expanded, 3 reopened
[t=0.172248s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.172285s, 431232 KB] g=25, 300 evaluated, 87 expanded, 3 reopened
[t=0.338739s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.338781s, 431496 KB] g=17, 1222 evaluated, 382 expanded, 43 reopened
[t=0.340088s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.340132s, 431496 KB] g=19, 1229 evaluated, 384 expanded, 43 reopened
[t=0.340534s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.340564s, 431496 KB] g=20, 1231 evaluated, 385 expanded, 43 reopened
[t=0.360103s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.36014s, 431496 KB] g=32, 1339 evaluated, 419 expanded, 43 reopened
[t=0.390795s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.390835s, 431496 KB] g=33, 1508 evaluated, 484 expanded, 46 reopened
[t=0.391053s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.391083s, 431496 KB] g=34, 1509 evaluated, 485 expanded, 46 reopened
[t=0.392017s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.392047s, 431496 KB] g=36, 1514 evaluated, 487 expanded, 46 reopened
[t=0.392452s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.392485s, 431496 KB] g=37, 1516 evaluated, 488 expanded, 46 reopened
[t=0.393237s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.393273s, 431628 KB] g=38, 1520 evaluated, 489 expanded, 46 reopened
[t=0.628455s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.628505s, 431892 KB] g=44, 2818 evaluated, 1029 expanded, 102 reopened
[t=0.895622s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.895674s, 432288 KB] g=46, 4296 evaluated, 1581 expanded, 143 reopened
[t=0.896638s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.896671s, 432288 KB] g=47, 4301 evaluated, 1582 expanded, 143 reopened
[t=0.897068s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.897098s, 432288 KB] g=48, 4303 evaluated, 1583 expanded, 143 reopened
[t=0.897488s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.897523s, 432288 KB] g=48, 4305 evaluated, 1583 expanded, 143 reopened
[t=0.899365s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.899396s, 432288 KB] g=50, 4315 evaluated, 1586 expanded, 143 reopened
[t=0.899612s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.899641s, 432288 KB] g=51, 4316 evaluated, 1587 expanded, 143 reopened
[t=0.900044s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.900076s, 432288 KB] g=52, 4318 evaluated, 1588 expanded, 143 reopened
[t=0.901013s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.901047s, 432288 KB] g=53, 4323 evaluated, 1590 expanded, 143 reopened
[t=0.901814s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.901844s, 432288 KB] g=56, 4328 evaluated, 1593 expanded, 143 reopened
[t=0.901871s, 432288 KB] Solution found!
[t=0.901897s, 432288 KB] Actual search time: 0.802693s
unstack d b (1)
stack d j (1)
unstack b h (1)
stack b c (1)
unstack i g (1)
stack i b (1)
unstack g a (1)
stack g d (1)
unstack h k (1)
stack h g (1)
unstack i b (1)
put-down i (1)
pick-up a (1)
stack a h (1)
unstack b c (1)
stack b i (1)
unstack c f (1)
stack c b (1)
unstack k e (1)
stack k c (1)
pick-up f (1)
stack f k (1)
unstack a h (1)
stack a f (1)
unstack h g (1)
stack h e (1)
unstack g d (1)
put-down g (1)
unstack h e (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j d (1)
unstack e l (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.901922s, 432288 KB] Plan length: 56 step(s).
[t=0.901922s, 432288 KB] Plan cost: 56
[t=0.901922s, 432288 KB] Expanded 1594 state(s).
[t=0.901922s, 432288 KB] Reopened 143 state(s).
[t=0.901922s, 432288 KB] Evaluated 4328 state(s).
[t=0.901922s, 432288 KB] Evaluations: 4328
[t=0.901922s, 432288 KB] Generated 6962 state(s).
[t=0.901922s, 432288 KB] Dead ends: 0 state(s).
[t=0.901922s, 432288 KB] Expanded until last jump: 0 state(s).
[t=0.901922s, 432288 KB] Reopened until last jump: 0 state(s).
[t=0.901922s, 432288 KB] Evaluated until last jump: 1 state(s).
[t=0.901922s, 432288 KB] Generated until last jump: 0 state(s).
[t=0.901922s, 432288 KB] Number of registered states: 4328
[t=0.901922s, 432288 KB] Int hash set load factor: 4328/8192 = 0.52832
[t=0.901922s, 432288 KB] Int hash set resizes: 13
[t=0.901922s, 432288 KB] Search time: 0.875304s
[t=0.901922s, 432288 KB] Total time: 0.901922s
Solution found.
Peak memory: 432288 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p173.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5295e-05s, 424928 KB] reading input...
[t=0.00215165s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258149s, 427536 KB] Building successor generator...done!
[t=0.0260902s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261132s, 427536 KB] time for successor generation creation: 0.000165626s
[t=0.0261409s, 427536 KB] Variables: 25
[t=0.0261639s, 427536 KB] FactPairs: 182
[t=0.0261858s, 427536 KB] Bytes per state: 8
[t=0.0263801s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.1059s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.105954s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.105979s, 430128 KB] f = 90, 1 evaluated, 0 expanded
[t=0.106006s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.106031s, 430128 KB] pruning method: none
[t=0.124477s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.124527s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.126306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.126348s, 431100 KB] g=2, 14 evaluated, 3 expanded
[t=0.128656s, 431100 KB] f = 93, 27 evaluated, 6 expanded
[t=0.129923s, 431100 KB] f = 94, 34 evaluated, 8 expanded
[t=0.134867s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.1349s, 431100 KB] g=8, 62 evaluated, 15 expanded
[t=0.139494s, 431100 KB] f = 95, 88 evaluated, 20 expanded
[t=0.141798s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.141831s, 431100 KB] g=4, 101 evaluated, 23 expanded
[t=0.143638s, 431100 KB] f = 96, 111 evaluated, 26 expanded
[t=0.148922s, 431100 KB] f = 97, 141 evaluated, 35 expanded
[t=0.168912s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.168949s, 431232 KB] g=15, 255 evaluated, 64 expanded
[t=0.191153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.19119s, 431232 KB] g=12, 381 evaluated, 100 expanded
[t=0.228878s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.228916s, 431232 KB] g=15, 596 evaluated, 157 expanded
[t=0.232447s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.23248s, 431364 KB] g=16, 616 evaluated, 162 expanded
[t=0.237254s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.23729s, 431364 KB] g=19, 643 evaluated, 171 expanded
[t=0.244333s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.244366s, 431364 KB] g=19, 683 evaluated, 184 expanded
[t=0.301776s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.301814s, 431364 KB] g=21, 1012 evaluated, 289 expanded, 7 reopened
[t=0.308606s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.308641s, 431496 KB] g=24, 1050 evaluated, 298 expanded, 7 reopened
[t=0.3106s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.310632s, 431496 KB] g=26, 1061 evaluated, 301 expanded, 7 reopened
[t=0.313797s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.313828s, 431496 KB] g=28, 1079 evaluated, 304 expanded, 7 reopened
[t=0.332725s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.332761s, 431496 KB] g=34, 1187 evaluated, 334 expanded, 7 reopened
[t=0.333147s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.333176s, 431496 KB] g=35, 1189 evaluated, 335 expanded, 7 reopened
[t=0.334086s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.334116s, 431496 KB] g=36, 1194 evaluated, 336 expanded, 7 reopened
[t=0.336789s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.336822s, 431496 KB] g=39, 1209 evaluated, 342 expanded, 7 reopened
[t=0.337206s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.337236s, 431496 KB] g=40, 1211 evaluated, 343 expanded, 7 reopened
[t=0.33762s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.337649s, 431496 KB] g=41, 1213 evaluated, 344 expanded, 7 reopened
[t=0.33803s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.338059s, 431496 KB] g=42, 1215 evaluated, 345 expanded, 7 reopened
[t=0.338438s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.338468s, 431496 KB] g=42, 1217 evaluated, 345 expanded, 7 reopened
[t=0.33886s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.338895s, 431496 KB] g=43, 1219 evaluated, 346 expanded, 7 reopened
[t=0.340505s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.340535s, 431496 KB] g=46, 1228 evaluated, 349 expanded, 7 reopened
[t=0.355624s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.355661s, 431628 KB] g=53, 1314 evaluated, 370 expanded, 7 reopened
[t=0.361125s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.361162s, 431628 KB] g=54, 1345 evaluated, 377 expanded, 7 reopened
[t=0.363292s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.363324s, 431628 KB] g=57, 1357 evaluated, 380 expanded, 7 reopened
[t=0.364232s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.364262s, 431628 KB] g=58, 1362 evaluated, 381 expanded, 7 reopened
[t=0.36482s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.364849s, 431628 KB] g=59, 1365 evaluated, 382 expanded, 7 reopened
[t=0.365056s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.365084s, 431628 KB] g=59, 1366 evaluated, 382 expanded, 7 reopened
[t=0.365468s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.3655s, 431628 KB] g=60, 1368 evaluated, 383 expanded, 7 reopened
[t=0.366945s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.366983s, 431628 KB] g=62, 1376 evaluated, 385 expanded, 7 reopened
[t=0.367192s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.367221s, 431628 KB] g=63, 1377 evaluated, 386 expanded, 7 reopened
[t=0.36937s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.3694s, 431628 KB] g=64, 1389 evaluated, 393 expanded, 7 reopened
[t=0.369783s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.369813s, 431628 KB] g=65, 1391 evaluated, 394 expanded, 7 reopened
[t=0.369845s, 431628 KB] Solution found!
[t=0.369872s, 431628 KB] Actual search time: 0.263837s
pick-up e (1)
stack e k (1)
unstack g d (1)
stack g h (1)
unstack d l (1)
put-down d (1)
unstack l f (1)
stack l d (1)
unstack e k (1)
stack e l (1)
unstack g h (1)
stack g k (1)
pick-up f (1)
stack f c (1)
unstack h b (1)
stack h f (1)
unstack b j (1)
put-down b (1)
unstack j a (1)
stack j e (1)
unstack g k (1)
put-down g (1)
pick-up b (1)
stack b j (1)
unstack h f (1)
stack h a (1)
pick-up k (1)
stack k b (1)
unstack f c (1)
stack f k (1)
unstack h a (1)
stack h g (1)
unstack a i (1)
stack a h (1)
pick-up c (1)
stack c i (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack b j (1)
put-down b (1)
unstack j e (1)
stack j c (1)
unstack e l (1)
stack e b (1)
unstack j c (1)
put-down j (1)
unstack c i (1)
put-down c (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.369896s, 431628 KB] Plan length: 66 step(s).
[t=0.369896s, 431628 KB] Plan cost: 66
[t=0.369896s, 431628 KB] Expanded 396 state(s).
[t=0.369896s, 431628 KB] Reopened 7 state(s).
[t=0.369896s, 431628 KB] Evaluated 1392 state(s).
[t=0.369896s, 431628 KB] Evaluations: 1392
[t=0.369896s, 431628 KB] Generated 1852 state(s).
[t=0.369896s, 431628 KB] Dead ends: 0 state(s).
[t=0.369896s, 431628 KB] Expanded until last jump: 35 state(s).
[t=0.369896s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.369896s, 431628 KB] Evaluated until last jump: 141 state(s).
[t=0.369896s, 431628 KB] Generated until last jump: 176 state(s).
[t=0.369896s, 431628 KB] Number of registered states: 1392
[t=0.369896s, 431628 KB] Int hash set load factor: 1392/2048 = 0.679688
[t=0.369896s, 431628 KB] Int hash set resizes: 11
[t=0.369896s, 431628 KB] Search time: 0.343517s
[t=0.369896s, 431628 KB] Total time: 0.369896s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p174.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9587e-05s, 424928 KB] reading input...
[t=0.00213838s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258895s, 427536 KB] Building successor generator...done!
[t=0.0261664s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.02619s, 427536 KB] time for successor generation creation: 0.000165275s
[t=0.0262186s, 427536 KB] Variables: 25
[t=0.0262419s, 427536 KB] FactPairs: 182
[t=0.0262642s, 427536 KB] Bytes per state: 8
[t=0.0264571s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990346s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.0990854s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991109s, 430128 KB] f = 102, 1 evaluated, 0 expanded
[t=0.0991379s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.0991615s, 430128 KB] pruning method: none
[t=0.117796s, 431100 KB] f = 105, 5 evaluated, 1 expanded
[t=0.118566s, 431100 KB] f = 112, 9 evaluated, 2 expanded
[t=0.119138s, 431100 KB] f = 115, 12 evaluated, 3 expanded
[t=0.119883s, 431100 KB] f = 116, 16 evaluated, 4 expanded
[t=0.120471s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.120505s, 431100 KB] g=4, 19 evaluated, 5 expanded
[t=0.120895s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.120936s, 431100 KB] g=5, 21 evaluated, 6 expanded
[t=0.121329s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.121359s, 431100 KB] g=6, 23 evaluated, 7 expanded
[t=0.121922s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.121953s, 431100 KB] g=7, 26 evaluated, 8 expanded
[t=0.122164s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.122194s, 431100 KB] g=8, 27 evaluated, 9 expanded
[t=0.127545s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.127578s, 431100 KB] g=13, 57 evaluated, 18 expanded
[t=0.137366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.1374s, 431100 KB] g=16, 112 evaluated, 32 expanded
[t=0.137969s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.138003s, 431100 KB] g=17, 115 evaluated, 33 expanded
[t=0.138742s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.138772s, 431100 KB] g=18, 119 evaluated, 34 expanded
[t=0.14041s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.140443s, 431100 KB] g=21, 128 evaluated, 37 expanded
[t=0.141552s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.141584s, 431100 KB] g=23, 134 evaluated, 39 expanded
[t=0.149102s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.14914s, 431232 KB] g=22, 176 evaluated, 53 expanded
[t=0.16702s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.167058s, 431232 KB] g=22, 276 evaluated, 85 expanded
[t=0.205146s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.205183s, 431232 KB] g=26, 489 evaluated, 176 expanded, 19 reopened
[t=0.422344s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.422389s, 431364 KB] g=27, 1714 evaluated, 644 expanded, 54 reopened
[t=0.43378s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.433816s, 431496 KB] g=31, 1778 evaluated, 661 expanded, 54 reopened
[t=0.434914s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.434945s, 431496 KB] g=33, 1784 evaluated, 663 expanded, 54 reopened
[t=0.445953s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.445996s, 431496 KB] g=33, 1846 evaluated, 682 expanded, 54 reopened
[t=0.447449s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.44748s, 431496 KB] g=36, 1854 evaluated, 685 expanded, 54 reopened
[t=0.456912s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.45695s, 431496 KB] g=43, 1907 evaluated, 702 expanded, 54 reopened
[t=0.464777s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.464814s, 431496 KB] g=42, 1951 evaluated, 716 expanded, 54 reopened
[t=0.469468s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.469502s, 431496 KB] g=45, 1977 evaluated, 723 expanded, 54 reopened
[t=0.470424s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.470457s, 431496 KB] g=47, 1982 evaluated, 725 expanded, 54 reopened
[t=0.475971s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.476009s, 431632 KB] g=52, 2012 evaluated, 735 expanded, 54 reopened
[t=0.476767s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.476798s, 431632 KB] g=53, 2016 evaluated, 736 expanded, 54 reopened
[t=0.480958s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.480994s, 431632 KB] g=55, 2039 evaluated, 752 expanded, 58 reopened
[t=0.481387s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.481418s, 431632 KB] g=56, 2041 evaluated, 753 expanded, 58 reopened
[t=0.481986s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.482016s, 431632 KB] g=58, 2044 evaluated, 755 expanded, 58 reopened
[t=0.482942s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.482976s, 431632 KB] g=59, 2049 evaluated, 757 expanded, 58 reopened
[t=0.483547s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.483577s, 431632 KB] g=60, 2052 evaluated, 758 expanded, 58 reopened
[t=0.485203s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.485235s, 431632 KB] g=61, 2061 evaluated, 760 expanded, 58 reopened
[t=0.488652s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.488688s, 431632 KB] g=63, 2080 evaluated, 769 expanded, 58 reopened
[t=0.489608s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.489645s, 431632 KB] g=64, 2085 evaluated, 771 expanded, 58 reopened
[t=0.491283s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.491316s, 431632 KB] g=66, 2094 evaluated, 777 expanded, 58 reopened
[t=0.491708s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.491737s, 431632 KB] g=67, 2096 evaluated, 778 expanded, 58 reopened
[t=0.491768s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.491792s, 431632 KB] g=68, 2097 evaluated, 779 expanded, 58 reopened
[t=0.491817s, 431632 KB] Solution found!
[t=0.491844s, 431632 KB] Actual search time: 0.392679s
unstack j e (1)
stack j l (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
put-down j (1)
unstack b d (1)
put-down b (1)
pick-up j (1)
stack j e (1)
unstack l g (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack g a (1)
stack g d (1)
unstack a h (1)
stack a i (1)
unstack g d (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a i (1)
stack a h (1)
unstack d j (1)
stack d a (1)
unstack l b (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
stack i j (1)
pick-up c (1)
stack c b (1)
unstack i j (1)
stack i c (1)
unstack j e (1)
stack j i (1)
unstack d a (1)
put-down d (1)
unstack e k (1)
stack e d (1)
unstack k f (1)
stack k e (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.491869s, 431632 KB] Plan length: 68 step(s).
[t=0.491869s, 431632 KB] Plan cost: 68
[t=0.491869s, 431632 KB] Expanded 780 state(s).
[t=0.491869s, 431632 KB] Reopened 58 state(s).
[t=0.491869s, 431632 KB] Evaluated 2097 state(s).
[t=0.491869s, 431632 KB] Evaluations: 2097
[t=0.491869s, 431632 KB] Generated 3284 state(s).
[t=0.491869s, 431632 KB] Dead ends: 0 state(s).
[t=0.491869s, 431632 KB] Expanded until last jump: 4 state(s).
[t=0.491869s, 431632 KB] Reopened until last jump: 0 state(s).
[t=0.491869s, 431632 KB] Evaluated until last jump: 16 state(s).
[t=0.491869s, 431632 KB] Generated until last jump: 18 state(s).
[t=0.491869s, 431632 KB] Number of registered states: 2097
[t=0.491869s, 431632 KB] Int hash set load factor: 2097/4096 = 0.511963
[t=0.491869s, 431632 KB] Int hash set resizes: 12
[t=0.491869s, 431632 KB] Search time: 0.465412s
[t=0.491869s, 431632 KB] Total time: 0.491869s
Solution found.
Peak memory: 431632 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p175.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7327e-05s, 424928 KB] reading input...
[t=0.00215426s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261036s, 427536 KB] Building successor generator...done!
[t=0.0263857s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264088s, 427536 KB] time for successor generation creation: 0.000168405s
[t=0.0264371s, 427536 KB] Variables: 25
[t=0.0264601s, 427536 KB] FactPairs: 182
[t=0.0264823s, 427536 KB] Bytes per state: 8
[t=0.0266786s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109404s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.10946s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109486s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.109512s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.109536s, 430128 KB] pruning method: none
[t=0.127774s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.12784s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.128071s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.128107s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.128329s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.128369s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.130465s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.130496s, 431100 KB] g=5, 16 evaluated, 5 expanded
[t=0.130712s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.13074s, 431100 KB] g=5, 17 evaluated, 5 expanded
[t=0.130976s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.131007s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.138118s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.138151s, 431100 KB] g=11, 56 evaluated, 17 expanded
[t=0.138557s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.138591s, 431100 KB] g=11, 58 evaluated, 17 expanded
[t=0.145567s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.145602s, 431100 KB] g=16, 95 evaluated, 29 expanded
[t=0.146195s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.146225s, 431100 KB] g=17, 98 evaluated, 30 expanded
[t=0.146441s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.146469s, 431100 KB] g=17, 99 evaluated, 30 expanded
[t=0.161377s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.161415s, 431232 KB] g=25, 178 evaluated, 63 expanded, 3 reopened
[t=0.162953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.162987s, 431232 KB] g=27, 186 evaluated, 65 expanded, 3 reopened
[t=0.163954s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.163983s, 431232 KB] g=28, 191 evaluated, 66 expanded, 3 reopened
[t=0.164578s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.164607s, 431232 KB] g=29, 194 evaluated, 67 expanded, 3 reopened
[t=0.1652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.165229s, 431232 KB] g=30, 197 evaluated, 68 expanded, 3 reopened
[t=0.165445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.165473s, 431232 KB] g=30, 198 evaluated, 68 expanded, 3 reopened
[t=0.168132s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.168167s, 431232 KB] g=34, 212 evaluated, 74 expanded, 3 reopened
[t=0.168383s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.168417s, 431232 KB] g=34, 213 evaluated, 74 expanded, 3 reopened
[t=0.17331s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.173342s, 431232 KB] g=39, 239 evaluated, 84 expanded, 3 reopened
[t=0.175989s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.176022s, 431232 KB] g=40, 253 evaluated, 88 expanded, 3 reopened
[t=0.176615s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.176644s, 431232 KB] g=41, 256 evaluated, 89 expanded, 3 reopened
[t=0.177257s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.177287s, 431232 KB] g=42, 259 evaluated, 90 expanded, 3 reopened
[t=0.181432s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.181465s, 431232 KB] g=45, 281 evaluated, 96 expanded, 3 reopened
[t=0.183001s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.183033s, 431232 KB] g=47, 289 evaluated, 99 expanded, 3 reopened
[t=0.18325s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.183278s, 431232 KB] g=47, 290 evaluated, 99 expanded, 3 reopened
[t=0.184246s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.184275s, 431232 KB] g=49, 295 evaluated, 101 expanded, 3 reopened
[t=0.184495s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.184524s, 431232 KB] g=50, 296 evaluated, 102 expanded, 3 reopened
[t=0.18493s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.184958s, 431232 KB] g=51, 298 evaluated, 103 expanded, 3 reopened
[t=0.185551s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.185582s, 431232 KB] g=52, 301 evaluated, 105 expanded, 3 reopened
[t=0.186375s, 431232 KB] Solution found!
[t=0.186407s, 431232 KB] Actual search time: 0.0768679s
put-down d (1)
unstack e k (1)
stack e b (1)
unstack k l (1)
stack k i (1)
unstack l g (1)
stack l d (1)
unstack e b (1)
stack e l (1)
unstack b h (1)
put-down b (1)
pick-up g (1)
stack g h (1)
unstack e l (1)
stack e g (1)
pick-up b (1)
stack b l (1)
unstack k i (1)
stack k b (1)
unstack e g (1)
stack e k (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack j f (1)
stack j i (1)
pick-up f (1)
stack f a (1)
unstack e k (1)
stack e j (1)
unstack k b (1)
stack k f (1)
unstack b l (1)
put-down b (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.186433s, 431232 KB] Plan length: 55 step(s).
[t=0.186433s, 431232 KB] Plan cost: 55
[t=0.186433s, 431232 KB] Expanded 111 state(s).
[t=0.186433s, 431232 KB] Reopened 3 state(s).
[t=0.186433s, 431232 KB] Evaluated 306 state(s).
[t=0.186433s, 431232 KB] Evaluations: 306
[t=0.186433s, 431232 KB] Generated 431 state(s).
[t=0.186433s, 431232 KB] Dead ends: 0 state(s).
[t=0.186433s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.186433s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.186433s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.186433s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.186433s, 431232 KB] Number of registered states: 306
[t=0.186433s, 431232 KB] Int hash set load factor: 306/512 = 0.597656
[t=0.186433s, 431232 KB] Int hash set resizes: 9
[t=0.186433s, 431232 KB] Search time: 0.159755s
[t=0.186433s, 431232 KB] Total time: 0.186433s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p176.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1473 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6095e-05s, 424928 KB] reading input...
[t=0.00223951s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261433s, 427536 KB] Building successor generator...done!
[t=0.0264178s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264415s, 427536 KB] time for successor generation creation: 0.000162013s
[t=0.0264702s, 427536 KB] Variables: 25
[t=0.0264938s, 427536 KB] FactPairs: 182
[t=0.026516s, 427536 KB] Bytes per state: 8
[t=0.0267121s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991736s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.099227s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992536s, 430128 KB] f = 108, 1 evaluated, 0 expanded
[t=0.0992819s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0993064s, 430128 KB] pruning method: none
[t=0.111215s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.111265s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117934s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.117977s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.120728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.120759s, 431100 KB] g=2, 19 evaluated, 3 expanded
[t=0.121149s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.121179s, 431100 KB] g=2, 21 evaluated, 3 expanded
[t=0.122304s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.122335s, 431100 KB] g=3, 27 evaluated, 5 expanded
[t=0.122726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.122755s, 431100 KB] g=3, 29 evaluated, 5 expanded
[t=0.126042s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.126075s, 431100 KB] g=6, 47 evaluated, 9 expanded
[t=0.127726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.127759s, 431100 KB] g=8, 56 evaluated, 11 expanded
[t=0.12869s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.12872s, 431100 KB] g=9, 61 evaluated, 12 expanded
[t=0.129494s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.129526s, 431100 KB] g=10, 65 evaluated, 13 expanded
[t=0.132451s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.132481s, 431100 KB] g=13, 81 evaluated, 16 expanded
[t=0.133618s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.133655s, 431100 KB] g=14, 87 evaluated, 17 expanded
[t=0.133867s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.133896s, 431100 KB] g=14, 88 evaluated, 17 expanded
[t=0.178532s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.178573s, 431232 KB] g=24, 333 evaluated, 79 expanded
[t=0.183909s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.183943s, 431232 KB] g=30, 362 evaluated, 86 expanded
[t=0.231076s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.231117s, 431364 KB] g=35, 620 evaluated, 172 expanded, 14 reopened
[t=0.232246s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.232276s, 431364 KB] g=37, 626 evaluated, 174 expanded, 14 reopened
[t=0.233213s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.233243s, 431364 KB] g=38, 631 evaluated, 175 expanded, 14 reopened
[t=0.233472s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.233504s, 431364 KB] g=38, 632 evaluated, 175 expanded, 14 reopened
[t=0.234261s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.234293s, 431364 KB] g=39, 636 evaluated, 176 expanded, 14 reopened
[t=0.235779s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.235809s, 431364 KB] g=42, 644 evaluated, 179 expanded, 14 reopened
[t=0.236019s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.236048s, 431364 KB] g=42, 645 evaluated, 179 expanded, 14 reopened
[t=0.240612s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.240648s, 431364 KB] g=45, 670 evaluated, 188 expanded, 14 reopened
[t=0.242507s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.242539s, 431364 KB] g=49, 680 evaluated, 192 expanded, 14 reopened
[t=0.253834s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.253871s, 431496 KB] g=52, 742 evaluated, 218 expanded, 14 reopened
[t=0.254272s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.254301s, 431496 KB] g=53, 744 evaluated, 219 expanded, 14 reopened
[t=0.25488s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.254917s, 431496 KB] g=55, 747 evaluated, 221 expanded, 14 reopened
[t=0.256059s, 431496 KB] Solution found!
[t=0.256092s, 431496 KB] Actual search time: 0.156784s
pick-up h (1)
stack h f (1)
pick-up b (1)
stack b j (1)
unstack e l (1)
stack e b (1)
unstack l g (1)
stack l c (1)
unstack g a (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up a (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack l c (1)
put-down l (1)
pick-up i (1)
stack i c (1)
unstack e b (1)
stack e i (1)
unstack b j (1)
stack b l (1)
pick-up j (1)
stack j e (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack j e (1)
stack j b (1)
unstack e i (1)
stack e j (1)
unstack f d (1)
stack f a (1)
unstack d k (1)
put-down d (1)
pick-up k (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.256119s, 431496 KB] Plan length: 58 step(s).
[t=0.256119s, 431496 KB] Plan cost: 58
[t=0.256119s, 431496 KB] Expanded 228 state(s).
[t=0.256119s, 431496 KB] Reopened 14 state(s).
[t=0.256119s, 431496 KB] Evaluated 754 state(s).
[t=0.256119s, 431496 KB] Evaluations: 754
[t=0.256119s, 431496 KB] Generated 1064 state(s).
[t=0.256119s, 431496 KB] Dead ends: 0 state(s).
[t=0.256119s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.256119s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.256119s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.256119s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.256119s, 431496 KB] Number of registered states: 754
[t=0.256119s, 431496 KB] Int hash set load factor: 754/1024 = 0.736328
[t=0.256119s, 431496 KB] Int hash set resizes: 10
[t=0.256119s, 431496 KB] Search time: 0.229408s
[t=0.256119s, 431496 KB] Total time: 0.256119s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p177.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6747e-05s, 424928 KB] reading input...
[t=0.00214526s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258507s, 427536 KB] Building successor generator...done!
[t=0.026131s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261546s, 427536 KB] time for successor generation creation: 0.000168482s
[t=0.0261835s, 427536 KB] Variables: 25
[t=0.0262062s, 427536 KB] FactPairs: 182
[t=0.0262287s, 427536 KB] Bytes per state: 8
[t=0.0264223s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986923s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0987448s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987714s, 430128 KB] f = 116, 1 evaluated, 0 expanded
[t=0.0987989s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0988225s, 430128 KB] pruning method: none
[t=0.117259s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.117309s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118096s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.118126s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119463s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.119492s, 431100 KB] g=4, 15 evaluated, 4 expanded
[t=0.127792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.127827s, 431100 KB] g=8, 59 evaluated, 15 expanded
[t=0.128427s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.128456s, 431100 KB] g=9, 62 evaluated, 16 expanded
[t=0.132636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.132671s, 431100 KB] g=11, 84 evaluated, 20 expanded
[t=0.140991s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.141036s, 431100 KB] g=17, 128 evaluated, 31 expanded
[t=0.141834s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.141866s, 431100 KB] g=18, 132 evaluated, 32 expanded
[t=0.156468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.156502s, 431232 KB] g=25, 209 evaluated, 58 expanded
[t=0.164445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.164479s, 431232 KB] g=27, 251 evaluated, 69 expanded
[t=0.166609s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.166641s, 431232 KB] g=29, 262 evaluated, 71 expanded
[t=0.172723s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.17276s, 431232 KB] g=32, 294 evaluated, 79 expanded
[t=0.176593s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.176626s, 431232 KB] g=32, 314 evaluated, 86 expanded, 1 reopened
[t=0.193684s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.193719s, 431232 KB] g=33, 404 evaluated, 115 expanded, 4 reopened
[t=0.200944s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.200978s, 431232 KB] g=36, 442 evaluated, 127 expanded, 4 reopened
[t=0.201387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.201419s, 431232 KB] g=37, 444 evaluated, 128 expanded, 4 reopened
[t=0.206368s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.206404s, 431232 KB] g=39, 470 evaluated, 137 expanded, 4 reopened
[t=0.20681s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.206839s, 431232 KB] g=39, 472 evaluated, 137 expanded, 4 reopened
[t=0.208191s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.208222s, 431232 KB] g=40, 479 evaluated, 139 expanded, 4 reopened
[t=0.208633s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.208662s, 431232 KB] g=41, 481 evaluated, 140 expanded, 4 reopened
[t=0.209452s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.209482s, 431364 KB] g=42, 485 evaluated, 141 expanded, 4 reopened
[t=0.209894s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.209922s, 431364 KB] g=43, 487 evaluated, 142 expanded, 4 reopened
[t=0.210902s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.210934s, 431364 KB] g=44, 492 evaluated, 143 expanded, 4 reopened
[t=0.212304s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.212336s, 431364 KB] g=47, 499 evaluated, 146 expanded, 4 reopened
[t=0.227556s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.227591s, 431364 KB] g=51, 579 evaluated, 177 expanded, 4 reopened
[t=0.240683s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.240721s, 431364 KB] g=53, 648 evaluated, 206 expanded, 5 reopened
[t=0.252876s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.252911s, 431364 KB] g=57, 712 evaluated, 225 expanded, 6 reopened
[t=0.253318s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.253346s, 431364 KB] g=57, 714 evaluated, 225 expanded, 6 reopened
[t=0.253942s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.253972s, 431364 KB] g=58, 717 evaluated, 226 expanded, 6 reopened
[t=0.255132s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.255161s, 431364 KB] g=59, 723 evaluated, 227 expanded, 6 reopened
[t=0.259357s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.25939s, 431364 KB] g=60, 745 evaluated, 233 expanded, 6 reopened
[t=0.261697s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.261731s, 431364 KB] g=64, 757 evaluated, 237 expanded, 6 reopened
[t=0.262892s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.262922s, 431364 KB] g=66, 763 evaluated, 239 expanded, 6 reopened
[t=0.263336s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.263366s, 431496 KB] g=67, 765 evaluated, 240 expanded, 6 reopened
[t=0.264734s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.264766s, 431496 KB] g=70, 772 evaluated, 243 expanded, 6 reopened
[t=0.265179s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.265208s, 431496 KB] g=71, 774 evaluated, 244 expanded, 6 reopened
[t=0.265617s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.265646s, 431496 KB] g=72, 776 evaluated, 245 expanded, 6 reopened
[t=0.265683s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.265707s, 431496 KB] g=73, 777 evaluated, 246 expanded, 6 reopened
[t=0.265733s, 431496 KB] Solution found!
[t=0.265759s, 431496 KB] Actual search time: 0.166933s
stack e k (1)
unstack j f (1)
put-down j (1)
unstack b d (1)
stack b f (1)
unstack d i (1)
put-down d (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up c (1)
stack c l (1)
unstack b f (1)
stack b c (1)
pick-up f (1)
stack f i (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e j (1)
unstack k g (1)
stack k f (1)
unstack g a (1)
stack g b (1)
unstack e j (1)
stack e k (1)
unstack a h (1)
stack a j (1)
unstack g b (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack e k (1)
stack e b (1)
unstack k f (1)
stack k e (1)
unstack f i (1)
stack f a (1)
pick-up j (1)
stack j i (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e j (1)
unstack b c (1)
put-down b (1)
unstack c l (1)
put-down c (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
stack l i (1)
pick-up d (1)
stack d l (1)
pick-up b (1)
stack b c (1)
unstack d l (1)
stack d j (1)
unstack l i (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.265784s, 431496 KB] Plan length: 73 step(s).
[t=0.265784s, 431496 KB] Plan cost: 73
[t=0.265784s, 431496 KB] Expanded 247 state(s).
[t=0.265784s, 431496 KB] Reopened 6 state(s).
[t=0.265784s, 431496 KB] Evaluated 777 state(s).
[t=0.265784s, 431496 KB] Evaluations: 777
[t=0.265784s, 431496 KB] Generated 1076 state(s).
[t=0.265784s, 431496 KB] Dead ends: 0 state(s).
[t=0.265784s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.265784s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.265784s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.265784s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.265784s, 431496 KB] Number of registered states: 777
[t=0.265784s, 431496 KB] Int hash set load factor: 777/1024 = 0.758789
[t=0.265784s, 431496 KB] Int hash set resizes: 10
[t=0.265784s, 431496 KB] Search time: 0.239362s
[t=0.265784s, 431496 KB] Total time: 0.265784s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p178.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6284e-05s, 424928 KB] reading input...
[t=0.00219218s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026205s, 427536 KB] Building successor generator...done!
[t=0.0264822s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265053s, 427536 KB] time for successor generation creation: 0.000164478s
[t=0.0265339s, 427536 KB] Variables: 25
[t=0.0265563s, 427536 KB] FactPairs: 182
[t=0.0265783s, 427536 KB] Bytes per state: 8
[t=0.0267747s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0989762s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0990302s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990561s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0990834s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0991073s, 430128 KB] pruning method: none
[t=0.110943s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.110993s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.119507s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.119551s, 431100 KB] g=3, 14 evaluated, 4 expanded
[t=0.121071s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.121102s, 431100 KB] g=5, 22 evaluated, 6 expanded
[t=0.125803s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.125835s, 431100 KB] g=6, 47 evaluated, 12 expanded
[t=0.129224s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.12926s, 431100 KB] g=11, 65 evaluated, 17 expanded
[t=0.136214s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.136259s, 431100 KB] g=13, 102 evaluated, 28 expanded
[t=0.13797s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.138002s, 431100 KB] g=16, 111 evaluated, 31 expanded
[t=0.138611s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.138643s, 431100 KB] g=17, 114 evaluated, 32 expanded
[t=0.139052s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.139081s, 431100 KB] g=18, 116 evaluated, 33 expanded
[t=0.139484s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.139512s, 431100 KB] g=19, 118 evaluated, 34 expanded
[t=0.141792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.141825s, 431100 KB] g=23, 130 evaluated, 38 expanded
[t=0.145221s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.145256s, 431100 KB] g=26, 148 evaluated, 44 expanded
[t=0.19632s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.196358s, 431232 KB] g=31, 420 evaluated, 137 expanded, 6 reopened
[t=0.197515s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.197545s, 431232 KB] g=32, 426 evaluated, 138 expanded, 6 reopened
[t=0.198344s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.198376s, 431232 KB] g=33, 430 evaluated, 140 expanded, 6 reopened
[t=0.203849s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.203884s, 431364 KB] g=39, 459 evaluated, 149 expanded, 6 reopened
[t=0.207467s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.2075s, 431364 KB] g=42, 478 evaluated, 156 expanded, 6 reopened
[t=0.208087s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.208116s, 431364 KB] g=43, 481 evaluated, 157 expanded, 6 reopened
[t=0.20833s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.208362s, 431364 KB] g=43, 482 evaluated, 157 expanded, 6 reopened
[t=0.209329s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.209362s, 431364 KB] g=44, 487 evaluated, 159 expanded, 6 reopened
[t=0.209578s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.209612s, 431364 KB] g=44, 488 evaluated, 159 expanded, 6 reopened
[t=0.211525s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.211558s, 431364 KB] g=47, 498 evaluated, 162 expanded, 6 reopened
[t=0.211964s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.211992s, 431364 KB] g=48, 500 evaluated, 163 expanded, 6 reopened
[t=0.216184s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.216219s, 431364 KB] g=50, 522 evaluated, 169 expanded, 6 reopened
[t=0.217184s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.217213s, 431364 KB] g=52, 527 evaluated, 171 expanded, 6 reopened
[t=0.217617s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.217645s, 431364 KB] g=52, 529 evaluated, 171 expanded, 6 reopened
[t=0.218433s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.218467s, 431364 KB] g=53, 533 evaluated, 173 expanded, 6 reopened
[t=0.219253s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.219282s, 431364 KB] g=55, 537 evaluated, 175 expanded, 6 reopened
[t=0.22362s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.223652s, 431364 KB] g=57, 560 evaluated, 183 expanded, 6 reopened
[t=0.228903s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.22894s, 431364 KB] g=54, 588 evaluated, 194 expanded, 6 reopened
[t=0.231407s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.231442s, 431364 KB] g=57, 601 evaluated, 199 expanded, 6 reopened
[t=0.23185s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.231879s, 431364 KB] g=58, 603 evaluated, 200 expanded, 6 reopened
[t=0.232471s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.232502s, 431364 KB] g=59, 606 evaluated, 201 expanded, 6 reopened
[t=0.233092s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.233121s, 431364 KB] g=60, 609 evaluated, 202 expanded, 6 reopened
[t=0.233524s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.233552s, 431364 KB] g=60, 611 evaluated, 202 expanded, 6 reopened
[t=0.23453s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.234562s, 431364 KB] g=62, 616 evaluated, 205 expanded, 6 reopened
[t=0.23498s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.235009s, 431364 KB] g=64, 619 evaluated, 207 expanded, 6 reopened
[t=0.235036s, 431364 KB] Solution found!
[t=0.235061s, 431364 KB] Actual search time: 0.135951s
unstack a b (1)
stack a l (1)
unstack b d (1)
put-down b (1)
unstack a l (1)
stack a b (1)
pick-up g (1)
stack g d (1)
unstack a b (1)
stack a k (1)
unstack l h (1)
stack l g (1)
unstack h j (1)
stack h a (1)
pick-up b (1)
stack b j (1)
unstack l g (1)
stack l h (1)
unstack b j (1)
put-down b (1)
unstack g d (1)
put-down g (1)
unstack l h (1)
stack l b (1)
unstack h a (1)
stack h g (1)
unstack j f (1)
stack j l (1)
unstack d i (1)
stack d j (1)
pick-up f (1)
stack f d (1)
unstack a k (1)
stack a f (1)
unstack k e (1)
stack k i (1)
pick-up e (1)
stack e k (1)
unstack a f (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack d j (1)
put-down d (1)
unstack e k (1)
stack e d (1)
unstack k i (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.235086s, 431364 KB] Plan length: 64 step(s).
[t=0.235086s, 431364 KB] Plan cost: 64
[t=0.235086s, 431364 KB] Expanded 208 state(s).
[t=0.235086s, 431364 KB] Reopened 6 state(s).
[t=0.235086s, 431364 KB] Evaluated 619 state(s).
[t=0.235086s, 431364 KB] Evaluations: 619
[t=0.235086s, 431364 KB] Generated 877 state(s).
[t=0.235086s, 431364 KB] Dead ends: 0 state(s).
[t=0.235086s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.235086s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.235086s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.235086s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.235086s, 431364 KB] Number of registered states: 619
[t=0.235086s, 431364 KB] Int hash set load factor: 619/1024 = 0.604492
[t=0.235086s, 431364 KB] Int hash set resizes: 10
[t=0.235086s, 431364 KB] Search time: 0.208312s
[t=0.235086s, 431364 KB] Total time: 0.235086s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p179.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6314e-05s, 424928 KB] reading input...
[t=0.00223637s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0263034s, 427536 KB] Building successor generator...done!
[t=0.0265848s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266086s, 427536 KB] time for successor generation creation: 0.00016705s
[t=0.0266376s, 427536 KB] Variables: 25
[t=0.0266608s, 427536 KB] FactPairs: 182
[t=0.0266835s, 427536 KB] Bytes per state: 8
[t=0.026901s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994398s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0994916s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995174s, 430128 KB] f = 149, 1 evaluated, 0 expanded
[t=0.0995453s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0995695s, 430128 KB] pruning method: none
[t=0.1115s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.111553s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11803s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.118073s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118289s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.11832s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.119088s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.119121s, 431100 KB] g=2, 8 evaluated, 3 expanded
[t=0.119688s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.119718s, 431100 KB] g=3, 11 evaluated, 4 expanded
[t=0.121163s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.121205s, 431100 KB] g=5, 19 evaluated, 7 expanded
[t=0.12601s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.126043s, 431100 KB] g=7, 46 evaluated, 16 expanded
[t=0.128026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.128059s, 431100 KB] g=9, 57 evaluated, 19 expanded
[t=0.137444s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.13748s, 431100 KB] g=16, 110 evaluated, 30 expanded
[t=0.138218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.138252s, 431100 KB] g=17, 114 evaluated, 31 expanded
[t=0.138822s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.138854s, 431100 KB] g=17, 117 evaluated, 31 expanded
[t=0.141366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.141399s, 431100 KB] g=20, 131 evaluated, 34 expanded
[t=0.150831s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.150869s, 431232 KB] g=22, 184 evaluated, 45 expanded
[t=0.153915s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.153946s, 431232 KB] g=25, 201 evaluated, 49 expanded
[t=0.174935s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.174971s, 431232 KB] g=29, 319 evaluated, 74 expanded
[t=0.181201s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.181238s, 431232 KB] g=30, 354 evaluated, 84 expanded, 2 reopened
[t=0.183214s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.183251s, 431232 KB] g=32, 365 evaluated, 86 expanded, 2 reopened
[t=0.183641s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.183674s, 431232 KB] g=33, 367 evaluated, 87 expanded, 2 reopened
[t=0.189347s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.189384s, 431232 KB] g=34, 399 evaluated, 94 expanded, 2 reopened
[t=0.192957s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.192991s, 431364 KB] g=37, 419 evaluated, 99 expanded, 2 reopened
[t=0.195161s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.195197s, 431364 KB] g=38, 431 evaluated, 102 expanded, 2 reopened
[t=0.198236s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.198275s, 431364 KB] g=40, 448 evaluated, 107 expanded, 2 reopened
[t=0.21056s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.210598s, 431364 KB] g=44, 517 evaluated, 128 expanded, 2 reopened
[t=0.212066s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.212097s, 431364 KB] g=44, 525 evaluated, 131 expanded, 2 reopened
[t=0.212311s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.21234s, 431364 KB] g=45, 526 evaluated, 132 expanded, 2 reopened
[t=0.213429s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.213459s, 431364 KB] g=46, 532 evaluated, 133 expanded, 2 reopened
[t=0.214906s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.214939s, 431364 KB] g=47, 540 evaluated, 135 expanded, 2 reopened
[t=0.215679s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.21571s, 431364 KB] g=48, 544 evaluated, 136 expanded, 2 reopened
[t=0.217154s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.217186s, 431364 KB] g=49, 552 evaluated, 137 expanded, 2 reopened
[t=0.21757s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.217599s, 431364 KB] g=50, 554 evaluated, 138 expanded, 2 reopened
[t=0.223558s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.223594s, 431364 KB] g=53, 587 evaluated, 145 expanded, 2 reopened
[t=0.22752s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.227556s, 431364 KB] g=54, 609 evaluated, 151 expanded, 2 reopened
[t=0.22794s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.227973s, 431364 KB] g=54, 611 evaluated, 151 expanded, 2 reopened
[t=0.228882s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.228912s, 431364 KB] g=55, 616 evaluated, 152 expanded, 2 reopened
[t=0.229646s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.229676s, 431364 KB] g=56, 620 evaluated, 153 expanded, 2 reopened
[t=0.230409s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.23044s, 431364 KB] g=57, 624 evaluated, 154 expanded, 2 reopened
[t=0.231707s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.231748s, 431364 KB] g=59, 631 evaluated, 156 expanded, 2 reopened
[t=0.232311s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.232341s, 431364 KB] g=60, 634 evaluated, 157 expanded, 2 reopened
[t=0.234316s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.234352s, 431496 KB] g=62, 645 evaluated, 162 expanded, 2 reopened
[t=0.243568s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.243606s, 431496 KB] g=66, 697 evaluated, 180 expanded, 2 reopened
[t=0.243819s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.243849s, 431496 KB] g=67, 698 evaluated, 181 expanded, 2 reopened
[t=0.244055s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.244083s, 431496 KB] g=67, 699 evaluated, 181 expanded, 2 reopened
[t=0.244298s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.244327s, 431496 KB] g=68, 700 evaluated, 182 expanded, 2 reopened
[t=0.244892s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.244922s, 431496 KB] g=69, 703 evaluated, 184 expanded, 2 reopened
[t=0.245483s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.245513s, 431496 KB] g=71, 706 evaluated, 186 expanded, 2 reopened
[t=0.247503s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.247537s, 431496 KB] g=72, 718 evaluated, 193 expanded, 2 reopened
[t=0.247565s, 431496 KB] Solution found!
[t=0.247593s, 431496 KB] Actual search time: 0.14802s
unstack a j (1)
stack a g (1)
unstack j l (1)
put-down j (1)
unstack e b (1)
put-down e (1)
unstack b d (1)
stack b j (1)
unstack a g (1)
stack a l (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
stack i a (1)
pick-up c (1)
stack c b (1)
unstack i a (1)
put-down i (1)
unstack a l (1)
stack a e (1)
pick-up l (1)
stack l d (1)
unstack a e (1)
stack a l (1)
unstack g k (1)
put-down g (1)
unstack k f (1)
stack k i (1)
unstack f h (1)
stack f e (1)
unstack k i (1)
stack k f (1)
pick-up h (1)
stack h g (1)
pick-up i (1)
stack i c (1)
unstack a l (1)
stack a h (1)
unstack k f (1)
stack k l (1)
unstack f e (1)
stack f a (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up e (1)
stack e b (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b j (1)
stack b i (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l j (1)
pick-up d (1)
stack d b (1)
unstack l j (1)
put-down l (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.247618s, 431496 KB] Plan length: 72 step(s).
[t=0.247618s, 431496 KB] Plan cost: 72
[t=0.247618s, 431496 KB] Expanded 194 state(s).
[t=0.247618s, 431496 KB] Reopened 2 state(s).
[t=0.247618s, 431496 KB] Evaluated 718 state(s).
[t=0.247618s, 431496 KB] Evaluations: 718
[t=0.247618s, 431496 KB] Generated 935 state(s).
[t=0.247618s, 431496 KB] Dead ends: 0 state(s).
[t=0.247618s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.247618s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.247618s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.247618s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.247618s, 431496 KB] Number of registered states: 718
[t=0.247618s, 431496 KB] Int hash set load factor: 718/1024 = 0.701172
[t=0.247618s, 431496 KB] Int hash set resizes: 10
[t=0.247618s, 431496 KB] Search time: 0.220718s
[t=0.247618s, 431496 KB] Total time: 0.247618s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p180.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9569e-05s, 424928 KB] reading input...
[t=0.00214912s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258719s, 427536 KB] Building successor generator...done!
[t=0.0261636s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026187s, 427536 KB] time for successor generation creation: 0.000169778s
[t=0.0262156s, 427536 KB] Variables: 25
[t=0.0262392s, 427536 KB] FactPairs: 182
[t=0.0262623s, 427536 KB] Bytes per state: 8
[t=0.0264718s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988911s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0989433s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989695s, 430128 KB] f = 130, 1 evaluated, 0 expanded
[t=0.0989969s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.099021s, 430128 KB] pruning method: none
[t=0.117563s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.117613s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118186s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.11823s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118441s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.118471s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.125755s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.125788s, 431100 KB] g=6, 49 evaluated, 13 expanded
[t=0.12636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.126392s, 431100 KB] g=7, 52 evaluated, 14 expanded
[t=0.127132s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.127162s, 431100 KB] g=8, 56 evaluated, 15 expanded
[t=0.127904s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.127934s, 431100 KB] g=9, 60 evaluated, 16 expanded
[t=0.128322s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.128351s, 431100 KB] g=10, 62 evaluated, 17 expanded
[t=0.132135s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.132172s, 431100 KB] g=12, 83 evaluated, 23 expanded
[t=0.133794s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.133824s, 431100 KB] g=14, 92 evaluated, 25 expanded
[t=0.135992s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.136024s, 431100 KB] g=17, 104 evaluated, 28 expanded
[t=0.13783s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.137864s, 431100 KB] g=19, 114 evaluated, 30 expanded
[t=0.141634s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.141679s, 431100 KB] g=19, 135 evaluated, 35 expanded
[t=0.143859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.143894s, 431100 KB] g=20, 147 evaluated, 40 expanded
[t=0.176164s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.176204s, 431232 KB] g=29, 328 evaluated, 95 expanded
[t=0.176776s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.176806s, 431232 KB] g=30, 331 evaluated, 96 expanded
[t=0.178265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.178298s, 431232 KB] g=32, 339 evaluated, 98 expanded
[t=0.179766s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.179797s, 431232 KB] g=34, 347 evaluated, 101 expanded
[t=0.181245s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.181278s, 431232 KB] g=36, 355 evaluated, 103 expanded
[t=0.185758s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.185791s, 431232 KB] g=41, 380 evaluated, 112 expanded
[t=0.187975s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.188011s, 431232 KB] g=43, 392 evaluated, 117 expanded
[t=0.189284s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.189314s, 431232 KB] g=45, 399 evaluated, 119 expanded
[t=0.190244s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.190276s, 431232 KB] g=47, 404 evaluated, 121 expanded
[t=0.192433s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.192464s, 431232 KB] g=49, 416 evaluated, 124 expanded
[t=0.205323s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.205363s, 431232 KB] g=51, 488 evaluated, 150 expanded
[t=0.232085s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.232125s, 431364 KB] g=54, 637 evaluated, 244 expanded, 15 reopened
[t=0.262028s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.262066s, 431364 KB] g=62, 806 evaluated, 325 expanded, 15 reopened
[t=0.262094s, 431364 KB] Solution found!
[t=0.262126s, 431364 KB] Actual search time: 0.163101s
unstack e f (1)
stack e d (1)
pick-up f (1)
stack f e (1)
unstack i l (1)
put-down i (1)
pick-up k (1)
stack k i (1)
unstack l a (1)
stack l f (1)
unstack a j (1)
stack a k (1)
unstack j g (1)
put-down j (1)
unstack g h (1)
put-down g (1)
pick-up j (1)
stack j b (1)
unstack l f (1)
put-down l (1)
pick-up h (1)
stack h g (1)
unstack j b (1)
stack j f (1)
pick-up b (1)
stack b l (1)
unstack j f (1)
stack j b (1)
unstack a k (1)
stack a h (1)
unstack k i (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
pick-up i (1)
stack i j (1)
unstack e d (1)
stack e k (1)
unstack d c (1)
stack d e (1)
unstack i j (1)
stack i c (1)
unstack d e (1)
put-down d (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.262151s, 431364 KB] Plan length: 62 step(s).
[t=0.262151s, 431364 KB] Plan cost: 62
[t=0.262151s, 431364 KB] Expanded 326 state(s).
[t=0.262151s, 431364 KB] Reopened 15 state(s).
[t=0.262151s, 431364 KB] Evaluated 806 state(s).
[t=0.262151s, 431364 KB] Evaluations: 806
[t=0.262151s, 431364 KB] Generated 1241 state(s).
[t=0.262151s, 431364 KB] Dead ends: 0 state(s).
[t=0.262151s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.262151s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.262151s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.262151s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.262151s, 431364 KB] Number of registered states: 806
[t=0.262151s, 431364 KB] Int hash set load factor: 806/1024 = 0.787109
[t=0.262151s, 431364 KB] Int hash set resizes: 10
[t=0.262151s, 431364 KB] Search time: 0.23568s
[t=0.262151s, 431364 KB] Total time: 0.262151s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023390
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 8 test success: 20 of 20 (100.0%)

---------- FOLD 10/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.2, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 66 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.09987562894821167 (0.5493156909942627 vs. 0.449440062046051), which occurred at index 49.
  _module_class,
 | avg_train_loss=0.098991 | avg_val_loss=0.093178
Epoch 2 | avg_train_loss=0.070759 | avg_val_loss=0.043615
Epoch 3 | avg_train_loss=0.040698 | avg_val_loss=0.037477
Epoch 4 | avg_train_loss=0.037274 | avg_val_loss=0.035591
Epoch 5 | avg_train_loss=0.035793 | avg_val_loss=0.034043
Epoch 6 | avg_train_loss=0.034955 | avg_val_loss=0.033513
Epoch 7 | avg_train_loss=0.034246 | avg_val_loss=0.033152
Epoch 8 | avg_train_loss=0.033611 | avg_val_loss=0.033177
Epoch 9 | avg_train_loss=0.032999 | avg_val_loss=0.032180
Epoch 10 | avg_train_loss=0.032448 | avg_val_loss=0.032014
Epoch 11 | avg_train_loss=0.032020 | avg_val_loss=0.031614
Epoch 12 | avg_train_loss=0.031456 | avg_val_loss=0.031057
Epoch 13 | avg_train_loss=0.031026 | avg_val_loss=0.030363
Epoch 14 | avg_train_loss=0.030664 | avg_val_loss=0.030650
Epoch 15 | avg_train_loss=0.030294 | avg_val_loss=0.029864
Epoch 16 | avg_train_loss=0.029955 | avg_val_loss=0.029818
Epoch 17 | avg_train_loss=0.029511 | avg_val_loss=0.029081
Epoch 18 | avg_train_loss=0.029111 | avg_val_loss=0.029250
Epoch 19 | avg_train_loss=0.028762 | avg_val_loss=0.029296
Epoch 20 | avg_train_loss=0.028452 | avg_val_loss=0.028226
Epoch 21 | avg_train_loss=0.028169 | avg_val_loss=0.028133
Epoch 22 | avg_train_loss=0.027761 | avg_val_loss=0.027800
Epoch 23 | avg_train_loss=0.027570 | avg_val_loss=0.027682
Epoch 24 | avg_train_loss=0.027283 | avg_val_loss=0.027437
Epoch 25 | avg_train_loss=0.026879 | avg_val_loss=0.026968
Epoch 26 | avg_train_loss=0.026518 | avg_val_loss=0.026818
Epoch 27 | avg_train_loss=0.026302 | avg_val_loss=0.026631
Epoch 28 | avg_train_loss=0.025988 | avg_val_loss=0.026492
Epoch 29 | avg_train_loss=0.025773 | avg_val_loss=0.026331
Epoch 30 | avg_train_loss=0.025492 | avg_val_loss=0.025525
Epoch 31 | avg_train_loss=0.025213 | avg_val_loss=0.025743
Epoch 32 | avg_train_loss=0.024912 | avg_val_loss=0.025391
Epoch 33 | avg_train_loss=0.024673 | avg_val_loss=0.025090
Epoch 34 | avg_train_loss=0.024425 | avg_val_loss=0.025030
Epoch 35 | avg_train_loss=0.024315 | avg_val_loss=0.025171
Epoch 36 | avg_train_loss=0.023975 | avg_val_loss=0.024571
Epoch 37 | avg_train_loss=0.023920 | avg_val_loss=0.024552
Epoch 38 | avg_train_loss=0.023713 | avg_val_loss=0.024552
Epoch 39 | avg_train_loss=0.023504 | avg_val_loss=0.024239
Epoch 40 | avg_train_loss=0.023378 | avg_val_loss=0.023741
Epoch 41 | avg_train_loss=0.023128 | avg_val_loss=0.023863
Epoch 42 | avg_train_loss=0.022927 | avg_val_loss=0.023851
Epoch 43 | avg_train_loss=0.022737 | avg_val_loss=0.024056
Epoch 44 | avg_train_loss=0.022570 | avg_val_loss=0.023540
Epoch 45 | avg_train_loss=0.022623 | avg_val_loss=0.023606
Epoch 46 | avg_train_loss=0.022298 | avg_val_loss=0.023310
Epoch 47 | avg_train_loss=0.022293 | avg_val_loss=0.023624
Epoch 48 | avg_train_loss=0.022042 | avg_val_loss=0.023506
Epoch 49 | avg_train_loss=0.021922 | avg_val_loss=0.023479
Epoch 50 | avg_train_loss=0.021972 | avg_val_loss=0.022777
Epoch 51 | avg_train_loss=0.021591 | avg_val_loss=0.022581
Epoch 52 | avg_train_loss=0.021576 | avg_val_loss=0.023161
Epoch 53 | avg_train_loss=0.021504 | avg_val_loss=0.023184
Epoch 54 | avg_train_loss=0.021330 | avg_val_loss=0.022966
Epoch 55 | avg_train_loss=0.021262 | avg_val_loss=0.022856
Epoch 56 | avg_train_loss=0.021131 | avg_val_loss=0.022941
Epoch 57 | avg_train_loss=0.020754 | avg_val_loss=0.023499
Epoch 58 | avg_train_loss=0.020766 | avg_val_loss=0.022499
Epoch 59 | avg_train_loss=0.020621 | avg_val_loss=0.022900
Epoch 60 | avg_train_loss=0.020625 | avg_val_loss=0.022895
Epoch 61 | avg_train_loss=0.020404 | avg_val_loss=0.022586
Epoch 62 | avg_train_loss=0.020179 | avg_val_loss=0.022586
Epoch 63 | avg_train_loss=0.020142 | avg_val_loss=0.022846
Epoch 64 | avg_train_loss=0.019966 | avg_val_loss=0.022516
Epoch 65 | avg_train_loss=0.020014 | avg_val_loss=0.022858
Epoch 66 | avg_train_loss=0.019841 | avg_val_loss=0.022450
Epoch 67 | avg_train_loss=0.019818 | avg_val_loss=0.022526
Epoch 68 | avg_train_loss=0.019553 | avg_val_loss=0.022178
Epoch 69 | avg_train_loss=0.019425 | avg_val_loss=0.022383
Epoch 70 | avg_train_loss=0.019277 | avg_val_loss=0.022649
Epoch 71 | avg_train_loss=0.019338 | avg_val_loss=0.022538
Epoch 72 | avg_train_loss=0.019166 | avg_val_loss=0.022519
Epoch 73 | avg_train_loss=0.019004 | avg_val_loss=0.021993
Epoch 74 | avg_train_loss=0.018996 | avg_val_loss=0.021934
Epoch 75 | avg_train_loss=0.018802 | avg_val_loss=0.022099
Epoch 76 | avg_train_loss=0.018728 | avg_val_loss=0.021966
Epoch 77 | avg_train_loss=0.018726 | avg_val_loss=0.021892
Epoch 78 | avg_train_loss=0.018574 | avg_val_loss=0.022102
Epoch 79 | avg_train_loss=0.018484 | avg_val_loss=0.022479
Epoch 80 | avg_train_loss=0.018439 | avg_val_loss=0.022420
Epoch 81 | avg_train_loss=0.018271 | avg_val_loss=0.022201
Epoch 82 | avg_train_loss=0.018103 | avg_val_loss=0.021982
Epoch 83 | avg_train_loss=0.017929 | avg_val_loss=0.022751
Epoch 84 | avg_train_loss=0.017856 | avg_val_loss=0.022259
Epoch 85 | avg_train_loss=0.017839 | avg_val_loss=0.021972
Epoch 86 | avg_train_loss=0.017800 | avg_val_loss=0.022508
Epoch 87 | avg_train_loss=0.017699 | avg_val_loss=0.021482
Epoch 88 | avg_train_loss=0.017454 | avg_val_loss=0.022169
Epoch 89 | avg_train_loss=0.017418 | avg_val_loss=0.021628
Epoch 90 | avg_train_loss=0.017369 | avg_val_loss=0.021844
Epoch 91 | avg_train_loss=0.017099 | avg_val_loss=0.021947
Epoch 92 | avg_train_loss=0.017308 | avg_val_loss=0.022250
Epoch 93 | avg_train_loss=0.016988 | avg_val_loss=0.022251
Epoch 94 | avg_train_loss=0.017014 | avg_val_loss=0.021746
Epoch 95 | avg_train_loss=0.016894 | avg_val_loss=0.021795
Epoch 96 | avg_train_loss=0.016764 | avg_val_loss=0.022467
Epoch 97 | avg_train_loss=0.016660 | avg_val_loss=0.022260
Epoch 98 | avg_train_loss=0.016449 | avg_val_loss=0.022121
Epoch 99 | avg_train_loss=0.016461 | avg_val_loss=0.021976
Epoch 100 | avg_train_loss=0.016472 | avg_val_loss=0.022160
Epoch 101 | avg_train_loss=0.016333 | avg_val_loss=0.022743
Epoch 102 | avg_train_loss=0.016210INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p181.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9963e-05s, 424928 KB] reading input...
[t=0.00214119s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258877s, 427536 KB] Building successor generator...done!
[t=0.02617s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026193s, 427536 KB] time for successor generation creation: 0.000169409s
[t=0.0262308s, 427536 KB] Variables: 25
[t=0.0262546s, 427536 KB] FactPairs: 182
[t=0.0262771s, 427536 KB] Bytes per state: 8
[t=0.0264706s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106132s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.106186s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106213s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.10624s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.106264s, 430128 KB] pruning method: none
[t=0.124423s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.124473s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.125051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.125082s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.126008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.126039s, 431100 KB] g=3, 11 evaluated, 4 expanded
[t=0.1266s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.126631s, 431100 KB] g=4, 14 evaluated, 5 expanded
[t=0.127754s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.127788s, 431100 KB] g=4, 20 evaluated, 7 expanded
[t=0.129594s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.129624s, 431100 KB] g=6, 30 evaluated, 10 expanded
[t=0.133035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.133068s, 431100 KB] g=9, 49 evaluated, 14 expanded
[t=0.135088s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.13512s, 431100 KB] g=11, 60 evaluated, 16 expanded
[t=0.135866s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.135899s, 431100 KB] g=12, 64 evaluated, 17 expanded
[t=0.140406s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.140443s, 431100 KB] g=15, 89 evaluated, 22 expanded
[t=0.145472s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.145508s, 431100 KB] g=18, 117 evaluated, 28 expanded
[t=0.14643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.146463s, 431100 KB] g=19, 122 evaluated, 29 expanded
[t=0.147399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.147435s, 431100 KB] g=18, 127 evaluated, 31 expanded
[t=0.19515s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.195189s, 431232 KB] g=23, 394 evaluated, 89 expanded
[t=0.231176s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.231213s, 431232 KB] g=27, 596 evaluated, 129 expanded
[t=0.24052s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.240556s, 431364 KB] g=30, 648 evaluated, 140 expanded
[t=0.276104s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.276143s, 431364 KB] g=33, 848 evaluated, 186 expanded, 2 reopened
[t=0.367593s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.367638s, 431496 KB] g=31, 1361 evaluated, 315 expanded, 19 reopened
[t=0.37213s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.372167s, 431496 KB] g=33, 1386 evaluated, 320 expanded, 19 reopened
[t=0.382697s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.382735s, 431496 KB] g=35, 1445 evaluated, 337 expanded, 20 reopened
[t=0.391876s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.391914s, 431496 KB] g=38, 1496 evaluated, 349 expanded, 20 reopened
[t=0.403897s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.403936s, 431496 KB] g=44, 1563 evaluated, 366 expanded, 20 reopened
[t=0.404859s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.404889s, 431496 KB] g=45, 1568 evaluated, 367 expanded, 20 reopened
[t=0.40546s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.40549s, 431496 KB] g=46, 1571 evaluated, 368 expanded, 20 reopened
[t=0.405699s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.405727s, 431496 KB] g=46, 1572 evaluated, 368 expanded, 20 reopened
[t=0.405938s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.40597s, 431496 KB] g=47, 1573 evaluated, 369 expanded, 20 reopened
[t=0.411011s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.411046s, 431496 KB] g=52, 1601 evaluated, 376 expanded, 20 reopened
[t=0.411257s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.411286s, 431496 KB] g=52, 1602 evaluated, 376 expanded, 20 reopened
[t=0.411853s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.411892s, 431496 KB] g=53, 1605 evaluated, 377 expanded, 20 reopened
[t=0.412823s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.412854s, 431496 KB] g=55, 1610 evaluated, 379 expanded, 20 reopened
[t=0.413246s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.413276s, 431496 KB] g=56, 1612 evaluated, 380 expanded, 20 reopened
[t=0.415819s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.415853s, 431496 KB] g=58, 1626 evaluated, 384 expanded, 20 reopened
[t=0.424625s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.424665s, 431628 KB] g=60, 1675 evaluated, 400 expanded, 21 reopened
[t=0.424878s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.424907s, 431628 KB] g=60, 1676 evaluated, 400 expanded, 21 reopened
[t=0.425653s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.425683s, 431628 KB] g=61, 1680 evaluated, 401 expanded, 21 reopened
[t=0.428583s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.42862s, 431628 KB] g=64, 1696 evaluated, 406 expanded, 21 reopened
[t=0.428835s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.428864s, 431628 KB] g=65, 1697 evaluated, 407 expanded, 21 reopened
[t=0.429072s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.4291s, 431628 KB] g=65, 1698 evaluated, 407 expanded, 21 reopened
[t=0.43003s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.43006s, 431628 KB] g=67, 1703 evaluated, 409 expanded, 21 reopened
[t=0.430819s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.430854s, 431628 KB] g=69, 1707 evaluated, 411 expanded, 21 reopened
[t=0.431246s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.431275s, 431628 KB] g=70, 1709 evaluated, 412 expanded, 21 reopened
[t=0.431307s, 431628 KB] Solution found!
[t=0.431335s, 431628 KB] Actual search time: 0.325067s
stack h e (1)
unstack k g (1)
put-down k (1)
unstack h e (1)
stack h g (1)
unstack e a (1)
put-down e (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
pick-up e (1)
stack e k (1)
pick-up d (1)
stack d c (1)
unstack h g (1)
stack h i (1)
unstack g b (1)
put-down g (1)
unstack a l (1)
stack a b (1)
unstack h i (1)
stack h a (1)
unstack l f (1)
stack l d (1)
pick-up f (1)
stack f e (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a f (1)
unstack b j (1)
put-down b (1)
pick-up j (1)
stack j i (1)
unstack l d (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack d c (1)
stack d j (1)
pick-up c (1)
stack c b (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
put-down e (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack d j (1)
stack d b (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.431359s, 431628 KB] Plan length: 71 step(s).
[t=0.431359s, 431628 KB] Plan cost: 71
[t=0.431359s, 431628 KB] Expanded 414 state(s).
[t=0.431359s, 431628 KB] Reopened 21 state(s).
[t=0.431359s, 431628 KB] Evaluated 1710 state(s).
[t=0.431359s, 431628 KB] Evaluations: 1710
[t=0.431359s, 431628 KB] Generated 2309 state(s).
[t=0.431359s, 431628 KB] Dead ends: 0 state(s).
[t=0.431359s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.431359s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.431359s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.431359s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.431359s, 431628 KB] Number of registered states: 1710
[t=0.431359s, 431628 KB] Int hash set load factor: 1710/2048 = 0.834961
[t=0.431359s, 431628 KB] Int hash set resizes: 11
[t=0.431359s, 431628 KB] Search time: 0.404889s
[t=0.431359s, 431628 KB] Total time: 0.431359s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p182.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6544e-05s, 424928 KB] reading input...
[t=0.00217876s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259569s, 427536 KB] Building successor generator...done!
[t=0.0262345s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026258s, 427536 KB] time for successor generation creation: 0.000167015s
[t=0.0262869s, 427536 KB] Variables: 25
[t=0.0263094s, 427536 KB] FactPairs: 182
[t=0.0263315s, 427536 KB] Bytes per state: 8
[t=0.0265258s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980917s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0981442s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981702s, 430128 KB] f = 125, 1 evaluated, 0 expanded
[t=0.0981974s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0982213s, 430128 KB] pruning method: none
[t=0.116662s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.116712s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.12033s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.120363s, 431100 KB] g=3, 25 evaluated, 5 expanded
[t=0.121294s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.121327s, 431100 KB] g=4, 30 evaluated, 6 expanded
[t=0.123144s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.123175s, 431100 KB] g=6, 40 evaluated, 8 expanded
[t=0.129833s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.129869s, 431100 KB] g=7, 77 evaluated, 18 expanded
[t=0.147772s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.147809s, 431100 KB] g=13, 177 evaluated, 43 expanded
[t=0.151085s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.151121s, 431232 KB] g=10, 195 evaluated, 50 expanded
[t=0.154407s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.154443s, 431232 KB] g=11, 213 evaluated, 61 expanded, 4 reopened
[t=0.15501s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.15505s, 431232 KB] g=12, 216 evaluated, 62 expanded, 4 reopened
[t=0.162628s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.162663s, 431232 KB] g=14, 258 evaluated, 77 expanded, 4 reopened
[t=0.18437s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.184406s, 431232 KB] g=19, 379 evaluated, 136 expanded, 10 reopened
[t=0.675959s, 431636 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.676008s, 431636 KB] g=20, 3140 evaluated, 1153 expanded, 100 reopened
[t=0.727357s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.727402s, 431768 KB] g=24, 3430 evaluated, 1202 expanded, 100 reopened
[t=0.737196s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.737236s, 431768 KB] g=29, 3485 evaluated, 1213 expanded, 100 reopened
[t=0.743306s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.743345s, 431768 KB] g=30, 3519 evaluated, 1220 expanded, 100 reopened
[t=0.744438s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.744468s, 431768 KB] g=31, 3525 evaluated, 1221 expanded, 100 reopened
[t=0.748053s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.748088s, 431768 KB] g=33, 3545 evaluated, 1224 expanded, 100 reopened
[t=0.748483s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.748512s, 431768 KB] g=34, 3547 evaluated, 1225 expanded, 100 reopened
[t=0.754776s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.754815s, 431768 KB] g=37, 3582 evaluated, 1233 expanded, 100 reopened
[t=0.756103s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.756135s, 431768 KB] g=39, 3589 evaluated, 1235 expanded, 100 reopened
[t=0.757073s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.757108s, 431768 KB] g=40, 3594 evaluated, 1237 expanded, 100 reopened
[t=0.758207s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.758238s, 431768 KB] g=41, 3600 evaluated, 1238 expanded, 100 reopened
[t=0.760764s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.760798s, 431768 KB] g=44, 3614 evaluated, 1243 expanded, 100 reopened
[t=0.761742s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.761781s, 431768 KB] g=46, 3619 evaluated, 1245 expanded, 100 reopened
[t=0.762889s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.76292s, 431768 KB] g=48, 3625 evaluated, 1247 expanded, 100 reopened
[t=0.76349s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.763522s, 431768 KB] g=49, 3628 evaluated, 1248 expanded, 100 reopened
[t=0.764271s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.764302s, 431768 KB] g=51, 3632 evaluated, 1250 expanded, 100 reopened
[t=0.764694s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.764728s, 431768 KB] g=52, 3634 evaluated, 1251 expanded, 100 reopened
[t=0.764947s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.764978s, 431768 KB] g=52, 3635 evaluated, 1251 expanded, 100 reopened
[t=0.765369s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.765398s, 431768 KB] g=53, 3637 evaluated, 1252 expanded, 100 reopened
[t=0.767395s, 431900 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.767427s, 431900 KB] g=56, 3648 evaluated, 1259 expanded, 100 reopened
[t=0.76782s, 431900 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.767849s, 431900 KB] g=57, 3650 evaluated, 1260 expanded, 100 reopened
[t=0.767882s, 431900 KB] Solution found!
[t=0.767909s, 431900 KB] Actual search time: 0.669685s
unstack h j (1)
stack h a (1)
unstack k g (1)
put-down k (1)
pick-up g (1)
stack g k (1)
unstack h a (1)
stack h e (1)
unstack a i (1)
put-down a (1)
unstack i l (1)
put-down i (1)
unstack l d (1)
put-down l (1)
unstack d f (1)
stack d l (1)
unstack h e (1)
stack h a (1)
pick-up f (1)
stack f j (1)
pick-up i (1)
stack i c (1)
unstack h a (1)
stack h i (1)
pick-up a (1)
stack a e (1)
unstack g k (1)
put-down g (1)
unstack h i (1)
stack h g (1)
unstack a e (1)
stack a h (1)
pick-up e (1)
stack e d (1)
pick-up k (1)
stack k e (1)
unstack f j (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
unstack c b (1)
stack c i (1)
pick-up b (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.767935s, 431900 KB] Plan length: 58 step(s).
[t=0.767935s, 431900 KB] Plan cost: 58
[t=0.767935s, 431900 KB] Expanded 1262 state(s).
[t=0.767935s, 431900 KB] Reopened 100 state(s).
[t=0.767935s, 431900 KB] Evaluated 3651 state(s).
[t=0.767935s, 431900 KB] Evaluations: 3651
[t=0.767935s, 431900 KB] Generated 5578 state(s).
[t=0.767935s, 431900 KB] Dead ends: 0 state(s).
[t=0.767935s, 431900 KB] Expanded until last jump: 0 state(s).
[t=0.767935s, 431900 KB] Reopened until last jump: 0 state(s).
[t=0.767935s, 431900 KB] Evaluated until last jump: 1 state(s).
[t=0.767935s, 431900 KB] Generated until last jump: 0 state(s).
[t=0.767935s, 431900 KB] Number of registered states: 3651
[t=0.767935s, 431900 KB] Int hash set load factor: 3651/4096 = 0.891357
[t=0.767935s, 431900 KB] Int hash set resizes: 12
[t=0.767935s, 431900 KB] Search time: 0.74141s
[t=0.767935s, 431900 KB] Total time: 0.767935s
Solution found.
Peak memory: 431900 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p183.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9801e-05s, 424928 KB] reading input...
[t=0.00224873s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258021s, 427536 KB] Building successor generator...done!
[t=0.0260811s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261044s, 427536 KB] time for successor generation creation: 0.000166227s
[t=0.0261327s, 427536 KB] Variables: 25
[t=0.0261549s, 427536 KB] FactPairs: 182
[t=0.0261762s, 427536 KB] Bytes per state: 8
[t=0.0263732s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109939s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.110006s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.110032s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.110059s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.110083s, 430128 KB] pruning method: none
[t=0.122007s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.122057s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.12894s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.128984s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.129211s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.12924s, 431100 KB] g=3, 6 evaluated, 3 expanded
[t=0.130218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.130248s, 431100 KB] g=5, 11 evaluated, 6 expanded
[t=0.134447s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.134479s, 431100 KB] g=7, 33 evaluated, 16 expanded
[t=0.134901s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.134933s, 431100 KB] g=8, 35 evaluated, 17 expanded
[t=0.13685s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.13688s, 431100 KB] g=11, 45 evaluated, 21 expanded
[t=0.137095s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.137123s, 431100 KB] g=11, 46 evaluated, 21 expanded
[t=0.138857s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.138888s, 431100 KB] g=13, 55 evaluated, 25 expanded
[t=0.181373s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.181413s, 431232 KB] g=22, 280 evaluated, 106 expanded
[t=0.307171s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.307211s, 431364 KB] g=25, 950 evaluated, 311 expanded, 12 reopened
[t=0.485152s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.485196s, 431496 KB] g=32, 1898 evaluated, 573 expanded, 32 reopened
[t=0.491411s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.491448s, 431496 KB] g=33, 1931 evaluated, 579 expanded, 32 reopened
[t=0.556922s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.556963s, 431632 KB] g=35, 2279 evaluated, 668 expanded, 42 reopened
[t=0.766103s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.76615s, 431632 KB] g=32, 3397 evaluated, 939 expanded, 45 reopened
[t=0.766578s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.76661s, 431632 KB] g=32, 3399 evaluated, 939 expanded, 45 reopened
[t=0.768514s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.768546s, 431632 KB] g=34, 3409 evaluated, 941 expanded, 45 reopened
[t=0.768768s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.768796s, 431632 KB] g=35, 3410 evaluated, 942 expanded, 45 reopened
[t=0.770518s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.770556s, 431764 KB] g=36, 3419 evaluated, 944 expanded, 45 reopened
[t=0.77453s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.774563s, 431764 KB] g=35, 3440 evaluated, 950 expanded, 45 reopened
[t=0.78005s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.780084s, 431764 KB] g=40, 3469 evaluated, 958 expanded, 45 reopened
[t=0.781246s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.781276s, 431764 KB] g=42, 3475 evaluated, 960 expanded, 45 reopened
[t=0.781683s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.781712s, 431764 KB] g=42, 3477 evaluated, 960 expanded, 45 reopened
[t=0.782877s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.782912s, 431764 KB] g=43, 3483 evaluated, 962 expanded, 45 reopened
[t=0.786133s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.786166s, 431764 KB] g=47, 3500 evaluated, 967 expanded, 45 reopened
[t=0.78827s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.788302s, 431764 KB] g=49, 3511 evaluated, 970 expanded, 45 reopened
[t=0.792106s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.792139s, 431764 KB] g=50, 3531 evaluated, 976 expanded, 45 reopened
[t=0.792363s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.792391s, 431764 KB] g=51, 3532 evaluated, 977 expanded, 45 reopened
[t=0.793357s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.793389s, 431764 KB] g=52, 3537 evaluated, 978 expanded, 45 reopened
[t=0.794178s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.794207s, 431764 KB] g=53, 3541 evaluated, 979 expanded, 45 reopened
[t=0.798768s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.798803s, 431764 KB] g=57, 3565 evaluated, 985 expanded, 45 reopened
[t=0.801467s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.801501s, 431764 KB] g=59, 3579 evaluated, 989 expanded, 45 reopened
[t=0.802293s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.802324s, 431764 KB] g=60, 3583 evaluated, 990 expanded, 45 reopened
[t=0.802928s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.802958s, 431764 KB] g=61, 3586 evaluated, 991 expanded, 45 reopened
[t=0.804121s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.804151s, 431764 KB] g=62, 3592 evaluated, 992 expanded, 45 reopened
[t=0.806639s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.806675s, 431764 KB] g=64, 3605 evaluated, 996 expanded, 45 reopened
[t=0.807829s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.807862s, 431764 KB] g=65, 3611 evaluated, 997 expanded, 45 reopened
[t=0.808646s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.808675s, 431764 KB] g=66, 3615 evaluated, 998 expanded, 45 reopened
[t=0.810601s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.810633s, 431764 KB] g=69, 3625 evaluated, 1003 expanded, 45 reopened
[t=0.814835s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.814869s, 431764 KB] g=71, 3647 evaluated, 1013 expanded, 45 reopened
[t=0.825098s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.825136s, 431764 KB] g=73, 3702 evaluated, 1040 expanded, 45 reopened
[t=0.825164s, 431764 KB] Solution found!
[t=0.825191s, 431764 KB] Actual search time: 0.715104s
stack h a (1)
unstack e b (1)
stack e h (1)
unstack b d (1)
stack b e (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c i (1)
unstack b e (1)
stack b d (1)
unstack e h (1)
put-down e (1)
unstack h a (1)
stack h e (1)
unstack c i (1)
stack c b (1)
unstack a k (1)
put-down a (1)
unstack k g (1)
stack k c (1)
unstack g f (1)
stack g k (1)
unstack h e (1)
stack h f (1)
unstack g k (1)
put-down g (1)
pick-up a (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up e (1)
stack e i (1)
unstack a h (1)
stack a k (1)
unstack f l (1)
stack f e (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j l (1)
unstack a k (1)
stack a h (1)
unstack k c (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack e i (1)
put-down e (1)
unstack k j (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
stack b c (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.825215s, 431764 KB] Plan length: 73 step(s).
[t=0.825215s, 431764 KB] Plan cost: 73
[t=0.825215s, 431764 KB] Expanded 1041 state(s).
[t=0.825215s, 431764 KB] Reopened 45 state(s).
[t=0.825215s, 431764 KB] Evaluated 3702 state(s).
[t=0.825215s, 431764 KB] Evaluations: 3702
[t=0.825215s, 431764 KB] Generated 5240 state(s).
[t=0.825215s, 431764 KB] Dead ends: 0 state(s).
[t=0.825215s, 431764 KB] Expanded until last jump: 0 state(s).
[t=0.825215s, 431764 KB] Reopened until last jump: 0 state(s).
[t=0.825215s, 431764 KB] Evaluated until last jump: 1 state(s).
[t=0.825215s, 431764 KB] Generated until last jump: 0 state(s).
[t=0.825215s, 431764 KB] Number of registered states: 3702
[t=0.825215s, 431764 KB] Int hash set load factor: 3702/4096 = 0.903809
[t=0.825215s, 431764 KB] Int hash set resizes: 12
[t=0.825215s, 431764 KB] Search time: 0.798843s
[t=0.825215s, 431764 KB] Total time: 0.825215s
Solution found.
Peak memory: 431764 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p184.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1466 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7375e-05s, 424928 KB] reading input...
[t=0.002161s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258095s, 427536 KB] Building successor generator...done!
[t=0.0260908s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261143s, 427536 KB] time for successor generation creation: 0.00016848s
[t=0.0261434s, 427536 KB] Variables: 25
[t=0.0261664s, 427536 KB] FactPairs: 182
[t=0.0261888s, 427536 KB] Bytes per state: 8
[t=0.0263846s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109622s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.109678s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109704s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.109732s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.109756s, 430128 KB] pruning method: none
[t=0.121585s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.121637s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.12809s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.128132s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.128359s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.128389s, 431100 KB] g=2, 4 evaluated, 2 expanded
[t=0.128604s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.128634s, 431100 KB] g=3, 5 evaluated, 3 expanded
[t=0.129396s, 431100 KB] f = 152, 9 evaluated, 6 expanded
[t=0.129973s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.130003s, 431100 KB] g=5, 12 evaluated, 8 expanded
[t=0.130584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.130615s, 431100 KB] g=7, 15 evaluated, 10 expanded
[t=0.130646s, 431100 KB] f = 153, 15 evaluated, 11 expanded
[t=0.130859s, 431100 KB] f = 155, 16 evaluated, 12 expanded
[t=0.132689s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.13272s, 431100 KB] g=9, 26 evaluated, 16 expanded
[t=0.133826s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.133856s, 431100 KB] g=11, 32 evaluated, 18 expanded
[t=0.134073s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.134114s, 431100 KB] g=12, 33 evaluated, 19 expanded
[t=0.145826s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.145863s, 431100 KB] g=16, 98 evaluated, 37 expanded
[t=0.152756s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.152792s, 431100 KB] g=20, 136 evaluated, 47 expanded
[t=0.154278s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.15431s, 431100 KB] g=20, 144 evaluated, 50 expanded
[t=0.154714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.154746s, 431100 KB] g=21, 146 evaluated, 51 expanded
[t=0.236012s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.236054s, 431364 KB] g=34, 596 evaluated, 263 expanded, 16 reopened
[t=0.241655s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.241689s, 431364 KB] g=39, 627 evaluated, 272 expanded, 16 reopened
[t=0.242077s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.242109s, 431364 KB] g=39, 629 evaluated, 272 expanded, 16 reopened
[t=0.242872s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.242907s, 431364 KB] g=40, 633 evaluated, 273 expanded, 16 reopened
[t=0.243839s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.243873s, 431364 KB] g=42, 638 evaluated, 275 expanded, 16 reopened
[t=0.245162s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.245192s, 431364 KB] g=45, 645 evaluated, 278 expanded, 16 reopened
[t=0.245586s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.245618s, 431364 KB] g=46, 647 evaluated, 279 expanded, 16 reopened
[t=0.248355s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.248391s, 431364 KB] g=49, 662 evaluated, 285 expanded, 16 reopened
[t=0.249679s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.249712s, 431364 KB] g=51, 669 evaluated, 288 expanded, 16 reopened
[t=0.25245s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.252484s, 431364 KB] g=54, 684 evaluated, 294 expanded, 16 reopened
[t=0.259158s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.259195s, 431364 KB] g=55, 721 evaluated, 307 expanded, 18 reopened
[t=0.261375s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.261414s, 431364 KB] g=58, 733 evaluated, 310 expanded, 18 reopened
[t=0.26163s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.261659s, 431364 KB] g=59, 734 evaluated, 311 expanded, 18 reopened
[t=0.264044s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.26408s, 431364 KB] g=62, 747 evaluated, 317 expanded, 18 reopened
[t=0.265011s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.265047s, 431496 KB] g=63, 752 evaluated, 318 expanded, 18 reopened
[t=0.265263s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.265293s, 431496 KB] g=64, 753 evaluated, 319 expanded, 18 reopened
[t=0.266053s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.266083s, 431496 KB] g=66, 757 evaluated, 321 expanded, 18 reopened
[t=0.266113s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.266137s, 431496 KB] g=67, 758 evaluated, 322 expanded, 18 reopened
[t=0.266162s, 431496 KB] Solution found!
[t=0.266188s, 431496 KB] Actual search time: 0.156428s
put-down a (1)
unstack h f (1)
stack h a (1)
unstack f j (1)
put-down f (1)
unstack j l (1)
put-down j (1)
pick-up f (1)
stack f j (1)
unstack l g (1)
put-down l (1)
unstack g e (1)
put-down g (1)
unstack f j (1)
stack f e (1)
unstack h a (1)
stack h g (1)
pick-up j (1)
stack j l (1)
pick-up a (1)
stack a j (1)
unstack f e (1)
put-down f (1)
unstack a j (1)
stack a f (1)
unstack e k (1)
put-down e (1)
unstack a f (1)
stack a k (1)
pick-up f (1)
stack f e (1)
unstack a k (1)
stack a f (1)
unstack k b (1)
stack k j (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f k (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e j (1)
unstack b d (1)
put-down b (1)
unstack e j (1)
stack e k (1)
unstack d i (1)
stack d b (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.266212s, 431496 KB] Plan length: 67 step(s).
[t=0.266212s, 431496 KB] Plan cost: 67
[t=0.266212s, 431496 KB] Expanded 323 state(s).
[t=0.266212s, 431496 KB] Reopened 18 state(s).
[t=0.266212s, 431496 KB] Evaluated 758 state(s).
[t=0.266212s, 431496 KB] Evaluations: 758
[t=0.266212s, 431496 KB] Generated 1190 state(s).
[t=0.266212s, 431496 KB] Dead ends: 0 state(s).
[t=0.266212s, 431496 KB] Expanded until last jump: 12 state(s).
[t=0.266212s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.266212s, 431496 KB] Evaluated until last jump: 16 state(s).
[t=0.266212s, 431496 KB] Generated until last jump: 26 state(s).
[t=0.266212s, 431496 KB] Number of registered states: 758
[t=0.266212s, 431496 KB] Int hash set load factor: 758/1024 = 0.740234
[t=0.266212s, 431496 KB] Int hash set resizes: 10
[t=0.266212s, 431496 KB] Search time: 0.239828s
[t=0.266212s, 431496 KB] Total time: 0.266212s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p185.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1473 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6773e-05s, 424928 KB] reading input...
[t=0.002187s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258519s, 427536 KB] Building successor generator...done!
[t=0.0261287s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261516s, 427536 KB] time for successor generation creation: 0.000167768s
[t=0.0261796s, 427536 KB] Variables: 25
[t=0.0262026s, 427536 KB] FactPairs: 182
[t=0.0262249s, 427536 KB] Bytes per state: 8
[t=0.0264179s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979522s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0980031s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980293s, 430128 KB] f = 114, 1 evaluated, 0 expanded
[t=0.0980572s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0980905s, 430128 KB] pruning method: none
[t=0.109845s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.109898s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116286s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.116329s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116545s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.116575s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.116985s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.117015s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.120398s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.12043s, 431100 KB] g=3, 25 evaluated, 4 expanded
[t=0.122614s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.122647s, 431100 KB] g=5, 37 evaluated, 6 expanded
[t=0.129067s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.129102s, 431100 KB] g=9, 73 evaluated, 13 expanded
[t=0.129492s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.129522s, 431100 KB] g=10, 75 evaluated, 14 expanded
[t=0.132746s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.132781s, 431100 KB] g=12, 93 evaluated, 18 expanded
[t=0.138993s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.13903s, 431100 KB] g=15, 128 evaluated, 25 expanded
[t=0.148245s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.148281s, 431232 KB] g=17, 180 evaluated, 36 expanded
[t=0.151854s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.151889s, 431232 KB] g=19, 200 evaluated, 41 expanded
[t=0.189437s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.189474s, 431232 KB] g=21, 412 evaluated, 90 expanded
[t=0.196603s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.196641s, 431232 KB] g=25, 452 evaluated, 98 expanded
[t=0.204462s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.204497s, 431232 KB] g=27, 496 evaluated, 107 expanded
[t=0.204904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.204944s, 431232 KB] g=28, 498 evaluated, 108 expanded
[t=0.206043s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.206079s, 431364 KB] g=29, 504 evaluated, 109 expanded
[t=0.210233s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.210267s, 431364 KB] g=30, 527 evaluated, 113 expanded
[t=0.222739s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.222778s, 431364 KB] g=33, 597 evaluated, 126 expanded
[t=0.234882s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.23492s, 431364 KB] g=35, 664 evaluated, 139 expanded
[t=0.251748s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.251786s, 431364 KB] g=37, 758 evaluated, 160 expanded
[t=0.253087s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.253127s, 431496 KB] g=36, 765 evaluated, 162 expanded
[t=0.253513s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.253543s, 431496 KB] g=36, 767 evaluated, 162 expanded
[t=0.25411s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.25414s, 431496 KB] g=37, 770 evaluated, 163 expanded
[t=0.255805s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.255842s, 431496 KB] g=39, 779 evaluated, 165 expanded
[t=0.262073s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.26211s, 431496 KB] g=43, 813 evaluated, 173 expanded
[t=0.2625s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.26253s, 431496 KB] g=43, 815 evaluated, 173 expanded
[t=0.263101s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.263131s, 431496 KB] g=44, 818 evaluated, 174 expanded
[t=0.265175s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.265214s, 431496 KB] g=46, 829 evaluated, 177 expanded
[t=0.266322s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.266353s, 431496 KB] g=48, 835 evaluated, 179 expanded
[t=0.267098s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.267131s, 431496 KB] g=49, 839 evaluated, 180 expanded
[t=0.26734s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.267375s, 431496 KB] g=49, 840 evaluated, 180 expanded
[t=0.268679s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.268715s, 431496 KB] g=51, 847 evaluated, 183 expanded
[t=0.269822s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.269852s, 431496 KB] g=53, 853 evaluated, 186 expanded
[t=0.270419s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.270449s, 431496 KB] g=54, 856 evaluated, 187 expanded
[t=0.271377s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.271407s, 431496 KB] g=55, 861 evaluated, 189 expanded
[t=0.271801s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.271832s, 431496 KB] g=56, 863 evaluated, 190 expanded
[t=0.272226s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.272256s, 431496 KB] g=57, 865 evaluated, 191 expanded
[t=0.272288s, 431496 KB] Solution found!
[t=0.272316s, 431496 KB] Actual search time: 0.174221s
unstack h i (1)
stack h l (1)
pick-up d (1)
stack d j (1)
pick-up f (1)
stack f i (1)
unstack d j (1)
stack d c (1)
unstack j a (1)
stack j f (1)
unstack h l (1)
stack h d (1)
unstack l e (1)
put-down l (1)
unstack j f (1)
stack j l (1)
unstack h d (1)
stack h a (1)
unstack f i (1)
stack f e (1)
unstack h a (1)
stack h f (1)
unstack g b (1)
put-down g (1)
pick-up i (1)
stack i b (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a d (1)
pick-up k (1)
stack k j (1)
unstack a d (1)
stack a h (1)
unstack f e (1)
stack f k (1)
unstack d c (1)
stack d i (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i b (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.27234s, 431496 KB] Plan length: 58 step(s).
[t=0.27234s, 431496 KB] Plan cost: 58
[t=0.27234s, 431496 KB] Expanded 193 state(s).
[t=0.27234s, 431496 KB] Reopened 0 state(s).
[t=0.27234s, 431496 KB] Evaluated 866 state(s).
[t=0.27234s, 431496 KB] Evaluations: 866
[t=0.27234s, 431496 KB] Generated 1070 state(s).
[t=0.27234s, 431496 KB] Dead ends: 0 state(s).
[t=0.27234s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.27234s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.27234s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.27234s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.27234s, 431496 KB] Number of registered states: 866
[t=0.27234s, 431496 KB] Int hash set load factor: 866/1024 = 0.845703
[t=0.27234s, 431496 KB] Int hash set resizes: 10
[t=0.27234s, 431496 KB] Search time: 0.245923s
[t=0.27234s, 431496 KB] Total time: 0.27234s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p186.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6386e-05s, 424928 KB] reading input...
[t=0.00219021s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261102s, 427536 KB] Building successor generator...done!
[t=0.0263931s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264164s, 427536 KB] time for successor generation creation: 0.000170502s
[t=0.0264455s, 427536 KB] Variables: 25
[t=0.0264687s, 427536 KB] FactPairs: 182
[t=0.0264909s, 427536 KB] Bytes per state: 8
[t=0.0266869s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990671s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0991179s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991442s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0991716s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0991957s, 430128 KB] pruning method: none
[t=0.111002s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.111063s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117818s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.117861s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.119366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.119396s, 431100 KB] g=2, 13 evaluated, 4 expanded
[t=0.119977s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.120006s, 431100 KB] g=3, 16 evaluated, 5 expanded
[t=0.120584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.120613s, 431100 KB] g=3, 19 evaluated, 5 expanded
[t=0.121191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.121219s, 431100 KB] g=4, 22 evaluated, 6 expanded
[t=0.123272s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.123305s, 431100 KB] g=5, 33 evaluated, 8 expanded
[t=0.12443s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.12446s, 431100 KB] g=7, 39 evaluated, 10 expanded
[t=0.125218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.125253s, 431100 KB] g=7, 43 evaluated, 10 expanded
[t=0.125656s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.125685s, 431100 KB] g=8, 45 evaluated, 11 expanded
[t=0.133792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.133825s, 431100 KB] g=11, 89 evaluated, 19 expanded
[t=0.134959s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.134991s, 431100 KB] g=12, 95 evaluated, 21 expanded
[t=0.140155s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.140188s, 431100 KB] g=14, 123 evaluated, 27 expanded
[t=0.141523s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.141555s, 431100 KB] g=16, 130 evaluated, 29 expanded
[t=0.143419s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.143453s, 431100 KB] g=18, 140 evaluated, 31 expanded
[t=0.144395s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.144425s, 431100 KB] g=19, 145 evaluated, 32 expanded
[t=0.155976s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.15602s, 431232 KB] g=24, 208 evaluated, 49 expanded
[t=0.199729s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.199766s, 431232 KB] g=29, 447 evaluated, 116 expanded, 3 reopened
[t=0.219622s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.219661s, 431364 KB] g=34, 555 evaluated, 142 expanded, 3 reopened
[t=0.221891s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.221924s, 431364 KB] g=32, 567 evaluated, 144 expanded, 3 reopened
[t=0.229641s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.229675s, 431364 KB] g=36, 609 evaluated, 155 expanded, 3 reopened
[t=0.230621s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.23065s, 431364 KB] g=37, 614 evaluated, 156 expanded, 3 reopened
[t=0.230862s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.23089s, 431364 KB] g=37, 615 evaluated, 156 expanded, 3 reopened
[t=0.231476s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.231506s, 431364 KB] g=38, 618 evaluated, 157 expanded, 3 reopened
[t=0.232991s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.233021s, 431364 KB] g=39, 626 evaluated, 158 expanded, 3 reopened
[t=0.237094s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.23713s, 431364 KB] g=40, 648 evaluated, 163 expanded, 3 reopened
[t=0.238274s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.238305s, 431364 KB] g=42, 654 evaluated, 165 expanded, 3 reopened
[t=0.24237s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.242408s, 431496 KB] g=42, 676 evaluated, 171 expanded, 3 reopened
[t=0.243361s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.243391s, 431496 KB] g=44, 681 evaluated, 173 expanded, 3 reopened
[t=0.243794s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.243823s, 431496 KB] g=45, 683 evaluated, 174 expanded, 3 reopened
[t=0.244034s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.244062s, 431496 KB] g=45, 684 evaluated, 174 expanded, 3 reopened
[t=0.247774s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.247812s, 431496 KB] g=47, 704 evaluated, 180 expanded, 3 reopened
[t=0.248577s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.248606s, 431496 KB] g=48, 708 evaluated, 181 expanded, 3 reopened
[t=0.249197s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.249231s, 431496 KB] g=49, 711 evaluated, 182 expanded, 3 reopened
[t=0.255123s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.255159s, 431496 KB] g=53, 743 evaluated, 191 expanded, 3 reopened
[t=0.266957s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.266992s, 431496 KB] g=53, 807 evaluated, 212 expanded, 3 reopened
[t=0.267575s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.267604s, 431496 KB] g=54, 810 evaluated, 213 expanded, 3 reopened
[t=0.268551s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.26858s, 431496 KB] g=55, 815 evaluated, 214 expanded, 3 reopened
[t=0.268796s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.268825s, 431496 KB] g=56, 816 evaluated, 215 expanded, 3 reopened
[t=0.269249s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.269282s, 431496 KB] g=57, 818 evaluated, 216 expanded, 3 reopened
[t=0.269719s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.269753s, 431496 KB] g=59, 821 evaluated, 218 expanded, 3 reopened
[t=0.269782s, 431496 KB] Solution found!
[t=0.26981s, 431496 KB] Actual search time: 0.170612s
stack e f (1)
unstack b d (1)
put-down b (1)
unstack c i (1)
put-down c (1)
unstack l j (1)
stack l c (1)
unstack j h (1)
stack j e (1)
unstack l c (1)
stack l b (1)
pick-up h (1)
stack h j (1)
unstack d g (1)
stack d c (1)
unstack g a (1)
stack g d (1)
pick-up a (1)
stack a l (1)
unstack h j (1)
stack h a (1)
unstack g d (1)
stack g h (1)
unstack j e (1)
stack j i (1)
unstack g h (1)
put-down g (1)
unstack d c (1)
stack d j (1)
unstack e f (1)
stack e c (1)
unstack h a (1)
stack h g (1)
unstack f k (1)
stack f e (1)
unstack a l (1)
stack a h (1)
pick-up k (1)
stack k l (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.269837s, 431496 KB] Plan length: 59 step(s).
[t=0.269837s, 431496 KB] Plan cost: 59
[t=0.269837s, 431496 KB] Expanded 219 state(s).
[t=0.269837s, 431496 KB] Reopened 3 state(s).
[t=0.269837s, 431496 KB] Evaluated 821 state(s).
[t=0.269837s, 431496 KB] Evaluations: 821
[t=0.269837s, 431496 KB] Generated 1086 state(s).
[t=0.269837s, 431496 KB] Dead ends: 0 state(s).
[t=0.269837s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.269837s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.269837s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.269837s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.269837s, 431496 KB] Number of registered states: 821
[t=0.269837s, 431496 KB] Int hash set load factor: 821/1024 = 0.801758
[t=0.269837s, 431496 KB] Int hash set resizes: 10
[t=0.269837s, 431496 KB] Search time: 0.24315s
[t=0.269837s, 431496 KB] Total time: 0.269837s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p187.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6847e-05s, 424928 KB] reading input...
[t=0.00221945s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258828s, 427536 KB] Building successor generator...done!
[t=0.0261615s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261857s, 427536 KB] time for successor generation creation: 0.000167866s
[t=0.0262156s, 427536 KB] Variables: 25
[t=0.0262487s, 427536 KB] FactPairs: 182
[t=0.0262715s, 427536 KB] Bytes per state: 8
[t=0.0264637s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979623s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.0980168s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980432s, 430128 KB] f = 82, 1 evaluated, 0 expanded
[t=0.0980713s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.0980955s, 430128 KB] pruning method: none
[t=0.116381s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.116431s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.120729s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.120764s, 431100 KB] g=3, 28 evaluated, 6 expanded
[t=0.122602s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.122637s, 431100 KB] g=4, 38 evaluated, 9 expanded
[t=0.123383s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.123414s, 431100 KB] g=5, 42 evaluated, 10 expanded
[t=0.126649s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.126683s, 431100 KB] g=7, 60 evaluated, 14 expanded
[t=0.132068s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.132106s, 431100 KB] g=7, 90 evaluated, 22 expanded
[t=0.135539s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.135577s, 431100 KB] g=10, 109 evaluated, 26 expanded
[t=0.136149s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.13618s, 431100 KB] g=11, 112 evaluated, 27 expanded
[t=0.141593s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.141628s, 431100 KB] g=15, 142 evaluated, 36 expanded
[t=0.142554s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.142589s, 431100 KB] g=16, 147 evaluated, 37 expanded
[t=0.14352s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.143552s, 431100 KB] g=17, 152 evaluated, 38 expanded
[t=0.145018s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.14505s, 431100 KB] g=19, 160 evaluated, 40 expanded
[t=0.146166s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.146203s, 431100 KB] g=20, 166 evaluated, 41 expanded
[t=0.146596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.146636s, 431100 KB] g=21, 168 evaluated, 42 expanded
[t=0.147921s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.147956s, 431100 KB] g=23, 175 evaluated, 44 expanded
[t=0.150678s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.150713s, 431232 KB] g=25, 190 evaluated, 48 expanded
[t=0.161505s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.161545s, 431232 KB] g=29, 250 evaluated, 65 expanded
[t=0.163751s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163787s, 431232 KB] g=32, 262 evaluated, 69 expanded
[t=0.167948s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.167983s, 431232 KB] g=33, 285 evaluated, 77 expanded
[t=0.170012s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.170046s, 431232 KB] g=37, 296 evaluated, 82 expanded
[t=0.187984s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.188021s, 431232 KB] g=36, 396 evaluated, 117 expanded
[t=0.189314s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.189347s, 431232 KB] g=39, 403 evaluated, 120 expanded
[t=0.189574s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.189606s, 431232 KB] g=40, 404 evaluated, 121 expanded
[t=0.18982s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.18985s, 431232 KB] g=41, 405 evaluated, 122 expanded
[t=0.190244s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.190275s, 431232 KB] g=42, 407 evaluated, 123 expanded
[t=0.191395s, 431232 KB] Solution found!
[t=0.191429s, 431232 KB] Actual search time: 0.0933308s
stack l i (1)
unstack d b (1)
stack d j (1)
unstack b g (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack l i (1)
stack l d (1)
pick-up k (1)
stack k l (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack i c (1)
put-down i (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up i (1)
stack i c (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.191455s, 431232 KB] Plan length: 45 step(s).
[t=0.191455s, 431232 KB] Plan cost: 45
[t=0.191455s, 431232 KB] Expanded 130 state(s).
[t=0.191455s, 431232 KB] Reopened 0 state(s).
[t=0.191455s, 431232 KB] Evaluated 414 state(s).
[t=0.191455s, 431232 KB] Evaluations: 414
[t=0.191455s, 431232 KB] Generated 556 state(s).
[t=0.191455s, 431232 KB] Dead ends: 0 state(s).
[t=0.191455s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.191455s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.191455s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.191455s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.191455s, 431232 KB] Number of registered states: 414
[t=0.191455s, 431232 KB] Int hash set load factor: 414/512 = 0.808594
[t=0.191455s, 431232 KB] Int hash set resizes: 9
[t=0.191455s, 431232 KB] Search time: 0.164992s
[t=0.191455s, 431232 KB] Total time: 0.191455s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p188.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6973e-05s, 424928 KB] reading input...
[t=0.00217315s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259353s, 427536 KB] Building successor generator...done!
[t=0.0262172s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262417s, 427536 KB] time for successor generation creation: 0.000169017s
[t=0.026271s, 427536 KB] Variables: 25
[t=0.0262944s, 427536 KB] FactPairs: 182
[t=0.0263172s, 427536 KB] Bytes per state: 8
[t=0.0265115s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994533s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0995062s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995329s, 430128 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0995613s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0995861s, 430128 KB] pruning method: none
[t=0.111509s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.111561s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.118078s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119023s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.119054s, 431100 KB] g=3, 8 evaluated, 4 expanded
[t=0.119268s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.119297s, 431100 KB] g=4, 9 evaluated, 5 expanded
[t=0.125406s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.12544s, 431100 KB] g=11, 43 evaluated, 16 expanded
[t=0.12726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.127291s, 431100 KB] g=13, 53 evaluated, 20 expanded
[t=0.127677s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.127707s, 431100 KB] g=13, 55 evaluated, 20 expanded
[t=0.131672s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.131709s, 431100 KB] g=15, 77 evaluated, 26 expanded
[t=0.134252s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.134285s, 431100 KB] g=19, 91 evaluated, 30 expanded
[t=0.135388s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.135421s, 431100 KB] g=20, 97 evaluated, 32 expanded
[t=0.136166s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.136196s, 431100 KB] g=21, 101 evaluated, 33 expanded
[t=0.140877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.140913s, 431100 KB] g=22, 127 evaluated, 39 expanded
[t=0.150288s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.150325s, 431232 KB] g=26, 179 evaluated, 52 expanded
[t=0.151799s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.15183s, 431232 KB] g=27, 187 evaluated, 55 expanded
[t=0.165615s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.165655s, 431232 KB] g=33, 264 evaluated, 76 expanded
[t=0.166764s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.1668s, 431232 KB] g=35, 270 evaluated, 78 expanded
[t=0.180576s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.180614s, 431232 KB] g=37, 347 evaluated, 102 expanded
[t=0.187256s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.187295s, 431232 KB] g=40, 384 evaluated, 112 expanded
[t=0.188579s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.188613s, 431232 KB] g=42, 391 evaluated, 114 expanded
[t=0.189006s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.189036s, 431232 KB] g=43, 393 evaluated, 115 expanded
[t=0.189442s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.189475s, 431232 KB] g=44, 395 evaluated, 116 expanded
[t=0.190043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.190077s, 431232 KB] g=45, 398 evaluated, 117 expanded
[t=0.191003s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.191034s, 431232 KB] g=47, 403 evaluated, 119 expanded
[t=0.191602s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.191635s, 431232 KB] g=48, 406 evaluated, 120 expanded
[t=0.192027s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.192057s, 431232 KB] g=49, 408 evaluated, 121 expanded
[t=0.192806s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.192837s, 431232 KB] g=51, 412 evaluated, 123 expanded
[t=0.193587s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.193623s, 431232 KB] g=52, 416 evaluated, 124 expanded
[t=0.196513s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.196547s, 431232 KB] g=55, 432 evaluated, 133 expanded
[t=0.196768s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.196798s, 431232 KB] g=56, 433 evaluated, 134 expanded
[t=0.19701s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.19704s, 431232 KB] g=57, 434 evaluated, 135 expanded
[t=0.197445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.197478s, 431232 KB] g=58, 436 evaluated, 136 expanded
[t=0.198589s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.198626s, 431364 KB] g=60, 442 evaluated, 140 expanded
[t=0.198659s, 431364 KB] Solution found!
[t=0.198686s, 431364 KB] Actual search time: 0.0990956s
stack k j (1)
unstack b l (1)
put-down b (1)
unstack k j (1)
put-down k (1)
unstack l a (1)
stack l b (1)
unstack a h (1)
stack a l (1)
unstack j g (1)
stack j k (1)
unstack g e (1)
stack g h (1)
unstack e d (1)
stack e a (1)
unstack d i (1)
stack d j (1)
unstack e a (1)
stack e d (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up f (1)
stack f e (1)
unstack a l (1)
stack a f (1)
unstack l b (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e d (1)
stack e b (1)
unstack d j (1)
stack d i (1)
unstack j k (1)
stack j d (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.198711s, 431364 KB] Plan length: 61 step(s).
[t=0.198711s, 431364 KB] Plan cost: 61
[t=0.198711s, 431364 KB] Expanded 142 state(s).
[t=0.198711s, 431364 KB] Reopened 0 state(s).
[t=0.198711s, 431364 KB] Evaluated 443 state(s).
[t=0.198711s, 431364 KB] Evaluations: 443
[t=0.198711s, 431364 KB] Generated 595 state(s).
[t=0.198711s, 431364 KB] Dead ends: 0 state(s).
[t=0.198711s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.198711s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.198711s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.198711s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.198711s, 431364 KB] Number of registered states: 443
[t=0.198711s, 431364 KB] Int hash set load factor: 443/512 = 0.865234
[t=0.198711s, 431364 KB] Int hash set resizes: 9
[t=0.198711s, 431364 KB] Search time: 0.1722s
[t=0.198711s, 431364 KB] Total time: 0.198711s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p189.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6424e-05s, 424928 KB] reading input...
[t=0.00215804s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258013s, 427536 KB] Building successor generator...done!
[t=0.0260824s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261059s, 427536 KB] time for successor generation creation: 0.000169745s
[t=0.0261338s, 427536 KB] Variables: 25
[t=0.0261565s, 427536 KB] FactPairs: 182
[t=0.0261784s, 427536 KB] Bytes per state: 8
[t=0.0263716s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978814s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0979331s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979588s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0979857s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0980104s, 430128 KB] pruning method: none
[t=0.109798s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.10985s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117279s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.117322s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119133s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.119174s, 431100 KB] g=4, 18 evaluated, 4 expanded
[t=0.11992s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.11995s, 431100 KB] g=5, 22 evaluated, 5 expanded
[t=0.120341s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.120372s, 431100 KB] g=5, 24 evaluated, 5 expanded
[t=0.12218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.12221s, 431100 KB] g=7, 34 evaluated, 8 expanded
[t=0.126336s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.126374s, 431100 KB] g=10, 57 evaluated, 15 expanded
[t=0.126944s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.126973s, 431100 KB] g=11, 60 evaluated, 16 expanded
[t=0.130198s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.13023s, 431100 KB] g=14, 78 evaluated, 21 expanded
[t=0.131685s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.131716s, 431100 KB] g=16, 86 evaluated, 23 expanded
[t=0.133894s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.133927s, 431100 KB] g=13, 98 evaluated, 27 expanded
[t=0.134851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.134881s, 431100 KB] g=14, 103 evaluated, 28 expanded
[t=0.143614s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.143647s, 431100 KB] g=18, 152 evaluated, 39 expanded
[t=0.144038s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.144067s, 431100 KB] g=19, 154 evaluated, 40 expanded
[t=0.144994s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.145026s, 431100 KB] g=20, 159 evaluated, 41 expanded
[t=0.145235s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.145263s, 431100 KB] g=20, 160 evaluated, 41 expanded
[t=0.145475s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.145503s, 431100 KB] g=21, 161 evaluated, 42 expanded
[t=0.146598s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.146628s, 431232 KB] g=22, 167 evaluated, 43 expanded
[t=0.147909s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.147944s, 431232 KB] g=23, 174 evaluated, 45 expanded
[t=0.148697s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.148732s, 431232 KB] g=24, 178 evaluated, 46 expanded
[t=0.151082s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.151114s, 431232 KB] g=27, 191 evaluated, 50 expanded
[t=0.157736s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.157768s, 431232 KB] g=30, 228 evaluated, 63 expanded
[t=0.159582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.159612s, 431232 KB] g=32, 238 evaluated, 66 expanded
[t=0.160369s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.1604s, 431232 KB] g=33, 242 evaluated, 67 expanded
[t=0.161692s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.161724s, 431232 KB] g=36, 249 evaluated, 71 expanded
[t=0.161938s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.161966s, 431232 KB] g=37, 250 evaluated, 72 expanded
[t=0.162533s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.162563s, 431232 KB] g=39, 253 evaluated, 74 expanded
[t=0.162951s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.162983s, 431232 KB] g=40, 255 evaluated, 75 expanded
[t=0.164125s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.164154s, 431232 KB] g=43, 262 evaluated, 81 expanded
[t=0.164181s, 431232 KB] Solution found!
[t=0.164206s, 431232 KB] Actual search time: 0.0661922s
stack h g (1)
unstack b e (1)
stack b l (1)
unstack e a (1)
stack e k (1)
pick-up a (1)
stack a d (1)
unstack h g (1)
stack h a (1)
unstack g j (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack j f (1)
stack j e (1)
unstack a d (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack j e (1)
stack j b (1)
unstack e k (1)
stack e j (1)
unstack k i (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack b l (1)
stack b i (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.164231s, 431232 KB] Plan length: 43 step(s).
[t=0.164231s, 431232 KB] Plan cost: 43
[t=0.164231s, 431232 KB] Expanded 82 state(s).
[t=0.164231s, 431232 KB] Reopened 0 state(s).
[t=0.164231s, 431232 KB] Evaluated 262 state(s).
[t=0.164231s, 431232 KB] Evaluations: 262
[t=0.164231s, 431232 KB] Generated 342 state(s).
[t=0.164231s, 431232 KB] Dead ends: 0 state(s).
[t=0.164231s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.164231s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.164231s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.164231s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.164231s, 431232 KB] Number of registered states: 262
[t=0.164231s, 431232 KB] Int hash set load factor: 262/512 = 0.511719
[t=0.164231s, 431232 KB] Int hash set resizes: 9
[t=0.164231s, 431232 KB] Search time: 0.13786s
[t=0.164231s, 431232 KB] Total time: 0.164231s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p190.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8276e-05s, 424928 KB] reading input...
[t=0.00218118s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257474s, 427536 KB] Building successor generator...done!
[t=0.0260486s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260722s, 427536 KB] time for successor generation creation: 0.000169054s
[t=0.0261007s, 427536 KB] Variables: 25
[t=0.0261241s, 427536 KB] FactPairs: 182
[t=0.0261461s, 427536 KB] Bytes per state: 8
[t=0.026341s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985373s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0985907s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986167s, 430128 KB] f = 108, 1 evaluated, 0 expanded
[t=0.0986446s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.098669s, 430128 KB] pruning method: none
[t=0.116796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.116846s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117981s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.118015s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.121821s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.121855s, 431100 KB] g=3, 30 evaluated, 7 expanded
[t=0.122069s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.122099s, 431100 KB] g=3, 31 evaluated, 7 expanded
[t=0.122857s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.122888s, 431100 KB] g=4, 35 evaluated, 8 expanded
[t=0.123457s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.123487s, 431100 KB] g=4, 38 evaluated, 8 expanded
[t=0.143415s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.143451s, 431100 KB] g=13, 148 evaluated, 36 expanded
[t=0.144025s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.144059s, 431100 KB] g=14, 151 evaluated, 37 expanded
[t=0.144456s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.144486s, 431100 KB] g=15, 153 evaluated, 38 expanded
[t=0.145786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.145822s, 431100 KB] g=17, 160 evaluated, 40 expanded
[t=0.147122s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.147157s, 431100 KB] g=19, 167 evaluated, 42 expanded
[t=0.14737s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.147399s, 431100 KB] g=19, 168 evaluated, 42 expanded
[t=0.147789s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.147824s, 431232 KB] g=19, 170 evaluated, 42 expanded
[t=0.149119s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.149162s, 431232 KB] g=21, 177 evaluated, 44 expanded
[t=0.151537s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.151573s, 431232 KB] g=24, 190 evaluated, 47 expanded
[t=0.153226s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.153257s, 431232 KB] g=26, 199 evaluated, 49 expanded
[t=0.153651s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.153681s, 431232 KB] g=27, 201 evaluated, 50 expanded
[t=0.15445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.154483s, 431232 KB] g=28, 205 evaluated, 51 expanded
[t=0.155237s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.155267s, 431232 KB] g=29, 209 evaluated, 52 expanded
[t=0.156025s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.156055s, 431232 KB] g=31, 213 evaluated, 54 expanded
[t=0.156815s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.156848s, 431232 KB] g=33, 217 evaluated, 56 expanded
[t=0.158168s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.158201s, 431232 KB] g=36, 224 evaluated, 59 expanded
[t=0.160217s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.160251s, 431232 KB] g=37, 235 evaluated, 64 expanded
[t=0.160467s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.160496s, 431232 KB] g=38, 236 evaluated, 65 expanded
[t=0.16107s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.161101s, 431232 KB] g=40, 239 evaluated, 67 expanded
[t=0.16224s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.162272s, 431232 KB] g=42, 245 evaluated, 72 expanded
[t=0.162305s, 431232 KB] Solution found!
[t=0.162332s, 431232 KB] Actual search time: 0.063659s
stack f d (1)
unstack l g (1)
stack l b (1)
unstack h j (1)
stack h a (1)
unstack f d (1)
stack f l (1)
unstack d i (1)
stack d j (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f l (1)
stack f a (1)
unstack l b (1)
stack l d (1)
unstack b k (1)
put-down b (1)
unstack l d (1)
stack l i (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j l (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.162357s, 431232 KB] Plan length: 43 step(s).
[t=0.162357s, 431232 KB] Plan cost: 43
[t=0.162357s, 431232 KB] Expanded 74 state(s).
[t=0.162357s, 431232 KB] Reopened 0 state(s).
[t=0.162357s, 431232 KB] Evaluated 246 state(s).
[t=0.162357s, 431232 KB] Evaluations: 246
[t=0.162357s, 431232 KB] Generated 318 state(s).
[t=0.162357s, 431232 KB] Dead ends: 0 state(s).
[t=0.162357s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.162357s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.162357s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.162357s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.162357s, 431232 KB] Number of registered states: 246
[t=0.162357s, 431232 KB] Int hash set load factor: 246/256 = 0.960938
[t=0.162357s, 431232 KB] Int hash set resizes: 8
[t=0.162357s, 431232 KB] Search time: 0.136017s
[t=0.162357s, 431232 KB] Total time: 0.162357s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p191.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5932e-05s, 424928 KB] reading input...
[t=0.00217415s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025851s, 427536 KB] Building successor generator...done!
[t=0.0261324s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261558s, 427536 KB] time for successor generation creation: 0.000172556s
[t=0.0261845s, 427536 KB] Variables: 25
[t=0.0262084s, 427536 KB] FactPairs: 182
[t=0.0262306s, 427536 KB] Bytes per state: 8
[t=0.0264252s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985129s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0985668s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985926s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.098619s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0986433s, 430128 KB] pruning method: none
[t=0.117417s, 431100 KB] f = 149, 6 evaluated, 1 expanded
[t=0.119308s, 431100 KB] f = 150, 16 evaluated, 4 expanded
[t=0.119534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.119564s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.120142s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.120173s, 431100 KB] g=5, 20 evaluated, 6 expanded
[t=0.122002s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.122034s, 431100 KB] g=7, 30 evaluated, 8 expanded
[t=0.122427s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.122457s, 431100 KB] g=8, 32 evaluated, 9 expanded
[t=0.12267s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.122699s, 431100 KB] g=8, 33 evaluated, 9 expanded
[t=0.122907s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.122943s, 431100 KB] g=8, 34 evaluated, 9 expanded
[t=0.123874s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.123904s, 431100 KB] g=9, 39 evaluated, 10 expanded
[t=0.131709s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.131746s, 431100 KB] g=13, 82 evaluated, 19 expanded
[t=0.132503s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.132534s, 431100 KB] g=14, 86 evaluated, 20 expanded
[t=0.133653s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.133686s, 431100 KB] g=15, 92 evaluated, 21 expanded
[t=0.133903s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.133933s, 431100 KB] g=16, 93 evaluated, 22 expanded
[t=0.134324s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.134366s, 431100 KB] g=16, 95 evaluated, 22 expanded
[t=0.164516s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.164559s, 431232 KB] g=22, 245 evaluated, 70 expanded, 3 reopened
[t=0.171324s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.171361s, 431232 KB] g=23, 282 evaluated, 81 expanded, 3 reopened
[t=0.17375s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.173781s, 431232 KB] g=24, 295 evaluated, 85 expanded, 3 reopened
[t=0.189661s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.189702s, 431232 KB] g=30, 383 evaluated, 107 expanded, 3 reopened
[t=0.190098s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.190129s, 431232 KB] g=30, 385 evaluated, 107 expanded, 3 reopened
[t=0.190343s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.190373s, 431232 KB] g=31, 386 evaluated, 108 expanded, 3 reopened
[t=0.190584s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.190613s, 431232 KB] g=31, 387 evaluated, 108 expanded, 3 reopened
[t=0.192142s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.192187s, 431232 KB] g=33, 395 evaluated, 111 expanded, 3 reopened
[t=0.231361s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.231405s, 431364 KB] g=37, 595 evaluated, 176 expanded, 9 reopened
[t=0.261125s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.261168s, 431364 KB] g=44, 744 evaluated, 222 expanded, 11 reopened
[t=0.263015s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.263053s, 431364 KB] g=46, 754 evaluated, 225 expanded, 11 reopened
[t=0.263982s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.264012s, 431364 KB] g=47, 759 evaluated, 226 expanded, 11 reopened
[t=0.26711s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.267145s, 431496 KB] g=48, 776 evaluated, 231 expanded, 11 reopened
[t=0.31799s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.318037s, 431628 KB] g=45, 1055 evaluated, 382 expanded, 80 reopened
[t=0.423059s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.42311s, 431628 KB] g=38, 1639 evaluated, 575 expanded, 92 reopened
[t=0.423882s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.423913s, 431760 KB] g=40, 1643 evaluated, 577 expanded, 92 reopened
[t=0.424487s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.424522s, 431760 KB] g=41, 1646 evaluated, 578 expanded, 92 reopened
[t=0.426726s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.426765s, 431760 KB] g=43, 1658 evaluated, 583 expanded, 92 reopened
[t=0.427168s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.427199s, 431760 KB] g=44, 1660 evaluated, 584 expanded, 92 reopened
[t=0.428141s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.428172s, 431760 KB] g=46, 1665 evaluated, 586 expanded, 92 reopened
[t=0.429104s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.429138s, 431760 KB] g=47, 1670 evaluated, 587 expanded, 92 reopened
[t=0.432244s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.432278s, 431760 KB] g=49, 1687 evaluated, 592 expanded, 92 reopened
[t=0.433037s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.433067s, 431760 KB] g=50, 1691 evaluated, 593 expanded, 92 reopened
[t=0.433822s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.433855s, 431760 KB] g=51, 1695 evaluated, 594 expanded, 92 reopened
[t=0.435401s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.435442s, 431760 KB] g=54, 1703 evaluated, 597 expanded, 92 reopened
[t=0.435839s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.43587s, 431760 KB] g=55, 1705 evaluated, 598 expanded, 92 reopened
[t=0.436448s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.436479s, 431760 KB] g=56, 1708 evaluated, 599 expanded, 92 reopened
[t=0.438344s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.438379s, 431760 KB] g=59, 1718 evaluated, 605 expanded, 92 reopened
[t=0.43879s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.438824s, 431760 KB] g=60, 1720 evaluated, 606 expanded, 92 reopened
[t=0.438858s, 431760 KB] Solution found!
[t=0.438886s, 431760 KB] Actual search time: 0.340239s
stack i a (1)
unstack c d (1)
stack c i (1)
unstack b f (1)
stack b c (1)
unstack d e (1)
put-down d (1)
unstack k j (1)
put-down k (1)
unstack j h (1)
stack j d (1)
pick-up h (1)
stack h f (1)
pick-up e (1)
stack e k (1)
unstack b c (1)
stack b j (1)
unstack c i (1)
stack c b (1)
unstack i a (1)
stack i c (1)
unstack a g (1)
stack a i (1)
unstack g l (1)
put-down g (1)
unstack h f (1)
stack h l (1)
unstack a i (1)
stack a f (1)
unstack h l (1)
stack h g (1)
unstack e k (1)
stack e l (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack i c (1)
stack i l (1)
unstack c b (1)
put-down c (1)
unstack b j (1)
stack b c (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.438911s, 431760 KB] Plan length: 61 step(s).
[t=0.438911s, 431760 KB] Plan cost: 61
[t=0.438911s, 431760 KB] Expanded 608 state(s).
[t=0.438911s, 431760 KB] Reopened 92 state(s).
[t=0.438911s, 431760 KB] Evaluated 1721 state(s).
[t=0.438911s, 431760 KB] Evaluations: 1721
[t=0.438911s, 431760 KB] Generated 2761 state(s).
[t=0.438911s, 431760 KB] Dead ends: 0 state(s).
[t=0.438911s, 431760 KB] Expanded until last jump: 4 state(s).
[t=0.438911s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.438911s, 431760 KB] Evaluated until last jump: 16 state(s).
[t=0.438911s, 431760 KB] Generated until last jump: 18 state(s).
[t=0.438911s, 431760 KB] Number of registered states: 1721
[t=0.438911s, 431760 KB] Int hash set load factor: 1721/2048 = 0.840332
[t=0.438911s, 431760 KB] Int hash set resizes: 11
[t=0.438911s, 431760 KB] Search time: 0.412487s
[t=0.438911s, 431760 KB] Total time: 0.438911s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p192.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8561e-05s, 424928 KB] reading input...
[t=0.00214629s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257929s, 427536 KB] Building successor generator...done!
[t=0.026075s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260988s, 427536 KB] time for successor generation creation: 0.000169507s
[t=0.0261275s, 427536 KB] Variables: 25
[t=0.026151s, 427536 KB] FactPairs: 182
[t=0.026173s, 427536 KB] Bytes per state: 8
[t=0.0263675s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983563s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.0984094s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984358s, 430128 KB] f = 128, 1 evaluated, 0 expanded
[t=0.0984638s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.098488s, 430128 KB] pruning method: none
[t=0.116673s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.116723s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117477s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.117508s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118607s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.118638s, 431100 KB] g=4, 13 evaluated, 4 expanded
[t=0.121718s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.121752s, 431100 KB] g=6, 30 evaluated, 11 expanded
[t=0.122321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.122351s, 431100 KB] g=7, 33 evaluated, 12 expanded
[t=0.122916s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.122946s, 431100 KB] g=8, 36 evaluated, 13 expanded
[t=0.124405s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.124438s, 431100 KB] g=10, 44 evaluated, 15 expanded
[t=0.128924s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.12897s, 431100 KB] g=13, 69 evaluated, 21 expanded
[t=0.130423s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.130456s, 431100 KB] g=15, 77 evaluated, 23 expanded
[t=0.133342s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.133376s, 431100 KB] g=18, 93 evaluated, 29 expanded
[t=0.133943s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.133973s, 431100 KB] g=19, 96 evaluated, 30 expanded
[t=0.135265s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.135297s, 431100 KB] g=22, 103 evaluated, 33 expanded
[t=0.136222s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.136252s, 431100 KB] g=23, 108 evaluated, 35 expanded
[t=0.137527s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.137557s, 431100 KB] g=26, 115 evaluated, 38 expanded
[t=0.137944s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.137975s, 431100 KB] g=26, 117 evaluated, 38 expanded
[t=0.139075s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.139108s, 431100 KB] g=28, 123 evaluated, 40 expanded
[t=0.141474s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.141506s, 431100 KB] g=29, 136 evaluated, 44 expanded
[t=0.142068s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.142098s, 431100 KB] g=30, 139 evaluated, 45 expanded
[t=0.142661s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.14269s, 431100 KB] g=31, 142 evaluated, 46 expanded
[t=0.143073s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.143102s, 431100 KB] g=31, 144 evaluated, 46 expanded
[t=0.144399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.14443s, 431100 KB] g=34, 151 evaluated, 49 expanded
[t=0.144642s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.144671s, 431100 KB] g=35, 152 evaluated, 50 expanded
[t=0.145239s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.145271s, 431100 KB] g=37, 155 evaluated, 52 expanded
[t=0.146913s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.146949s, 431100 KB] g=40, 165 evaluated, 59 expanded
[t=0.146977s, 431100 KB] Solution found!
[t=0.147003s, 431100 KB] Actual search time: 0.0485108s
unstack k f (1)
put-down k (1)
unstack h a (1)
stack h f (1)
unstack a g (1)
stack a k (1)
unstack g j (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up j (1)
stack j l (1)
unstack a k (1)
stack a f (1)
pick-up k (1)
stack k j (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.147028s, 431100 KB] Plan length: 40 step(s).
[t=0.147028s, 431100 KB] Plan cost: 40
[t=0.147028s, 431100 KB] Expanded 60 state(s).
[t=0.147028s, 431100 KB] Reopened 0 state(s).
[t=0.147028s, 431100 KB] Evaluated 165 state(s).
[t=0.147028s, 431100 KB] Evaluations: 165
[t=0.147028s, 431100 KB] Generated 223 state(s).
[t=0.147028s, 431100 KB] Dead ends: 0 state(s).
[t=0.147028s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.147028s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.147028s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.147028s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.147028s, 431100 KB] Number of registered states: 165
[t=0.147028s, 431100 KB] Int hash set load factor: 165/256 = 0.644531
[t=0.147028s, 431100 KB] Int hash set resizes: 8
[t=0.147028s, 431100 KB] Search time: 0.120661s
[t=0.147028s, 431100 KB] Total time: 0.147028s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p193.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5468e-05s, 424928 KB] reading input...
[t=0.00222941s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259787s, 427536 KB] Building successor generator...done!
[t=0.0262568s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262795s, 427536 KB] time for successor generation creation: 0.000166389s
[t=0.026307s, 427536 KB] Variables: 25
[t=0.0263292s, 427536 KB] FactPairs: 182
[t=0.0263504s, 427536 KB] Bytes per state: 8
[t=0.0265439s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988971s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.0989493s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098975s, 430128 KB] f = 119, 1 evaluated, 0 expanded
[t=0.0990019s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.0990254s, 430128 KB] pruning method: none
[t=0.11086s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.110913s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117353s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.117397s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118557s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.118588s, 431100 KB] g=2, 9 evaluated, 3 expanded
[t=0.119366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119396s, 431100 KB] g=4, 13 evaluated, 5 expanded
[t=0.120359s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.120389s, 431100 KB] g=6, 18 evaluated, 7 expanded
[t=0.120603s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.120632s, 431100 KB] g=6, 19 evaluated, 7 expanded
[t=0.128836s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.12887s, 431100 KB] g=13, 63 evaluated, 22 expanded
[t=0.129291s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.129332s, 431100 KB] g=14, 65 evaluated, 23 expanded
[t=0.131602s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.131633s, 431100 KB] g=15, 77 evaluated, 26 expanded
[t=0.154047s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.154085s, 431100 KB] g=16, 197 evaluated, 65 expanded, 4 reopened
[t=0.18643s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.186466s, 431232 KB] g=19, 370 evaluated, 118 expanded, 5 reopened
[t=0.188547s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.18858s, 431232 KB] g=20, 381 evaluated, 121 expanded, 5 reopened
[t=0.188986s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.189015s, 431232 KB] g=21, 383 evaluated, 122 expanded, 5 reopened
[t=0.202579s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.202614s, 431232 KB] g=9, 456 evaluated, 146 expanded, 5 reopened
[t=0.203763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.203794s, 431232 KB] g=11, 462 evaluated, 148 expanded, 5 reopened
[t=0.204935s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.204967s, 431232 KB] g=13, 468 evaluated, 150 expanded, 5 reopened
[t=0.212793s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.212828s, 431232 KB] g=21, 510 evaluated, 163 expanded, 5 reopened
[t=0.213238s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.213269s, 431232 KB] g=22, 512 evaluated, 164 expanded, 5 reopened
[t=0.214279s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.214311s, 431232 KB] g=23, 517 evaluated, 165 expanded, 5 reopened
[t=0.214526s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.214553s, 431232 KB] g=23, 518 evaluated, 165 expanded, 5 reopened
[t=0.215696s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.215729s, 431232 KB] g=25, 524 evaluated, 167 expanded, 5 reopened
[t=0.216132s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.216162s, 431232 KB] g=26, 526 evaluated, 168 expanded, 5 reopened
[t=0.217311s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.217346s, 431232 KB] g=27, 532 evaluated, 169 expanded, 5 reopened
[t=0.218136s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.218167s, 431232 KB] g=29, 536 evaluated, 171 expanded, 5 reopened
[t=0.219686s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.219717s, 431232 KB] g=31, 544 evaluated, 174 expanded, 5 reopened
[t=0.222539s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.222572s, 431232 KB] g=33, 559 evaluated, 180 expanded, 5 reopened
[t=0.223161s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.22319s, 431232 KB] g=34, 562 evaluated, 181 expanded, 5 reopened
[t=0.223595s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.223626s, 431232 KB] g=35, 564 evaluated, 182 expanded, 5 reopened
[t=0.224028s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.224058s, 431232 KB] g=36, 566 evaluated, 183 expanded, 5 reopened
[t=0.225406s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.22544s, 431232 KB] g=39, 573 evaluated, 186 expanded, 5 reopened
[t=0.225844s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.225876s, 431232 KB] g=40, 575 evaluated, 187 expanded, 5 reopened
[t=0.227952s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.227982s, 431232 KB] g=40, 586 evaluated, 193 expanded, 5 reopened
[t=0.228947s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.22898s, 431232 KB] g=43, 591 evaluated, 196 expanded, 5 reopened
[t=0.229212s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.229242s, 431232 KB] g=44, 592 evaluated, 197 expanded, 5 reopened
[t=0.23021s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.230239s, 431232 KB] g=45, 597 evaluated, 201 expanded, 5 reopened
[t=0.230271s, 431232 KB] Solution found!
[t=0.230298s, 431232 KB] Actual search time: 0.131269s
unstack e j (1)
stack e k (1)
unstack j a (1)
stack j e (1)
unstack f l (1)
stack f j (1)
unstack a g (1)
stack a f (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d b (1)
unstack a f (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.230322s, 431232 KB] Plan length: 46 step(s).
[t=0.230322s, 431232 KB] Plan cost: 46
[t=0.230322s, 431232 KB] Expanded 203 state(s).
[t=0.230322s, 431232 KB] Reopened 5 state(s).
[t=0.230322s, 431232 KB] Evaluated 598 state(s).
[t=0.230322s, 431232 KB] Evaluations: 598
[t=0.230322s, 431232 KB] Generated 846 state(s).
[t=0.230322s, 431232 KB] Dead ends: 0 state(s).
[t=0.230322s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.230322s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.230322s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.230322s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.230322s, 431232 KB] Number of registered states: 598
[t=0.230322s, 431232 KB] Int hash set load factor: 598/1024 = 0.583984
[t=0.230322s, 431232 KB] Int hash set resizes: 10
[t=0.230322s, 431232 KB] Search time: 0.203779s
[t=0.230322s, 431232 KB] Total time: 0.230322s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p194.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6134e-05s, 424928 KB] reading input...
[t=0.0021707s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259587s, 427536 KB] Building successor generator...done!
[t=0.026243s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262663s, 427536 KB] time for successor generation creation: 0.000172135s
[t=0.0262946s, 427536 KB] Variables: 25
[t=0.0263169s, 427536 KB] FactPairs: 182
[t=0.0263386s, 427536 KB] Bytes per state: 8
[t=0.0265316s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987879s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0988398s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988655s, 430128 KB] f = 151, 1 evaluated, 0 expanded
[t=0.0988933s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0989174s, 430128 KB] pruning method: none
[t=0.110778s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.11083s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117651s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.117693s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118671s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.118702s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.118918s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.118947s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.122585s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.122619s, 431100 KB] g=6, 30 evaluated, 10 expanded
[t=0.123034s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.123063s, 431100 KB] g=7, 32 evaluated, 11 expanded
[t=0.12537s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.125401s, 431100 KB] g=8, 44 evaluated, 15 expanded
[t=0.125811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.12584s, 431100 KB] g=9, 46 evaluated, 16 expanded
[t=0.14135s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.141388s, 431100 KB] g=21, 128 evaluated, 57 expanded, 1 reopened
[t=0.152907s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.152946s, 431232 KB] g=28, 189 evaluated, 78 expanded, 1 reopened
[t=0.153543s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.153582s, 431232 KB] g=29, 192 evaluated, 79 expanded, 1 reopened
[t=0.16373s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.16378s, 431232 KB] g=33, 246 evaluated, 91 expanded, 1 reopened
[t=0.165899s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.165932s, 431232 KB] g=35, 257 evaluated, 94 expanded, 1 reopened
[t=0.175697s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.175733s, 431232 KB] g=37, 309 evaluated, 104 expanded, 1 reopened
[t=0.176522s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.176554s, 431232 KB] g=38, 313 evaluated, 105 expanded, 1 reopened
[t=0.178637s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.178669s, 431232 KB] g=40, 324 evaluated, 107 expanded, 1 reopened
[t=0.180018s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.180051s, 431232 KB] g=41, 331 evaluated, 108 expanded, 1 reopened
[t=0.180834s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.180863s, 431232 KB] g=42, 335 evaluated, 109 expanded, 1 reopened
[t=0.184088s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.184124s, 431232 KB] g=47, 352 evaluated, 114 expanded, 1 reopened
[t=0.185091s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.185124s, 431232 KB] g=44, 357 evaluated, 116 expanded, 1 reopened
[t=0.19021s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.190244s, 431232 KB] g=46, 384 evaluated, 124 expanded, 1 reopened
[t=0.191784s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.191819s, 431232 KB] g=48, 392 evaluated, 126 expanded, 1 reopened
[t=0.192418s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.192451s, 431232 KB] g=49, 395 evaluated, 127 expanded, 1 reopened
[t=0.193232s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.19326s, 431232 KB] g=50, 399 evaluated, 128 expanded, 1 reopened
[t=0.198922s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.198957s, 431232 KB] g=53, 429 evaluated, 139 expanded, 1 reopened
[t=0.199732s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.199768s, 431232 KB] g=54, 433 evaluated, 140 expanded, 1 reopened
[t=0.200377s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.200407s, 431232 KB] g=55, 436 evaluated, 141 expanded, 1 reopened
[t=0.200812s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.200841s, 431232 KB] g=56, 438 evaluated, 142 expanded, 1 reopened
[t=0.201056s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.201084s, 431232 KB] g=56, 439 evaluated, 142 expanded, 1 reopened
[t=0.201303s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.201331s, 431232 KB] g=57, 440 evaluated, 143 expanded, 1 reopened
[t=0.202862s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.202896s, 431364 KB] g=59, 448 evaluated, 145 expanded, 1 reopened
[t=0.203489s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.203521s, 431364 KB] g=60, 451 evaluated, 146 expanded, 1 reopened
[t=0.203938s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.203968s, 431364 KB] g=61, 453 evaluated, 147 expanded, 1 reopened
[t=0.204373s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.204402s, 431364 KB] g=62, 455 evaluated, 148 expanded, 1 reopened
[t=0.205183s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.205212s, 431364 KB] g=63, 459 evaluated, 149 expanded, 1 reopened
[t=0.205432s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.20546s, 431364 KB] g=64, 460 evaluated, 150 expanded, 1 reopened
[t=0.205865s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.205894s, 431364 KB] g=65, 462 evaluated, 151 expanded, 1 reopened
[t=0.206301s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.206333s, 431364 KB] g=66, 464 evaluated, 152 expanded, 1 reopened
[t=0.20693s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.206959s, 431364 KB] g=68, 467 evaluated, 154 expanded, 1 reopened
[t=0.207361s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.207389s, 431364 KB] g=68, 469 evaluated, 154 expanded, 1 reopened
[t=0.207607s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.207634s, 431364 KB] g=69, 470 evaluated, 155 expanded, 1 reopened
[t=0.208247s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.208284s, 431364 KB] g=70, 473 evaluated, 156 expanded, 1 reopened
[t=0.209262s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.209294s, 431364 KB] g=71, 478 evaluated, 158 expanded, 1 reopened
[t=0.210084s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.210113s, 431364 KB] g=73, 482 evaluated, 160 expanded, 1 reopened
[t=0.210143s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.210166s, 431364 KB] g=74, 483 evaluated, 161 expanded, 1 reopened
[t=0.210191s, 431364 KB] Solution found!
[t=0.210218s, 431364 KB] Actual search time: 0.111296s
unstack j k (1)
stack j c (1)
pick-up d (1)
stack d j (1)
unstack b f (1)
put-down b (1)
unstack k g (1)
stack k f (1)
pick-up g (1)
stack g d (1)
pick-up b (1)
stack b k (1)
unstack g d (1)
put-down g (1)
unstack d j (1)
stack d b (1)
unstack j c (1)
put-down j (1)
unstack d b (1)
stack d j (1)
pick-up g (1)
stack g d (1)
unstack b k (1)
put-down b (1)
unstack c i (1)
stack c k (1)
unstack i l (1)
put-down i (1)
unstack g d (1)
put-down g (1)
unstack l a (1)
stack l d (1)
unstack a h (1)
stack a l (1)
unstack h e (1)
stack h g (1)
unstack c k (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack k f (1)
stack k i (1)
pick-up f (1)
stack f e (1)
unstack a l (1)
stack a h (1)
unstack k i (1)
stack k l (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d i (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.210242s, 431364 KB] Plan length: 74 step(s).
[t=0.210242s, 431364 KB] Plan cost: 74
[t=0.210242s, 431364 KB] Expanded 162 state(s).
[t=0.210242s, 431364 KB] Reopened 1 state(s).
[t=0.210242s, 431364 KB] Evaluated 483 state(s).
[t=0.210242s, 431364 KB] Evaluations: 483
[t=0.210242s, 431364 KB] Generated 651 state(s).
[t=0.210242s, 431364 KB] Dead ends: 0 state(s).
[t=0.210242s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.210242s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.210242s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.210242s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.210242s, 431364 KB] Number of registered states: 483
[t=0.210242s, 431364 KB] Int hash set load factor: 483/512 = 0.943359
[t=0.210242s, 431364 KB] Int hash set resizes: 9
[t=0.210242s, 431364 KB] Search time: 0.183711s
[t=0.210242s, 431364 KB] Total time: 0.210242s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p195.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6736e-05s, 424928 KB] reading input...
[t=0.00215874s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0265753s, 427536 KB] Building successor generator...done!
[t=0.0268794s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0269044s, 427536 KB] time for successor generation creation: 0.000170875s
[t=0.0269345s, 427536 KB] Variables: 25
[t=0.0269589s, 427536 KB] FactPairs: 182
[t=0.0269822s, 427536 KB] Bytes per state: 8
[t=0.0271774s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.100985s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.101038s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.101065s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.101093s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.101117s, 430128 KB] pruning method: none
[t=0.120036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.120087s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.120483s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.120515s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.121608s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.121649s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.12204s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.122071s, 431100 KB] g=4, 15 evaluated, 4 expanded
[t=0.124428s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.124462s, 431100 KB] g=7, 28 evaluated, 8 expanded
[t=0.125201s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.125231s, 431100 KB] g=8, 32 evaluated, 9 expanded
[t=0.12615s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.12618s, 431100 KB] g=9, 37 evaluated, 10 expanded
[t=0.12693s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.126964s, 431100 KB] g=10, 41 evaluated, 11 expanded
[t=0.129839s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.129876s, 431100 KB] g=11, 57 evaluated, 16 expanded
[t=0.130636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.130669s, 431100 KB] g=12, 61 evaluated, 17 expanded
[t=0.130876s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.130907s, 431100 KB] g=12, 62 evaluated, 17 expanded
[t=0.135744s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.13578s, 431100 KB] g=18, 89 evaluated, 25 expanded
[t=0.137058s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.137092s, 431100 KB] g=20, 96 evaluated, 27 expanded
[t=0.138187s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.138218s, 431100 KB] g=22, 102 evaluated, 29 expanded
[t=0.139511s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.139544s, 431100 KB] g=24, 109 evaluated, 31 expanded
[t=0.139753s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.139785s, 431100 KB] g=24, 110 evaluated, 31 expanded
[t=0.140176s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.140209s, 431100 KB] g=25, 112 evaluated, 32 expanded
[t=0.141127s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.141157s, 431100 KB] g=26, 117 evaluated, 33 expanded
[t=0.141895s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.141933s, 431100 KB] g=27, 121 evaluated, 34 expanded
[t=0.158766s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.158806s, 431232 KB] g=33, 215 evaluated, 65 expanded
[t=0.1592s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.15923s, 431232 KB] g=34, 217 evaluated, 66 expanded
[t=0.160153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.160186s, 431232 KB] g=35, 222 evaluated, 67 expanded
[t=0.164693s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.164727s, 431232 KB] g=36, 247 evaluated, 74 expanded
[t=0.171419s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.171454s, 431232 KB] g=39, 284 evaluated, 88 expanded
[t=0.202175s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.202213s, 431232 KB] g=40, 456 evaluated, 147 expanded
[t=0.202973s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.203006s, 431232 KB] g=42, 460 evaluated, 149 expanded
[t=0.203945s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.203976s, 431232 KB] g=44, 465 evaluated, 152 expanded
[t=0.204186s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.204216s, 431232 KB] g=45, 466 evaluated, 153 expanded
[t=0.204608s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.204638s, 431232 KB] g=46, 468 evaluated, 154 expanded
[t=0.20576s, 431232 KB] Solution found!
[t=0.205794s, 431232 KB] Actual search time: 0.104675s
stack a l (1)
unstack e d (1)
put-down e (1)
pick-up d (1)
stack d j (1)
unstack h b (1)
stack h a (1)
unstack b g (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack d j (1)
stack d e (1)
unstack h a (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack l f (1)
stack l d (1)
unstack j k (1)
put-down j (1)
pick-up f (1)
stack f a (1)
unstack k i (1)
stack k f (1)
pick-up j (1)
stack j i (1)
unstack l d (1)
put-down l (1)
unstack j i (1)
stack j l (1)
unstack d e (1)
put-down d (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.205821s, 431232 KB] Plan length: 49 step(s).
[t=0.205821s, 431232 KB] Plan cost: 49
[t=0.205821s, 431232 KB] Expanded 161 state(s).
[t=0.205821s, 431232 KB] Reopened 0 state(s).
[t=0.205821s, 431232 KB] Evaluated 475 state(s).
[t=0.205821s, 431232 KB] Evaluations: 475
[t=0.205821s, 431232 KB] Generated 644 state(s).
[t=0.205821s, 431232 KB] Dead ends: 0 state(s).
[t=0.205821s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.205821s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.205821s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.205821s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.205821s, 431232 KB] Number of registered states: 475
[t=0.205821s, 431232 KB] Int hash set load factor: 475/512 = 0.927734
[t=0.205821s, 431232 KB] Int hash set resizes: 9
[t=0.205821s, 431232 KB] Search time: 0.178645s
[t=0.205821s, 431232 KB] Total time: 0.205821s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p196.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6177e-05s, 424928 KB] reading input...
[t=0.00215371s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259557s, 427536 KB] Building successor generator...done!
[t=0.0262374s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262603s, 427536 KB] time for successor generation creation: 0.000170713s
[t=0.026298s, 427536 KB] Variables: 25
[t=0.0263208s, 427536 KB] FactPairs: 182
[t=0.0263424s, 427536 KB] Bytes per state: 8
[t=0.026534s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987865s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0988379s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098864s, 430128 KB] f = 152, 1 evaluated, 0 expanded
[t=0.0988912s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0989149s, 430128 KB] pruning method: none
[t=0.110736s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.110787s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11722s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.117262s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118235s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.118266s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.120543s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.120575s, 431100 KB] g=3, 20 evaluated, 5 expanded
[t=0.121534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.121564s, 431100 KB] g=4, 25 evaluated, 6 expanded
[t=0.121968s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.121997s, 431100 KB] g=5, 27 evaluated, 7 expanded
[t=0.123714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.123746s, 431100 KB] g=7, 36 evaluated, 9 expanded
[t=0.124151s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.12418s, 431100 KB] g=8, 38 evaluated, 10 expanded
[t=0.124953s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.124982s, 431100 KB] g=9, 42 evaluated, 11 expanded
[t=0.125941s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.12597s, 431100 KB] g=11, 47 evaluated, 13 expanded
[t=0.126941s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.126976s, 431100 KB] g=12, 52 evaluated, 15 expanded
[t=0.127565s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.127594s, 431100 KB] g=13, 55 evaluated, 16 expanded
[t=0.128s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.128029s, 431100 KB] g=14, 57 evaluated, 17 expanded
[t=0.138018s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.138054s, 431100 KB] g=16, 110 evaluated, 40 expanded
[t=0.141108s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.141143s, 431100 KB] g=16, 126 evaluated, 49 expanded
[t=0.141551s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.141581s, 431100 KB] g=17, 128 evaluated, 50 expanded, 1 reopened
[t=0.142187s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.142216s, 431100 KB] g=18, 131 evaluated, 51 expanded, 1 reopened
[t=0.143378s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.143409s, 431100 KB] g=20, 137 evaluated, 53 expanded, 1 reopened
[t=0.144376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.144408s, 431100 KB] g=22, 142 evaluated, 55 expanded, 1 reopened
[t=0.145376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.145406s, 431100 KB] g=24, 147 evaluated, 57 expanded, 1 reopened
[t=0.146565s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.146597s, 431100 KB] g=26, 153 evaluated, 59 expanded, 1 reopened
[t=0.147005s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.147034s, 431100 KB] g=27, 155 evaluated, 60 expanded, 1 reopened
[t=0.14838s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.14841s, 431100 KB] g=30, 162 evaluated, 63 expanded, 1 reopened
[t=0.149194s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.149224s, 431100 KB] g=31, 166 evaluated, 64 expanded, 1 reopened
[t=0.150185s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.150215s, 431100 KB] g=32, 171 evaluated, 65 expanded, 1 reopened
[t=0.150626s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.150659s, 431100 KB] g=33, 173 evaluated, 66 expanded, 1 reopened
[t=0.15144s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.15147s, 431100 KB] g=35, 177 evaluated, 68 expanded, 1 reopened
[t=0.151685s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.151717s, 431100 KB] g=35, 178 evaluated, 68 expanded, 1 reopened
[t=0.151936s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.151971s, 431100 KB] g=36, 179 evaluated, 69 expanded, 1 reopened
[t=0.152191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.152219s, 431100 KB] g=37, 180 evaluated, 70 expanded, 1 reopened
[t=0.152626s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.152654s, 431100 KB] g=38, 182 evaluated, 71 expanded, 1 reopened
[t=0.153816s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.153849s, 431100 KB] g=40, 188 evaluated, 76 expanded, 1 reopened
[t=0.153881s, 431100 KB] Solution found!
[t=0.153907s, 431100 KB] Actual search time: 0.0549872s
put-down g (1)
unstack j h (1)
stack j e (1)
pick-up h (1)
stack h g (1)
unstack k l (1)
stack k j (1)
pick-up a (1)
stack a k (1)
unstack h g (1)
stack h a (1)
unstack l f (1)
put-down l (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.153931s, 431100 KB] Plan length: 41 step(s).
[t=0.153931s, 431100 KB] Plan cost: 41
[t=0.153931s, 431100 KB] Expanded 78 state(s).
[t=0.153931s, 431100 KB] Reopened 1 state(s).
[t=0.153931s, 431100 KB] Evaluated 189 state(s).
[t=0.153931s, 431100 KB] Evaluations: 189
[t=0.153931s, 431100 KB] Generated 272 state(s).
[t=0.153931s, 431100 KB] Dead ends: 0 state(s).
[t=0.153931s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.153931s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.153931s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.153931s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.153931s, 431100 KB] Number of registered states: 189
[t=0.153931s, 431100 KB] Int hash set load factor: 189/256 = 0.738281
[t=0.153931s, 431100 KB] Int hash set resizes: 8
[t=0.153931s, 431100 KB] Search time: 0.127398s
[t=0.153931s, 431100 KB] Total time: 0.153931s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p197.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9086e-05s, 424928 KB] reading input...
[t=0.00214566s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258086s, 427536 KB] Building successor generator...done!
[t=0.0260917s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261153s, 427536 KB] time for successor generation creation: 0.000171189s
[t=0.0261437s, 427536 KB] Variables: 25
[t=0.0261662s, 427536 KB] FactPairs: 182
[t=0.0261881s, 427536 KB] Bytes per state: 8
[t=0.0263819s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979108s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0979632s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979892s, 430128 KB] f = 151, 1 evaluated, 0 expanded
[t=0.0980171s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0980414s, 430128 KB] pruning method: none
[t=0.109824s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.109874s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118609s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.118653s, 431100 KB] g=3, 16 evaluated, 4 expanded
[t=0.122248s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.122281s, 431100 KB] g=7, 36 evaluated, 11 expanded
[t=0.123902s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.123933s, 431100 KB] g=9, 45 evaluated, 13 expanded
[t=0.125228s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.125261s, 431100 KB] g=11, 52 evaluated, 15 expanded
[t=0.130615s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.130648s, 431100 KB] g=14, 82 evaluated, 22 expanded
[t=0.131038s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.13107s, 431100 KB] g=15, 84 evaluated, 23 expanded
[t=0.131277s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.131306s, 431100 KB] g=15, 85 evaluated, 23 expanded
[t=0.1333s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.133336s, 431100 KB] g=17, 96 evaluated, 26 expanded
[t=0.141388s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.141422s, 431100 KB] g=23, 141 evaluated, 43 expanded
[t=0.14199s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.14202s, 431100 KB] g=24, 144 evaluated, 44 expanded
[t=0.190573s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.190615s, 431364 KB] g=33, 417 evaluated, 132 expanded, 1 reopened
[t=0.191896s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.191929s, 431364 KB] g=34, 424 evaluated, 134 expanded, 1 reopened
[t=0.193227s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.19326s, 431364 KB] g=36, 431 evaluated, 136 expanded, 1 reopened
[t=0.19347s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.193501s, 431364 KB] g=36, 432 evaluated, 136 expanded, 1 reopened
[t=0.194067s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.194097s, 431364 KB] g=37, 435 evaluated, 137 expanded, 1 reopened
[t=0.195902s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.195932s, 431364 KB] g=39, 445 evaluated, 140 expanded, 1 reopened
[t=0.197218s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.197251s, 431364 KB] g=42, 452 evaluated, 143 expanded, 1 reopened
[t=0.200299s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.200331s, 431364 KB] g=45, 469 evaluated, 148 expanded, 1 reopened
[t=0.20161s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.201649s, 431364 KB] g=47, 476 evaluated, 150 expanded, 1 reopened
[t=0.207023s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.207056s, 431364 KB] g=47, 506 evaluated, 160 expanded, 1 reopened
[t=0.207444s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.207476s, 431364 KB] g=47, 508 evaluated, 160 expanded, 1 reopened
[t=0.208826s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.20886s, 431364 KB] g=50, 515 evaluated, 163 expanded, 1 reopened
[t=0.209253s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.209282s, 431364 KB] g=52, 517 evaluated, 165 expanded, 1 reopened
[t=0.209672s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.209701s, 431364 KB] g=53, 519 evaluated, 166 expanded, 1 reopened
[t=0.210816s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.210847s, 431364 KB] g=56, 526 evaluated, 172 expanded, 1 reopened
[t=0.210874s, 431364 KB] Solution found!
[t=0.2109s, 431364 KB] Actual search time: 0.112854s
unstack k h (1)
stack k b (1)
pick-up h (1)
stack h k (1)
unstack e g (1)
put-down e (1)
unstack g a (1)
put-down g (1)
unstack h k (1)
stack h g (1)
unstack a l (1)
stack a k (1)
pick-up e (1)
stack e l (1)
unstack j f (1)
put-down j (1)
unstack a k (1)
stack a j (1)
unstack h g (1)
stack h a (1)
pick-up f (1)
stack f e (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a f (1)
unstack k b (1)
stack k j (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e l (1)
stack e b (1)
unstack k j (1)
stack k f (1)
pick-up j (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.210925s, 431364 KB] Plan length: 56 step(s).
[t=0.210925s, 431364 KB] Plan cost: 56
[t=0.210925s, 431364 KB] Expanded 173 state(s).
[t=0.210925s, 431364 KB] Reopened 1 state(s).
[t=0.210925s, 431364 KB] Evaluated 526 state(s).
[t=0.210925s, 431364 KB] Evaluations: 526
[t=0.210925s, 431364 KB] Generated 721 state(s).
[t=0.210925s, 431364 KB] Dead ends: 0 state(s).
[t=0.210925s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.210925s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.210925s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.210925s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.210925s, 431364 KB] Number of registered states: 526
[t=0.210925s, 431364 KB] Int hash set load factor: 526/1024 = 0.513672
[t=0.210925s, 431364 KB] Int hash set resizes: 10
[t=0.210925s, 431364 KB] Search time: 0.184544s
[t=0.210925s, 431364 KB] Total time: 0.210925s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p198.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7025e-05s, 424928 KB] reading input...
[t=0.00217987s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258435s, 427536 KB] Building successor generator...done!
[t=0.0261232s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261467s, 427536 KB] time for successor generation creation: 0.000168339s
[t=0.0261747s, 427536 KB] Variables: 25
[t=0.0261975s, 427536 KB] FactPairs: 182
[t=0.0262197s, 427536 KB] Bytes per state: 8
[t=0.0264176s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986807s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0987347s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987605s, 430128 KB] f = 114, 1 evaluated, 0 expanded
[t=0.0987886s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.0988128s, 430128 KB] pruning method: none
[t=0.110601s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.110663s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117979s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.118022s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119329s, 431100 KB] f = 115, 15 evaluated, 4 expanded
[t=0.11991s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.11994s, 431100 KB] g=2, 18 evaluated, 5 expanded
[t=0.121413s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.121443s, 431100 KB] g=4, 26 evaluated, 7 expanded
[t=0.122574s, 431100 KB] f = 116, 32 evaluated, 9 expanded
[t=0.126963s, 431100 KB] f = 117, 56 evaluated, 16 expanded
[t=0.128637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.128676s, 431100 KB] g=5, 65 evaluated, 19 expanded
[t=0.130547s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.130582s, 431100 KB] g=8, 75 evaluated, 22 expanded
[t=0.140092s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.140128s, 431100 KB] g=11, 126 evaluated, 39 expanded
[t=0.141269s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.141301s, 431100 KB] g=12, 132 evaluated, 41 expanded
[t=0.153829s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.153864s, 431232 KB] g=16, 200 evaluated, 65 expanded
[t=0.154077s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.154105s, 431232 KB] g=16, 201 evaluated, 65 expanded
[t=0.155702s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.155736s, 431232 KB] g=17, 209 evaluated, 68 expanded
[t=0.157402s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.157434s, 431232 KB] g=19, 218 evaluated, 71 expanded
[t=0.163556s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.163595s, 431232 KB] g=23, 251 evaluated, 80 expanded
[t=0.166766s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.166803s, 431232 KB] g=22, 268 evaluated, 85 expanded
[t=0.167918s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.167951s, 431232 KB] g=23, 274 evaluated, 86 expanded
[t=0.168346s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.168381s, 431232 KB] g=24, 276 evaluated, 87 expanded
[t=0.168957s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.16899s, 431232 KB] g=25, 279 evaluated, 88 expanded
[t=0.169382s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.169411s, 431232 KB] g=25, 281 evaluated, 88 expanded
[t=0.169626s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.169655s, 431232 KB] g=26, 282 evaluated, 89 expanded
[t=0.17041s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.170439s, 431232 KB] g=27, 286 evaluated, 90 expanded
[t=0.177491s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.177527s, 431232 KB] g=31, 324 evaluated, 102 expanded
[t=0.178283s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.178315s, 431232 KB] g=32, 328 evaluated, 103 expanded
[t=0.179625s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.179657s, 431232 KB] g=34, 335 evaluated, 105 expanded
[t=0.181321s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.181351s, 431232 KB] g=36, 344 evaluated, 109 expanded
[t=0.18175s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.18178s, 431232 KB] g=38, 346 evaluated, 111 expanded
[t=0.182173s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.182202s, 431232 KB] g=39, 348 evaluated, 112 expanded
[t=0.183343s, 431232 KB] Solution found!
[t=0.183378s, 431232 KB] Actual search time: 0.0845633s
unstack e a (1)
stack e l (1)
unstack g j (1)
put-down g (1)
pick-up j (1)
stack j e (1)
unstack a k (1)
stack a f (1)
unstack k h (1)
stack k j (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f b (1)
stack f k (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d b (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j d (1)
unstack e l (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.183405s, 431232 KB] Plan length: 42 step(s).
[t=0.183405s, 431232 KB] Plan cost: 42
[t=0.183405s, 431232 KB] Expanded 119 state(s).
[t=0.183405s, 431232 KB] Reopened 0 state(s).
[t=0.183405s, 431232 KB] Evaluated 355 state(s).
[t=0.183405s, 431232 KB] Evaluations: 355
[t=0.183405s, 431232 KB] Generated 480 state(s).
[t=0.183405s, 431232 KB] Dead ends: 0 state(s).
[t=0.183405s, 431232 KB] Expanded until last jump: 16 state(s).
[t=0.183405s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.183405s, 431232 KB] Evaluated until last jump: 56 state(s).
[t=0.183405s, 431232 KB] Generated until last jump: 71 state(s).
[t=0.183405s, 431232 KB] Number of registered states: 355
[t=0.183405s, 431232 KB] Int hash set load factor: 355/512 = 0.693359
[t=0.183405s, 431232 KB] Int hash set resizes: 9
[t=0.183405s, 431232 KB] Search time: 0.156988s
[t=0.183405s, 431232 KB] Total time: 0.183405s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p199.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5661e-05s, 424928 KB] reading input...
[t=0.0022975s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260776s, 427536 KB] Building successor generator...done!
[t=0.0263911s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264155s, 427536 KB] time for successor generation creation: 0.000172173s
[t=0.0264453s, 427536 KB] Variables: 25
[t=0.0264687s, 427536 KB] FactPairs: 182
[t=0.0264915s, 427536 KB] Bytes per state: 8
[t=0.0266884s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984654s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.0985188s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985454s, 430128 KB] f = 121, 1 evaluated, 0 expanded
[t=0.0985726s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.0985966s, 430128 KB] pruning method: none
[t=0.116765s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.116816s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.117066s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118012s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.118044s, 431100 KB] g=2, 9 evaluated, 3 expanded
[t=0.119521s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.119552s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.124495s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.12453s, 431100 KB] g=6, 44 evaluated, 14 expanded
[t=0.127816s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.127847s, 431100 KB] g=10, 62 evaluated, 18 expanded
[t=0.128071s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.1281s, 431100 KB] g=10, 63 evaluated, 18 expanded
[t=0.128504s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.128538s, 431100 KB] g=11, 65 evaluated, 19 expanded
[t=0.133462s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.133496s, 431100 KB] g=14, 92 evaluated, 27 expanded
[t=0.143914s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.143951s, 431100 KB] g=14, 149 evaluated, 46 expanded
[t=0.150146s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.15018s, 431232 KB] g=18, 183 evaluated, 56 expanded
[t=0.161287s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.161324s, 431232 KB] g=19, 244 evaluated, 74 expanded
[t=0.162978s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.163011s, 431232 KB] g=21, 253 evaluated, 76 expanded
[t=0.163406s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.163445s, 431232 KB] g=22, 255 evaluated, 77 expanded
[t=0.165673s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.165706s, 431232 KB] g=25, 267 evaluated, 80 expanded
[t=0.165921s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.165951s, 431232 KB] g=26, 268 evaluated, 81 expanded
[t=0.166885s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.166918s, 431232 KB] g=27, 273 evaluated, 83 expanded
[t=0.17166s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.171693s, 431232 KB] g=30, 299 evaluated, 93 expanded
[t=0.171911s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.171943s, 431232 KB] g=30, 300 evaluated, 93 expanded
[t=0.17342s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.173453s, 431232 KB] g=32, 308 evaluated, 96 expanded
[t=0.173848s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.173878s, 431232 KB] g=33, 310 evaluated, 97 expanded
[t=0.174988s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.175021s, 431232 KB] g=35, 316 evaluated, 99 expanded
[t=0.175412s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.175442s, 431232 KB] g=36, 318 evaluated, 100 expanded
[t=0.175654s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.175683s, 431232 KB] g=37, 319 evaluated, 101 expanded
[t=0.176268s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.1763s, 431232 KB] g=39, 322 evaluated, 103 expanded
[t=0.176873s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.176903s, 431232 KB] g=41, 325 evaluated, 105 expanded
[t=0.178028s, 431232 KB] Solution found!
[t=0.178061s, 431232 KB] Actual search time: 0.0794622s
unstack h b (1)
stack h a (1)
unstack l k (1)
put-down l (1)
unstack b g (1)
stack b j (1)
unstack g f (1)
stack g h (1)
pick-up f (1)
stack f k (1)
unstack g h (1)
put-down g (1)
unstack b j (1)
stack b l (1)
pick-up j (1)
stack j f (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack j f (1)
stack j b (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.178088s, 431232 KB] Plan length: 44 step(s).
[t=0.178088s, 431232 KB] Plan cost: 44
[t=0.178088s, 431232 KB] Expanded 111 state(s).
[t=0.178088s, 431232 KB] Reopened 0 state(s).
[t=0.178088s, 431232 KB] Evaluated 332 state(s).
[t=0.178088s, 431232 KB] Evaluations: 332
[t=0.178088s, 431232 KB] Generated 448 state(s).
[t=0.178088s, 431232 KB] Dead ends: 0 state(s).
[t=0.178088s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.178088s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.178088s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.178088s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.178088s, 431232 KB] Number of registered states: 332
[t=0.178088s, 431232 KB] Int hash set load factor: 332/512 = 0.648438
[t=0.178088s, 431232 KB] Int hash set resizes: 9
[t=0.178088s, 431232 KB] Search time: 0.1514s
[t=0.178088s, 431232 KB] Total time: 0.178088s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p200.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5764e-05s, 424928 KB] reading input...
[t=0.00213525s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258009s, 427536 KB] Building successor generator...done!
[t=0.0260811s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261046s, 427536 KB] time for successor generation creation: 0.000170516s
[t=0.0261332s, 427536 KB] Variables: 25
[t=0.0261557s, 427536 KB] FactPairs: 182
[t=0.0261776s, 427536 KB] Bytes per state: 8
[t=0.0263714s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987889s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.0988411s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988666s, 430128 KB] f = 96, 1 evaluated, 0 expanded
[t=0.098894s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.0989176s, 430128 KB] pruning method: none
[t=0.117511s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.117562s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117969s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.117998s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118598s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.118627s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.120929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.120962s, 431100 KB] g=3, 21 evaluated, 5 expanded
[t=0.122122s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.122152s, 431100 KB] g=4, 27 evaluated, 7 expanded
[t=0.123504s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.123536s, 431100 KB] g=5, 34 evaluated, 9 expanded
[t=0.134497s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.13453s, 431100 KB] g=10, 92 evaluated, 25 expanded
[t=0.147165s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.147199s, 431100 KB] g=16, 159 evaluated, 41 expanded
[t=0.154385s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.154418s, 431232 KB] g=20, 197 evaluated, 52 expanded
[t=0.156526s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.156561s, 431232 KB] g=19, 208 evaluated, 55 expanded
[t=0.160166s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.160198s, 431232 KB] g=21, 227 evaluated, 60 expanded
[t=0.161166s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.161207s, 431232 KB] g=22, 232 evaluated, 61 expanded
[t=0.165568s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.165603s, 431232 KB] g=24, 255 evaluated, 65 expanded
[t=0.166407s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.166438s, 431232 KB] g=24, 259 evaluated, 65 expanded
[t=0.166661s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.166689s, 431232 KB] g=25, 260 evaluated, 66 expanded
[t=0.167296s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.167326s, 431232 KB] g=25, 263 evaluated, 66 expanded
[t=0.173947s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.17398s, 431232 KB] g=28, 298 evaluated, 73 expanded
[t=0.175904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.175938s, 431232 KB] g=30, 308 evaluated, 75 expanded
[t=0.177097s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.177129s, 431232 KB] g=31, 314 evaluated, 76 expanded
[t=0.178663s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.178693s, 431232 KB] g=32, 322 evaluated, 77 expanded
[t=0.179297s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.179328s, 431232 KB] g=33, 325 evaluated, 78 expanded
[t=0.179545s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.179576s, 431232 KB] g=33, 326 evaluated, 78 expanded
[t=0.179988s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.180016s, 431232 KB] g=34, 328 evaluated, 79 expanded
[t=0.185328s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.18536s, 431232 KB] g=37, 356 evaluated, 85 expanded
[t=0.185763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.185791s, 431232 KB] g=37, 358 evaluated, 85 expanded
[t=0.186391s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.18642s, 431232 KB] g=38, 361 evaluated, 86 expanded
[t=0.187971s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.188005s, 431232 KB] g=40, 369 evaluated, 88 expanded
[t=0.18879s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.188825s, 431232 KB] g=41, 373 evaluated, 89 expanded
[t=0.193379s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.193411s, 431232 KB] g=42, 397 evaluated, 95 expanded
[t=0.19401s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.194045s, 431364 KB] g=43, 400 evaluated, 96 expanded
[t=0.194832s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.194861s, 431364 KB] g=44, 404 evaluated, 97 expanded
[t=0.195657s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.195691s, 431364 KB] g=45, 408 evaluated, 98 expanded
[t=0.196853s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.196882s, 431364 KB] g=47, 414 evaluated, 100 expanded
[t=0.198614s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.198643s, 431364 KB] g=49, 423 evaluated, 102 expanded
[t=0.200021s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.200052s, 431364 KB] g=52, 430 evaluated, 105 expanded
[t=0.200466s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.200495s, 431364 KB] g=53, 432 evaluated, 106 expanded
[t=0.200903s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.200932s, 431364 KB] g=54, 434 evaluated, 107 expanded
[t=0.201343s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T15.54.17.179605/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.201371s, 431364 KB] g=55, 436 evaluated, 108 expanded
[t=0.201403s, 431364 KB] Solution found!
[t=0.20143s, 431364 KB] Actual search time: 0.102509s
unstack e f (1)
stack e k (1)
pick-up f (1)
stack f i (1)
unstack c j (1)
put-down c (1)
unstack f i (1)
put-down f (1)
pick-up d (1)
stack d c (1)
unstack j b (1)
stack j i (1)
pick-up f (1)
stack f j (1)
unstack b l (1)
put-down b (1)
unstack f j (1)
stack f e (1)
unstack l g (1)
put-down l (1)
unstack g h (1)
put-down g (1)
pick-up b (1)
stack b l (1)
unstack d c (1)
put-down d (1)
pick-up c (1)
stack c b (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.201455s, 431364 KB] Plan length: 56 step(s).
[t=0.201455s, 431364 KB] Plan cost: 56
[t=0.201455s, 431364 KB] Expanded 110 state(s).
[t=0.201455s, 431364 KB] Reopened 0 state(s).
[t=0.201455s, 431364 KB] Evaluated 437 state(s).
[t=0.201455s, 431364 KB] Evaluations: 437
[t=0.201455s, 431364 KB] Generated 550 state(s).
[t=0.201455s, 431364 KB] Dead ends: 0 state(s).
[t=0.201455s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.201455s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.201455s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.201455s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.201455s, 431364 KB] Number of registered states: 437
[t=0.201455s, 431364 KB] Int hash set load factor: 437/512 = 0.853516
[t=0.201455s, 431364 KB] Int hash set resizes: 9
[t=0.201455s, 431364 KB] Search time: 0.175084s
[t=0.201455s, 431364 KB] Total time: 0.201455s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 58 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.07654315233230591 (0.8748834133148193 vs. 0.7983402609825134), which occurred at index 48.
  _module_class,
 | avg_val_loss=0.022416
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 9 test success: 20 of 20 (100.0%)

Max test success (fold 0): 100.0%
Min test success (fold 0): 100.0%
Avg test success: 100.0%
