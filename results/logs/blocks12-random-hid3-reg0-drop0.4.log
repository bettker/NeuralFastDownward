OUTPUT: results/train-pytorch-2021.07.26T16.42.20.823980

---------- FOLD 1/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1 | avg_train_loss=0.099577/home/rvbettker/.local/lib/python3.6/site-packages/torch/autograd/__init__.py:149: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 10010). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at  /pytorch/c10/cuda/CUDAFunctions.cpp:115.)
  allow_unreachable=True, accumulate_grad=True)  # allow_unreachable flag
 | avg_val_loss=0.092830
Epoch 2 | avg_train_loss=0.069115 | avg_val_loss=0.047381
Epoch 3 | avg_train_loss=0.042814 | avg_val_loss=0.040995
Epoch 4 | avg_train_loss=0.039226 | avg_val_loss=0.038836
Epoch 5 | avg_train_loss=0.037142 | avg_val_loss=0.037656
Epoch 6 | avg_train_loss=0.036003 | avg_val_loss=0.037039
Epoch 7 | avg_train_loss=0.035182 | avg_val_loss=0.036741
Epoch 8 | avg_train_loss=0.034161 | avg_val_loss=0.035140
Epoch 9 | avg_train_loss=0.033792 | avg_val_loss=0.035333
Epoch 10 | avg_train_loss=0.033131 | avg_val_loss=0.034726
Epoch 11 | avg_train_loss=0.032797 | avg_val_loss=0.034091
Epoch 12 | avg_train_loss=0.032398 | avg_val_loss=0.033561
Epoch 13 | avg_train_loss=0.031882 | avg_val_loss=0.033354
Epoch 14 | avg_train_loss=0.031460 | avg_val_loss=0.033075
Epoch 15 | avg_train_loss=0.031169 | avg_val_loss=0.032194
Epoch 16 | avg_train_loss=0.031115 | avg_val_loss=0.032338
Epoch 17 | avg_train_loss=0.030631 | avg_val_loss=0.032385
Epoch 18 | avg_train_loss=0.030329 | avg_val_loss=0.032357
Epoch 19 | avg_train_loss=0.030117 | avg_val_loss=0.031668
Epoch 20 | avg_train_loss=0.029939 | avg_val_loss=0.031557
Epoch 21 | avg_train_loss=0.029680 | avg_val_loss=0.031769
Epoch 22 | avg_train_loss=0.029458 | avg_val_loss=0.030869
Epoch 23 | avg_train_loss=0.029187 | avg_val_loss=0.030914
Epoch 24 | avg_train_loss=0.028902 | avg_val_loss=0.031093
Epoch 25 | avg_train_loss=0.028529 | avg_val_loss=0.030325
Epoch 26 | avg_train_loss=0.028419 | avg_val_loss=0.030252
Epoch 27 | avg_train_loss=0.028209 | avg_val_loss=0.030522
Epoch 28 | avg_train_loss=0.027997 | avg_val_loss=0.029997
Epoch 29 | avg_train_loss=0.027725 | avg_val_loss=0.030075
Epoch 30 | avg_train_loss=0.027592 | avg_val_loss=0.029670
Epoch 31 | avg_train_loss=0.027319 | avg_val_loss=0.029318
Epoch 32 | avg_train_loss=0.027240 | avg_val_loss=0.028851
Epoch 33 | avg_train_loss=0.027092 | avg_val_loss=0.029059
Epoch 34 | avg_train_loss=0.026824 | avg_val_loss=0.028610
Epoch 35 | avg_train_loss=0.026581 | avg_val_loss=0.028566
Epoch 36 | avg_train_loss=0.026365 | avg_val_loss=0.028460
Epoch 37 | avg_train_loss=0.026415 | avg_val_loss=0.028513
Epoch 38 | avg_train_loss=0.026072 | avg_val_loss=0.028139
Epoch 39 | avg_train_loss=0.025832 | avg_val_loss=0.027931
Epoch 40 | avg_train_loss=0.025877 | avg_val_loss=0.028248
Epoch 41 | avg_train_loss=0.025552 | avg_val_loss=0.028457
Epoch 42 | avg_train_loss=0.025442 | avg_val_loss=0.027125
Epoch 43 | avg_train_loss=0.025244 | avg_val_loss=0.027159
Epoch 44 | avg_train_loss=0.025179 | avg_val_loss=0.027373
Epoch 45 | avg_train_loss=0.024935 | avg_val_loss=0.027660
Epoch 46 | avg_train_loss=0.024835 | avg_val_loss=0.026815
Epoch 47 | avg_train_loss=0.024617 | avg_val_loss=0.027149
Epoch 48 | avg_train_loss=0.024605 | avg_val_loss=0.026845
Epoch 49 | avg_train_loss=0.024406 | avg_val_loss=0.026324
Epoch 50 | avg_train_loss=0.024297 | avg_val_loss=0.026861
Epoch 51 | avg_train_loss=0.024281 | avg_val_loss=0.026417
Epoch 52 | avg_train_loss=0.023961 | avg_val_loss=0.026666
Epoch 53 | avg_train_loss=0.023928 | avg_val_loss=0.026494
Epoch 54 | avg_train_loss=0.023928 | avg_val_loss=0.026317
Epoch 55 | avg_train_loss=0.023706 | avg_val_loss=0.025997
Epoch 56 | avg_train_loss=0.023719 | avg_val_loss=0.026176
Epoch 57 | avg_train_loss=0.023677 | avg_val_loss=0.025886
Epoch 58 | avg_train_loss=0.023443 | avg_val_loss=0.025634
Epoch 59 | avg_train_loss=0.023453 | avg_val_loss=0.025704
Epoch 60 | avg_train_loss=0.023115 | avg_val_loss=0.025414
Epoch 61 | avg_train_loss=0.023156 | avg_val_loss=0.025789
Epoch 62 | avg_train_loss=0.023001 | avg_val_loss=0.025414
Epoch 63 | avg_train_loss=0.022783 | avg_val_loss=0.025307
Epoch 64 | avg_train_loss=0.022833 | avg_val_loss=0.025417
Epoch 65 | avg_train_loss=0.022682 | avg_val_loss=0.025222
Epoch 66 | avg_train_loss=0.022536 | avg_val_loss=0.024571
Epoch 67 | avg_train_loss=0.022362 | avg_val_loss=0.025454
Epoch 68 | avg_train_loss=0.022491 | avg_val_loss=0.024713
Epoch 69 | avg_train_loss=0.022328 | avg_val_loss=0.024671
Epoch 70 | avg_train_loss=0.022258 | avg_val_loss=0.025225
Epoch 71 | avg_train_loss=0.022115 | avg_val_loss=0.025024
Epoch 72 | avg_train_loss=0.022199 | avg_val_loss=0.025102
Epoch 73 | avg_train_loss=0.022044 | avg_val_loss=0.024755
Epoch 74 | avg_train_loss=0.021937 | avg_val_loss=0.025446
Epoch 75 | avg_train_loss=0.021843 | avg_val_loss=0.024506
Epoch 76 | avg_train_loss=0.021773 | avg_val_loss=0.025002
Epoch 77 | avg_train_loss=0.021701 | avg_val_loss=0.024535
Epoch 78 | avg_train_loss=0.021618 | avg_val_loss=0.024857
Epoch 79 | avg_train_loss=0.021655 | avg_val_loss=0.024385
Epoch 80 | avg_train_loss=0.021589 | avg_val_loss=0.024372
Epoch 81 | avg_train_loss=0.021427 | avg_val_loss=0.024681
Epoch 82 | avg_train_loss=0.021324 | avg_val_loss=0.024563
Epoch 83 | avg_train_loss=0.021175 | avg_val_loss=0.025052
Epoch 84 | avg_train_loss=0.021183 | avg_val_loss=0.024343
Epoch 85 | avg_train_loss=0.021131 | avg_val_loss=0.023794
Epoch 86 | avg_train_loss=0.020947 | avg_val_loss=0.023998
Epoch 87 | avg_train_loss=0.021032 | avg_val_loss=0.024706
Epoch 88 | avg_train_loss=0.020907 | avg_val_loss=0.024131
Epoch 89 | avg_train_loss=0.020708 | avg_val_loss=0.024321
Epoch 90 | avg_train_loss=0.020786 | avg_val_loss=0.024317
Epoch 91 | avg_train_loss=0.020627 | avg_val_loss=0.024104
Epoch 92 | avg_train_loss=0.020571 | avg_val_loss=0.024021
Epoch 93 | avg_train_loss=0.020492 | avg_val_loss=0.024084
Epoch 94 | avg_train_loss=0.020479 | avg_val_loss=0.024280
Epoch 95 | avg_train_loss=0.020434 | avg_val_loss=0.023624
Epoch 96 | avg_train_loss=0.020160 | avg_val_loss=0.024245
Epoch 97 | avg_train_loss=0.020209 | avg_val_loss=0.024371
Epoch 98 | avg_train_loss=0.020196 | avg_val_loss=0.024068
Epoch 99 | avg_train_loss=0.020099 | avg_val_loss=0.023723
Epoch 100 | avg_train_loss=0.019828 | avg_val_loss=0.023924
Epoch 101 | avg_train_loss=0.020137 | avg_val_loss=0.024094
Epoch 102 | avg_train_loss=0.019933INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5815e-05s, 424928 KB] reading input...
[t=0.0021222s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258723s, 427532 KB] Building successor generator...done!
[t=0.0261511s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261745s, 427532 KB] time for successor generation creation: 0.000167456s
[t=0.0262031s, 427532 KB] Variables: 25
[t=0.0262259s, 427532 KB] FactPairs: 182
[t=0.026248s, 427532 KB] Bytes per state: 8
[t=0.0264428s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109917s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.109975s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.11s, 430124 KB] f = 129, 1 evaluated, 0 expanded
[t=0.110028s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.110052s, 430124 KB] pruning method: none
[t=0.121925s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.121975s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.12839s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.128432s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.128656s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.128685s, 431096 KB] g=1, 4 evaluated, 1 expanded
[t=0.128903s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.128941s, 431096 KB] g=1, 5 evaluated, 1 expanded
[t=0.129165s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.129194s, 431096 KB] g=2, 6 evaluated, 2 expanded
[t=0.130164s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.130194s, 431096 KB] g=3, 11 evaluated, 3 expanded
[t=0.134938s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.134971s, 431096 KB] g=8, 36 evaluated, 11 expanded
[t=0.142311s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.142344s, 431096 KB] g=8, 75 evaluated, 23 expanded
[t=0.175176s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.175212s, 431228 KB] g=13, 249 evaluated, 78 expanded
[t=0.491574s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.491622s, 431632 KB] g=29, 1927 evaluated, 653 expanded, 79 reopened
[t=0.493159s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.49319s, 431632 KB] g=29, 1935 evaluated, 655 expanded, 79 reopened
[t=0.4936s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.493629s, 431632 KB] g=30, 1937 evaluated, 656 expanded, 79 reopened
[t=0.494406s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.494438s, 431632 KB] g=31, 1941 evaluated, 657 expanded, 79 reopened
[t=0.494856s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.494886s, 431632 KB] g=32, 1943 evaluated, 658 expanded, 79 reopened
[t=0.506309s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.506346s, 431632 KB] g=34, 2003 evaluated, 674 expanded, 79 reopened
[t=0.50901s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.509043s, 431632 KB] g=36, 2017 evaluated, 677 expanded, 79 reopened
[t=0.510008s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.510039s, 431632 KB] g=37, 2022 evaluated, 678 expanded, 79 reopened
[t=0.511765s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.511799s, 431632 KB] g=39, 2031 evaluated, 680 expanded, 79 reopened
[t=0.512395s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.512424s, 431632 KB] g=40, 2034 evaluated, 681 expanded, 79 reopened
[t=0.51302s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.513049s, 431632 KB] g=40, 2037 evaluated, 681 expanded, 79 reopened
[t=0.514592s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.514628s, 431632 KB] g=41, 2045 evaluated, 683 expanded, 79 reopened
[t=0.514848s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.514876s, 431632 KB] g=41, 2046 evaluated, 683 expanded, 79 reopened
[t=0.515484s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.515517s, 431768 KB] g=42, 2049 evaluated, 684 expanded, 79 reopened
[t=0.515923s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.515952s, 431768 KB] g=43, 2051 evaluated, 685 expanded, 79 reopened
[t=0.516739s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.516768s, 431768 KB] g=44, 2055 evaluated, 686 expanded, 79 reopened
[t=0.517364s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.517393s, 431768 KB] g=45, 2058 evaluated, 687 expanded, 79 reopened
[t=0.519118s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.519152s, 431768 KB] g=45, 2067 evaluated, 690 expanded, 79 reopened
[t=0.520875s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.520907s, 431768 KB] g=48, 2076 evaluated, 694 expanded, 79 reopened
[t=0.527706s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.527741s, 431768 KB] g=50, 2112 evaluated, 707 expanded, 79 reopened
[t=0.52815s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.528178s, 431768 KB] g=51, 2114 evaluated, 708 expanded, 79 reopened
[t=0.541991s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.542028s, 431768 KB] g=56, 2187 evaluated, 745 expanded, 86 reopened
[t=0.542836s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.542868s, 431768 KB] g=58, 2192 evaluated, 749 expanded, 86 reopened
[t=0.542896s, 431768 KB] Solution found!
[t=0.542923s, 431768 KB] Actual search time: 0.432867s
unstack h j (1)
stack h a (1)
unstack b d (1)
put-down b (1)
unstack f e (1)
stack f b (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack f b (1)
stack f d (1)
unstack h a (1)
stack h f (1)
unstack a k (1)
put-down a (1)
unstack k l (1)
stack k i (1)
unstack l g (1)
stack l b (1)
unstack h f (1)
stack h g (1)
unstack l b (1)
put-down l (1)
pick-up b (1)
stack b l (1)
pick-up a (1)
stack a h (1)
unstack k i (1)
stack k b (1)
unstack f d (1)
stack f a (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
put-down j (1)
unstack k b (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
unstack i c (1)
stack i b (1)
pick-up l (1)
stack l d (1)
unstack i b (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.542947s, 431768 KB] Plan length: 58 step(s).
[t=0.542947s, 431768 KB] Plan cost: 58
[t=0.542947s, 431768 KB] Expanded 750 state(s).
[t=0.542947s, 431768 KB] Reopened 86 state(s).
[t=0.542947s, 431768 KB] Evaluated 2192 state(s).
[t=0.542947s, 431768 KB] Evaluations: 2192
[t=0.542947s, 431768 KB] Generated 3407 state(s).
[t=0.542947s, 431768 KB] Dead ends: 0 state(s).
[t=0.542947s, 431768 KB] Expanded until last jump: 0 state(s).
[t=0.542947s, 431768 KB] Reopened until last jump: 0 state(s).
[t=0.542947s, 431768 KB] Evaluated until last jump: 1 state(s).
[t=0.542947s, 431768 KB] Generated until last jump: 0 state(s).
[t=0.542947s, 431768 KB] Number of registered states: 2192
[t=0.542947s, 431768 KB] Int hash set load factor: 2192/4096 = 0.535156
[t=0.542947s, 431768 KB] Int hash set resizes: 12
[t=0.542947s, 431768 KB] Search time: 0.516505s
[t=0.542947s, 431768 KB] Total time: 0.542947s
Solution found.
Peak memory: 431768 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6159e-05s, 424928 KB] reading input...
[t=0.00228435s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259442s, 427532 KB] Building successor generator...done!
[t=0.0262246s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262483s, 427532 KB] time for successor generation creation: 0.000167645s
[t=0.0262773s, 427532 KB] Variables: 25
[t=0.0263007s, 427532 KB] FactPairs: 182
[t=0.0263234s, 427532 KB] Bytes per state: 8
[t=0.0265211s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109632s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.109689s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.109715s, 430124 KB] f = 143, 1 evaluated, 0 expanded
[t=0.109742s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.109767s, 430124 KB] pruning method: none
[t=0.12827s, 431096 KB] f = 148, 4 evaluated, 1 expanded
[t=0.128511s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.128543s, 431096 KB] g=2, 5 evaluated, 2 expanded
[t=0.12949s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.129521s, 431096 KB] g=3, 10 evaluated, 4 expanded
[t=0.133561s, 431096 KB] f = 149, 32 evaluated, 10 expanded
[t=0.136697s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.136731s, 431096 KB] g=5, 49 evaluated, 16 expanded
[t=0.137487s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.137517s, 431096 KB] g=6, 53 evaluated, 17 expanded
[t=0.142075s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.142112s, 431096 KB] g=10, 78 evaluated, 24 expanded
[t=0.144683s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.144719s, 431096 KB] g=13, 92 evaluated, 27 expanded
[t=0.149459s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.149494s, 431096 KB] g=15, 118 evaluated, 32 expanded
[t=0.150072s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.150103s, 431096 KB] g=16, 121 evaluated, 33 expanded
[t=0.1518s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.151845s, 431096 KB] g=17, 130 evaluated, 35 expanded
[t=0.155024s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.155063s, 431096 KB] g=20, 147 evaluated, 39 expanded
[t=0.15644s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.15647s, 431096 KB] g=22, 154 evaluated, 41 expanded
[t=0.157045s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.157075s, 431096 KB] g=23, 157 evaluated, 42 expanded
[t=0.157651s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.157684s, 431096 KB] g=24, 160 evaluated, 43 expanded
[t=0.158619s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.158649s, 431096 KB] g=25, 165 evaluated, 44 expanded
[t=0.158885s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.158917s, 431096 KB] g=26, 166 evaluated, 45 expanded
[t=0.168313s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.168348s, 431228 KB] g=29, 217 evaluated, 57 expanded
[t=0.169101s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.169132s, 431228 KB] g=30, 221 evaluated, 58 expanded
[t=0.182245s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.18228s, 431228 KB] g=33, 293 evaluated, 78 expanded
[t=0.183053s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.183085s, 431228 KB] g=34, 297 evaluated, 79 expanded
[t=0.1833s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.18333s, 431228 KB] g=35, 298 evaluated, 80 expanded
[t=0.185517s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.185548s, 431228 KB] g=36, 310 evaluated, 83 expanded
[t=0.185945s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.185976s, 431228 KB] g=37, 312 evaluated, 84 expanded
[t=0.186738s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.186771s, 431228 KB] g=38, 316 evaluated, 85 expanded
[t=0.187704s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.187735s, 431228 KB] g=39, 321 evaluated, 86 expanded
[t=0.191396s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.191435s, 431228 KB] g=40, 341 evaluated, 95 expanded
[t=0.198349s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.198386s, 431228 KB] g=47, 379 evaluated, 110 expanded
[t=0.199159s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.199192s, 431228 KB] g=50, 384 evaluated, 113 expanded
[t=0.19922s, 431228 KB] Solution found!
[t=0.199248s, 431228 KB] Actual search time: 0.0894771s
unstack k g (1)
stack k j (1)
unstack g e (1)
put-down g (1)
unstack e l (1)
stack e k (1)
unstack l b (1)
put-down l (1)
unstack b a (1)
stack b e (1)
unstack a h (1)
put-down a (1)
unstack c f (1)
stack c b (1)
pick-up h (1)
stack h g (1)
unstack c b (1)
stack c f (1)
pick-up a (1)
stack a h (1)
unstack b e (1)
stack b l (1)
unstack c f (1)
put-down c (1)
unstack e k (1)
stack e b (1)
unstack f d (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b d (1)
pick-up l (1)
stack l c (1)
unstack b d (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.199273s, 431228 KB] Plan length: 50 step(s).
[t=0.199273s, 431228 KB] Plan cost: 50
[t=0.199273s, 431228 KB] Expanded 114 state(s).
[t=0.199273s, 431228 KB] Reopened 0 state(s).
[t=0.199273s, 431228 KB] Evaluated 384 state(s).
[t=0.199273s, 431228 KB] Evaluations: 384
[t=0.199273s, 431228 KB] Generated 501 state(s).
[t=0.199273s, 431228 KB] Dead ends: 0 state(s).
[t=0.199273s, 431228 KB] Expanded until last jump: 10 state(s).
[t=0.199273s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.199273s, 431228 KB] Evaluated until last jump: 32 state(s).
[t=0.199273s, 431228 KB] Generated until last jump: 40 state(s).
[t=0.199273s, 431228 KB] Number of registered states: 384
[t=0.199273s, 431228 KB] Int hash set load factor: 384/512 = 0.75
[t=0.199273s, 431228 KB] Int hash set resizes: 9
[t=0.199273s, 431228 KB] Search time: 0.172753s
[t=0.199273s, 431228 KB] Total time: 0.199273s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7917e-05s, 424928 KB] reading input...
[t=0.00213018s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259454s, 427532 KB] Building successor generator...done!
[t=0.0262228s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262463s, 427532 KB] time for successor generation creation: 0.000166389s
[t=0.026275s, 427532 KB] Variables: 25
[t=0.0262976s, 427532 KB] FactPairs: 182
[t=0.0263195s, 427532 KB] Bytes per state: 8
[t=0.0265166s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988575s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.0989094s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989357s, 430124 KB] f = 102, 1 evaluated, 0 expanded
[t=0.098963s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.0989872s, 430124 KB] pruning method: none
[t=0.110857s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.11091s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.118987s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.119031s, 431096 KB] g=2, 12 evaluated, 3 expanded
[t=0.123522s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.123556s, 431096 KB] g=8, 37 evaluated, 10 expanded
[t=0.125187s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.125218s, 431096 KB] g=10, 46 evaluated, 13 expanded
[t=0.125427s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.125456s, 431096 KB] g=10, 47 evaluated, 13 expanded
[t=0.127632s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.127674s, 431096 KB] g=12, 59 evaluated, 17 expanded
[t=0.129492s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.129525s, 431096 KB] g=14, 69 evaluated, 19 expanded
[t=0.132409s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.132445s, 431096 KB] g=19, 85 evaluated, 24 expanded
[t=0.133184s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.133214s, 431096 KB] g=20, 89 evaluated, 25 expanded
[t=0.133957s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.13399s, 431096 KB] g=22, 93 evaluated, 27 expanded
[t=0.135632s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.135667s, 431096 KB] g=24, 102 evaluated, 31 expanded
[t=0.135876s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.135905s, 431096 KB] g=24, 103 evaluated, 31 expanded
[t=0.136468s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.1365s, 431096 KB] g=25, 106 evaluated, 32 expanded
[t=0.139199s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.139233s, 431096 KB] g=29, 121 evaluated, 38 expanded
[t=0.140343s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.140376s, 431096 KB] g=31, 127 evaluated, 40 expanded
[t=0.141312s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.141345s, 431096 KB] g=32, 132 evaluated, 41 expanded
[t=0.148162s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.148199s, 431096 KB] g=31, 170 evaluated, 56 expanded
[t=0.149662s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.149698s, 431228 KB] g=33, 178 evaluated, 59 expanded
[t=0.151705s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.15174s, 431228 KB] g=35, 189 evaluated, 64 expanded
[t=0.151771s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.151795s, 431228 KB] g=36, 190 evaluated, 65 expanded
[t=0.15182s, 431228 KB] Solution found!
[t=0.151845s, 431228 KB] Actual search time: 0.0528537s
unstack l j (1)
put-down l (1)
unstack f h (1)
stack f j (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack b d (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack j e (1)
stack j b (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.151869s, 431228 KB] Plan length: 36 step(s).
[t=0.151869s, 431228 KB] Plan cost: 36
[t=0.151869s, 431228 KB] Expanded 66 state(s).
[t=0.151869s, 431228 KB] Reopened 0 state(s).
[t=0.151869s, 431228 KB] Evaluated 190 state(s).
[t=0.151869s, 431228 KB] Evaluations: 190
[t=0.151869s, 431228 KB] Generated 255 state(s).
[t=0.151869s, 431228 KB] Dead ends: 0 state(s).
[t=0.151869s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.151869s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.151869s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.151869s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.151869s, 431228 KB] Number of registered states: 190
[t=0.151869s, 431228 KB] Int hash set load factor: 190/256 = 0.742188
[t=0.151869s, 431228 KB] Int hash set resizes: 8
[t=0.151869s, 431228 KB] Search time: 0.125354s
[t=0.151869s, 431228 KB] Total time: 0.151869s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8815e-05s, 424928 KB] reading input...
[t=0.00221615s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258622s, 427532 KB] Building successor generator...done!
[t=0.0261406s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261638s, 427532 KB] time for successor generation creation: 0.000165889s
[t=0.0261927s, 427532 KB] Variables: 25
[t=0.0262159s, 427532 KB] FactPairs: 182
[t=0.026238s, 427532 KB] Bytes per state: 8
[t=0.0264336s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983648s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.098416s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984414s, 430124 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0984685s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0984929s, 430124 KB] pruning method: none
[t=0.116728s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.116778s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.117009s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.11704s, 431096 KB] g=1, 4 evaluated, 1 expanded
[t=0.12051s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.120541s, 431096 KB] g=6, 23 evaluated, 10 expanded
[t=0.121132s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.121164s, 431096 KB] g=7, 26 evaluated, 11 expanded
[t=0.123706s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.123737s, 431096 KB] g=10, 40 evaluated, 15 expanded
[t=0.12449s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.12452s, 431096 KB] g=11, 44 evaluated, 16 expanded
[t=0.126899s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.126936s, 431096 KB] g=15, 57 evaluated, 20 expanded
[t=0.128048s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.128078s, 431096 KB] g=16, 63 evaluated, 21 expanded
[t=0.128834s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.128863s, 431096 KB] g=17, 67 evaluated, 22 expanded
[t=0.142671s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.142715s, 431096 KB] g=24, 143 evaluated, 40 expanded
[t=0.143475s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.143505s, 431096 KB] g=25, 147 evaluated, 41 expanded
[t=0.147913s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.147948s, 431228 KB] g=27, 171 evaluated, 48 expanded
[t=0.152737s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.152774s, 431228 KB] g=27, 197 evaluated, 57 expanded, 1 reopened
[t=0.153368s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.153402s, 431228 KB] g=28, 200 evaluated, 58 expanded, 1 reopened
[t=0.154342s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.154372s, 431228 KB] g=29, 205 evaluated, 59 expanded, 1 reopened
[t=0.156047s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.156077s, 431228 KB] g=30, 214 evaluated, 61 expanded, 1 reopened
[t=0.15812s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.158156s, 431228 KB] g=32, 225 evaluated, 63 expanded, 1 reopened
[t=0.158374s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.158403s, 431228 KB] g=33, 226 evaluated, 64 expanded, 1 reopened
[t=0.161901s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.161937s, 431228 KB] g=36, 245 evaluated, 69 expanded, 1 reopened
[t=0.166179s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.166213s, 431228 KB] g=40, 268 evaluated, 75 expanded, 1 reopened
[t=0.166969s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.167002s, 431228 KB] g=41, 272 evaluated, 76 expanded, 1 reopened
[t=0.167214s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.167242s, 431228 KB] g=41, 273 evaluated, 76 expanded, 1 reopened
[t=0.167819s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.167851s, 431228 KB] g=42, 276 evaluated, 77 expanded, 1 reopened
[t=0.168981s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.169013s, 431228 KB] g=44, 282 evaluated, 79 expanded, 1 reopened
[t=0.17014s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.170173s, 431228 KB] g=46, 288 evaluated, 81 expanded, 1 reopened
[t=0.176012s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.176049s, 431228 KB] g=49, 320 evaluated, 91 expanded, 1 reopened
[t=0.176812s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.176842s, 431228 KB] g=50, 324 evaluated, 92 expanded, 1 reopened
[t=0.183434s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.183469s, 431228 KB] g=53, 360 evaluated, 109 expanded, 1 reopened
[t=0.183869s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.183899s, 431228 KB] g=55, 362 evaluated, 111 expanded, 1 reopened
[t=0.186847s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.186881s, 431228 KB] g=57, 379 evaluated, 121 expanded, 1 reopened
[t=0.186909s, 431228 KB] Solution found!
[t=0.186935s, 431228 KB] Actual search time: 0.0884389s
put-down e (1)
unstack i c (1)
stack i e (1)
unstack c j (1)
put-down c (1)
unstack i e (1)
stack i c (1)
unstack j d (1)
stack j e (1)
unstack d g (1)
stack d j (1)
unstack l b (1)
stack l g (1)
unstack b a (1)
stack b d (1)
unstack l g (1)
put-down l (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up f (1)
stack f h (1)
unstack b d (1)
stack b l (1)
unstack f h (1)
stack f d (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack i c (1)
stack i b (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i b (1)
put-down i (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.18696s, 431228 KB] Plan length: 57 step(s).
[t=0.18696s, 431228 KB] Plan cost: 57
[t=0.18696s, 431228 KB] Expanded 122 state(s).
[t=0.18696s, 431228 KB] Reopened 1 state(s).
[t=0.18696s, 431228 KB] Evaluated 379 state(s).
[t=0.18696s, 431228 KB] Evaluations: 379
[t=0.18696s, 431228 KB] Generated 513 state(s).
[t=0.18696s, 431228 KB] Dead ends: 0 state(s).
[t=0.18696s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.18696s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.18696s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.18696s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.18696s, 431228 KB] Number of registered states: 379
[t=0.18696s, 431228 KB] Int hash set load factor: 379/512 = 0.740234
[t=0.18696s, 431228 KB] Int hash set resizes: 9
[t=0.18696s, 431228 KB] Search time: 0.160527s
[t=0.18696s, 431228 KB] Total time: 0.18696s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8964e-05s, 424928 KB] reading input...
[t=0.00220798s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0265335s, 427532 KB] Building successor generator...done!
[t=0.0268102s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0268336s, 427532 KB] time for successor generation creation: 0.000166871s
[t=0.0268619s, 427532 KB] Variables: 25
[t=0.0268854s, 427532 KB] FactPairs: 182
[t=0.0269079s, 427532 KB] Bytes per state: 8
[t=0.0271026s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.100237s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.100289s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.100315s, 430124 KB] f = 120, 1 evaluated, 0 expanded
[t=0.100343s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.100367s, 430124 KB] pruning method: none
[t=0.118792s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.118842s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.119241s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.119283s, 431096 KB] g=1, 5 evaluated, 1 expanded
[t=0.120227s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.120257s, 431096 KB] g=2, 10 evaluated, 2 expanded
[t=0.121008s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.121048s, 431096 KB] g=2, 14 evaluated, 2 expanded
[t=0.121263s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.121292s, 431096 KB] g=2, 15 evaluated, 2 expanded
[t=0.126551s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.126587s, 431096 KB] g=4, 44 evaluated, 7 expanded
[t=0.132395s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.132431s, 431096 KB] g=6, 76 evaluated, 14 expanded
[t=0.135522s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.135555s, 431096 KB] g=7, 93 evaluated, 16 expanded
[t=0.141219s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.141255s, 431096 KB] g=10, 124 evaluated, 22 expanded
[t=0.146026s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.146063s, 431096 KB] g=13, 150 evaluated, 27 expanded
[t=0.14682s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.146857s, 431228 KB] g=14, 154 evaluated, 28 expanded
[t=0.1498s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.149834s, 431228 KB] g=15, 170 evaluated, 31 expanded
[t=0.152401s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.152431s, 431228 KB] g=18, 184 evaluated, 34 expanded
[t=0.154845s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.154878s, 431228 KB] g=19, 197 evaluated, 37 expanded
[t=0.157632s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.157668s, 431228 KB] g=22, 212 evaluated, 41 expanded
[t=0.185784s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.185823s, 431360 KB] g=24, 367 evaluated, 77 expanded
[t=0.187487s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.187517s, 431360 KB] g=25, 376 evaluated, 79 expanded
[t=0.188273s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.188306s, 431360 KB] g=26, 380 evaluated, 80 expanded
[t=0.18944s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.189475s, 431360 KB] g=28, 386 evaluated, 82 expanded
[t=0.189687s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.189715s, 431360 KB] g=28, 387 evaluated, 82 expanded
[t=0.190473s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.190502s, 431360 KB] g=29, 391 evaluated, 83 expanded
[t=0.258396s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.258437s, 431492 KB] g=44, 764 evaluated, 207 expanded, 4 reopened
[t=0.258654s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.258683s, 431492 KB] g=45, 765 evaluated, 208 expanded, 4 reopened
[t=0.259981s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.260011s, 431492 KB] g=46, 772 evaluated, 210 expanded, 4 reopened
[t=0.26384s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.263876s, 431492 KB] g=49, 793 evaluated, 215 expanded, 4 reopened
[t=0.264629s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.264662s, 431492 KB] g=50, 797 evaluated, 216 expanded, 4 reopened
[t=0.265604s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.265637s, 431492 KB] g=51, 802 evaluated, 217 expanded, 4 reopened
[t=0.26783s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.267864s, 431492 KB] g=53, 814 evaluated, 220 expanded, 4 reopened
[t=0.268984s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.269019s, 431492 KB] g=54, 820 evaluated, 222 expanded, 4 reopened
[t=0.274985s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.27502s, 431492 KB] g=54, 853 evaluated, 231 expanded, 4 reopened
[t=0.276492s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.276527s, 431492 KB] g=54, 861 evaluated, 234 expanded, 4 reopened
[t=0.278014s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.27805s, 431492 KB] g=56, 869 evaluated, 237 expanded, 4 reopened
[t=0.278813s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.278843s, 431492 KB] g=59, 874 evaluated, 240 expanded, 4 reopened
[t=0.27887s, 431492 KB] Solution found!
[t=0.278897s, 431492 KB] Actual search time: 0.178526s
stack e d (1)
pick-up j (1)
stack j b (1)
unstack l f (1)
put-down l (1)
pick-up a (1)
stack a f (1)
unstack h k (1)
stack h l (1)
unstack k c (1)
stack k j (1)
unstack h l (1)
stack h g (1)
unstack a f (1)
stack a k (1)
pick-up l (1)
stack l c (1)
unstack e d (1)
put-down e (1)
unstack l c (1)
stack l d (1)
pick-up e (1)
stack e l (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f c (1)
unstack k j (1)
stack k e (1)
unstack f c (1)
stack f a (1)
unstack j b (1)
put-down j (1)
pick-up c (1)
stack c b (1)
pick-up j (1)
stack j c (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack j c (1)
stack j l (1)
unstack c b (1)
put-down c (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.278927s, 431492 KB] Plan length: 59 step(s).
[t=0.278927s, 431492 KB] Plan cost: 59
[t=0.278927s, 431492 KB] Expanded 241 state(s).
[t=0.278927s, 431492 KB] Reopened 4 state(s).
[t=0.278927s, 431492 KB] Evaluated 874 state(s).
[t=0.278927s, 431492 KB] Evaluations: 874
[t=0.278927s, 431492 KB] Generated 1165 state(s).
[t=0.278927s, 431492 KB] Dead ends: 0 state(s).
[t=0.278927s, 431492 KB] Expanded until last jump: 0 state(s).
[t=0.278927s, 431492 KB] Reopened until last jump: 0 state(s).
[t=0.278927s, 431492 KB] Evaluated until last jump: 1 state(s).
[t=0.278927s, 431492 KB] Generated until last jump: 0 state(s).
[t=0.278927s, 431492 KB] Number of registered states: 874
[t=0.278927s, 431492 KB] Int hash set load factor: 874/1024 = 0.853516
[t=0.278927s, 431492 KB] Int hash set resizes: 10
[t=0.278927s, 431492 KB] Search time: 0.251825s
[t=0.278927s, 431492 KB] Total time: 0.278927s
Solution found.
Peak memory: 431492 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5915e-05s, 424928 KB] reading input...
[t=0.00219535s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259195s, 427532 KB] Building successor generator...done!
[t=0.0262013s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262247s, 427532 KB] time for successor generation creation: 0.000171534s
[t=0.026253s, 427532 KB] Variables: 25
[t=0.0262757s, 427532 KB] FactPairs: 182
[t=0.0262977s, 427532 KB] Bytes per state: 8
[t=0.0264945s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982701s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.098336s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983617s, 430124 KB] f = 142, 1 evaluated, 0 expanded
[t=0.0983897s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0984183s, 430124 KB] pruning method: none
[t=0.117252s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117302s, 431096 KB] g=1, 4 evaluated, 1 expanded
[t=0.11794s, 431096 KB] f = 146, 7 evaluated, 2 expanded
[t=0.118969s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.11901s, 431096 KB] g=4, 12 evaluated, 4 expanded
[t=0.119951s, 431096 KB] f = 147, 17 evaluated, 5 expanded
[t=0.121444s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.121474s, 431096 KB] g=4, 25 evaluated, 9 expanded
[t=0.121685s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.121721s, 431096 KB] g=4, 26 evaluated, 9 expanded
[t=0.122113s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.122142s, 431096 KB] g=4, 28 evaluated, 9 expanded
[t=0.12272s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.12275s, 431096 KB] g=5, 31 evaluated, 10 expanded
[t=0.122963s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.123s, 431096 KB] g=5, 32 evaluated, 10 expanded
[t=0.127985s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.128017s, 431096 KB] g=9, 58 evaluated, 16 expanded
[t=0.128229s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.128258s, 431096 KB] g=9, 59 evaluated, 16 expanded
[t=0.12865s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.128679s, 431096 KB] g=9, 61 evaluated, 16 expanded
[t=0.132008s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.132041s, 431096 KB] g=13, 79 evaluated, 21 expanded
[t=0.135282s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.135317s, 431096 KB] g=12, 96 evaluated, 25 expanded
[t=0.136992s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.137022s, 431096 KB] g=14, 105 evaluated, 27 expanded
[t=0.138163s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.138198s, 431096 KB] g=15, 111 evaluated, 29 expanded
[t=0.138776s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.138805s, 431096 KB] g=15, 114 evaluated, 29 expanded
[t=0.153727s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.153766s, 431228 KB] g=19, 194 evaluated, 48 expanded
[t=0.154346s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.154376s, 431228 KB] g=19, 197 evaluated, 48 expanded
[t=0.155133s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.155162s, 431228 KB] g=20, 201 evaluated, 49 expanded
[t=0.157035s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.157064s, 431228 KB] g=22, 211 evaluated, 51 expanded
[t=0.157643s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.157675s, 431228 KB] g=22, 214 evaluated, 51 expanded
[t=0.170773s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.170809s, 431228 KB] g=25, 284 evaluated, 66 expanded
[t=0.178095s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.178132s, 431228 KB] g=25, 323 evaluated, 75 expanded
[t=0.181259s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.181293s, 431228 KB] g=28, 340 evaluated, 79 expanded
[t=0.181709s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.181749s, 431228 KB] g=28, 342 evaluated, 79 expanded
[t=0.183349s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.183379s, 431228 KB] g=30, 350 evaluated, 81 expanded
[t=0.184875s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.184908s, 431228 KB] g=32, 358 evaluated, 83 expanded
[t=0.186232s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.186266s, 431228 KB] g=34, 365 evaluated, 86 expanded
[t=0.187574s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.187607s, 431228 KB] g=36, 372 evaluated, 88 expanded
[t=0.187818s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.187847s, 431228 KB] g=36, 373 evaluated, 88 expanded
[t=0.191488s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.191523s, 431228 KB] g=41, 392 evaluated, 94 expanded
[t=0.192291s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.19232s, 431228 KB] g=42, 396 evaluated, 95 expanded
[t=0.200572s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.200608s, 431360 KB] g=48, 440 evaluated, 112 expanded
[t=0.203044s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.203079s, 431360 KB] g=51, 453 evaluated, 119 expanded
[t=0.204764s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.204794s, 431360 KB] g=52, 462 evaluated, 124 expanded
[t=0.205562s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.205592s, 431360 KB] g=53, 466 evaluated, 126 expanded
[t=0.209793s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.209829s, 431360 KB] g=56, 488 evaluated, 134 expanded
[t=0.210413s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.210443s, 431360 KB] g=57, 491 evaluated, 135 expanded
[t=0.211401s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.211431s, 431360 KB] g=58, 496 evaluated, 136 expanded
[t=0.211649s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.211677s, 431360 KB] g=59, 497 evaluated, 137 expanded
[t=0.212084s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.212113s, 431360 KB] g=60, 499 evaluated, 138 expanded
[t=0.21251s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.212539s, 431360 KB] g=61, 501 evaluated, 139 expanded
[t=0.21257s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.212594s, 431360 KB] g=62, 502 evaluated, 140 expanded
[t=0.21262s, 431360 KB] Solution found!
[t=0.212647s, 431360 KB] Actual search time: 0.114225s
unstack g l (1)
put-down g (1)
unstack l j (1)
put-down l (1)
unstack e f (1)
put-down e (1)
unstack b d (1)
stack b l (1)
pick-up j (1)
stack j f (1)
unstack d k (1)
put-down d (1)
unstack k c (1)
stack k b (1)
unstack c i (1)
stack c d (1)
unstack i h (1)
stack i c (1)
unstack k b (1)
stack k i (1)
unstack j f (1)
stack j e (1)
pick-up f (1)
stack f k (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l b (1)
unstack i c (1)
stack i l (1)
unstack c d (1)
stack c i (1)
pick-up d (1)
stack d j (1)
unstack c i (1)
put-down c (1)
unstack i l (1)
put-down i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.212672s, 431360 KB] Plan length: 62 step(s).
[t=0.212672s, 431360 KB] Plan cost: 62
[t=0.212672s, 431360 KB] Expanded 141 state(s).
[t=0.212672s, 431360 KB] Reopened 0 state(s).
[t=0.212672s, 431360 KB] Evaluated 502 state(s).
[t=0.212672s, 431360 KB] Evaluations: 502
[t=0.212672s, 431360 KB] Generated 643 state(s).
[t=0.212672s, 431360 KB] Dead ends: 0 state(s).
[t=0.212672s, 431360 KB] Expanded until last jump: 5 state(s).
[t=0.212672s, 431360 KB] Reopened until last jump: 0 state(s).
[t=0.212672s, 431360 KB] Evaluated until last jump: 17 state(s).
[t=0.212672s, 431360 KB] Generated until last jump: 20 state(s).
[t=0.212672s, 431360 KB] Number of registered states: 502
[t=0.212672s, 431360 KB] Int hash set load factor: 502/512 = 0.980469
[t=0.212672s, 431360 KB] Int hash set resizes: 9
[t=0.212672s, 431360 KB] Search time: 0.186178s
[t=0.212672s, 431360 KB] Total time: 0.212672s
Solution found.
Peak memory: 431360 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6298e-05s, 424928 KB] reading input...
[t=0.00210137s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259992s, 427532 KB] Building successor generator...done!
[t=0.0262811s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263055s, 427532 KB] time for successor generation creation: 0.00016798s
[t=0.0263346s, 427532 KB] Variables: 25
[t=0.0263582s, 427532 KB] FactPairs: 182
[t=0.0263812s, 427532 KB] Bytes per state: 8
[t=0.0265765s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992937s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0993463s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993727s, 430124 KB] f = 131, 1 evaluated, 0 expanded
[t=0.0994013s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0994265s, 430124 KB] pruning method: none
[t=0.111365s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.111418s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.12082s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.120865s, 431096 KB] g=3, 19 evaluated, 5 expanded
[t=0.127263s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.127297s, 431096 KB] g=9, 54 evaluated, 16 expanded
[t=0.128605s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.128647s, 431096 KB] g=11, 61 evaluated, 18 expanded
[t=0.129592s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.129623s, 431096 KB] g=13, 66 evaluated, 20 expanded
[t=0.133657s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.133691s, 431096 KB] g=18, 88 evaluated, 28 expanded
[t=0.138637s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.138671s, 431096 KB] g=15, 115 evaluated, 38 expanded
[t=0.139609s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.139644s, 431096 KB] g=16, 120 evaluated, 39 expanded
[t=0.14605s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.146087s, 431096 KB] g=21, 155 evaluated, 49 expanded
[t=0.146666s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.146696s, 431096 KB] g=22, 158 evaluated, 50 expanded
[t=0.147816s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.147846s, 431096 KB] g=24, 164 evaluated, 52 expanded
[t=0.148256s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.148293s, 431096 KB] g=24, 166 evaluated, 52 expanded
[t=0.149053s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.149083s, 431096 KB] g=25, 170 evaluated, 53 expanded
[t=0.150758s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.150791s, 431228 KB] g=27, 179 evaluated, 56 expanded
[t=0.151005s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.151034s, 431228 KB] g=27, 180 evaluated, 56 expanded
[t=0.151794s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.151824s, 431228 KB] g=28, 184 evaluated, 57 expanded
[t=0.152423s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.152457s, 431228 KB] g=29, 187 evaluated, 58 expanded
[t=0.165247s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.165282s, 431228 KB] g=31, 257 evaluated, 75 expanded
[t=0.21153s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.211571s, 431360 KB] g=33, 511 evaluated, 174 expanded, 23 reopened
[t=0.212208s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.212251s, 431360 KB] g=34, 514 evaluated, 175 expanded, 23 reopened
[t=0.214828s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.21486s, 431360 KB] g=36, 528 evaluated, 182 expanded, 23 reopened
[t=0.215974s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.216004s, 431360 KB] g=38, 534 evaluated, 184 expanded, 23 reopened
[t=0.21677s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.216803s, 431360 KB] g=40, 538 evaluated, 186 expanded, 23 reopened
[t=0.217016s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.217044s, 431360 KB] g=40, 539 evaluated, 186 expanded, 23 reopened
[t=0.22071s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.220746s, 431360 KB] g=44, 559 evaluated, 193 expanded, 23 reopened
[t=0.220964s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.220994s, 431360 KB] g=45, 560 evaluated, 194 expanded, 23 reopened
[t=0.222295s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.222325s, 431360 KB] g=46, 567 evaluated, 197 expanded, 23 reopened
[t=0.228343s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.22838s, 431360 KB] g=42, 600 evaluated, 208 expanded, 23 reopened
[t=0.231137s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.231168s, 431360 KB] g=45, 615 evaluated, 214 expanded, 23 reopened
[t=0.231379s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.231408s, 431360 KB] g=45, 616 evaluated, 214 expanded, 23 reopened
[t=0.231993s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.232031s, 431360 KB] g=47, 619 evaluated, 216 expanded, 23 reopened
[t=0.232426s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.232456s, 431360 KB] g=48, 621 evaluated, 217 expanded, 23 reopened
[t=0.233032s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.233064s, 431360 KB] g=50, 624 evaluated, 219 expanded, 23 reopened
[t=0.233095s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.23312s, 431360 KB] g=51, 625 evaluated, 220 expanded, 23 reopened
[t=0.233147s, 431360 KB] Solution found!
[t=0.233173s, 431360 KB] Actual search time: 0.133743s
stack h f (1)
unstack a e (1)
stack a l (1)
unstack e g (1)
put-down e (1)
pick-up k (1)
stack k a (1)
pick-up g (1)
stack g h (1)
unstack k a (1)
stack k e (1)
unstack a l (1)
stack a k (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack l j (1)
stack l k (1)
unstack f b (1)
stack f a (1)
unstack b d (1)
put-down b (1)
unstack l k (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack b l (1)
put-down b (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.233199s, 431360 KB] Plan length: 51 step(s).
[t=0.233199s, 431360 KB] Plan cost: 51
[t=0.233199s, 431360 KB] Expanded 221 state(s).
[t=0.233199s, 431360 KB] Reopened 23 state(s).
[t=0.233199s, 431360 KB] Evaluated 625 state(s).
[t=0.233199s, 431360 KB] Evaluations: 625
[t=0.233199s, 431360 KB] Generated 966 state(s).
[t=0.233199s, 431360 KB] Dead ends: 0 state(s).
[t=0.233199s, 431360 KB] Expanded until last jump: 0 state(s).
[t=0.233199s, 431360 KB] Reopened until last jump: 0 state(s).
[t=0.233199s, 431360 KB] Evaluated until last jump: 1 state(s).
[t=0.233199s, 431360 KB] Generated until last jump: 0 state(s).
[t=0.233199s, 431360 KB] Number of registered states: 625
[t=0.233199s, 431360 KB] Int hash set load factor: 625/1024 = 0.610352
[t=0.233199s, 431360 KB] Int hash set resizes: 10
[t=0.233199s, 431360 KB] Search time: 0.206623s
[t=0.233199s, 431360 KB] Total time: 0.233199s
Solution found.
Peak memory: 431360 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p8.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9289e-05s, 424928 KB] reading input...
[t=0.00222531s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257745s, 427532 KB] Building successor generator...done!
[t=0.026057s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260818s, 427532 KB] time for successor generation creation: 0.000170049s
[t=0.0261108s, 427532 KB] Variables: 25
[t=0.0261338s, 427532 KB] FactPairs: 182
[t=0.0261565s, 427532 KB] Bytes per state: 8
[t=0.0263518s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981266s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0981788s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982044s, 430124 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0982317s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0982562s, 430124 KB] pruning method: none
[t=0.110133s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.110183s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.11733s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.117374s, 431096 KB] g=2, 7 evaluated, 2 expanded
[t=0.117589s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.117619s, 431096 KB] g=2, 8 evaluated, 2 expanded
[t=0.122464s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.122497s, 431096 KB] g=6, 35 evaluated, 8 expanded
[t=0.128053s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.128089s, 431096 KB] g=6, 66 evaluated, 14 expanded
[t=0.134548s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.134582s, 431096 KB] g=9, 102 evaluated, 20 expanded
[t=0.135691s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.135722s, 431096 KB] g=10, 108 evaluated, 21 expanded
[t=0.141114s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.14115s, 431096 KB] g=10, 138 evaluated, 26 expanded
[t=0.157146s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.157191s, 431228 KB] g=19, 227 evaluated, 44 expanded
[t=0.158852s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.158886s, 431228 KB] g=20, 236 evaluated, 45 expanded
[t=0.171146s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.171182s, 431228 KB] g=23, 304 evaluated, 61 expanded
[t=0.187537s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.187572s, 431360 KB] g=27, 395 evaluated, 82 expanded
[t=0.190484s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.190517s, 431360 KB] g=29, 411 evaluated, 86 expanded
[t=0.199153s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.199188s, 431360 KB] g=31, 459 evaluated, 98 expanded
[t=0.222518s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.222556s, 431492 KB] g=34, 588 evaluated, 130 expanded
[t=0.22457s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.224604s, 431492 KB] g=37, 599 evaluated, 133 expanded
[t=0.227707s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.227744s, 431492 KB] g=37, 616 evaluated, 137 expanded
[t=0.22796s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.227989s, 431492 KB] g=38, 617 evaluated, 138 expanded
[t=0.228198s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.228227s, 431492 KB] g=38, 618 evaluated, 138 expanded
[t=0.231498s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.231532s, 431492 KB] g=41, 636 evaluated, 142 expanded
[t=0.231742s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.23177s, 431492 KB] g=41, 637 evaluated, 142 expanded
[t=0.232698s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.232731s, 431492 KB] g=42, 642 evaluated, 143 expanded
[t=0.236558s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.236596s, 431492 KB] g=45, 663 evaluated, 149 expanded
[t=0.237355s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.23739s, 431492 KB] g=46, 667 evaluated, 150 expanded
[t=0.240124s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.240162s, 431492 KB] g=51, 682 evaluated, 155 expanded
[t=0.242743s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.242781s, 431492 KB] g=54, 696 evaluated, 160 expanded
[t=0.243178s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.243207s, 431492 KB] g=55, 698 evaluated, 161 expanded
[t=0.244503s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.244536s, 431492 KB] g=57, 705 evaluated, 164 expanded
[t=0.245659s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.245691s, 431492 KB] g=59, 711 evaluated, 166 expanded
[t=0.249877s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.249912s, 431492 KB] g=57, 734 evaluated, 177 expanded
[t=0.25031s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.250339s, 431492 KB] g=59, 736 evaluated, 179 expanded
[t=0.38319s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.383232s, 431624 KB] g=59, 1471 evaluated, 574 expanded, 75 reopened
[t=0.383261s, 431624 KB] Solution found!
[t=0.383288s, 431624 KB] Actual search time: 0.285029s
put-down g (1)
unstack d b (1)
put-down d (1)
unstack i c (1)
put-down i (1)
unstack b k (1)
stack b e (1)
unstack l a (1)
stack l d (1)
pick-up c (1)
stack c l (1)
pick-up g (1)
stack g a (1)
unstack b e (1)
stack b i (1)
unstack g a (1)
put-down g (1)
unstack a h (1)
stack a k (1)
pick-up h (1)
stack h g (1)
unstack c l (1)
stack c e (1)
unstack a k (1)
stack a h (1)
unstack c e (1)
stack c b (1)
unstack a h (1)
stack a e (1)
unstack k f (1)
stack k l (1)
unstack a e (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack c b (1)
put-down c (1)
pick-up e (1)
stack e b (1)
unstack k l (1)
stack k f (1)
pick-up j (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.383313s, 431624 KB] Plan length: 59 step(s).
[t=0.383313s, 431624 KB] Plan cost: 59
[t=0.383313s, 431624 KB] Expanded 575 state(s).
[t=0.383313s, 431624 KB] Reopened 75 state(s).
[t=0.383313s, 431624 KB] Evaluated 1471 state(s).
[t=0.383313s, 431624 KB] Evaluations: 1471
[t=0.383313s, 431624 KB] Generated 2394 state(s).
[t=0.383313s, 431624 KB] Dead ends: 0 state(s).
[t=0.383313s, 431624 KB] Expanded until last jump: 0 state(s).
[t=0.383313s, 431624 KB] Reopened until last jump: 0 state(s).
[t=0.383313s, 431624 KB] Evaluated until last jump: 1 state(s).
[t=0.383313s, 431624 KB] Generated until last jump: 0 state(s).
[t=0.383313s, 431624 KB] Number of registered states: 1471
[t=0.383313s, 431624 KB] Int hash set load factor: 1471/2048 = 0.718262
[t=0.383313s, 431624 KB] Int hash set resizes: 11
[t=0.383313s, 431624 KB] Search time: 0.356962s
[t=0.383313s, 431624 KB] Total time: 0.383313s
Solution found.
Peak memory: 431624 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6011e-05s, 424928 KB] reading input...
[t=0.00214847s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257204s, 427532 KB] Building successor generator...done!
[t=0.026003s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026026s, 427532 KB] time for successor generation creation: 0.000170159s
[t=0.0260545s, 427532 KB] Variables: 25
[t=0.0260769s, 427532 KB] FactPairs: 182
[t=0.0260985s, 427532 KB] Bytes per state: 8
[t=0.0262945s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098039s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0980895s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981151s, 430124 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0981523s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0981767s, 430124 KB] pruning method: none
[t=0.110009s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.110059s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.116458s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.1165s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.117284s, 431096 KB] f = 148, 7 evaluated, 3 expanded
[t=0.118051s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.118081s, 431096 KB] g=4, 11 evaluated, 5 expanded
[t=0.119559s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.119589s, 431096 KB] g=6, 19 evaluated, 8 expanded
[t=0.122707s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.122742s, 431096 KB] g=8, 36 evaluated, 13 expanded
[t=0.126395s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.126427s, 431096 KB] g=12, 56 evaluated, 19 expanded
[t=0.127361s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.127396s, 431096 KB] g=13, 61 evaluated, 20 expanded
[t=0.127785s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.127815s, 431096 KB] g=13, 63 evaluated, 20 expanded
[t=0.128573s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.128602s, 431096 KB] g=14, 67 evaluated, 21 expanded
[t=0.12881s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.128838s, 431096 KB] g=14, 68 evaluated, 21 expanded
[t=0.132468s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.132501s, 431096 KB] g=18, 88 evaluated, 26 expanded
[t=0.134697s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.134731s, 431096 KB] g=20, 100 evaluated, 29 expanded
[t=0.135303s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.135332s, 431096 KB] g=21, 103 evaluated, 30 expanded
[t=0.136258s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.13629s, 431096 KB] g=22, 108 evaluated, 31 expanded
[t=0.137948s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.137986s, 431096 KB] g=24, 117 evaluated, 33 expanded
[t=0.142189s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.142221s, 431096 KB] g=23, 140 evaluated, 39 expanded
[t=0.149462s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.149498s, 431228 KB] g=29, 180 evaluated, 47 expanded
[t=0.157987s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.15802s, 431228 KB] g=33, 227 evaluated, 59 expanded
[t=0.175435s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.17547s, 431228 KB] g=36, 323 evaluated, 88 expanded
[t=0.282381s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.282422s, 431492 KB] g=37, 919 evaluated, 260 expanded, 14 reopened
[t=0.309285s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.309322s, 431492 KB] g=33, 1067 evaluated, 322 expanded, 30 reopened
[t=0.331132s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.331171s, 431492 KB] g=38, 1188 evaluated, 368 expanded, 42 reopened
[t=0.332288s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.332318s, 431492 KB] g=40, 1194 evaluated, 370 expanded, 42 reopened
[t=0.332706s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.332736s, 431492 KB] g=40, 1196 evaluated, 370 expanded, 42 reopened
[t=0.338359s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.338394s, 431492 KB] g=46, 1227 evaluated, 379 expanded, 42 reopened
[t=0.338965s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.338997s, 431492 KB] g=47, 1230 evaluated, 380 expanded, 42 reopened
[t=0.346078s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.346114s, 431624 KB] g=44, 1269 evaluated, 393 expanded, 42 reopened
[t=0.348124s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.348157s, 431624 KB] g=46, 1280 evaluated, 396 expanded, 42 reopened
[t=0.348366s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.348394s, 431624 KB] g=46, 1281 evaluated, 396 expanded, 42 reopened
[t=0.35006s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.350094s, 431624 KB] g=48, 1290 evaluated, 399 expanded, 42 reopened
[t=0.354276s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.354316s, 431624 KB] g=49, 1313 evaluated, 406 expanded, 42 reopened
[t=0.355253s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.355283s, 431624 KB] g=51, 1318 evaluated, 408 expanded, 42 reopened
[t=0.356576s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.35661s, 431624 KB] g=53, 1325 evaluated, 410 expanded, 42 reopened
[t=0.356823s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.35685s, 431624 KB] g=53, 1326 evaluated, 410 expanded, 42 reopened
[t=0.35725s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.357283s, 431624 KB] g=53, 1328 evaluated, 410 expanded, 42 reopened
[t=0.360546s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.360576s, 431624 KB] g=55, 1346 evaluated, 415 expanded, 42 reopened
[t=0.363488s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.363524s, 431624 KB] g=57, 1362 evaluated, 418 expanded, 42 reopened
[t=0.363917s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.363945s, 431624 KB] g=58, 1364 evaluated, 419 expanded, 42 reopened
[t=0.365062s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.365104s, 431624 KB] g=59, 1370 evaluated, 421 expanded, 42 reopened
[t=0.366943s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.366976s, 431624 KB] g=62, 1380 evaluated, 425 expanded, 42 reopened
[t=0.367734s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.367764s, 431624 KB] g=64, 1384 evaluated, 428 expanded, 42 reopened
[t=0.391393s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.39143s, 431624 KB] g=64, 1516 evaluated, 492 expanded, 53 reopened
[t=0.391458s, 431624 KB] Solution found!
[t=0.391485s, 431624 KB] Actual search time: 0.293304s
unstack j i (1)
put-down j (1)
unstack i k (1)
put-down i (1)
unstack k e (1)
stack k i (1)
unstack e d (1)
stack e k (1)
unstack d b (1)
put-down d (1)
unstack b g (1)
stack b d (1)
unstack h f (1)
stack h e (1)
unstack g a (1)
stack g h (1)
pick-up j (1)
stack j a (1)
unstack f l (1)
put-down f (1)
unstack j a (1)
put-down j (1)
unstack l c (1)
put-down l (1)
pick-up j (1)
stack j l (1)
pick-up c (1)
stack c b (1)
pick-up a (1)
stack a f (1)
unstack g h (1)
put-down g (1)
unstack h e (1)
stack h g (1)
unstack e k (1)
stack e j (1)
unstack a f (1)
stack a k (1)
pick-up f (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
put-down b (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.391509s, 431624 KB] Plan length: 64 step(s).
[t=0.391509s, 431624 KB] Plan cost: 64
[t=0.391509s, 431624 KB] Expanded 493 state(s).
[t=0.391509s, 431624 KB] Reopened 53 state(s).
[t=0.391509s, 431624 KB] Evaluated 1516 state(s).
[t=0.391509s, 431624 KB] Evaluations: 1516
[t=0.391509s, 431624 KB] Generated 2316 state(s).
[t=0.391509s, 431624 KB] Dead ends: 0 state(s).
[t=0.391509s, 431624 KB] Expanded until last jump: 3 state(s).
[t=0.391509s, 431624 KB] Reopened until last jump: 0 state(s).
[t=0.391509s, 431624 KB] Evaluated until last jump: 7 state(s).
[t=0.391509s, 431624 KB] Generated until last jump: 8 state(s).
[t=0.391509s, 431624 KB] Number of registered states: 1516
[t=0.391509s, 431624 KB] Int hash set load factor: 1516/2048 = 0.740234
[t=0.391509s, 431624 KB] Int hash set resizes: 11
[t=0.391509s, 431624 KB] Search time: 0.365215s
[t=0.391509s, 431624 KB] Total time: 0.391509s
Solution found.
Peak memory: 431624 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p10.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.69e-05s, 424928 KB] reading input...
[t=0.00207678s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258501s, 427532 KB] Building successor generator...done!
[t=0.0261306s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261533s, 427532 KB] time for successor generation creation: 0.000169711s
[t=0.026181s, 427532 KB] Variables: 25
[t=0.0262033s, 427532 KB] FactPairs: 182
[t=0.0262248s, 427532 KB] Bytes per state: 8
[t=0.0264204s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988957s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0989463s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989715s, 430124 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0989978s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.099021s, 430124 KB] pruning method: none
[t=0.110897s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.110947s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.119641s, 431096 KB] f = 142, 15 evaluated, 4 expanded
[t=0.120821s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.120851s, 431096 KB] g=4, 21 evaluated, 6 expanded
[t=0.122565s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.122596s, 431096 KB] g=6, 30 evaluated, 8 expanded
[t=0.124524s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.124555s, 431096 KB] g=9, 40 evaluated, 11 expanded
[t=0.125142s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.12517s, 431096 KB] g=9, 43 evaluated, 11 expanded
[t=0.128959s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.128994s, 431096 KB] g=11, 63 evaluated, 15 expanded
[t=0.130338s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.130368s, 431096 KB] g=12, 70 evaluated, 16 expanded
[t=0.130771s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.130799s, 431096 KB] g=12, 72 evaluated, 16 expanded
[t=0.131583s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.131612s, 431096 KB] g=13, 76 evaluated, 17 expanded
[t=0.13223s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.132262s, 431096 KB] g=14, 79 evaluated, 18 expanded
[t=0.136974s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.137008s, 431096 KB] g=16, 104 evaluated, 22 expanded
[t=0.142311s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.142343s, 431096 KB] g=17, 132 evaluated, 29 expanded
[t=0.143691s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.143725s, 431096 KB] g=19, 139 evaluated, 31 expanded
[t=0.144509s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.144542s, 431096 KB] g=20, 143 evaluated, 32 expanded
[t=0.145507s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.145536s, 431096 KB] g=21, 148 evaluated, 33 expanded
[t=0.147437s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.147469s, 431228 KB] g=23, 158 evaluated, 36 expanded
[t=0.147888s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.147918s, 431228 KB] g=24, 160 evaluated, 37 expanded
[t=0.149077s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.149105s, 431228 KB] g=26, 166 evaluated, 39 expanded
[t=0.152513s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.152547s, 431228 KB] g=28, 184 evaluated, 44 expanded
[t=0.155951s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.155985s, 431228 KB] g=31, 202 evaluated, 48 expanded
[t=0.156203s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.15623s, 431228 KB] g=31, 203 evaluated, 48 expanded
[t=0.159066s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.159098s, 431228 KB] g=34, 218 evaluated, 51 expanded
[t=0.159509s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.159537s, 431228 KB] g=35, 220 evaluated, 52 expanded
[t=0.160142s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.160173s, 431228 KB] g=36, 223 evaluated, 53 expanded
[t=0.160575s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.160604s, 431228 KB] g=36, 225 evaluated, 53 expanded
[t=0.161385s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.161416s, 431228 KB] g=37, 229 evaluated, 54 expanded
[t=0.162021s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.16205s, 431228 KB] g=38, 232 evaluated, 55 expanded
[t=0.163023s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163052s, 431228 KB] g=40, 237 evaluated, 57 expanded
[t=0.166098s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.166131s, 431228 KB] g=43, 253 evaluated, 62 expanded
[t=0.167308s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.167339s, 431228 KB] g=44, 259 evaluated, 64 expanded
[t=0.17041s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.170444s, 431228 KB] g=44, 275 evaluated, 73 expanded, 2 reopened
[t=0.171431s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.171463s, 431228 KB] g=46, 280 evaluated, 75 expanded, 2 reopened
[t=0.172936s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.172967s, 431228 KB] g=48, 287 evaluated, 78 expanded, 2 reopened
[t=0.193881s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.193915s, 431228 KB] g=56, 398 evaluated, 125 expanded, 2 reopened
[t=0.193943s, 431228 KB] Solution found!
[t=0.193968s, 431228 KB] Actual search time: 0.0949438s
unstack g b (1)
put-down g (1)
pick-up j (1)
stack j b (1)
unstack c e (1)
put-down c (1)
unstack e a (1)
put-down e (1)
unstack j b (1)
stack j e (1)
unstack a h (1)
stack a j (1)
pick-up h (1)
stack h g (1)
unstack b k (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack a j (1)
stack a h (1)
unstack k i (1)
stack k j (1)
unstack i f (1)
stack i c (1)
unstack f d (1)
stack f a (1)
unstack i c (1)
put-down i (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e k (1)
pick-up d (1)
stack d i (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack d i (1)
stack d j (1)
pick-up i (1)
stack i c (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.193993s, 431228 KB] Plan length: 56 step(s).
[t=0.193993s, 431228 KB] Plan cost: 56
[t=0.193993s, 431228 KB] Expanded 126 state(s).
[t=0.193993s, 431228 KB] Reopened 2 state(s).
[t=0.193993s, 431228 KB] Evaluated 398 state(s).
[t=0.193993s, 431228 KB] Evaluations: 398
[t=0.193993s, 431228 KB] Generated 535 state(s).
[t=0.193993s, 431228 KB] Dead ends: 0 state(s).
[t=0.193993s, 431228 KB] Expanded until last jump: 4 state(s).
[t=0.193993s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.193993s, 431228 KB] Evaluated until last jump: 15 state(s).
[t=0.193993s, 431228 KB] Generated until last jump: 17 state(s).
[t=0.193993s, 431228 KB] Number of registered states: 398
[t=0.193993s, 431228 KB] Int hash set load factor: 398/512 = 0.777344
[t=0.193993s, 431228 KB] Int hash set resizes: 9
[t=0.193993s, 431228 KB] Search time: 0.167573s
[t=0.193993s, 431228 KB] Total time: 0.193993s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p11.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.050s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7037e-05s, 424928 KB] reading input...
[t=0.00217828s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259052s, 427532 KB] Building successor generator...done!
[t=0.0261875s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262112s, 427532 KB] time for successor generation creation: 0.0001699s
[t=0.0262395s, 427532 KB] Variables: 25
[t=0.0262623s, 427532 KB] FactPairs: 182
[t=0.0262843s, 427532 KB] Bytes per state: 8
[t=0.0264822s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991021s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0991544s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991902s, 430124 KB] f = 116, 1 evaluated, 0 expanded
[t=0.0992186s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0992423s, 430124 KB] pruning method: none
[t=0.118102s, 431096 KB] f = 133, 6 evaluated, 1 expanded
[t=0.1187s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.118731s, 431096 KB] g=2, 9 evaluated, 2 expanded
[t=0.120022s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.120053s, 431096 KB] g=4, 16 evaluated, 4 expanded
[t=0.123683s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.123716s, 431096 KB] g=5, 36 evaluated, 8 expanded
[t=0.124815s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.124845s, 431096 KB] g=6, 42 evaluated, 9 expanded
[t=0.125592s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.125622s, 431096 KB] g=7, 46 evaluated, 10 expanded
[t=0.129083s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.129118s, 431096 KB] g=10, 65 evaluated, 15 expanded
[t=0.130242s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.130275s, 431096 KB] g=11, 71 evaluated, 16 expanded
[t=0.131381s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.131414s, 431096 KB] g=12, 77 evaluated, 17 expanded
[t=0.132159s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.132189s, 431096 KB] g=13, 81 evaluated, 18 expanded
[t=0.136718s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.136751s, 431096 KB] g=17, 106 evaluated, 24 expanded
[t=0.137681s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.137713s, 431096 KB] g=18, 111 evaluated, 25 expanded
[t=0.139715s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.139746s, 431096 KB] g=21, 122 evaluated, 28 expanded
[t=0.142136s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.142172s, 431096 KB] g=22, 135 evaluated, 32 expanded
[t=0.143822s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.143852s, 431096 KB] g=24, 144 evaluated, 35 expanded
[t=0.144061s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.144097s, 431096 KB] g=24, 145 evaluated, 35 expanded
[t=0.145024s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.145059s, 431228 KB] g=25, 150 evaluated, 36 expanded
[t=0.147077s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.14711s, 431228 KB] g=28, 161 evaluated, 39 expanded
[t=0.151484s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.15152s, 431228 KB] g=30, 185 evaluated, 50 expanded
[t=0.152092s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.152122s, 431228 KB] g=31, 188 evaluated, 51 expanded
[t=0.152515s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.152544s, 431228 KB] g=32, 190 evaluated, 52 expanded
[t=0.153844s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.153876s, 431228 KB] g=34, 197 evaluated, 54 expanded
[t=0.155353s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.155385s, 431228 KB] g=37, 205 evaluated, 57 expanded
[t=0.158334s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.158367s, 431228 KB] g=39, 221 evaluated, 62 expanded
[t=0.159299s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.159328s, 431228 KB] g=41, 226 evaluated, 64 expanded
[t=0.160807s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.16084s, 431228 KB] g=44, 234 evaluated, 69 expanded
[t=0.161421s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.161451s, 431228 KB] g=46, 238 evaluated, 72 expanded
[t=0.161478s, 431228 KB] Solution found!
[t=0.161504s, 431228 KB] Actual search time: 0.0622586s
unstack l e (1)
stack l d (1)
unstack e h (1)
put-down e (1)
pick-up k (1)
stack k l (1)
unstack h f (1)
stack h g (1)
unstack f j (1)
stack f e (1)
unstack j a (1)
put-down j (1)
pick-up b (1)
stack b k (1)
pick-up a (1)
stack a h (1)
unstack b k (1)
stack b j (1)
unstack f e (1)
stack f a (1)
unstack b j (1)
put-down b (1)
unstack k l (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack l b (1)
stack l c (1)
pick-up b (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.16153s, 431228 KB] Plan length: 46 step(s).
[t=0.16153s, 431228 KB] Plan cost: 46
[t=0.16153s, 431228 KB] Expanded 73 state(s).
[t=0.16153s, 431228 KB] Reopened 0 state(s).
[t=0.16153s, 431228 KB] Evaluated 238 state(s).
[t=0.16153s, 431228 KB] Evaluations: 238
[t=0.16153s, 431228 KB] Generated 313 state(s).
[t=0.16153s, 431228 KB] Dead ends: 0 state(s).
[t=0.16153s, 431228 KB] Expanded until last jump: 1 state(s).
[t=0.16153s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.16153s, 431228 KB] Evaluated until last jump: 6 state(s).
[t=0.16153s, 431228 KB] Generated until last jump: 5 state(s).
[t=0.16153s, 431228 KB] Number of registered states: 238
[t=0.16153s, 431228 KB] Int hash set load factor: 238/256 = 0.929688
[t=0.16153s, 431228 KB] Int hash set resizes: 8
[t=0.16153s, 431228 KB] Search time: 0.135048s
[t=0.16153s, 431228 KB] Total time: 0.16153s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p12.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6283e-05s, 424928 KB] reading input...
[t=0.00215272s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259367s, 427532 KB] Building successor generator...done!
[t=0.0262145s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262476s, 427532 KB] time for successor generation creation: 0.000167507s
[t=0.026277s, 427532 KB] Variables: 25
[t=0.0263002s, 427532 KB] FactPairs: 182
[t=0.0263224s, 427532 KB] Bytes per state: 8
[t=0.0265176s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982396s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0982905s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983167s, 430124 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0983444s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0983684s, 430124 KB] pruning method: none
[t=0.117143s, 431096 KB] f = 148, 6 evaluated, 1 expanded
[t=0.117929s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.11796s, 431096 KB] g=2, 10 evaluated, 2 expanded
[t=0.118537s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.118567s, 431096 KB] g=3, 13 evaluated, 3 expanded
[t=0.118969s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.119s, 431096 KB] g=3, 15 evaluated, 3 expanded
[t=0.119586s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.119616s, 431096 KB] g=4, 18 evaluated, 4 expanded
[t=0.120013s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.120043s, 431096 KB] g=5, 20 evaluated, 5 expanded
[t=0.121164s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.121194s, 431096 KB] g=6, 26 evaluated, 6 expanded
[t=0.121768s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.121798s, 431096 KB] g=7, 29 evaluated, 7 expanded
[t=0.127292s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.127324s, 431096 KB] g=8, 59 evaluated, 18 expanded
[t=0.12845s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.12848s, 431096 KB] g=9, 65 evaluated, 19 expanded
[t=0.129423s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.129452s, 431096 KB] g=9, 70 evaluated, 21 expanded
[t=0.129663s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.129691s, 431096 KB] g=9, 71 evaluated, 21 expanded
[t=0.135241s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.135278s, 431096 KB] g=13, 101 evaluated, 34 expanded
[t=0.141534s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.141576s, 431096 KB] g=18, 135 evaluated, 49 expanded
[t=0.153149s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.153187s, 431228 KB] g=28, 198 evaluated, 65 expanded
[t=0.175089s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.175125s, 431228 KB] g=34, 318 evaluated, 90 expanded
[t=0.227471s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.227512s, 431360 KB] g=37, 605 evaluated, 156 expanded
[t=0.228278s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.228308s, 431360 KB] g=38, 609 evaluated, 157 expanded
[t=0.228888s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.228921s, 431360 KB] g=39, 612 evaluated, 158 expanded
[t=0.229133s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.229162s, 431360 KB] g=39, 613 evaluated, 158 expanded
[t=0.23175s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.231783s, 431360 KB] g=41, 627 evaluated, 161 expanded
[t=0.232542s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.232574s, 431360 KB] g=42, 631 evaluated, 162 expanded
[t=0.234796s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.234827s, 431360 KB] g=45, 643 evaluated, 166 expanded
[t=0.235048s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.235082s, 431360 KB] g=45, 644 evaluated, 166 expanded
[t=0.236201s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.236232s, 431360 KB] g=47, 650 evaluated, 168 expanded
[t=0.238819s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.238855s, 431492 KB] g=49, 664 evaluated, 173 expanded
[t=0.240542s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.240575s, 431492 KB] g=52, 673 evaluated, 177 expanded
[t=0.244074s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.24411s, 431492 KB] g=52, 692 evaluated, 186 expanded
[t=0.244511s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.24454s, 431492 KB] g=53, 694 evaluated, 187 expanded
[t=0.24457s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.244601s, 431492 KB] g=54, 695 evaluated, 188 expanded
[t=0.244628s, 431492 KB] Solution found!
[t=0.244654s, 431492 KB] Actual search time: 0.146282s
unstack k g (1)
stack k l (1)
pick-up f (1)
stack f e (1)
unstack g j (1)
stack g k (1)
unstack a h (1)
stack a f (1)
pick-up h (1)
stack h a (1)
unstack g k (1)
put-down g (1)
unstack k l (1)
stack k j (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a k (1)
unstack f e (1)
stack f a (1)
unstack e b (1)
stack e l (1)
unstack b c (1)
put-down b (1)
unstack e l (1)
stack e b (1)
unstack c d (1)
put-down c (1)
pick-up l (1)
stack l d (1)
unstack f a (1)
stack f l (1)
unstack a k (1)
stack a h (1)
unstack f l (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l c (1)
unstack d i (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.244679s, 431492 KB] Plan length: 54 step(s).
[t=0.244679s, 431492 KB] Plan cost: 54
[t=0.244679s, 431492 KB] Expanded 189 state(s).
[t=0.244679s, 431492 KB] Reopened 0 state(s).
[t=0.244679s, 431492 KB] Evaluated 695 state(s).
[t=0.244679s, 431492 KB] Evaluations: 695
[t=0.244679s, 431492 KB] Generated 899 state(s).
[t=0.244679s, 431492 KB] Dead ends: 0 state(s).
[t=0.244679s, 431492 KB] Expanded until last jump: 1 state(s).
[t=0.244679s, 431492 KB] Reopened until last jump: 0 state(s).
[t=0.244679s, 431492 KB] Evaluated until last jump: 6 state(s).
[t=0.244679s, 431492 KB] Generated until last jump: 5 state(s).
[t=0.244679s, 431492 KB] Number of registered states: 695
[t=0.244679s, 431492 KB] Int hash set load factor: 695/1024 = 0.678711
[t=0.244679s, 431492 KB] Int hash set resizes: 10
[t=0.244679s, 431492 KB] Search time: 0.218162s
[t=0.244679s, 431492 KB] Total time: 0.244679s
Solution found.
Peak memory: 431492 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p13.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6006e-05s, 424928 KB] reading input...
[t=0.00224226s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260737s, 427532 KB] Building successor generator...done!
[t=0.0263531s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026377s, 427532 KB] time for successor generation creation: 0.000167848s
[t=0.0264059s, 427532 KB] Variables: 25
[t=0.0264292s, 427532 KB] FactPairs: 182
[t=0.0264516s, 427532 KB] Bytes per state: 8
[t=0.0266492s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994889s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0995412s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995673s, 430124 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0995957s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0996198s, 430124 KB] pruning method: none
[t=0.118067s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.118117s, 431096 KB] g=1, 3 evaluated, 1 expanded
[t=0.118897s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.118928s, 431096 KB] g=2, 7 evaluated, 2 expanded
[t=0.119332s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.119363s, 431096 KB] g=3, 9 evaluated, 3 expanded
[t=0.121264s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.121297s, 431096 KB] g=7, 19 evaluated, 8 expanded
[t=0.122431s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.122461s, 431096 KB] g=9, 25 evaluated, 10 expanded
[t=0.12527s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.125303s, 431096 KB] g=13, 40 evaluated, 15 expanded
[t=0.126433s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.126473s, 431096 KB] g=15, 46 evaluated, 17 expanded
[t=0.127051s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.127081s, 431096 KB] g=15, 49 evaluated, 17 expanded
[t=0.130045s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.130085s, 431096 KB] g=18, 65 evaluated, 21 expanded
[t=0.133965s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.134002s, 431096 KB] g=21, 86 evaluated, 26 expanded
[t=0.136238s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.136273s, 431096 KB] g=24, 98 evaluated, 30 expanded
[t=0.13795s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.137983s, 431096 KB] g=26, 107 evaluated, 32 expanded
[t=0.140769s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.140806s, 431096 KB] g=29, 122 evaluated, 35 expanded
[t=0.143054s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.143086s, 431096 KB] g=31, 134 evaluated, 38 expanded
[t=0.147727s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.14776s, 431096 KB] g=33, 159 evaluated, 45 expanded
[t=0.150579s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.150614s, 431228 KB] g=35, 174 evaluated, 50 expanded
[t=0.152686s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.152718s, 431228 KB] g=36, 185 evaluated, 53 expanded
[t=0.153302s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.153331s, 431228 KB] g=37, 188 evaluated, 54 expanded
[t=0.154648s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.154681s, 431228 KB] g=39, 195 evaluated, 56 expanded
[t=0.155081s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.15511s, 431228 KB] g=39, 197 evaluated, 56 expanded
[t=0.157004s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.157037s, 431228 KB] g=40, 207 evaluated, 59 expanded
[t=0.157252s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.157283s, 431228 KB] g=40, 208 evaluated, 59 expanded
[t=0.167475s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.167516s, 431228 KB] g=44, 263 evaluated, 78 expanded
[t=0.169772s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.169805s, 431228 KB] g=42, 275 evaluated, 83 expanded
[t=0.174822s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.174859s, 431228 KB] g=45, 302 evaluated, 93 expanded
[t=0.176562s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.176594s, 431228 KB] g=46, 311 evaluated, 96 expanded
[t=0.176811s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.176841s, 431228 KB] g=47, 312 evaluated, 97 expanded
[t=0.177612s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.177642s, 431228 KB] g=49, 316 evaluated, 99 expanded
[t=0.17804s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.178072s, 431228 KB] g=50, 318 evaluated, 100 expanded
[t=0.180887s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.180921s, 431228 KB] g=51, 333 evaluated, 109 expanded
[t=0.181325s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.181354s, 431228 KB] g=52, 335 evaluated, 110 expanded
[t=0.183986s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.184032s, 431228 KB] g=55, 350 evaluated, 120 expanded
[t=0.18406s, 431228 KB] Solution found!
[t=0.184087s, 431228 KB] Actual search time: 0.0844632s
stack a b (1)
unstack h l (1)
stack h a (1)
pick-up l (1)
stack l h (1)
unstack g e (1)
put-down g (1)
unstack l h (1)
put-down l (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack e j (1)
put-down e (1)
unstack j f (1)
stack j e (1)
unstack f k (1)
stack f b (1)
pick-up k (1)
stack k l (1)
unstack f b (1)
stack f k (1)
unstack b d (1)
put-down b (1)
unstack j e (1)
put-down j (1)
pick-up b (1)
stack b j (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b j (1)
stack b l (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.184112s, 431228 KB] Plan length: 55 step(s).
[t=0.184112s, 431228 KB] Plan cost: 55
[t=0.184112s, 431228 KB] Expanded 121 state(s).
[t=0.184112s, 431228 KB] Reopened 0 state(s).
[t=0.184112s, 431228 KB] Evaluated 350 state(s).
[t=0.184112s, 431228 KB] Evaluations: 350
[t=0.184112s, 431228 KB] Generated 474 state(s).
[t=0.184112s, 431228 KB] Dead ends: 0 state(s).
[t=0.184112s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.184112s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.184112s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.184112s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.184112s, 431228 KB] Number of registered states: 350
[t=0.184112s, 431228 KB] Int hash set load factor: 350/512 = 0.683594
[t=0.184112s, 431228 KB] Int hash set resizes: 9
[t=0.184112s, 431228 KB] Search time: 0.157463s
[t=0.184112s, 431228 KB] Total time: 0.184112s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p14.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6334e-05s, 424928 KB] reading input...
[t=0.00214196s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259549s, 427532 KB] Building successor generator...done!
[t=0.0262334s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262574s, 427532 KB] time for successor generation creation: 0.000167016s
[t=0.026286s, 427532 KB] Variables: 25
[t=0.0263091s, 427532 KB] FactPairs: 182
[t=0.026331s, 427532 KB] Bytes per state: 8
[t=0.0265252s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987839s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0988362s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.098862s, 430124 KB] f = 152, 1 evaluated, 0 expanded
[t=0.0989009s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0989266s, 430124 KB] pruning method: none
[t=0.110755s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.110808s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.117577s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.117621s, 431096 KB] g=1, 5 evaluated, 1 expanded
[t=0.118377s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.118408s, 431096 KB] g=3, 9 evaluated, 3 expanded
[t=0.126357s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.126391s, 431096 KB] g=10, 53 evaluated, 20 expanded, 2 reopened
[t=0.127367s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.127399s, 431096 KB] g=8, 58 evaluated, 28 expanded, 8 reopened
[t=0.130477s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.130508s, 431096 KB] g=11, 75 evaluated, 32 expanded, 8 reopened
[t=0.131638s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.131673s, 431096 KB] g=13, 81 evaluated, 34 expanded, 8 reopened
[t=0.132414s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.132443s, 431096 KB] g=13, 85 evaluated, 34 expanded, 8 reopened
[t=0.133733s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.133763s, 431096 KB] g=14, 92 evaluated, 36 expanded, 8 reopened
[t=0.136301s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.136333s, 431096 KB] g=17, 106 evaluated, 39 expanded, 8 reopened
[t=0.137265s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.137297s, 431096 KB] g=18, 111 evaluated, 40 expanded, 8 reopened
[t=0.137682s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.137712s, 431096 KB] g=18, 113 evaluated, 40 expanded, 8 reopened
[t=0.139009s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.139042s, 431096 KB] g=20, 120 evaluated, 42 expanded, 8 reopened
[t=0.140325s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.140364s, 431096 KB] g=21, 127 evaluated, 43 expanded, 8 reopened
[t=0.140769s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.140801s, 431096 KB] g=22, 129 evaluated, 44 expanded, 8 reopened
[t=0.141904s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.141937s, 431096 KB] g=23, 135 evaluated, 45 expanded, 8 reopened
[t=0.146274s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.146311s, 431228 KB] g=27, 159 evaluated, 52 expanded, 8 reopened
[t=0.147422s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.147454s, 431228 KB] g=28, 165 evaluated, 53 expanded, 8 reopened
[t=0.147843s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.147872s, 431228 KB] g=29, 167 evaluated, 54 expanded, 8 reopened
[t=0.150051s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.150081s, 431228 KB] g=33, 179 evaluated, 58 expanded, 8 reopened
[t=0.150832s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.150873s, 431228 KB] g=34, 183 evaluated, 59 expanded, 8 reopened
[t=0.151268s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.1513s, 431228 KB] g=35, 185 evaluated, 60 expanded, 8 reopened
[t=0.154021s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.154054s, 431228 KB] g=38, 200 evaluated, 66 expanded, 8 reopened
[t=0.165655s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.16569s, 431228 KB] g=42, 264 evaluated, 90 expanded, 9 reopened
[t=0.178497s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.178535s, 431228 KB] g=41, 335 evaluated, 121 expanded, 11 reopened
[t=0.179472s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.179504s, 431228 KB] g=42, 340 evaluated, 122 expanded, 11 reopened
[t=0.182942s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.182978s, 431228 KB] g=44, 359 evaluated, 130 expanded, 11 reopened
[t=0.183193s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.183222s, 431228 KB] g=45, 360 evaluated, 131 expanded, 11 reopened
[t=0.183796s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.18383s, 431228 KB] g=46, 363 evaluated, 133 expanded, 11 reopened
[t=0.186204s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.186238s, 431228 KB] g=49, 377 evaluated, 141 expanded, 11 reopened
[t=0.186266s, 431228 KB] Solution found!
[t=0.186292s, 431228 KB] Actual search time: 0.0873617s
stack f c (1)
unstack g i (1)
stack g a (1)
unstack f c (1)
stack f i (1)
unstack c b (1)
put-down c (1)
unstack g a (1)
put-down g (1)
unstack a h (1)
put-down a (1)
unstack h l (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack i j (1)
stack i c (1)
unstack b e (1)
stack b l (1)
pick-up e (1)
stack e i (1)
unstack j d (1)
stack j e (1)
unstack d k (1)
stack d b (1)
pick-up k (1)
stack k f (1)
unstack j e (1)
put-down j (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.186318s, 431228 KB] Plan length: 49 step(s).
[t=0.186318s, 431228 KB] Plan cost: 49
[t=0.186318s, 431228 KB] Expanded 142 state(s).
[t=0.186318s, 431228 KB] Reopened 11 state(s).
[t=0.186318s, 431228 KB] Evaluated 377 state(s).
[t=0.186318s, 431228 KB] Evaluations: 377
[t=0.186318s, 431228 KB] Generated 567 state(s).
[t=0.186318s, 431228 KB] Dead ends: 0 state(s).
[t=0.186318s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.186318s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.186318s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.186318s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.186318s, 431228 KB] Number of registered states: 377
[t=0.186318s, 431228 KB] Int hash set load factor: 377/512 = 0.736328
[t=0.186318s, 431228 KB] Int hash set resizes: 9
[t=0.186318s, 431228 KB] Search time: 0.159793s
[t=0.186318s, 431228 KB] Total time: 0.186318s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p15.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9648e-05s, 424928 KB] reading input...
[t=0.0021087s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259285s, 427532 KB] Building successor generator...done!
[t=0.0262058s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026229s, 427532 KB] time for successor generation creation: 0.000167737s
[t=0.0262576s, 427532 KB] Variables: 25
[t=0.0262798s, 427532 KB] FactPairs: 182
[t=0.0263016s, 427532 KB] Bytes per state: 8
[t=0.0264937s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987525s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0988041s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988307s, 430124 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0988576s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0988817s, 430124 KB] pruning method: none
[t=0.110755s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.110806s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.117567s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.11761s, 431096 KB] g=1, 5 evaluated, 1 expanded
[t=0.120648s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.12068s, 431096 KB] g=2, 21 evaluated, 4 expanded
[t=0.127279s, 431096 KB] f = 147, 56 evaluated, 11 expanded
[t=0.13013s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.130168s, 431096 KB] g=6, 71 evaluated, 14 expanded
[t=0.130765s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.130794s, 431096 KB] g=7, 74 evaluated, 15 expanded
[t=0.131947s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.131988s, 431096 KB] g=8, 80 evaluated, 16 expanded
[t=0.136707s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.13674s, 431096 KB] g=8, 105 evaluated, 20 expanded
[t=0.139757s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.139788s, 431096 KB] g=9, 121 evaluated, 24 expanded
[t=0.15148s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.151518s, 431096 KB] g=16, 183 evaluated, 38 expanded
[t=0.152496s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.152533s, 431228 KB] g=18, 188 evaluated, 40 expanded
[t=0.160475s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.160511s, 431228 KB] g=17, 230 evaluated, 53 expanded, 2 reopened
[t=0.166359s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.166391s, 431228 KB] g=21, 261 evaluated, 58 expanded, 2 reopened
[t=0.182193s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.18223s, 431228 KB] g=23, 345 evaluated, 73 expanded, 2 reopened
[t=0.185078s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.185111s, 431228 KB] g=24, 360 evaluated, 75 expanded, 2 reopened
[t=0.187965s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.187996s, 431228 KB] g=26, 375 evaluated, 78 expanded, 2 reopened
[t=0.189178s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.189209s, 431228 KB] g=28, 381 evaluated, 80 expanded, 2 reopened
[t=0.18999s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.19002s, 431228 KB] g=29, 385 evaluated, 81 expanded, 2 reopened
[t=0.190802s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.190832s, 431228 KB] g=30, 389 evaluated, 82 expanded, 2 reopened
[t=0.192559s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.192592s, 431228 KB] g=31, 398 evaluated, 83 expanded, 2 reopened
[t=0.217411s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.21745s, 431360 KB] g=36, 529 evaluated, 111 expanded, 2 reopened
[t=0.234114s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.23415s, 431360 KB] g=43, 617 evaluated, 134 expanded, 2 reopened
[t=0.312785s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.312834s, 431624 KB] g=47, 1034 evaluated, 251 expanded, 12 reopened
[t=0.396925s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.396967s, 431624 KB] g=44, 1480 evaluated, 381 expanded, 24 reopened
[t=0.407567s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.407603s, 431624 KB] g=44, 1536 evaluated, 400 expanded, 27 reopened
[t=0.413126s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.413162s, 431756 KB] g=50, 1565 evaluated, 408 expanded, 27 reopened
[t=0.417168s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.417205s, 431756 KB] g=52, 1586 evaluated, 414 expanded, 27 reopened
[t=0.421575s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.421609s, 431756 KB] g=56, 1609 evaluated, 421 expanded, 27 reopened
[t=0.421826s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.421857s, 431756 KB] g=56, 1610 evaluated, 421 expanded, 27 reopened
[t=0.422836s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.422866s, 431756 KB] g=57, 1615 evaluated, 423 expanded, 27 reopened
[t=0.428376s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.42841s, 431756 KB] g=58, 1644 evaluated, 432 expanded, 27 reopened
[t=0.474167s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.474208s, 431888 KB] g=64, 1886 evaluated, 512 expanded, 32 reopened
[t=0.475183s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.475213s, 431888 KB] g=65, 1891 evaluated, 513 expanded, 32 reopened
[t=0.480537s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.480571s, 431888 KB] g=67, 1919 evaluated, 519 expanded, 32 reopened
[t=0.481166s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.481195s, 431888 KB] g=68, 1922 evaluated, 520 expanded, 32 reopened
[t=0.481606s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.481638s, 431888 KB] g=69, 1924 evaluated, 521 expanded, 32 reopened
[t=0.481857s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.481884s, 431888 KB] g=69, 1925 evaluated, 521 expanded, 32 reopened
[t=0.501129s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.501175s, 431888 KB] g=73, 2026 evaluated, 558 expanded, 32 reopened
[t=0.503286s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.50332s, 431888 KB] g=76, 2037 evaluated, 562 expanded, 32 reopened
[t=0.50431s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.504343s, 431888 KB] g=78, 2042 evaluated, 564 expanded, 32 reopened
[t=0.50456s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.504588s, 431888 KB] g=78, 2043 evaluated, 564 expanded, 32 reopened
[t=0.505195s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.505225s, 431888 KB] g=80, 2046 evaluated, 566 expanded, 32 reopened
[t=0.505634s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.505663s, 431888 KB] g=81, 2048 evaluated, 567 expanded, 32 reopened
[t=0.505898s, 432020 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.505929s, 432020 KB] g=82, 2049 evaluated, 568 expanded, 32 reopened
[t=0.506349s, 432020 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.506378s, 432020 KB] g=84, 2052 evaluated, 570 expanded, 32 reopened
[t=0.506405s, 432020 KB] Solution found!
[t=0.506431s, 432020 KB] Actual search time: 0.407546s
unstack f b (1)
put-down f (1)
unstack i e (1)
stack i d (1)
unstack b g (1)
put-down b (1)
pick-up g (1)
stack g b (1)
pick-up h (1)
stack h g (1)
unstack e l (1)
stack e f (1)
unstack i d (1)
put-down i (1)
unstack h g (1)
stack h e (1)
unstack d c (1)
put-down d (1)
unstack l a (1)
stack l d (1)
pick-up a (1)
stack a l (1)
unstack g b (1)
stack g a (1)
pick-up b (1)
stack b j (1)
unstack c k (1)
stack c b (1)
unstack g a (1)
put-down g (1)
pick-up k (1)
stack k h (1)
unstack a l (1)
stack a i (1)
unstack k h (1)
stack k l (1)
unstack h e (1)
stack h g (1)
unstack e f (1)
stack e k (1)
unstack a i (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack e k (1)
stack e f (1)
unstack k l (1)
stack k e (1)
unstack c b (1)
stack c i (1)
unstack b j (1)
stack b l (1)
unstack k e (1)
put-down k (1)
unstack e f (1)
stack e j (1)
pick-up k (1)
stack k f (1)
unstack b l (1)
put-down b (1)
unstack c i (1)
put-down c (1)
pick-up i (1)
stack i l (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i l (1)
stack i c (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.506456s, 432020 KB] Plan length: 84 step(s).
[t=0.506456s, 432020 KB] Plan cost: 84
[t=0.506456s, 432020 KB] Expanded 571 state(s).
[t=0.506456s, 432020 KB] Reopened 32 state(s).
[t=0.506456s, 432020 KB] Evaluated 2052 state(s).
[t=0.506456s, 432020 KB] Evaluations: 2052
[t=0.506456s, 432020 KB] Generated 2832 state(s).
[t=0.506456s, 432020 KB] Dead ends: 0 state(s).
[t=0.506456s, 432020 KB] Expanded until last jump: 11 state(s).
[t=0.506456s, 432020 KB] Reopened until last jump: 0 state(s).
[t=0.506456s, 432020 KB] Evaluated until last jump: 56 state(s).
[t=0.506456s, 432020 KB] Generated until last jump: 65 state(s).
[t=0.506456s, 432020 KB] Number of registered states: 2052
[t=0.506456s, 432020 KB] Int hash set load factor: 2052/4096 = 0.500977
[t=0.506456s, 432020 KB] Int hash set resizes: 12
[t=0.506456s, 432020 KB] Search time: 0.479963s
[t=0.506456s, 432020 KB] Total time: 0.506456s
Solution found.
Peak memory: 432020 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p16.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6865e-05s, 424928 KB] reading input...
[t=0.00215705s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257464s, 427532 KB] Building successor generator...done!
[t=0.0260261s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260498s, 427532 KB] time for successor generation creation: 0.000169209s
[t=0.0260787s, 427532 KB] Variables: 25
[t=0.0261016s, 427532 KB] FactPairs: 182
[t=0.026133s, 427532 KB] Bytes per state: 8
[t=0.0263275s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.10951s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.109565s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.109591s, 430124 KB] f = 141, 1 evaluated, 0 expanded
[t=0.109619s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.109643s, 430124 KB] pruning method: none
[t=0.121544s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.121597s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.128707s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.128749s, 431096 KB] g=2, 6 evaluated, 2 expanded
[t=0.130807s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.130841s, 431096 KB] g=4, 17 evaluated, 4 expanded
[t=0.133427s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.133457s, 431096 KB] g=7, 31 evaluated, 7 expanded
[t=0.134222s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.134251s, 431096 KB] g=8, 35 evaluated, 8 expanded
[t=0.134465s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.134493s, 431096 KB] g=8, 36 evaluated, 8 expanded
[t=0.137265s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.137301s, 431096 KB] g=10, 51 evaluated, 11 expanded
[t=0.142672s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.142705s, 431096 KB] g=11, 80 evaluated, 17 expanded
[t=0.14841s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.148445s, 431096 KB] g=12, 111 evaluated, 22 expanded
[t=0.15067s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.150705s, 431096 KB] g=14, 123 evaluated, 24 expanded
[t=0.157368s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.157403s, 431228 KB] g=13, 159 evaluated, 30 expanded
[t=0.171934s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.171973s, 431228 KB] g=17, 238 evaluated, 49 expanded
[t=0.20296s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.202997s, 431228 KB] g=27, 406 evaluated, 110 expanded, 11 reopened
[t=0.204137s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.204179s, 431360 KB] g=29, 412 evaluated, 112 expanded, 11 reopened
[t=0.234476s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.234515s, 431360 KB] g=31, 576 evaluated, 157 expanded, 12 reopened
[t=0.259884s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.259921s, 431492 KB] g=27, 713 evaluated, 200 expanded, 13 reopened
[t=0.261603s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.261636s, 431492 KB] g=28, 722 evaluated, 202 expanded, 13 reopened
[t=0.262786s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.262821s, 431492 KB] g=28, 728 evaluated, 204 expanded, 13 reopened
[t=0.263403s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.263433s, 431492 KB] g=29, 731 evaluated, 205 expanded, 13 reopened
[t=0.264013s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.264043s, 431492 KB] g=30, 734 evaluated, 206 expanded, 13 reopened
[t=0.280103s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.28014s, 431492 KB] g=36, 821 evaluated, 234 expanded, 17 reopened
[t=0.281097s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.281128s, 431492 KB] g=37, 826 evaluated, 235 expanded, 17 reopened
[t=0.281713s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.281745s, 431492 KB] g=38, 829 evaluated, 236 expanded, 17 reopened
[t=0.286386s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.286422s, 431492 KB] g=40, 854 evaluated, 242 expanded, 17 reopened
[t=0.287208s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.287238s, 431492 KB] g=41, 858 evaluated, 243 expanded, 17 reopened
[t=0.288182s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.288215s, 431492 KB] g=42, 863 evaluated, 244 expanded, 17 reopened
[t=0.288796s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.288828s, 431492 KB] g=43, 866 evaluated, 245 expanded, 17 reopened
[t=0.290138s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.290167s, 431492 KB] g=45, 873 evaluated, 248 expanded, 17 reopened
[t=0.291127s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.291166s, 431492 KB] g=47, 878 evaluated, 250 expanded, 17 reopened
[t=0.29157s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.291601s, 431492 KB] g=47, 880 evaluated, 250 expanded, 17 reopened
[t=0.291818s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.291847s, 431492 KB] g=48, 881 evaluated, 251 expanded, 17 reopened
[t=0.292059s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.292087s, 431492 KB] g=48, 882 evaluated, 251 expanded, 17 reopened
[t=0.292847s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.292876s, 431492 KB] g=49, 886 evaluated, 252 expanded, 17 reopened
[t=0.293827s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.293857s, 431492 KB] g=51, 891 evaluated, 254 expanded, 17 reopened
[t=0.294258s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.294287s, 431492 KB] g=52, 893 evaluated, 255 expanded, 17 reopened
[t=0.295057s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.295092s, 431492 KB] g=53, 897 evaluated, 256 expanded, 17 reopened
[t=0.296405s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.296438s, 431492 KB] g=53, 904 evaluated, 259 expanded, 17 reopened
[t=0.296652s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.296681s, 431492 KB] g=53, 905 evaluated, 259 expanded, 17 reopened
[t=0.297264s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.297298s, 431492 KB] g=55, 908 evaluated, 261 expanded, 17 reopened
[t=0.298821s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.298853s, 431492 KB] g=56, 916 evaluated, 265 expanded, 17 reopened
[t=0.299261s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.299291s, 431492 KB] g=58, 919 evaluated, 267 expanded, 17 reopened
[t=0.299318s, 431492 KB] Solution found!
[t=0.299345s, 431492 KB] Actual search time: 0.189699s
unstack g b (1)
put-down g (1)
unstack b a (1)
stack b i (1)
unstack c d (1)
stack c b (1)
unstack e f (1)
put-down e (1)
unstack f h (1)
stack f e (1)
unstack h k (1)
stack h d (1)
pick-up k (1)
stack k f (1)
pick-up g (1)
stack g h (1)
pick-up a (1)
stack a k (1)
unstack g h (1)
put-down g (1)
unstack h d (1)
stack h g (1)
unstack d j (1)
put-down d (1)
unstack j l (1)
stack j c (1)
pick-up l (1)
stack l d (1)
unstack j c (1)
put-down j (1)
unstack a k (1)
stack a c (1)
unstack k f (1)
stack k l (1)
unstack a c (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.29937s, 431492 KB] Plan length: 58 step(s).
[t=0.29937s, 431492 KB] Plan cost: 58
[t=0.29937s, 431492 KB] Expanded 268 state(s).
[t=0.29937s, 431492 KB] Reopened 17 state(s).
[t=0.29937s, 431492 KB] Evaluated 919 state(s).
[t=0.29937s, 431492 KB] Evaluations: 919
[t=0.29937s, 431492 KB] Generated 1270 state(s).
[t=0.29937s, 431492 KB] Dead ends: 0 state(s).
[t=0.29937s, 431492 KB] Expanded until last jump: 0 state(s).
[t=0.29937s, 431492 KB] Reopened until last jump: 0 state(s).
[t=0.29937s, 431492 KB] Evaluated until last jump: 1 state(s).
[t=0.29937s, 431492 KB] Generated until last jump: 0 state(s).
[t=0.29937s, 431492 KB] Number of registered states: 919
[t=0.29937s, 431492 KB] Int hash set load factor: 919/1024 = 0.897461
[t=0.29937s, 431492 KB] Int hash set resizes: 10
[t=0.29937s, 431492 KB] Search time: 0.273043s
[t=0.29937s, 431492 KB] Total time: 0.29937s
Solution found.
Peak memory: 431492 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p17.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.537e-05s, 424928 KB] reading input...
[t=0.00216295s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025786s, 427532 KB] Building successor generator...done!
[t=0.0260635s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260862s, 427532 KB] time for successor generation creation: 0.000168761s
[t=0.026114s, 427532 KB] Variables: 25
[t=0.0261363s, 427532 KB] FactPairs: 182
[t=0.0261577s, 427532 KB] Bytes per state: 8
[t=0.0263518s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983138s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0983655s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983908s, 430124 KB] f = 130, 1 evaluated, 0 expanded
[t=0.0984175s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0984413s, 430124 KB] pruning method: none
[t=0.117099s, 431096 KB] f = 135, 5 evaluated, 1 expanded
[t=0.117911s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.117942s, 431096 KB] g=2, 9 evaluated, 2 expanded
[t=0.118166s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.118195s, 431096 KB] g=3, 10 evaluated, 3 expanded
[t=0.118413s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.118441s, 431096 KB] g=3, 11 evaluated, 3 expanded
[t=0.123742s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.123775s, 431096 KB] g=6, 39 evaluated, 9 expanded
[t=0.124183s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.124212s, 431096 KB] g=6, 41 evaluated, 9 expanded
[t=0.129082s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.129118s, 431096 KB] g=11, 66 evaluated, 15 expanded
[t=0.131989s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.132019s, 431096 KB] g=10, 81 evaluated, 20 expanded
[t=0.140745s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.140778s, 431096 KB] g=15, 127 evaluated, 34 expanded
[t=0.141571s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.141603s, 431096 KB] g=16, 131 evaluated, 35 expanded
[t=0.148244s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.148294s, 431228 KB] g=24, 166 evaluated, 45 expanded
[t=0.159552s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.159586s, 431228 KB] g=31, 225 evaluated, 67 expanded, 5 reopened
[t=0.169105s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.169138s, 431228 KB] g=32, 275 evaluated, 80 expanded, 5 reopened
[t=0.180893s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.180929s, 431228 KB] g=27, 337 evaluated, 103 expanded, 5 reopened
[t=0.353251s, 431624 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.353296s, 431624 KB] g=38, 1249 evaluated, 427 expanded, 54 reopened
[t=0.512505s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.512551s, 431756 KB] g=28, 2095 evaluated, 677 expanded, 63 reopened
[t=0.515395s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.515429s, 431756 KB] g=31, 2110 evaluated, 680 expanded, 63 reopened
[t=0.519422s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.519455s, 431756 KB] g=35, 2131 evaluated, 684 expanded, 63 reopened
[t=0.519674s, 431756 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.519702s, 431756 KB] g=35, 2132 evaluated, 684 expanded, 63 reopened
[t=0.543612s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.543649s, 431888 KB] g=36, 2259 evaluated, 717 expanded, 63 reopened
[t=0.558174s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.558213s, 431888 KB] g=39, 2336 evaluated, 740 expanded, 63 reopened
[t=0.561075s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.561107s, 431888 KB] g=42, 2351 evaluated, 744 expanded, 63 reopened
[t=0.565087s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.565121s, 431888 KB] g=41, 2372 evaluated, 749 expanded, 63 reopened
[t=0.566657s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.566687s, 431888 KB] g=44, 2380 evaluated, 752 expanded, 63 reopened
[t=0.566906s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.566933s, 431888 KB] g=44, 2381 evaluated, 752 expanded, 63 reopened
[t=0.574488s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.574526s, 431888 KB] g=45, 2421 evaluated, 764 expanded, 63 reopened
[t=0.574751s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.57478s, 431888 KB] g=45, 2422 evaluated, 764 expanded, 63 reopened
[t=0.579334s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.579367s, 431888 KB] g=50, 2446 evaluated, 772 expanded, 63 reopened
[t=0.579584s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.579612s, 431888 KB] g=50, 2447 evaluated, 772 expanded, 63 reopened
[t=0.580022s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.580051s, 431888 KB] g=52, 2449 evaluated, 774 expanded, 63 reopened
[t=0.580466s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.580498s, 431888 KB] g=53, 2451 evaluated, 775 expanded, 63 reopened
[t=0.582984s, 431888 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.583015s, 431888 KB] g=56, 2465 evaluated, 785 expanded, 63 reopened
[t=0.583043s, 431888 KB] Solution found!
[t=0.58307s, 431888 KB] Actual search time: 0.484626s
unstack b g (1)
put-down b (1)
unstack g k (1)
stack g h (1)
unstack k a (1)
stack k b (1)
pick-up a (1)
stack a k (1)
unstack d e (1)
put-down d (1)
pick-up e (1)
stack e i (1)
unstack g h (1)
stack g e (1)
unstack h f (1)
put-down h (1)
unstack g e (1)
put-down g (1)
pick-up h (1)
stack h a (1)
unstack f j (1)
stack f d (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k b (1)
stack k e (1)
unstack j l (1)
put-down j (1)
unstack f d (1)
stack f a (1)
pick-up j (1)
stack j b (1)
pick-up l (1)
stack l d (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.583095s, 431888 KB] Plan length: 56 step(s).
[t=0.583095s, 431888 KB] Plan cost: 56
[t=0.583095s, 431888 KB] Expanded 786 state(s).
[t=0.583095s, 431888 KB] Reopened 63 state(s).
[t=0.583095s, 431888 KB] Evaluated 2465 state(s).
[t=0.583095s, 431888 KB] Evaluations: 2465
[t=0.583095s, 431888 KB] Generated 3637 state(s).
[t=0.583095s, 431888 KB] Dead ends: 0 state(s).
[t=0.583095s, 431888 KB] Expanded until last jump: 1 state(s).
[t=0.583095s, 431888 KB] Reopened until last jump: 0 state(s).
[t=0.583095s, 431888 KB] Evaluated until last jump: 5 state(s).
[t=0.583095s, 431888 KB] Generated until last jump: 4 state(s).
[t=0.583095s, 431888 KB] Number of registered states: 2465
[t=0.583095s, 431888 KB] Int hash set load factor: 2465/4096 = 0.601807
[t=0.583095s, 431888 KB] Int hash set resizes: 12
[t=0.583095s, 431888 KB] Search time: 0.556744s
[t=0.583095s, 431888 KB] Total time: 0.583095s
Solution found.
Peak memory: 431888 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p18.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6756e-05s, 424928 KB] reading input...
[t=0.00213902s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257339s, 427532 KB] Building successor generator...done!
[t=0.0260128s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260365s, 427532 KB] time for successor generation creation: 0.000167346s
[t=0.0260648s, 427532 KB] Variables: 25
[t=0.0260879s, 427532 KB] FactPairs: 182
[t=0.0261105s, 427532 KB] Bytes per state: 8
[t=0.0263063s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107289s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.107341s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.107367s, 430124 KB] f = 91, 1 evaluated, 0 expanded
[t=0.107394s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.107418s, 430124 KB] pruning method: none
[t=0.119218s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.119277s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.126713s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.126756s, 431096 KB] g=2, 9 evaluated, 3 expanded
[t=0.129424s, 431096 KB] f = 92, 24 evaluated, 8 expanded
[t=0.129989s, 431096 KB] f = 94, 27 evaluated, 9 expanded
[t=0.130732s, 431096 KB] f = 95, 31 evaluated, 10 expanded
[t=0.1313s, 431096 KB] f = 96, 34 evaluated, 11 expanded
[t=0.132919s, 431096 KB] f = 97, 43 evaluated, 14 expanded
[t=0.137922s, 431096 KB] f = 98, 71 evaluated, 22 expanded
[t=0.142935s, 431096 KB] f = 99, 99 evaluated, 32 expanded
[t=0.1474s, 431096 KB] f = 100, 124 evaluated, 40 expanded
[t=0.175273s, 431228 KB] f = 101, 281 evaluated, 100 expanded, 10 reopened
[t=0.182968s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.183006s, 431228 KB] g=15, 324 evaluated, 116 expanded, 10 reopened
[t=0.183391s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.183424s, 431228 KB] g=16, 326 evaluated, 117 expanded, 10 reopened
[t=0.183631s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.18366s, 431228 KB] g=16, 327 evaluated, 117 expanded, 10 reopened
[t=0.184574s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.184604s, 431228 KB] g=17, 332 evaluated, 118 expanded, 10 reopened
[t=0.185512s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.185545s, 431228 KB] g=17, 337 evaluated, 120 expanded, 10 reopened
[t=0.191423s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.191458s, 431228 KB] g=21, 370 evaluated, 129 expanded, 10 reopened
[t=0.192716s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.192747s, 431228 KB] g=22, 377 evaluated, 130 expanded, 10 reopened
[t=0.196305s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.196342s, 431228 KB] g=23, 397 evaluated, 135 expanded, 10 reopened
[t=0.198477s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.198512s, 431228 KB] g=24, 409 evaluated, 137 expanded, 10 reopened
[t=0.2027s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.202735s, 431228 KB] g=25, 432 evaluated, 142 expanded, 10 reopened
[t=0.203298s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.20333s, 431228 KB] g=26, 435 evaluated, 143 expanded, 10 reopened
[t=0.204766s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.204797s, 431228 KB] g=28, 443 evaluated, 145 expanded, 10 reopened
[t=0.207474s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.207513s, 431360 KB] g=31, 458 evaluated, 148 expanded, 10 reopened
[t=0.212821s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.212853s, 431360 KB] g=35, 488 evaluated, 156 expanded, 10 reopened
[t=0.216065s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.216098s, 431360 KB] g=33, 506 evaluated, 160 expanded, 10 reopened
[t=0.226377s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.226413s, 431360 KB] g=35, 564 evaluated, 176 expanded, 10 reopened
[t=0.227514s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.227549s, 431360 KB] g=36, 570 evaluated, 178 expanded, 10 reopened
[t=0.228287s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.228318s, 431360 KB] g=37, 574 evaluated, 179 expanded, 10 reopened
[t=0.22941s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.229443s, 431360 KB] g=39, 580 evaluated, 181 expanded, 10 reopened
[t=0.231252s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.231287s, 431360 KB] g=41, 590 evaluated, 185 expanded, 10 reopened
[t=0.233088s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.233119s, 431360 KB] g=43, 600 evaluated, 190 expanded, 10 reopened
[t=0.24268s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.242715s, 431360 KB] g=43, 654 evaluated, 211 expanded, 10 reopened
[t=0.24346s, 431360 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.24349s, 431360 KB] g=46, 659 evaluated, 214 expanded, 10 reopened
[t=0.243517s, 431360 KB] Solution found!
[t=0.243543s, 431360 KB] Actual search time: 0.136121s
unstack f h (1)
stack f e (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
stack i f (1)
pick-up d (1)
stack d c (1)
unstack i f (1)
stack i d (1)
unstack h g (1)
stack h f (1)
unstack g a (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack i d (1)
put-down i (1)
unstack d c (1)
stack d i (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k e (1)
unstack l j (1)
stack l d (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l c (1)
unstack d i (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.243568s, 431360 KB] Plan length: 46 step(s).
[t=0.243568s, 431360 KB] Plan cost: 46
[t=0.243568s, 431360 KB] Expanded 215 state(s).
[t=0.243568s, 431360 KB] Reopened 10 state(s).
[t=0.243568s, 431360 KB] Evaluated 659 state(s).
[t=0.243568s, 431360 KB] Evaluations: 659
[t=0.243568s, 431360 KB] Generated 923 state(s).
[t=0.243568s, 431360 KB] Dead ends: 0 state(s).
[t=0.243568s, 431360 KB] Expanded until last jump: 100 state(s).
[t=0.243568s, 431360 KB] Reopened until last jump: 10 state(s).
[t=0.243568s, 431360 KB] Evaluated until last jump: 281 state(s).
[t=0.243568s, 431360 KB] Generated until last jump: 422 state(s).
[t=0.243568s, 431360 KB] Number of registered states: 659
[t=0.243568s, 431360 KB] Int hash set load factor: 659/1024 = 0.643555
[t=0.243568s, 431360 KB] Int hash set resizes: 10
[t=0.243568s, 431360 KB] Search time: 0.217262s
[t=0.243568s, 431360 KB] Total time: 0.243568s
Solution found.
Peak memory: 431360 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p19.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.010s CPU, 0.021s wall-clock]
Instantiating: [0.020s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.616e-05s, 424928 KB] reading input...
[t=0.00219277s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260317s, 427532 KB] Building successor generator...done!
[t=0.0263135s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263369s, 427532 KB] time for successor generation creation: 0.000169153s
[t=0.0263649s, 427532 KB] Variables: 25
[t=0.0263876s, 427532 KB] FactPairs: 182
[t=0.0264099s, 427532 KB] Bytes per state: 8
[t=0.0266071s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0989274s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0989799s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990058s, 430124 KB] f = 154, 1 evaluated, 0 expanded
[t=0.0990329s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0990566s, 430124 KB] pruning method: none
[t=0.110917s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.110966s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.117619s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.117662s, 431096 KB] g=1, 4 evaluated, 1 expanded
[t=0.118644s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.118674s, 431096 KB] g=3, 9 evaluated, 3 expanded
[t=0.120794s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.120826s, 431096 KB] g=6, 20 evaluated, 7 expanded
[t=0.123119s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.123149s, 431096 KB] g=9, 32 evaluated, 11 expanded
[t=0.128491s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.128525s, 431096 KB] g=15, 60 evaluated, 19 expanded
[t=0.132734s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.132766s, 431096 KB] g=17, 82 evaluated, 25 expanded
[t=0.151516s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.151553s, 431228 KB] g=19, 181 evaluated, 51 expanded
[t=0.153854s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.153886s, 431228 KB] g=22, 193 evaluated, 55 expanded
[t=0.167723s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.167757s, 431228 KB] g=24, 266 evaluated, 83 expanded, 3 reopened
[t=0.188865s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.188903s, 431228 KB] g=16, 377 evaluated, 132 expanded, 17 reopened
[t=0.189879s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.189918s, 431228 KB] g=17, 382 evaluated, 133 expanded, 17 reopened
[t=0.197736s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.197773s, 431228 KB] g=25, 423 evaluated, 148 expanded, 17 reopened
[t=0.252189s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.252231s, 431492 KB] g=27, 709 evaluated, 251 expanded, 27 reopened
[t=0.256636s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.256669s, 431492 KB] g=29, 732 evaluated, 258 expanded, 27 reopened
[t=0.287407s, 431492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.287444s, 431492 KB] g=32, 894 evaluated, 297 expanded, 27 reopened
[t=0.348313s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.348356s, 431628 KB] g=37, 1216 evaluated, 387 expanded, 28 reopened
[t=0.375186s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.375228s, 431628 KB] g=34, 1358 evaluated, 437 expanded, 41 reopened
[t=0.377164s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.377197s, 431628 KB] g=36, 1368 evaluated, 440 expanded, 41 reopened
[t=0.442443s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.442488s, 431760 KB] g=46, 1714 evaluated, 526 expanded, 43 reopened
[t=0.443485s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.443517s, 431760 KB] g=47, 1719 evaluated, 527 expanded, 43 reopened
[t=0.446007s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.446038s, 431892 KB] g=49, 1732 evaluated, 529 expanded, 43 reopened
[t=0.446262s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.446294s, 431892 KB] g=50, 1733 evaluated, 530 expanded, 43 reopened
[t=0.4467s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.446729s, 431892 KB] g=50, 1735 evaluated, 530 expanded, 43 reopened
[t=0.448285s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.448318s, 431892 KB] g=52, 1743 evaluated, 532 expanded, 43 reopened
[t=0.450625s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.450658s, 431892 KB] g=51, 1755 evaluated, 535 expanded, 43 reopened
[t=0.454088s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.45412s, 431892 KB] g=53, 1773 evaluated, 539 expanded, 43 reopened
[t=0.455111s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.455141s, 431892 KB] g=55, 1778 evaluated, 541 expanded, 43 reopened
[t=0.455368s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.455398s, 431892 KB] g=55, 1779 evaluated, 541 expanded, 43 reopened
[t=0.457129s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.457162s, 431892 KB] g=57, 1788 evaluated, 544 expanded, 43 reopened
[t=0.45795s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.457979s, 431892 KB] g=58, 1792 evaluated, 545 expanded, 43 reopened
[t=0.458957s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.458986s, 431892 KB] g=60, 1797 evaluated, 547 expanded, 43 reopened
[t=0.459202s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.45923s, 431892 KB] g=60, 1798 evaluated, 547 expanded, 43 reopened
[t=0.460031s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.460064s, 431892 KB] g=61, 1802 evaluated, 548 expanded, 43 reopened
[t=0.460477s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.460507s, 431892 KB] g=62, 1804 evaluated, 549 expanded, 43 reopened
[t=0.461297s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.461328s, 431892 KB] g=63, 1808 evaluated, 551 expanded, 43 reopened
[t=0.461929s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.461958s, 431892 KB] g=64, 1811 evaluated, 552 expanded, 43 reopened
[t=0.46237s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.462399s, 431892 KB] g=65, 1813 evaluated, 553 expanded, 43 reopened
[t=0.462806s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.462834s, 431892 KB] g=66, 1815 evaluated, 554 expanded, 43 reopened
[t=0.463457s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.463489s, 431892 KB] g=68, 1819 evaluated, 557 expanded, 43 reopened
[t=0.463516s, 431892 KB] Solution found!
[t=0.463543s, 431892 KB] Actual search time: 0.364482s
unstack h k (1)
stack h b (1)
unstack k g (1)
put-down k (1)
unstack a c (1)
stack a k (1)
unstack c j (1)
put-down c (1)
pick-up g (1)
stack g j (1)
unstack h b (1)
stack h a (1)
pick-up c (1)
stack c b (1)
unstack g j (1)
stack g h (1)
unstack j i (1)
stack j g (1)
unstack i d (1)
put-down i (1)
unstack c b (1)
stack c d (1)
unstack b f (1)
stack b c (1)
unstack j g (1)
stack j b (1)
unstack f e (1)
stack f g (1)
unstack e l (1)
stack e i (1)
unstack j b (1)
put-down j (1)
unstack b c (1)
stack b l (1)
unstack c d (1)
stack c b (1)
unstack f g (1)
stack f e (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack f e (1)
stack f d (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.463567s, 431892 KB] Plan length: 68 step(s).
[t=0.463567s, 431892 KB] Plan cost: 68
[t=0.463567s, 431892 KB] Expanded 558 state(s).
[t=0.463567s, 431892 KB] Reopened 43 state(s).
[t=0.463567s, 431892 KB] Evaluated 1819 state(s).
[t=0.463567s, 431892 KB] Evaluations: 1819
[t=0.463567s, 431892 KB] Generated 2651 state(s).
[t=0.463567s, 431892 KB] Dead ends: 0 state(s).
[t=0.463567s, 431892 KB] Expanded until last jump: 0 state(s).
[t=0.463567s, 431892 KB] Reopened until last jump: 0 state(s).
[t=0.463567s, 431892 KB] Evaluated until last jump: 1 state(s).
[t=0.463567s, 431892 KB] Generated until last jump: 0 state(s).
[t=0.463567s, 431892 KB] Number of registered states: 1819
[t=0.463567s, 431892 KB] Int hash set load factor: 1819/2048 = 0.888184
[t=0.463567s, 431892 KB] Int hash set resizes: 11
[t=0.463567s, 431892 KB] Search time: 0.43696s
[t=0.463567s, 431892 KB] Total time: 0.463567s
Solution found.
Peak memory: 431892 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p20.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5654e-05s, 424928 KB] reading input...
[t=0.00213204s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259123s, 427532 KB] Building successor generator...done!
[t=0.0261908s, 427532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262139s, 427532 KB] time for successor generation creation: 0.000166825s
[t=0.0262416s, 427532 KB] Variables: 25
[t=0.0262637s, 427532 KB] FactPairs: 182
[t=0.0262851s, 427532 KB] Bytes per state: 8
[t=0.0264786s, 427532 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107686s, 430124 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.107742s, 430124 KB] g=0, 1 evaluated, 0 expanded
[t=0.107768s, 430124 KB] f = 146, 1 evaluated, 0 expanded
[t=0.107796s, 430124 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.10782s, 430124 KB] pruning method: none
[t=0.119843s, 430964 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.119895s, 430964 KB] g=1, 2 evaluated, 1 expanded
[t=0.127204s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.127251s, 431096 KB] g=1, 7 evaluated, 1 expanded
[t=0.12848s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.12851s, 431096 KB] g=3, 13 evaluated, 3 expanded
[t=0.128726s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.128755s, 431096 KB] g=3, 14 evaluated, 3 expanded
[t=0.130669s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.130706s, 431096 KB] g=5, 24 evaluated, 5 expanded
[t=0.132438s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.132468s, 431096 KB] g=7, 33 evaluated, 7 expanded
[t=0.134573s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.134604s, 431096 KB] g=9, 44 evaluated, 10 expanded
[t=0.142403s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.142437s, 431096 KB] g=9, 85 evaluated, 22 expanded
[t=0.15404s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.154084s, 431096 KB] g=20, 146 evaluated, 40 expanded
[t=0.155268s, 431096 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.1553s, 431096 KB] g=21, 152 evaluated, 41 expanded
[t=0.159885s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.159919s, 431228 KB] g=25, 176 evaluated, 46 expanded
[t=0.163934s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.163967s, 431228 KB] g=25, 197 evaluated, 51 expanded
[t=0.164755s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.164784s, 431228 KB] g=26, 201 evaluated, 52 expanded
[t=0.16576s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.165789s, 431228 KB] g=27, 206 evaluated, 53 expanded
[t=0.17153s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.171563s, 431228 KB] g=33, 236 evaluated, 61 expanded
[t=0.17178s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.171808s, 431228 KB] g=33, 237 evaluated, 61 expanded
[t=0.172592s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.172622s, 431228 KB] g=34, 241 evaluated, 62 expanded
[t=0.173034s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.173067s, 431228 KB] g=35, 243 evaluated, 63 expanded
[t=0.175574s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.175608s, 431228 KB] g=37, 256 evaluated, 67 expanded
[t=0.177553s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.177584s, 431228 KB] g=39, 266 evaluated, 69 expanded
[t=0.178761s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.178793s, 431228 KB] g=41, 272 evaluated, 71 expanded
[t=0.179394s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.179427s, 431228 KB] g=42, 275 evaluated, 72 expanded
[t=0.180215s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.180246s, 431228 KB] g=43, 279 evaluated, 73 expanded
[t=0.180846s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.180876s, 431228 KB] g=44, 282 evaluated, 74 expanded
[t=0.181667s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.181702s, 431228 KB] g=46, 286 evaluated, 76 expanded
[t=0.182115s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.182144s, 431228 KB] g=47, 288 evaluated, 77 expanded
[t=0.182361s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.182389s, 431228 KB] g=47, 289 evaluated, 77 expanded
[t=0.183009s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.183041s, 431228 KB] g=49, 292 evaluated, 79 expanded
[t=0.183454s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.183486s, 431228 KB] g=50, 294 evaluated, 80 expanded
[t=0.184092s, 431228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.184124s, 431228 KB] g=53, 298 evaluated, 83 expanded
[t=0.184151s, 431228 KB] Solution found!
[t=0.184177s, 431228 KB] Actual search time: 0.0763531s
put-down b (1)
unstack k h (1)
stack k b (1)
pick-up h (1)
stack h a (1)
pick-up f (1)
stack f k (1)
unstack d i (1)
stack d j (1)
unstack f k (1)
stack f d (1)
unstack h a (1)
stack h i (1)
unstack a l (1)
stack a k (1)
unstack h i (1)
stack h a (1)
unstack l e (1)
put-down l (1)
unstack e g (1)
stack e i (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f k (1)
pick-up l (1)
stack l d (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.184202s, 431228 KB] Plan length: 53 step(s).
[t=0.184202s, 431228 KB] Plan cost: 53
[t=0.184202s, 431228 KB] Expanded 84 state(s).
[t=0.184202s, 431228 KB] Reopened 0 state(s).
[t=0.184202s, 431228 KB] Evaluated 298 state(s).
[t=0.184202s, 431228 KB] Evaluations: 298
[t=0.184202s, 431228 KB] Generated 379 state(s).
[t=0.184202s, 431228 KB] Dead ends: 0 state(s).
[t=0.184202s, 431228 KB] Expanded until last jump: 0 state(s).
[t=0.184202s, 431228 KB] Reopened until last jump: 0 state(s).
[t=0.184202s, 431228 KB] Evaluated until last jump: 1 state(s).
[t=0.184202s, 431228 KB] Generated until last jump: 0 state(s).
[t=0.184202s, 431228 KB] Number of registered states: 298
[t=0.184202s, 431228 KB] Int hash set load factor: 298/512 = 0.582031
[t=0.184202s, 431228 KB] Int hash set resizes: 9
[t=0.184202s, 431228 KB] Search time: 0.157724s
[t=0.184202s, 431228 KB] Total time: 0.184202s
Solution found.
Peak memory: 431228 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.024105
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 0 test success: 20 of 20 (100.0%)

---------- FOLD 2/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 99 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.8344891704618931 (0.8817960023880005 vs. 0.04730683192610741), which occurred at index 7.
  _module_class,
 | avg_train_loss=0.099366 | avg_val_loss=0.090313
Epoch 2 | avg_train_loss=0.066537 | avg_val_loss=0.046581
Epoch 3 | avg_train_loss=0.042646 | avg_val_loss=0.040284
Epoch 4 | avg_train_loss=0.039186 | avg_val_loss=0.038011
Epoch 5 | avg_train_loss=0.037322 | avg_val_loss=0.036870
Epoch 6 | avg_train_loss=0.036251 | avg_val_loss=0.035808
Epoch 7 | avg_train_loss=0.035334 | avg_val_loss=0.034688
Epoch 8 | avg_train_loss=0.034558 | avg_val_loss=0.034594
Epoch 9 | avg_train_loss=0.033986 | avg_val_loss=0.033609
Epoch 10 | avg_train_loss=0.033523 | avg_val_loss=0.033382
Epoch 11 | avg_train_loss=0.032983 | avg_val_loss=0.032777
Epoch 12 | avg_train_loss=0.032458 | avg_val_loss=0.033050
Epoch 13 | avg_train_loss=0.032043 | avg_val_loss=0.032595
Epoch 14 | avg_train_loss=0.031643 | avg_val_loss=0.032287
Epoch 15 | avg_train_loss=0.031451 | avg_val_loss=0.031768
Epoch 16 | avg_train_loss=0.031074 | avg_val_loss=0.031376
Epoch 17 | avg_train_loss=0.030702 | avg_val_loss=0.030861
Epoch 18 | avg_train_loss=0.030450 | avg_val_loss=0.030933
Epoch 19 | avg_train_loss=0.030260 | avg_val_loss=0.030696
Epoch 20 | avg_train_loss=0.029954 | avg_val_loss=0.030646
Epoch 21 | avg_train_loss=0.029724 | avg_val_loss=0.030696
Epoch 22 | avg_train_loss=0.029441 | avg_val_loss=0.029881
Epoch 23 | avg_train_loss=0.029130 | avg_val_loss=0.029638
Epoch 24 | avg_train_loss=0.029033 | avg_val_loss=0.029702
Epoch 25 | avg_train_loss=0.028824 | avg_val_loss=0.029580
Epoch 26 | avg_train_loss=0.028525 | avg_val_loss=0.029338
Epoch 27 | avg_train_loss=0.028141 | avg_val_loss=0.029051
Epoch 28 | avg_train_loss=0.028017 | avg_val_loss=0.029199
Epoch 29 | avg_train_loss=0.027804 | avg_val_loss=0.028597
Epoch 30 | avg_train_loss=0.027581 | avg_val_loss=0.029033
Epoch 31 | avg_train_loss=0.027488 | avg_val_loss=0.027734
Epoch 32 | avg_train_loss=0.027255 | avg_val_loss=0.028134
Epoch 33 | avg_train_loss=0.026983 | avg_val_loss=0.027799
Epoch 34 | avg_train_loss=0.026917 | avg_val_loss=0.027681
Epoch 35 | avg_train_loss=0.026713 | avg_val_loss=0.027963
Epoch 36 | avg_train_loss=0.026454 | avg_val_loss=0.027597
Epoch 37 | avg_train_loss=0.026264 | avg_val_loss=0.027584
Epoch 38 | avg_train_loss=0.026045 | avg_val_loss=0.027259
Epoch 39 | avg_train_loss=0.026041 | avg_val_loss=0.026989
Epoch 40 | avg_train_loss=0.025747 | avg_val_loss=0.027312
Epoch 41 | avg_train_loss=0.025539 | avg_val_loss=0.027042
Epoch 42 | avg_train_loss=0.025417 | avg_val_loss=0.026723
Epoch 43 | avg_train_loss=0.025296 | avg_val_loss=0.026952
Epoch 44 | avg_train_loss=0.025106 | avg_val_loss=0.026843
Epoch 45 | avg_train_loss=0.025139 | avg_val_loss=0.026612
Epoch 46 | avg_train_loss=0.024906 | avg_val_loss=0.026768
Epoch 47 | avg_train_loss=0.024781 | avg_val_loss=0.026511
Epoch 48 | avg_train_loss=0.024553 | avg_val_loss=0.026516
Epoch 49 | avg_train_loss=0.024574 | avg_val_loss=0.026129
Epoch 50 | avg_train_loss=0.024202 | avg_val_loss=0.025840
Epoch 51 | avg_train_loss=0.024079 | avg_val_loss=0.025484
Epoch 52 | avg_train_loss=0.023986 | avg_val_loss=0.025223
Epoch 53 | avg_train_loss=0.023950 | avg_val_loss=0.025878
Epoch 54 | avg_train_loss=0.023699 | avg_val_loss=0.025558
Epoch 55 | avg_train_loss=0.023533 | avg_val_loss=0.025561
Epoch 56 | avg_train_loss=0.023449 | avg_val_loss=0.025484
Epoch 57 | avg_train_loss=0.023312 | avg_val_loss=0.025070
Epoch 58 | avg_train_loss=0.023370 | avg_val_loss=0.025189
Epoch 59 | avg_train_loss=0.023134 | avg_val_loss=0.024955
Epoch 60 | avg_train_loss=0.023228 | avg_val_loss=0.025180
Epoch 61 | avg_train_loss=0.023082 | avg_val_loss=0.024928
Epoch 62 | avg_train_loss=0.022912 | avg_val_loss=0.025385
Epoch 63 | avg_train_loss=0.022689 | avg_val_loss=0.024415
Epoch 64 | avg_train_loss=0.022795 | avg_val_loss=0.024741
Epoch 65 | avg_train_loss=0.022669 | avg_val_loss=0.024842
Epoch 66 | avg_train_loss=0.022510 | avg_val_loss=0.024847
Epoch 67 | avg_train_loss=0.022563 | avg_val_loss=0.024854
Epoch 68 | avg_train_loss=0.022359 | avg_val_loss=0.024500
Epoch 69 | avg_train_loss=0.022323 | avg_val_loss=0.024968
Epoch 70 | avg_train_loss=0.022140 | avg_val_loss=0.024620
Epoch 71 | avg_train_loss=0.021991 | avg_val_loss=0.024976
Epoch 72 | avg_train_loss=0.022029 | avg_val_loss=0.024570
Epoch 73 | avg_train_loss=0.021953 | avg_val_loss=0.024229
Epoch 74 | avg_train_loss=0.021828 | avg_val_loss=0.024253
Epoch 75 | avg_train_loss=0.021748 | avg_val_loss=0.024448
Epoch 76 | avg_train_loss=0.021696 | avg_val_loss=0.024312
Epoch 77 | avg_train_loss=0.021509 | avg_val_loss=0.024636
Epoch 78 | avg_train_loss=0.021554 | avg_val_loss=0.024231
Epoch 79 | avg_train_loss=0.021532 | avg_val_loss=0.023970
Epoch 80 | avg_train_loss=0.021270 | avg_val_loss=0.024155
Epoch 81 | avg_train_loss=0.021252 | avg_val_loss=0.024097
Epoch 82 | avg_train_loss=0.021049 | avg_val_loss=0.023910
Epoch 83 | avg_train_loss=0.021083 | avg_val_loss=0.024099
Epoch 84 | avg_train_loss=0.021017 | avg_val_loss=0.024080
Epoch 85 | avg_train_loss=0.020778 | avg_val_loss=0.024062
Epoch 86 | avg_train_loss=0.020932 | avg_val_loss=0.023953
Epoch 87 | avg_train_loss=0.020964 | avg_val_loss=0.023852
Epoch 88 | avg_train_loss=0.020593 | avg_val_loss=0.023350
Epoch 89 | avg_train_loss=0.020549 | avg_val_loss=0.023527
Epoch 90 | avg_train_loss=0.020644 | avg_val_loss=0.024044
Epoch 91 | avg_train_loss=0.020505 | avg_val_loss=0.024165
Epoch 92 | avg_train_loss=0.020532 | avg_val_loss=0.023857
Epoch 93 | avg_train_loss=0.020379 | avg_val_loss=0.023903
Epoch 94 | avg_train_loss=0.020266 | avg_val_loss=0.023670
Epoch 95 | avg_train_loss=0.020235 | avg_val_loss=0.024196
Epoch 96 | avg_train_loss=0.020333 | avg_val_loss=0.024112
Epoch 97 | avg_train_loss=0.020158 | avg_val_loss=0.024073
Epoch 98 | avg_train_loss=0.020159 | avg_val_loss=0.023871
Epoch 99 | avg_train_loss=0.019844 | avg_val_loss=0.023173
Epoch 100 | avg_train_loss=0.019937 | avg_val_loss=0.023461
Epoch 101 | avg_train_loss=0.019980 | avg_val_loss=0.024011
Epoch 102 | avg_train_loss=0.019702INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p21.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9645e-05s, 424928 KB] reading input...
[t=0.00228051s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0264625s, 427536 KB] Building successor generator...done!
[t=0.0267469s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0267702s, 427536 KB] time for successor generation creation: 0.000171147s
[t=0.026799s, 427536 KB] Variables: 25
[t=0.0268218s, 427536 KB] FactPairs: 182
[t=0.0268442s, 427536 KB] Bytes per state: 8
[t=0.0270394s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107569s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.107622s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107648s, 430128 KB] f = 137, 1 evaluated, 0 expanded
[t=0.107676s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.1077s, 430128 KB] pruning method: none
[t=0.126035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.126085s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.127207s, 431100 KB] f = 142, 9 evaluated, 2 expanded
[t=0.128868s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.128901s, 431100 KB] g=3, 18 evaluated, 5 expanded
[t=0.132173s, 431100 KB] f = 145, 36 evaluated, 10 expanded
[t=0.133113s, 431100 KB] f = 146, 41 evaluated, 12 expanded
[t=0.133507s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.133537s, 431100 KB] g=7, 43 evaluated, 13 expanded
[t=0.133929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.133958s, 431100 KB] g=8, 45 evaluated, 14 expanded
[t=0.136143s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.136175s, 431100 KB] g=10, 57 evaluated, 17 expanded
[t=0.139643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.139677s, 431100 KB] g=11, 76 evaluated, 23 expanded
[t=0.169023s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.169071s, 431232 KB] g=14, 239 evaluated, 73 expanded
[t=0.178311s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.178347s, 431232 KB] g=19, 290 evaluated, 86 expanded
[t=0.182517s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.182552s, 431232 KB] g=18, 313 evaluated, 91 expanded
[t=0.187821s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.187857s, 431232 KB] g=24, 342 evaluated, 96 expanded
[t=0.189153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.189184s, 431232 KB] g=25, 349 evaluated, 98 expanded
[t=0.189393s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.189426s, 431232 KB] g=25, 350 evaluated, 98 expanded
[t=0.191445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.191479s, 431232 KB] g=26, 361 evaluated, 100 expanded
[t=0.192235s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.192266s, 431232 KB] g=27, 365 evaluated, 101 expanded
[t=0.201317s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.201351s, 431232 KB] g=31, 415 evaluated, 110 expanded
[t=0.209839s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.209876s, 431364 KB] g=36, 462 evaluated, 120 expanded
[t=0.223232s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.223267s, 431364 KB] g=39, 535 evaluated, 147 expanded, 9 reopened
[t=0.223848s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.223882s, 431364 KB] g=40, 538 evaluated, 148 expanded, 9 reopened
[t=0.230395s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.230431s, 431364 KB] g=43, 574 evaluated, 160 expanded, 9 reopened
[t=0.236229s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.236264s, 431364 KB] g=46, 606 evaluated, 169 expanded, 9 reopened
[t=0.237019s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.237052s, 431364 KB] g=47, 610 evaluated, 170 expanded, 9 reopened
[t=0.240324s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.240365s, 431364 KB] g=49, 628 evaluated, 176 expanded, 9 reopened
[t=0.241111s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.241144s, 431364 KB] g=50, 632 evaluated, 177 expanded, 9 reopened
[t=0.243336s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.243369s, 431364 KB] g=53, 644 evaluated, 181 expanded, 9 reopened
[t=0.245917s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.24595s, 431364 KB] g=56, 658 evaluated, 187 expanded, 9 reopened
[t=0.246343s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.246372s, 431364 KB] g=57, 660 evaluated, 188 expanded, 9 reopened
[t=0.247319s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.247351s, 431364 KB] g=59, 665 evaluated, 193 expanded, 9 reopened
[t=0.247383s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.247407s, 431364 KB] g=60, 666 evaluated, 194 expanded, 9 reopened
[t=0.247433s, 431364 KB] Solution found!
[t=0.247459s, 431364 KB] Actual search time: 0.139755s
unstack k d (1)
stack k b (1)
unstack i e (1)
stack i j (1)
unstack e f (1)
stack e i (1)
unstack f l (1)
stack f k (1)
unstack l g (1)
put-down l (1)
unstack e i (1)
stack e d (1)
unstack i j (1)
stack i f (1)
unstack j a (1)
stack j i (1)
unstack a h (1)
stack a e (1)
unstack j i (1)
put-down j (1)
unstack i f (1)
stack i j (1)
unstack h c (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack i j (1)
stack i c (1)
unstack e d (1)
put-down e (1)
pick-up l (1)
stack l d (1)
pick-up j (1)
stack j i (1)
pick-up e (1)
stack e j (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d b (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.247484s, 431364 KB] Plan length: 60 step(s).
[t=0.247484s, 431364 KB] Plan cost: 60
[t=0.247484s, 431364 KB] Expanded 195 state(s).
[t=0.247484s, 431364 KB] Reopened 9 state(s).
[t=0.247484s, 431364 KB] Evaluated 666 state(s).
[t=0.247484s, 431364 KB] Evaluations: 666
[t=0.247484s, 431364 KB] Generated 917 state(s).
[t=0.247484s, 431364 KB] Dead ends: 0 state(s).
[t=0.247484s, 431364 KB] Expanded until last jump: 12 state(s).
[t=0.247484s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.247484s, 431364 KB] Evaluated until last jump: 41 state(s).
[t=0.247484s, 431364 KB] Generated until last jump: 51 state(s).
[t=0.247484s, 431364 KB] Number of registered states: 666
[t=0.247484s, 431364 KB] Int hash set load factor: 666/1024 = 0.650391
[t=0.247484s, 431364 KB] Int hash set resizes: 10
[t=0.247484s, 431364 KB] Search time: 0.220445s
[t=0.247484s, 431364 KB] Total time: 0.247484s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p22.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5702e-05s, 424928 KB] reading input...
[t=0.00213632s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259713s, 427536 KB] Building successor generator...done!
[t=0.0262549s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262785s, 427536 KB] time for successor generation creation: 0.000171904s
[t=0.0263073s, 427536 KB] Variables: 25
[t=0.0263297s, 427536 KB] FactPairs: 182
[t=0.026352s, 427536 KB] Bytes per state: 8
[t=0.0265474s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981477s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0981992s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982257s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0982536s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0982778s, 430128 KB] pruning method: none
[t=0.116713s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.116773s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117709s, 431100 KB] f = 146, 9 evaluated, 2 expanded
[t=0.118286s, 431100 KB] f = 147, 12 evaluated, 3 expanded
[t=0.119778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.11981s, 431100 KB] g=3, 20 evaluated, 6 expanded
[t=0.122167s, 431100 KB] f = 148, 33 evaluated, 9 expanded
[t=0.123817s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.123849s, 431100 KB] g=6, 42 evaluated, 12 expanded
[t=0.12691s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.12694s, 431100 KB] g=5, 59 evaluated, 17 expanded
[t=0.128053s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.128085s, 431100 KB] g=6, 65 evaluated, 18 expanded
[t=0.129008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.129038s, 431100 KB] g=7, 70 evaluated, 19 expanded
[t=0.12943s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.129459s, 431100 KB] g=8, 72 evaluated, 20 expanded
[t=0.129667s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.129695s, 431100 KB] g=8, 73 evaluated, 20 expanded
[t=0.130081s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.13011s, 431100 KB] g=8, 75 evaluated, 20 expanded
[t=0.131757s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.13179s, 431100 KB] g=9, 84 evaluated, 22 expanded
[t=0.138998s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.139032s, 431100 KB] g=9, 124 evaluated, 31 expanded
[t=0.139976s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.140011s, 431100 KB] g=10, 129 evaluated, 32 expanded
[t=0.140223s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.140253s, 431100 KB] g=10, 130 evaluated, 32 expanded
[t=0.143856s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.143891s, 431100 KB] g=13, 150 evaluated, 36 expanded
[t=0.145349s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.145382s, 431100 KB] g=14, 158 evaluated, 37 expanded
[t=0.1515s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.151542s, 431232 KB] g=17, 192 evaluated, 42 expanded
[t=0.156926s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.156959s, 431232 KB] g=19, 222 evaluated, 46 expanded
[t=0.163632s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.163668s, 431232 KB] g=23, 259 evaluated, 51 expanded
[t=0.165306s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.165336s, 431232 KB] g=24, 268 evaluated, 52 expanded
[t=0.172186s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.172222s, 431232 KB] g=23, 306 evaluated, 58 expanded
[t=0.172435s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.172464s, 431232 KB] g=23, 307 evaluated, 58 expanded
[t=0.173572s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.173601s, 431232 KB] g=24, 313 evaluated, 59 expanded
[t=0.173811s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.173839s, 431232 KB] g=24, 314 evaluated, 59 expanded
[t=0.176906s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.176942s, 431232 KB] g=26, 331 evaluated, 61 expanded
[t=0.177871s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.177901s, 431232 KB] g=27, 336 evaluated, 62 expanded
[t=0.182402s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.182438s, 431232 KB] g=26, 361 evaluated, 67 expanded
[t=0.183915s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.183948s, 431232 KB] g=27, 369 evaluated, 68 expanded
[t=0.184334s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.184366s, 431232 KB] g=27, 371 evaluated, 68 expanded
[t=0.18583s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.185863s, 431232 KB] g=28, 379 evaluated, 70 expanded
[t=0.18823s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.188277s, 431232 KB] g=30, 392 evaluated, 72 expanded
[t=0.192668s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.192706s, 431364 KB] g=33, 416 evaluated, 77 expanded
[t=0.194178s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.194216s, 431364 KB] g=35, 424 evaluated, 79 expanded
[t=0.194607s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.194636s, 431364 KB] g=35, 426 evaluated, 79 expanded
[t=0.195217s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.195253s, 431364 KB] g=36, 429 evaluated, 80 expanded
[t=0.196006s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.196037s, 431364 KB] g=37, 433 evaluated, 81 expanded
[t=0.19661s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.196639s, 431364 KB] g=38, 436 evaluated, 82 expanded
[t=0.197205s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.197233s, 431364 KB] g=38, 439 evaluated, 82 expanded
[t=0.205183s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.205216s, 431364 KB] g=43, 483 evaluated, 97 expanded
[t=0.206532s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.206565s, 431364 KB] g=45, 490 evaluated, 99 expanded
[t=0.207694s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.207727s, 431364 KB] g=46, 496 evaluated, 101 expanded
[t=0.209562s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.209595s, 431364 KB] g=48, 506 evaluated, 104 expanded
[t=0.224165s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.224206s, 431364 KB] g=47, 586 evaluated, 131 expanded
[t=0.224596s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.224626s, 431364 KB] g=48, 588 evaluated, 132 expanded
[t=0.225379s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.225411s, 431364 KB] g=49, 592 evaluated, 134 expanded
[t=0.225984s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.226013s, 431364 KB] g=50, 595 evaluated, 135 expanded
[t=0.235045s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.23508s, 431364 KB] g=51, 645 evaluated, 159 expanded, 1 reopened
[t=0.237652s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.237684s, 431364 KB] g=54, 660 evaluated, 168 expanded, 1 reopened
[t=0.237712s, 431364 KB] Solution found!
[t=0.237739s, 431364 KB] Actual search time: 0.139457s
unstack d e (1)
stack d a (1)
unstack b f (1)
put-down b (1)
unstack d a (1)
stack d i (1)
unstack f j (1)
stack f a (1)
unstack e g (1)
put-down e (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
unstack j l (1)
stack j e (1)
unstack l k (1)
put-down l (1)
unstack k h (1)
stack k i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack f a (1)
stack f d (1)
pick-up h (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack j e (1)
stack j c (1)
unstack k i (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j c (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.237764s, 431364 KB] Plan length: 54 step(s).
[t=0.237764s, 431364 KB] Plan cost: 54
[t=0.237764s, 431364 KB] Expanded 169 state(s).
[t=0.237764s, 431364 KB] Reopened 1 state(s).
[t=0.237764s, 431364 KB] Evaluated 660 state(s).
[t=0.237764s, 431364 KB] Evaluations: 660
[t=0.237764s, 431364 KB] Generated 832 state(s).
[t=0.237764s, 431364 KB] Dead ends: 0 state(s).
[t=0.237764s, 431364 KB] Expanded until last jump: 9 state(s).
[t=0.237764s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.237764s, 431364 KB] Evaluated until last jump: 33 state(s).
[t=0.237764s, 431364 KB] Generated until last jump: 40 state(s).
[t=0.237764s, 431364 KB] Number of registered states: 660
[t=0.237764s, 431364 KB] Int hash set load factor: 660/1024 = 0.644531
[t=0.237764s, 431364 KB] Int hash set resizes: 10
[t=0.237764s, 431364 KB] Search time: 0.211217s
[t=0.237764s, 431364 KB] Total time: 0.237764s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p23.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.899e-05s, 424928 KB] reading input...
[t=0.00212369s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257478s, 427536 KB] Building successor generator...done!
[t=0.0260294s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260525s, 427536 KB] time for successor generation creation: 0.000169423s
[t=0.0260813s, 427536 KB] Variables: 25
[t=0.0261047s, 427536 KB] FactPairs: 182
[t=0.0261268s, 427536 KB] Bytes per state: 8
[t=0.0263206s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980948s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0981463s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098172s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0981997s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0982239s, 430128 KB] pruning method: none
[t=0.110079s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.11013s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117988s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.118032s, 431100 KB] g=2, 11 evaluated, 2 expanded
[t=0.119161s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.119194s, 431100 KB] g=4, 17 evaluated, 4 expanded
[t=0.120485s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.120515s, 431100 KB] g=5, 24 evaluated, 5 expanded
[t=0.121798s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.121828s, 431100 KB] g=6, 31 evaluated, 6 expanded
[t=0.122404s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.12245s, 431100 KB] g=7, 34 evaluated, 7 expanded
[t=0.123378s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.123409s, 431100 KB] g=8, 39 evaluated, 8 expanded
[t=0.123796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.123835s, 431100 KB] g=8, 41 evaluated, 8 expanded
[t=0.124935s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.124965s, 431100 KB] g=9, 47 evaluated, 9 expanded
[t=0.126073s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.126102s, 431100 KB] g=11, 53 evaluated, 11 expanded
[t=0.127037s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.127069s, 431100 KB] g=12, 58 evaluated, 12 expanded
[t=0.12961s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.129643s, 431100 KB] g=15, 72 evaluated, 15 expanded
[t=0.130945s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.130978s, 431100 KB] g=14, 79 evaluated, 17 expanded
[t=0.134041s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.134073s, 431100 KB] g=17, 96 evaluated, 21 expanded
[t=0.143793s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.143827s, 431100 KB] g=18, 150 evaluated, 35 expanded
[t=0.147993s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.148028s, 431232 KB] g=20, 173 evaluated, 40 expanded
[t=0.148239s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.148268s, 431232 KB] g=20, 174 evaluated, 40 expanded
[t=0.150991s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.151025s, 431232 KB] g=22, 189 evaluated, 43 expanded
[t=0.15159s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.151618s, 431232 KB] g=22, 192 evaluated, 43 expanded
[t=0.15219s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.152219s, 431232 KB] g=23, 195 evaluated, 44 expanded
[t=0.154048s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.154081s, 431232 KB] g=25, 205 evaluated, 46 expanded
[t=0.155554s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.155589s, 431232 KB] g=24, 213 evaluated, 48 expanded
[t=0.155988s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.15602s, 431232 KB] g=25, 215 evaluated, 49 expanded
[t=0.156584s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.156616s, 431232 KB] g=25, 218 evaluated, 49 expanded
[t=0.157017s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.157046s, 431232 KB] g=26, 220 evaluated, 50 expanded
[t=0.160133s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.160165s, 431232 KB] g=28, 237 evaluated, 53 expanded
[t=0.161813s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.161844s, 431232 KB] g=29, 246 evaluated, 55 expanded
[t=0.179862s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.179897s, 431232 KB] g=33, 346 evaluated, 85 expanded, 2 reopened
[t=0.181899s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.18193s, 431232 KB] g=34, 357 evaluated, 88 expanded, 2 reopened
[t=0.182693s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.182726s, 431232 KB] g=36, 361 evaluated, 90 expanded, 2 reopened
[t=0.187632s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.187668s, 431232 KB] g=39, 388 evaluated, 103 expanded, 2 reopened
[t=0.187879s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.187909s, 431232 KB] g=39, 389 evaluated, 103 expanded, 2 reopened
[t=0.188306s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.188335s, 431232 KB] g=40, 391 evaluated, 105 expanded, 2 reopened
[t=0.188365s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.188389s, 431232 KB] g=41, 392 evaluated, 106 expanded, 2 reopened
[t=0.188415s, 431232 KB] Solution found!
[t=0.18844s, 431232 KB] Actual search time: 0.0902117s
stack h d (1)
unstack l j (1)
put-down l (1)
unstack e g (1)
stack e i (1)
unstack j a (1)
stack j e (1)
pick-up f (1)
stack f j (1)
unstack h d (1)
stack h g (1)
unstack a c (1)
stack a h (1)
unstack d b (1)
put-down d (1)
unstack f j (1)
stack f a (1)
unstack b k (1)
stack b d (1)
unstack j e (1)
stack j l (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack b d (1)
stack b c (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b c (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.188464s, 431232 KB] Plan length: 41 step(s).
[t=0.188464s, 431232 KB] Plan cost: 41
[t=0.188464s, 431232 KB] Expanded 107 state(s).
[t=0.188464s, 431232 KB] Reopened 2 state(s).
[t=0.188464s, 431232 KB] Evaluated 392 state(s).
[t=0.188464s, 431232 KB] Evaluations: 392
[t=0.188464s, 431232 KB] Generated 506 state(s).
[t=0.188464s, 431232 KB] Dead ends: 0 state(s).
[t=0.188464s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.188464s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.188464s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.188464s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.188464s, 431232 KB] Number of registered states: 392
[t=0.188464s, 431232 KB] Int hash set load factor: 392/512 = 0.765625
[t=0.188464s, 431232 KB] Int hash set resizes: 9
[t=0.188464s, 431232 KB] Search time: 0.162145s
[t=0.188464s, 431232 KB] Total time: 0.188464s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p24.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6618e-05s, 424928 KB] reading input...
[t=0.0022207s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258527s, 427536 KB] Building successor generator...done!
[t=0.0261349s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261585s, 427536 KB] time for successor generation creation: 0.000171004s
[t=0.0261871s, 427536 KB] Variables: 25
[t=0.02621s, 427536 KB] FactPairs: 182
[t=0.0262323s, 427536 KB] Bytes per state: 8
[t=0.0264281s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981436s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0981951s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982211s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0982488s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0982735s, 430128 KB] pruning method: none
[t=0.110063s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.110115s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116746s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.116789s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118281s, 431100 KB] f = 147, 12 evaluated, 5 expanded
[t=0.118856s, 431100 KB] f = 148, 15 evaluated, 6 expanded
[t=0.120518s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.12055s, 431100 KB] g=4, 24 evaluated, 10 expanded
[t=0.121672s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.121702s, 431100 KB] g=7, 30 evaluated, 13 expanded
[t=0.121914s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.121943s, 431100 KB] g=7, 31 evaluated, 13 expanded
[t=0.122153s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.122182s, 431100 KB] g=7, 32 evaluated, 13 expanded
[t=0.122577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.122606s, 431100 KB] g=8, 34 evaluated, 14 expanded
[t=0.123177s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.123207s, 431100 KB] g=9, 37 evaluated, 15 expanded
[t=0.123414s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.123443s, 431100 KB] g=9, 38 evaluated, 15 expanded
[t=0.135418s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.135453s, 431100 KB] g=12, 104 evaluated, 35 expanded
[t=0.188585s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.188623s, 431232 KB] g=18, 398 evaluated, 113 expanded, 7 reopened
[t=0.189559s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.189589s, 431232 KB] g=19, 403 evaluated, 114 expanded, 7 reopened
[t=0.190165s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.190197s, 431232 KB] g=20, 406 evaluated, 115 expanded, 7 reopened
[t=0.190597s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.19063s, 431232 KB] g=20, 408 evaluated, 115 expanded, 7 reopened
[t=0.191927s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.191979s, 431232 KB] g=22, 415 evaluated, 117 expanded, 7 reopened
[t=0.193096s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.193129s, 431232 KB] g=23, 421 evaluated, 118 expanded, 7 reopened
[t=0.20458s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.204615s, 431364 KB] g=24, 484 evaluated, 134 expanded, 7 reopened
[t=0.206995s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.207028s, 431364 KB] g=26, 497 evaluated, 136 expanded, 7 reopened
[t=0.210366s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.210401s, 431364 KB] g=29, 515 evaluated, 139 expanded, 7 reopened
[t=0.211335s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.211367s, 431364 KB] g=30, 520 evaluated, 140 expanded, 7 reopened
[t=0.21392s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.213956s, 431364 KB] g=32, 534 evaluated, 142 expanded, 7 reopened
[t=0.227126s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.227161s, 431364 KB] g=32, 607 evaluated, 157 expanded, 7 reopened
[t=0.227555s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.227587s, 431364 KB] g=33, 609 evaluated, 158 expanded, 7 reopened
[t=0.230846s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.23088s, 431364 KB] g=35, 627 evaluated, 162 expanded, 7 reopened
[t=0.231806s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.231839s, 431364 KB] g=36, 632 evaluated, 163 expanded, 7 reopened
[t=0.233587s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.233622s, 431364 KB] g=36, 641 evaluated, 165 expanded, 7 reopened
[t=0.237424s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.237462s, 431496 KB] g=38, 662 evaluated, 171 expanded, 7 reopened
[t=0.242001s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.242037s, 431496 KB] g=42, 687 evaluated, 180 expanded, 7 reopened
[t=0.244235s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.244273s, 431496 KB] g=45, 699 evaluated, 184 expanded, 7 reopened
[t=0.248102s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.248135s, 431496 KB] g=46, 720 evaluated, 190 expanded, 7 reopened
[t=0.2507s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.250733s, 431496 KB] g=48, 734 evaluated, 196 expanded, 7 reopened
[t=0.251306s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.251335s, 431496 KB] g=49, 737 evaluated, 197 expanded, 7 reopened
[t=0.251729s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.251758s, 431496 KB] g=50, 739 evaluated, 198 expanded, 7 reopened
[t=0.25216s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.252195s, 431496 KB] g=51, 741 evaluated, 199 expanded, 7 reopened
[t=0.252404s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.252433s, 431496 KB] g=51, 742 evaluated, 199 expanded, 7 reopened
[t=0.25283s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.252859s, 431496 KB] g=52, 744 evaluated, 201 expanded, 7 reopened
[t=0.25289s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.252913s, 431496 KB] g=53, 745 evaluated, 202 expanded, 7 reopened
[t=0.25294s, 431496 KB] Solution found!
[t=0.252966s, 431496 KB] Actual search time: 0.154688s
stack a k (1)
unstack f c (1)
stack f d (1)
unstack c i (1)
stack c f (1)
unstack i b (1)
put-down i (1)
unstack b g (1)
stack b i (1)
unstack g l (1)
stack g b (1)
unstack c f (1)
put-down c (1)
unstack g b (1)
put-down g (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack a k (1)
put-down a (1)
unstack k e (1)
put-down k (1)
unstack e h (1)
stack e c (1)
unstack h j (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f d (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e c (1)
stack e k (1)
pick-up d (1)
stack d i (1)
unstack c b (1)
put-down c (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.25299s, 431496 KB] Plan length: 53 step(s).
[t=0.25299s, 431496 KB] Plan cost: 53
[t=0.25299s, 431496 KB] Expanded 203 state(s).
[t=0.25299s, 431496 KB] Reopened 7 state(s).
[t=0.25299s, 431496 KB] Evaluated 745 state(s).
[t=0.25299s, 431496 KB] Evaluations: 745
[t=0.25299s, 431496 KB] Generated 1005 state(s).
[t=0.25299s, 431496 KB] Dead ends: 0 state(s).
[t=0.25299s, 431496 KB] Expanded until last jump: 6 state(s).
[t=0.25299s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.25299s, 431496 KB] Evaluated until last jump: 15 state(s).
[t=0.25299s, 431496 KB] Generated until last jump: 19 state(s).
[t=0.25299s, 431496 KB] Number of registered states: 745
[t=0.25299s, 431496 KB] Int hash set load factor: 745/1024 = 0.727539
[t=0.25299s, 431496 KB] Int hash set resizes: 10
[t=0.25299s, 431496 KB] Search time: 0.226563s
[t=0.25299s, 431496 KB] Total time: 0.25299s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p25.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9804e-05s, 424928 KB] reading input...
[t=0.0021635s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257152s, 427536 KB] Building successor generator...done!
[t=0.0259944s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260171s, 427536 KB] time for successor generation creation: 0.000168011s
[t=0.0260448s, 427536 KB] Variables: 25
[t=0.0260671s, 427536 KB] FactPairs: 182
[t=0.0260887s, 427536 KB] Bytes per state: 8
[t=0.0262806s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979061s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0979667s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979923s, 430128 KB] f = 149, 1 evaluated, 0 expanded
[t=0.0980192s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0980431s, 430128 KB] pruning method: none
[t=0.109808s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.109858s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117766s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.11781s, 431100 KB] g=6, 11 evaluated, 7 expanded
[t=0.1182s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.11823s, 431100 KB] g=7, 13 evaluated, 8 expanded
[t=0.118442s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118472s, 431100 KB] g=8, 14 evaluated, 9 expanded
[t=0.118855s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.118884s, 431100 KB] g=8, 16 evaluated, 9 expanded
[t=0.119094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.119122s, 431100 KB] g=9, 17 evaluated, 10 expanded
[t=0.120035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.120065s, 431100 KB] g=10, 22 evaluated, 11 expanded
[t=0.120628s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.120664s, 431100 KB] g=11, 25 evaluated, 12 expanded
[t=0.128865s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.128899s, 431100 KB] g=14, 71 evaluated, 28 expanded
[t=0.131079s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.131113s, 431100 KB] g=16, 83 evaluated, 32 expanded
[t=0.133115s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.133148s, 431100 KB] g=18, 94 evaluated, 35 expanded
[t=0.143694s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.143727s, 431100 KB] g=21, 153 evaluated, 50 expanded
[t=0.151433s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.151469s, 431232 KB] g=24, 196 evaluated, 65 expanded
[t=0.154903s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.154935s, 431232 KB] g=24, 215 evaluated, 71 expanded
[t=0.157302s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.157341s, 431232 KB] g=26, 228 evaluated, 76 expanded
[t=0.16095s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.160986s, 431232 KB] g=30, 248 evaluated, 81 expanded
[t=0.162265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.162297s, 431232 KB] g=31, 255 evaluated, 82 expanded
[t=0.162711s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.162742s, 431232 KB] g=32, 257 evaluated, 83 expanded
[t=0.163841s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.163874s, 431232 KB] g=33, 263 evaluated, 84 expanded
[t=0.164266s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.164295s, 431232 KB] g=34, 265 evaluated, 85 expanded
[t=0.166484s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.166516s, 431232 KB] g=35, 277 evaluated, 89 expanded
[t=0.169043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.169079s, 431232 KB] g=38, 291 evaluated, 93 expanded
[t=0.169653s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.169682s, 431232 KB] g=40, 294 evaluated, 95 expanded
[t=0.169888s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.169916s, 431232 KB] g=40, 295 evaluated, 95 expanded
[t=0.172091s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.172121s, 431232 KB] g=43, 307 evaluated, 100 expanded
[t=0.173054s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.173088s, 431232 KB] g=44, 312 evaluated, 101 expanded
[t=0.17688s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.176914s, 431232 KB] g=45, 333 evaluated, 109 expanded
[t=0.177663s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.177695s, 431232 KB] g=47, 337 evaluated, 111 expanded
[t=0.178262s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.178292s, 431232 KB] g=48, 340 evaluated, 112 expanded
[t=0.183171s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.183203s, 431232 KB] g=49, 367 evaluated, 124 expanded
[t=0.18395s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.183984s, 431232 KB] g=51, 371 evaluated, 126 expanded
[t=0.184014s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.184038s, 431232 KB] g=52, 372 evaluated, 127 expanded
[t=0.184063s, 431232 KB] Solution found!
[t=0.184088s, 431232 KB] Actual search time: 0.0860412s
unstack f h (1)
put-down f (1)
unstack h e (1)
stack h f (1)
unstack e l (1)
put-down e (1)
unstack l g (1)
put-down l (1)
unstack g j (1)
stack g h (1)
unstack j b (1)
stack j e (1)
unstack b a (1)
stack b l (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack j e (1)
stack j b (1)
pick-up f (1)
stack f e (1)
unstack j b (1)
put-down j (1)
unstack a k (1)
stack a h (1)
unstack k d (1)
stack k j (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e b (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.184113s, 431232 KB] Plan length: 52 step(s).
[t=0.184113s, 431232 KB] Plan cost: 52
[t=0.184113s, 431232 KB] Expanded 128 state(s).
[t=0.184113s, 431232 KB] Reopened 0 state(s).
[t=0.184113s, 431232 KB] Evaluated 372 state(s).
[t=0.184113s, 431232 KB] Evaluations: 372
[t=0.184113s, 431232 KB] Generated 508 state(s).
[t=0.184113s, 431232 KB] Dead ends: 0 state(s).
[t=0.184113s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.184113s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.184113s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.184113s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.184113s, 431232 KB] Number of registered states: 372
[t=0.184113s, 431232 KB] Int hash set load factor: 372/512 = 0.726562
[t=0.184113s, 431232 KB] Int hash set resizes: 9
[t=0.184113s, 431232 KB] Search time: 0.157833s
[t=0.184113s, 431232 KB] Total time: 0.184113s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p26.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8956e-05s, 424928 KB] reading input...
[t=0.00221209s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258498s, 427536 KB] Building successor generator...done!
[t=0.026146s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261699s, 427536 KB] time for successor generation creation: 0.000183205s
[t=0.0261986s, 427536 KB] Variables: 25
[t=0.0262213s, 427536 KB] FactPairs: 182
[t=0.0262436s, 427536 KB] Bytes per state: 8
[t=0.0264395s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983713s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0984229s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984487s, 430128 KB] f = 141, 1 evaluated, 0 expanded
[t=0.0984764s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0985011s, 430128 KB] pruning method: none
[t=0.116716s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.116766s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117343s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.117374s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.117591s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.11762s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118386s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.118418s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.118986s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.119015s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.121377s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.121419s, 431100 KB] g=5, 27 evaluated, 6 expanded
[t=0.121813s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.121843s, 431100 KB] g=6, 29 evaluated, 7 expanded
[t=0.130771s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.130809s, 431100 KB] g=14, 78 evaluated, 18 expanded
[t=0.139146s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.139183s, 431100 KB] g=17, 124 evaluated, 25 expanded
[t=0.140489s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.14052s, 431100 KB] g=18, 131 evaluated, 26 expanded
[t=0.14472s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.14476s, 431232 KB] g=20, 154 evaluated, 30 expanded
[t=0.145697s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.145727s, 431232 KB] g=20, 159 evaluated, 30 expanded
[t=0.183357s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.183396s, 431232 KB] g=25, 367 evaluated, 67 expanded
[t=0.183971s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.184001s, 431232 KB] g=25, 370 evaluated, 67 expanded
[t=0.184573s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.184608s, 431232 KB] g=26, 373 evaluated, 68 expanded
[t=0.185909s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.185943s, 431232 KB] g=26, 380 evaluated, 70 expanded
[t=0.203072s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.203111s, 431364 KB] g=33, 475 evaluated, 99 expanded
[t=0.249621s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.249661s, 431364 KB] g=32, 733 evaluated, 187 expanded, 3 reopened
[t=0.267054s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.267092s, 431364 KB] g=31, 829 evaluated, 225 expanded, 10 reopened
[t=0.937914s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.937965s, 432024 KB] g=47, 4571 evaluated, 1483 expanded, 174 reopened
[t=0.93854s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.93857s, 432024 KB] g=48, 4574 evaluated, 1484 expanded, 174 reopened
[t=0.939313s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.939353s, 432024 KB] g=49, 4578 evaluated, 1485 expanded, 174 reopened
[t=0.940464s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.940495s, 432024 KB] g=50, 4584 evaluated, 1488 expanded, 174 reopened
[t=0.940705s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.940736s, 432024 KB] g=50, 4585 evaluated, 1488 expanded, 174 reopened
[t=0.941488s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.941518s, 432024 KB] g=52, 4589 evaluated, 1490 expanded, 174 reopened
[t=0.941919s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.941952s, 432024 KB] g=53, 4591 evaluated, 1491 expanded, 174 reopened
[t=0.946494s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.946527s, 432024 KB] g=57, 4616 evaluated, 1502 expanded, 174 reopened
[t=0.946923s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.946953s, 432024 KB] g=58, 4618 evaluated, 1503 expanded, 174 reopened
[t=0.948418s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.948453s, 432024 KB] g=60, 4626 evaluated, 1505 expanded, 174 reopened
[t=0.950654s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.950687s, 432024 KB] g=64, 4638 evaluated, 1509 expanded, 174 reopened
[t=0.952697s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.952728s, 432024 KB] g=66, 4649 evaluated, 1512 expanded, 174 reopened
[t=0.9533s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.95333s, 432024 KB] g=67, 4652 evaluated, 1513 expanded, 174 reopened
[t=0.955704s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.955738s, 432024 KB] g=71, 4665 evaluated, 1518 expanded, 174 reopened
[t=0.956492s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.956521s, 432024 KB] g=73, 4669 evaluated, 1520 expanded, 174 reopened
[t=0.956914s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.956944s, 432024 KB] g=74, 4671 evaluated, 1521 expanded, 174 reopened
[t=0.956974s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.956998s, 432024 KB] g=75, 4672 evaluated, 1522 expanded, 174 reopened
[t=0.957024s, 432024 KB] Solution found!
[t=0.957051s, 432024 KB] Actual search time: 0.858545s
put-down b (1)
unstack a e (1)
stack a b (1)
unstack k g (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
unstack g j (1)
stack g d (1)
unstack j l (1)
stack j e (1)
unstack l h (1)
stack l j (1)
unstack g d (1)
stack g h (1)
unstack a b (1)
stack a i (1)
unstack l j (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack g h (1)
stack g a (1)
pick-up c (1)
stack c j (1)
unstack g a (1)
put-down g (1)
pick-up h (1)
stack h a (1)
unstack c j (1)
stack c b (1)
unstack h a (1)
stack h g (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e c (1)
unstack a i (1)
stack a h (1)
pick-up j (1)
stack j e (1)
unstack k f (1)
stack k j (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j i (1)
unstack e c (1)
stack e j (1)
unstack c b (1)
put-down c (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.957081s, 432024 KB] Plan length: 75 step(s).
[t=0.957081s, 432024 KB] Plan cost: 75
[t=0.957081s, 432024 KB] Expanded 1523 state(s).
[t=0.957081s, 432024 KB] Reopened 174 state(s).
[t=0.957081s, 432024 KB] Evaluated 4672 state(s).
[t=0.957081s, 432024 KB] Evaluations: 4672
[t=0.957081s, 432024 KB] Generated 7375 state(s).
[t=0.957081s, 432024 KB] Dead ends: 0 state(s).
[t=0.957081s, 432024 KB] Expanded until last jump: 0 state(s).
[t=0.957081s, 432024 KB] Reopened until last jump: 0 state(s).
[t=0.957081s, 432024 KB] Evaluated until last jump: 1 state(s).
[t=0.957081s, 432024 KB] Generated until last jump: 0 state(s).
[t=0.957081s, 432024 KB] Number of registered states: 4672
[t=0.957081s, 432024 KB] Int hash set load factor: 4672/8192 = 0.570312
[t=0.957081s, 432024 KB] Int hash set resizes: 13
[t=0.957081s, 432024 KB] Search time: 0.930642s
[t=0.957081s, 432024 KB] Total time: 0.957081s
Solution found.
Peak memory: 432024 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p27.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.104s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9918e-05s, 424928 KB] reading input...
[t=0.00210253s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257141s, 427536 KB] Building successor generator...done!
[t=0.0259939s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260168s, 427536 KB] time for successor generation creation: 0.000168129s
[t=0.0260455s, 427536 KB] Variables: 25
[t=0.0260685s, 427536 KB] FactPairs: 182
[t=0.0260907s, 427536 KB] Bytes per state: 8
[t=0.026287s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106689s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.106742s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106768s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.106795s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.106819s, 430128 KB] pruning method: none
[t=0.125064s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.125114s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.125905s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.125935s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.126347s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.126376s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.12717s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.127201s, 431100 KB] g=2, 13 evaluated, 5 expanded
[t=0.127796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.127825s, 431100 KB] g=3, 16 evaluated, 6 expanded
[t=0.131605s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.131639s, 431100 KB] g=6, 36 evaluated, 11 expanded
[t=0.137471s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.137514s, 431100 KB] g=5, 67 evaluated, 21 expanded
[t=0.137731s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.137759s, 431100 KB] g=5, 68 evaluated, 21 expanded
[t=0.13817s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.138199s, 431100 KB] g=6, 70 evaluated, 22 expanded
[t=0.140117s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.140149s, 431100 KB] g=8, 80 evaluated, 24 expanded
[t=0.147693s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.147728s, 431100 KB] g=12, 120 evaluated, 36 expanded
[t=0.150035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.150067s, 431100 KB] g=15, 132 evaluated, 40 expanded
[t=0.152734s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.152769s, 431100 KB] g=15, 146 evaluated, 44 expanded
[t=0.153365s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.153394s, 431100 KB] g=16, 149 evaluated, 45 expanded
[t=0.153988s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.15402s, 431100 KB] g=17, 152 evaluated, 46 expanded
[t=0.162528s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.162573s, 431232 KB] g=28, 197 evaluated, 60 expanded
[t=0.162985s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.163017s, 431232 KB] g=28, 199 evaluated, 60 expanded
[t=0.165483s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.165513s, 431232 KB] g=30, 212 evaluated, 62 expanded
[t=0.201982s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.202021s, 431232 KB] g=34, 406 evaluated, 108 expanded
[t=0.20712s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.207158s, 431232 KB] g=38, 433 evaluated, 114 expanded
[t=0.209441s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.209471s, 431232 KB] g=38, 445 evaluated, 117 expanded
[t=0.210067s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.210099s, 431232 KB] g=39, 448 evaluated, 118 expanded
[t=0.216696s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.216741s, 431364 KB] g=42, 483 evaluated, 127 expanded
[t=0.227004s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.227041s, 431364 KB] g=45, 537 evaluated, 144 expanded
[t=0.228817s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.22885s, 431364 KB] g=47, 546 evaluated, 146 expanded
[t=0.230195s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.230224s, 431364 KB] g=50, 553 evaluated, 149 expanded
[t=0.230444s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.230472s, 431364 KB] g=51, 554 evaluated, 150 expanded
[t=0.23164s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.231672s, 431364 KB] g=52, 560 evaluated, 152 expanded
[t=0.232077s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.232108s, 431364 KB] g=53, 562 evaluated, 153 expanded
[t=0.232705s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.232734s, 431364 KB] g=54, 565 evaluated, 154 expanded
[t=0.233891s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.233923s, 431364 KB] g=57, 571 evaluated, 157 expanded
[t=0.256286s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.256325s, 431364 KB] g=63, 690 evaluated, 203 expanded
[t=4.34005s, 433404 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=4.34011s, 433404 KB] g=71, 22393 evaluated, 11543 expanded, 2649 reopened
[t=4.34071s, 433404 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=4.34074s, 433404 KB] g=73, 22396 evaluated, 11545 expanded, 2649 reopened
[t=4.34116s, 433404 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=4.34119s, 433404 KB] g=74, 22398 evaluated, 11546 expanded, 2649 reopened
[t=4.3433s, 433404 KB] Solution found!
[t=4.34333s, 433404 KB] Actual search time: 4.23651s
put-down b (1)
unstack l j (1)
stack l k (1)
unstack j g (1)
stack j e (1)
unstack g a (1)
stack g b (1)
unstack l k (1)
put-down l (1)
pick-up k (1)
stack k j (1)
unstack g b (1)
put-down g (1)
pick-up b (1)
stack b l (1)
unstack k j (1)
stack k b (1)
pick-up g (1)
stack g a (1)
unstack j e (1)
put-down j (1)
unstack e d (1)
stack e j (1)
unstack g a (1)
put-down g (1)
unstack d i (1)
put-down d (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack a f (1)
stack a i (1)
unstack f h (1)
put-down f (1)
pick-up h (1)
stack h a (1)
pick-up d (1)
stack d j (1)
pick-up f (1)
stack f d (1)
unstack h a (1)
stack h g (1)
unstack a i (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e d (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e b (1)
unstack j i (1)
put-down j (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=4.34336s, 433404 KB] Plan length: 77 step(s).
[t=4.34336s, 433404 KB] Plan cost: 77
[t=4.34336s, 433404 KB] Expanded 11555 state(s).
[t=4.34336s, 433404 KB] Reopened 2649 state(s).
[t=4.34336s, 433404 KB] Evaluated 22410 state(s).
[t=4.34336s, 433404 KB] Evaluations: 22410
[t=4.34336s, 433404 KB] Generated 47327 state(s).
[t=4.34336s, 433404 KB] Dead ends: 0 state(s).
[t=4.34336s, 433404 KB] Expanded until last jump: 0 state(s).
[t=4.34336s, 433404 KB] Reopened until last jump: 0 state(s).
[t=4.34336s, 433404 KB] Evaluated until last jump: 1 state(s).
[t=4.34336s, 433404 KB] Generated until last jump: 0 state(s).
[t=4.34336s, 433404 KB] Number of registered states: 22410
[t=4.34336s, 433404 KB] Int hash set load factor: 22410/32768 = 0.683899
[t=4.34336s, 433404 KB] Int hash set resizes: 15
[t=4.34336s, 433404 KB] Search time: 4.31707s
[t=4.34336s, 433404 KB] Total time: 4.34336s
Solution found.
Peak memory: 433404 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p28.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.105s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9479e-05s, 424928 KB] reading input...
[t=0.00216505s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257913s, 427536 KB] Building successor generator...done!
[t=0.0260691s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260923s, 427536 KB] time for successor generation creation: 0.000164803s
[t=0.0261207s, 427536 KB] Variables: 25
[t=0.0261436s, 427536 KB] FactPairs: 182
[t=0.0261656s, 427536 KB] Bytes per state: 8
[t=0.0263609s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.105956s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.106009s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106036s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.106064s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.106088s, 430128 KB] pruning method: none
[t=0.124779s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.124829s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.125416s, 431100 KB] f = 146, 8 evaluated, 2 expanded
[t=0.125634s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.125663s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.126425s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.126454s, 431100 KB] g=4, 13 evaluated, 4 expanded
[t=0.129231s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.129264s, 431100 KB] g=4, 28 evaluated, 8 expanded
[t=0.130392s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.130423s, 431100 KB] g=5, 34 evaluated, 9 expanded
[t=0.133187s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.133219s, 431100 KB] g=7, 49 evaluated, 13 expanded
[t=0.133791s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.133821s, 431100 KB] g=7, 52 evaluated, 13 expanded
[t=0.134215s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.134244s, 431100 KB] g=7, 54 evaluated, 13 expanded
[t=0.134457s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.134496s, 431100 KB] g=8, 55 evaluated, 14 expanded
[t=0.137633s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.137668s, 431100 KB] g=10, 72 evaluated, 16 expanded
[t=0.139358s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.13939s, 431100 KB] g=12, 81 evaluated, 18 expanded
[t=0.157688s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.157729s, 431232 KB] g=14, 181 evaluated, 36 expanded
[t=0.160696s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.160728s, 431232 KB] g=16, 197 evaluated, 38 expanded
[t=0.163152s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.163187s, 431232 KB] g=17, 210 evaluated, 40 expanded
[t=0.164499s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.164529s, 431232 KB] g=18, 217 evaluated, 41 expanded
[t=0.173033s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.173068s, 431232 KB] g=19, 263 evaluated, 48 expanded
[t=0.176043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.176078s, 431232 KB] g=21, 279 evaluated, 51 expanded
[t=0.177573s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.177602s, 431232 KB] g=22, 287 evaluated, 52 expanded
[t=0.183681s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.183713s, 431232 KB] g=25, 320 evaluated, 59 expanded
[t=0.186866s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.1869s, 431232 KB] g=29, 337 evaluated, 63 expanded
[t=0.206122s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.206159s, 431364 KB] g=35, 442 evaluated, 91 expanded, 1 reopened
[t=0.277161s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.277203s, 431496 KB] g=34, 830 evaluated, 179 expanded, 1 reopened
[t=0.324693s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.324733s, 431628 KB] g=42, 1088 evaluated, 245 expanded, 1 reopened
[t=0.329743s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.329777s, 431628 KB] g=46, 1115 evaluated, 251 expanded, 1 reopened
[t=0.33055s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.330588s, 431628 KB] g=47, 1119 evaluated, 252 expanded, 1 reopened
[t=0.333922s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.333956s, 431628 KB] g=48, 1137 evaluated, 257 expanded, 1 reopened
[t=0.335102s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.335138s, 431628 KB] g=49, 1143 evaluated, 258 expanded, 1 reopened
[t=0.335905s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.335935s, 431628 KB] g=50, 1147 evaluated, 259 expanded, 1 reopened
[t=0.336702s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.336731s, 431628 KB] g=51, 1151 evaluated, 260 expanded, 1 reopened
[t=0.340434s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.34047s, 431628 KB] g=54, 1171 evaluated, 264 expanded, 1 reopened
[t=0.347647s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.347682s, 431628 KB] g=52, 1210 evaluated, 273 expanded, 1 reopened
[t=0.350274s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.350305s, 431628 KB] g=55, 1224 evaluated, 276 expanded, 1 reopened
[t=0.351086s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.351121s, 431628 KB] g=56, 1228 evaluated, 277 expanded, 1 reopened
[t=0.353726s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.353763s, 431760 KB] g=60, 1242 evaluated, 281 expanded, 1 reopened
[t=0.357844s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.35788s, 431760 KB] g=62, 1264 evaluated, 288 expanded, 1 reopened
[t=0.358281s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.35831s, 431760 KB] g=63, 1266 evaluated, 289 expanded, 1 reopened
[t=0.358721s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.358752s, 431760 KB] g=64, 1268 evaluated, 290 expanded, 1 reopened
[t=0.359341s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.35937s, 431760 KB] g=65, 1271 evaluated, 291 expanded, 1 reopened
[t=0.359766s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.359795s, 431760 KB] g=66, 1273 evaluated, 292 expanded, 1 reopened
[t=0.360195s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.36023s, 431760 KB] g=67, 1275 evaluated, 293 expanded, 1 reopened
[t=0.361368s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.361398s, 431760 KB] g=69, 1281 evaluated, 295 expanded, 1 reopened
[t=0.361982s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.362014s, 431760 KB] g=70, 1284 evaluated, 296 expanded, 1 reopened
[t=0.362413s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.362442s, 431760 KB] g=71, 1286 evaluated, 297 expanded, 1 reopened
[t=0.362855s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.362886s, 431760 KB] g=73, 1288 evaluated, 299 expanded, 1 reopened
[t=0.367345s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.367378s, 431760 KB] g=73, 1312 evaluated, 311 expanded, 1 reopened
[t=0.367969s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.368001s, 431760 KB] g=75, 1315 evaluated, 313 expanded, 1 reopened
[t=0.3684s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.368429s, 431760 KB] g=76, 1317 evaluated, 314 expanded, 1 reopened
[t=0.368459s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.368483s, 431760 KB] g=77, 1318 evaluated, 315 expanded, 1 reopened
[t=0.368509s, 431760 KB] Solution found!
[t=0.368535s, 431760 KB] Actual search time: 0.262443s
put-down l (1)
unstack i e (1)
put-down i (1)
unstack e h (1)
put-down e (1)
unstack c d (1)
put-down c (1)
unstack d g (1)
stack d i (1)
unstack g b (1)
stack g l (1)
unstack d i (1)
put-down d (1)
unstack b f (1)
stack b i (1)
pick-up h (1)
stack h e (1)
pick-up c (1)
stack c b (1)
unstack h e (1)
stack h g (1)
pick-up e (1)
stack e c (1)
unstack f j (1)
put-down f (1)
unstack e c (1)
stack e k (1)
pick-up f (1)
stack f d (1)
unstack j a (1)
stack j e (1)
pick-up a (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g l (1)
put-down g (1)
unstack c b (1)
put-down c (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack j e (1)
stack j i (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack e k (1)
put-down e (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e j (1)
pick-up d (1)
stack d c (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack c b (1)
stack c i (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.368559s, 431760 KB] Plan length: 77 step(s).
[t=0.368559s, 431760 KB] Plan cost: 77
[t=0.368559s, 431760 KB] Expanded 316 state(s).
[t=0.368559s, 431760 KB] Reopened 1 state(s).
[t=0.368559s, 431760 KB] Evaluated 1318 state(s).
[t=0.368559s, 431760 KB] Evaluations: 1318
[t=0.368559s, 431760 KB] Generated 1665 state(s).
[t=0.368559s, 431760 KB] Dead ends: 0 state(s).
[t=0.368559s, 431760 KB] Expanded until last jump: 2 state(s).
[t=0.368559s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.368559s, 431760 KB] Evaluated until last jump: 8 state(s).
[t=0.368559s, 431760 KB] Generated until last jump: 8 state(s).
[t=0.368559s, 431760 KB] Number of registered states: 1318
[t=0.368559s, 431760 KB] Int hash set load factor: 1318/2048 = 0.643555
[t=0.368559s, 431760 KB] Int hash set resizes: 11
[t=0.368559s, 431760 KB] Search time: 0.342199s
[t=0.368559s, 431760 KB] Total time: 0.368559s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p29.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9226e-05s, 424928 KB] reading input...
[t=0.00221911s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259835s, 427536 KB] Building successor generator...done!
[t=0.0262637s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262872s, 427536 KB] time for successor generation creation: 0.00016852s
[t=0.0263153s, 427536 KB] Variables: 25
[t=0.026338s, 427536 KB] FactPairs: 182
[t=0.0263704s, 427536 KB] Bytes per state: 8
[t=0.0265642s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983818s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0984318s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984573s, 430128 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0984851s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0985089s, 430128 KB] pruning method: none
[t=0.116729s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.11678s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117011s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.117042s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117622s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117652s, 431100 KB] g=3, 7 evaluated, 3 expanded
[t=0.118041s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.118071s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.119183s, 431100 KB] f = 148, 15 evaluated, 6 expanded
[t=0.120649s, 431100 KB] f = 149, 23 evaluated, 9 expanded
[t=0.122492s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.122525s, 431100 KB] g=8, 33 evaluated, 12 expanded
[t=0.124871s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.124912s, 431100 KB] g=11, 46 evaluated, 15 expanded
[t=0.136107s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.136143s, 431100 KB] g=16, 108 evaluated, 30 expanded
[t=0.147916s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.147955s, 431232 KB] g=24, 173 evaluated, 53 expanded
[t=0.222692s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.222731s, 431364 KB] g=16, 586 evaluated, 218 expanded, 21 reopened
[t=0.235385s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.235423s, 431364 KB] g=23, 656 evaluated, 233 expanded, 21 reopened
[t=0.249123s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.249161s, 431496 KB] g=32, 732 evaluated, 249 expanded, 21 reopened
[t=0.257642s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.257679s, 431496 KB] g=35, 779 evaluated, 260 expanded, 21 reopened
[t=0.25843s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.25847s, 431496 KB] g=36, 783 evaluated, 261 expanded, 21 reopened
[t=0.26047s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.260502s, 431496 KB] g=38, 794 evaluated, 264 expanded, 21 reopened
[t=0.261979s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.262013s, 431496 KB] g=41, 802 evaluated, 267 expanded, 21 reopened
[t=0.262585s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.262615s, 431496 KB] g=42, 805 evaluated, 268 expanded, 21 reopened
[t=0.265897s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.26593s, 431496 KB] g=41, 823 evaluated, 275 expanded, 21 reopened
[t=0.267587s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.267617s, 431496 KB] g=42, 832 evaluated, 277 expanded, 21 reopened
[t=0.270892s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.270924s, 431496 KB] g=45, 850 evaluated, 283 expanded, 21 reopened
[t=0.271315s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.271344s, 431496 KB] g=45, 852 evaluated, 283 expanded, 21 reopened
[t=0.274985s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.275021s, 431496 KB] g=49, 872 evaluated, 290 expanded, 21 reopened
[t=0.275961s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.275993s, 431496 KB] g=50, 877 evaluated, 292 expanded, 21 reopened
[t=0.283413s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.283447s, 431496 KB] g=56, 918 evaluated, 311 expanded, 22 reopened
[t=0.283843s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.283874s, 431496 KB] g=57, 920 evaluated, 312 expanded, 22 reopened
[t=0.284267s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.284296s, 431496 KB] g=58, 922 evaluated, 313 expanded, 22 reopened
[t=0.284326s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.284349s, 431496 KB] g=59, 923 evaluated, 314 expanded, 22 reopened
[t=0.284375s, 431496 KB] Solution found!
[t=0.2844s, 431496 KB] Actual search time: 0.185887s
put-down l (1)
unstack e a (1)
put-down e (1)
unstack a g (1)
stack a e (1)
unstack g k (1)
put-down g (1)
unstack k h (1)
put-down k (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a k (1)
unstack f j (1)
stack f e (1)
unstack j b (1)
put-down j (1)
unstack b d (1)
stack b l (1)
pick-up j (1)
stack j b (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack f e (1)
stack f d (1)
pick-up e (1)
stack e i (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k e (1)
unstack f d (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack d j (1)
stack d c (1)
unstack j b (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack b l (1)
stack b d (1)
pick-up l (1)
stack l c (1)
unstack b d (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.284425s, 431496 KB] Plan length: 59 step(s).
[t=0.284425s, 431496 KB] Plan cost: 59
[t=0.284425s, 431496 KB] Expanded 315 state(s).
[t=0.284425s, 431496 KB] Reopened 22 state(s).
[t=0.284425s, 431496 KB] Evaluated 923 state(s).
[t=0.284425s, 431496 KB] Evaluations: 923
[t=0.284425s, 431496 KB] Generated 1346 state(s).
[t=0.284425s, 431496 KB] Dead ends: 0 state(s).
[t=0.284425s, 431496 KB] Expanded until last jump: 9 state(s).
[t=0.284425s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.284425s, 431496 KB] Evaluated until last jump: 23 state(s).
[t=0.284425s, 431496 KB] Generated until last jump: 31 state(s).
[t=0.284425s, 431496 KB] Number of registered states: 923
[t=0.284425s, 431496 KB] Int hash set load factor: 923/1024 = 0.901367
[t=0.284425s, 431496 KB] Int hash set resizes: 10
[t=0.284425s, 431496 KB] Search time: 0.257861s
[t=0.284425s, 431496 KB] Total time: 0.284425s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p30.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6405e-05s, 424928 KB] reading input...
[t=0.00218581s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258496s, 427536 KB] Building successor generator...done!
[t=0.0261219s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261453s, 427536 KB] time for successor generation creation: 0.00016321s
[t=0.0261746s, 427536 KB] Variables: 25
[t=0.0261984s, 427536 KB] FactPairs: 182
[t=0.0262211s, 427536 KB] Bytes per state: 8
[t=0.0264153s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979504s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0980023s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980283s, 430128 KB] f = 151, 1 evaluated, 0 expanded
[t=0.0980558s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0980799s, 430128 KB] pruning method: none
[t=0.116303s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.116352s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116573s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.116603s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117539s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117569s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.121938s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.121971s, 431100 KB] g=3, 33 evaluated, 9 expanded
[t=0.122362s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.122392s, 431100 KB] g=3, 35 evaluated, 9 expanded
[t=0.136704s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.136738s, 431100 KB] g=7, 114 evaluated, 33 expanded
[t=0.140038s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.14007s, 431100 KB] g=9, 132 evaluated, 37 expanded
[t=0.158684s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.158721s, 431100 KB] g=12, 235 evaluated, 60 expanded
[t=0.17221s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.172254s, 431232 KB] g=14, 309 evaluated, 71 expanded
[t=0.174462s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.174494s, 431232 KB] g=16, 321 evaluated, 73 expanded
[t=0.182901s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.182935s, 431232 KB] g=21, 367 evaluated, 80 expanded
[t=0.186972s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.187004s, 431232 KB] g=25, 389 evaluated, 84 expanded
[t=0.191373s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.191405s, 431232 KB] g=27, 413 evaluated, 89 expanded
[t=0.206664s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.206701s, 431232 KB] g=36, 497 evaluated, 108 expanded
[t=0.20819s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.208221s, 431232 KB] g=38, 505 evaluated, 110 expanded
[t=0.229339s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.229376s, 431364 KB] g=37, 621 evaluated, 138 expanded
[t=0.229778s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.229808s, 431364 KB] g=38, 623 evaluated, 139 expanded
[t=0.232383s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.232417s, 431364 KB] g=41, 637 evaluated, 144 expanded
[t=0.233174s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.233204s, 431364 KB] g=43, 641 evaluated, 146 expanded
[t=0.233778s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.233811s, 431364 KB] g=44, 644 evaluated, 147 expanded
[t=0.234386s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.234415s, 431364 KB] g=45, 647 evaluated, 148 expanded
[t=0.234633s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.234663s, 431364 KB] g=45, 648 evaluated, 148 expanded
[t=0.234877s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.234906s, 431364 KB] g=46, 649 evaluated, 149 expanded
[t=0.236019s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.236052s, 431364 KB] g=47, 655 evaluated, 150 expanded
[t=0.237166s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.237202s, 431364 KB] g=49, 661 evaluated, 152 expanded
[t=0.238695s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.238727s, 431364 KB] g=50, 669 evaluated, 154 expanded
[t=0.240381s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.240411s, 431364 KB] g=51, 678 evaluated, 156 expanded
[t=0.240986s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.241015s, 431364 KB] g=52, 681 evaluated, 157 expanded
[t=0.241768s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.241797s, 431364 KB] g=53, 685 evaluated, 158 expanded
[t=0.242744s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.242778s, 431364 KB] g=55, 690 evaluated, 160 expanded
[t=0.244796s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.244828s, 431364 KB] g=57, 701 evaluated, 164 expanded
[t=0.245401s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.245433s, 431364 KB] g=58, 704 evaluated, 165 expanded
[t=0.246006s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.246035s, 431364 KB] g=59, 707 evaluated, 166 expanded
[t=0.246987s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.247022s, 431364 KB] g=60, 712 evaluated, 168 expanded
[t=0.247971s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.248003s, 431364 KB] g=63, 718 evaluated, 172 expanded
[t=0.24803s, 431364 KB] Solution found!
[t=0.248057s, 431364 KB] Actual search time: 0.149974s
put-down e (1)
unstack b a (1)
put-down b (1)
unstack d j (1)
stack d f (1)
unstack c i (1)
stack c j (1)
unstack i k (1)
stack i a (1)
unstack c j (1)
put-down c (1)
unstack k l (1)
stack k b (1)
unstack l h (1)
put-down l (1)
pick-up j (1)
stack j d (1)
unstack i a (1)
stack i c (1)
pick-up e (1)
stack e i (1)
unstack j d (1)
stack j e (1)
pick-up h (1)
stack h k (1)
unstack a g (1)
put-down a (1)
unstack d f (1)
stack d j (1)
unstack h k (1)
stack h g (1)
pick-up l (1)
stack l d (1)
unstack k b (1)
stack k l (1)
pick-up a (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
put-down j (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.248082s, 431364 KB] Plan length: 63 step(s).
[t=0.248082s, 431364 KB] Plan cost: 63
[t=0.248082s, 431364 KB] Expanded 173 state(s).
[t=0.248082s, 431364 KB] Reopened 0 state(s).
[t=0.248082s, 431364 KB] Evaluated 718 state(s).
[t=0.248082s, 431364 KB] Evaluations: 718
[t=0.248082s, 431364 KB] Generated 901 state(s).
[t=0.248082s, 431364 KB] Dead ends: 0 state(s).
[t=0.248082s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.248082s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.248082s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.248082s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.248082s, 431364 KB] Number of registered states: 718
[t=0.248082s, 431364 KB] Int hash set load factor: 718/1024 = 0.701172
[t=0.248082s, 431364 KB] Int hash set resizes: 10
[t=0.248082s, 431364 KB] Search time: 0.221667s
[t=0.248082s, 431364 KB] Total time: 0.248082s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p31.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.626e-05s, 424928 KB] reading input...
[t=0.00220094s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257334s, 427536 KB] Building successor generator...done!
[t=0.0260457s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260695s, 427536 KB] time for successor generation creation: 0.000187979s
[t=0.0260987s, 427536 KB] Variables: 25
[t=0.0261214s, 427536 KB] FactPairs: 182
[t=0.0261435s, 427536 KB] Bytes per state: 8
[t=0.026338s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980002s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.0980523s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980786s, 430128 KB] f = 98, 1 evaluated, 0 expanded
[t=0.0981063s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.0981304s, 430128 KB] pruning method: none
[t=0.116351s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.116401s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11718s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.117211s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117797s, 431100 KB] f = 109, 10 evaluated, 3 expanded
[t=0.118391s, 431100 KB] f = 111, 13 evaluated, 4 expanded
[t=0.118797s, 431100 KB] f = 112, 15 evaluated, 5 expanded
[t=0.122312s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.122345s, 431100 KB] g=6, 34 evaluated, 10 expanded
[t=0.128739s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.128776s, 431100 KB] g=11, 69 evaluated, 18 expanded
[t=0.130093s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.130125s, 431100 KB] g=12, 76 evaluated, 20 expanded
[t=0.136343s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.136378s, 431100 KB] g=15, 110 evaluated, 27 expanded
[t=0.138805s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.13884s, 431100 KB] g=17, 123 evaluated, 30 expanded
[t=0.148531s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.148565s, 431232 KB] g=21, 176 evaluated, 41 expanded
[t=0.162262s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.162296s, 431232 KB] g=24, 251 evaluated, 59 expanded
[t=0.163813s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.163848s, 431232 KB] g=25, 259 evaluated, 60 expanded
[t=0.164246s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.164276s, 431232 KB] g=26, 261 evaluated, 61 expanded
[t=0.168868s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.168912s, 431232 KB] g=27, 286 evaluated, 67 expanded
[t=0.239972s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.240015s, 431364 KB] g=31, 676 evaluated, 175 expanded, 12 reopened
[t=0.256508s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.256544s, 431364 KB] g=33, 766 evaluated, 197 expanded, 12 reopened
[t=0.257879s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.257913s, 431364 KB] g=35, 773 evaluated, 199 expanded, 12 reopened
[t=0.258343s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.258375s, 431364 KB] g=36, 775 evaluated, 200 expanded, 12 reopened
[t=0.258601s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.258631s, 431364 KB] g=36, 776 evaluated, 200 expanded, 12 reopened
[t=0.259978s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.260013s, 431496 KB] g=37, 783 evaluated, 201 expanded, 12 reopened
[t=0.26114s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.261173s, 431496 KB] g=39, 789 evaluated, 203 expanded, 12 reopened
[t=0.261387s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.261416s, 431496 KB] g=39, 790 evaluated, 203 expanded, 12 reopened
[t=0.262201s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.262233s, 431496 KB] g=40, 794 evaluated, 205 expanded, 12 reopened
[t=0.263539s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.263571s, 431496 KB] g=42, 801 evaluated, 207 expanded, 12 reopened
[t=0.272404s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.272438s, 431496 KB] g=45, 849 evaluated, 222 expanded, 12 reopened
[t=0.27321s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.27324s, 431496 KB] g=47, 853 evaluated, 224 expanded, 12 reopened
[t=0.274749s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.274785s, 431496 KB] g=49, 861 evaluated, 227 expanded, 12 reopened
[t=0.27555s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.275582s, 431496 KB] g=50, 865 evaluated, 228 expanded, 12 reopened
[t=0.276889s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.276921s, 431496 KB] g=52, 872 evaluated, 230 expanded, 12 reopened
[t=4.29588s, 433368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=4.29594s, 433368 KB] g=65, 22803 evaluated, 11131 expanded, 1982 reopened
[t=4.29801s, 433368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=4.29805s, 433368 KB] g=67, 22814 evaluated, 11136 expanded, 1982 reopened
[t=4.31925s, 433500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=4.3193s, 433500 KB] g=71, 22929 evaluated, 11192 expanded, 1988 reopened
[t=4.3197s, 433500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=4.31973s, 433500 KB] g=72, 22931 evaluated, 11193 expanded, 1988 reopened
[t=4.32014s, 433500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=4.32017s, 433500 KB] g=73, 22933 evaluated, 11194 expanded, 1988 reopened
[t=4.3202s, 433500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=4.32022s, 433500 KB] g=74, 22934 evaluated, 11195 expanded, 1988 reopened
[t=4.32026s, 433500 KB] Solution found!
[t=4.32029s, 433500 KB] Actual search time: 4.22216s
unstack b d (1)
put-down b (1)
unstack g f (1)
put-down g (1)
unstack h e (1)
stack h g (1)
unstack d i (1)
stack d b (1)
unstack f j (1)
stack f d (1)
unstack h g (1)
stack h f (1)
unstack j l (1)
stack j e (1)
unstack l a (1)
put-down l (1)
unstack h f (1)
stack h a (1)
pick-up g (1)
stack g h (1)
unstack f d (1)
stack f i (1)
unstack d b (1)
put-down d (1)
pick-up b (1)
stack b l (1)
unstack g h (1)
stack g d (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k e (1)
unstack f i (1)
stack f k (1)
unstack a h (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g d (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up j (1)
stack j i (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=4.32032s, 433500 KB] Plan length: 74 step(s).
[t=4.32032s, 433500 KB] Plan cost: 74
[t=4.32032s, 433500 KB] Expanded 11196 state(s).
[t=4.32032s, 433500 KB] Reopened 1988 state(s).
[t=4.32032s, 433500 KB] Evaluated 22934 state(s).
[t=4.32032s, 433500 KB] Evaluations: 22934
[t=4.32032s, 433500 KB] Generated 45801 state(s).
[t=4.32032s, 433500 KB] Dead ends: 0 state(s).
[t=4.32032s, 433500 KB] Expanded until last jump: 5 state(s).
[t=4.32032s, 433500 KB] Reopened until last jump: 0 state(s).
[t=4.32032s, 433500 KB] Evaluated until last jump: 15 state(s).
[t=4.32032s, 433500 KB] Generated until last jump: 18 state(s).
[t=4.32032s, 433500 KB] Number of registered states: 22934
[t=4.32032s, 433500 KB] Int hash set load factor: 22934/32768 = 0.69989
[t=4.32032s, 433500 KB] Int hash set resizes: 15
[t=4.32032s, 433500 KB] Search time: 4.29398s
[t=4.32032s, 433500 KB] Total time: 4.32032s
Solution found.
Peak memory: 433500 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p32.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9725e-05s, 424928 KB] reading input...
[t=0.0021921s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258168s, 427536 KB] Building successor generator...done!
[t=0.0261164s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261415s, 427536 KB] time for successor generation creation: 0.000170245s
[t=0.0261702s, 427536 KB] Variables: 25
[t=0.0261933s, 427536 KB] FactPairs: 182
[t=0.0262155s, 427536 KB] Bytes per state: 8
[t=0.0264127s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.108379s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.108432s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.108457s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.108485s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.108519s, 430128 KB] pruning method: none
[t=0.120396s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.120445s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.127074s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.127116s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.130617s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.130647s, 431100 KB] g=3, 23 evaluated, 5 expanded
[t=0.140895s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.14093s, 431100 KB] g=4, 79 evaluated, 18 expanded
[t=0.141146s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.141175s, 431100 KB] g=5, 80 evaluated, 19 expanded
[t=0.142108s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.142142s, 431100 KB] g=5, 85 evaluated, 19 expanded
[t=0.149844s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.149879s, 431100 KB] g=8, 127 evaluated, 26 expanded
[t=0.150653s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.150685s, 431100 KB] g=9, 131 evaluated, 27 expanded
[t=0.153088s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.153119s, 431100 KB] g=11, 144 evaluated, 29 expanded
[t=0.154235s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.154267s, 431100 KB] g=11, 150 evaluated, 29 expanded
[t=0.154666s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.154695s, 431100 KB] g=12, 152 evaluated, 30 expanded
[t=0.155098s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.155128s, 431100 KB] g=12, 154 evaluated, 30 expanded
[t=0.155881s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.15591s, 431100 KB] g=12, 158 evaluated, 30 expanded
[t=0.156124s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.156156s, 431100 KB] g=13, 159 evaluated, 31 expanded
[t=0.156367s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.156395s, 431100 KB] g=13, 160 evaluated, 31 expanded
[t=0.158596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.158635s, 431100 KB] g=14, 172 evaluated, 32 expanded
[t=0.161039s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.161073s, 431232 KB] g=15, 185 evaluated, 34 expanded
[t=0.161467s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.161496s, 431232 KB] g=15, 187 evaluated, 34 expanded
[t=0.162072s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.162101s, 431232 KB] g=16, 190 evaluated, 35 expanded
[t=0.166325s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.16636s, 431232 KB] g=16, 213 evaluated, 39 expanded
[t=0.175002s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.175039s, 431232 KB] g=20, 260 evaluated, 48 expanded
[t=0.18073s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.180764s, 431232 KB] g=20, 291 evaluated, 55 expanded
[t=0.181163s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.181191s, 431232 KB] g=21, 293 evaluated, 56 expanded
[t=0.182313s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.182344s, 431232 KB] g=22, 299 evaluated, 57 expanded
[t=0.183485s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.183519s, 431232 KB] g=23, 305 evaluated, 59 expanded
[t=0.184456s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.184486s, 431232 KB] g=24, 310 evaluated, 60 expanded
[t=0.185611s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.185641s, 431232 KB] g=26, 316 evaluated, 62 expanded
[t=0.189664s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.189698s, 431232 KB] g=27, 338 evaluated, 67 expanded
[t=0.20012s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.200156s, 431232 KB] g=30, 395 evaluated, 81 expanded
[t=0.207483s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.207517s, 431364 KB] g=33, 435 evaluated, 92 expanded
[t=0.208273s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.208305s, 431364 KB] g=33, 439 evaluated, 92 expanded
[t=0.210896s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.210937s, 431364 KB] g=35, 453 evaluated, 95 expanded
[t=0.226125s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.22616s, 431364 KB] g=34, 536 evaluated, 116 expanded
[t=0.226375s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.226404s, 431364 KB] g=34, 537 evaluated, 116 expanded
[t=0.230075s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.230108s, 431364 KB] g=36, 557 evaluated, 123 expanded
[t=0.231246s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.231278s, 431364 KB] g=38, 563 evaluated, 126 expanded
[t=0.232223s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.232253s, 431364 KB] g=40, 568 evaluated, 128 expanded
[t=0.234643s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.234673s, 431364 KB] g=39, 581 evaluated, 132 expanded
[t=0.237091s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.237122s, 431364 KB] g=42, 594 evaluated, 139 expanded
[t=0.237517s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.237546s, 431364 KB] g=43, 596 evaluated, 140 expanded
[t=0.238314s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.238344s, 431364 KB] g=46, 600 evaluated, 143 expanded
[t=0.23893s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.238961s, 431364 KB] g=48, 603 evaluated, 145 expanded
[t=0.238992s, 431364 KB] Solution found!
[t=0.239019s, 431364 KB] Actual search time: 0.130493s
stack c a (1)
unstack i l (1)
put-down i (1)
unstack l f (1)
put-down l (1)
unstack c a (1)
put-down c (1)
unstack j b (1)
stack j e (1)
unstack b k (1)
stack b l (1)
unstack k g (1)
stack k b (1)
pick-up f (1)
stack f k (1)
pick-up c (1)
stack c i (1)
pick-up a (1)
stack a f (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack j e (1)
stack j c (1)
unstack e d (1)
stack e j (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up d (1)
stack d b (1)
unstack j c (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.239043s, 431364 KB] Plan length: 49 step(s).
[t=0.239043s, 431364 KB] Plan cost: 49
[t=0.239043s, 431364 KB] Expanded 147 state(s).
[t=0.239043s, 431364 KB] Reopened 0 state(s).
[t=0.239043s, 431364 KB] Evaluated 604 state(s).
[t=0.239043s, 431364 KB] Evaluations: 604
[t=0.239043s, 431364 KB] Generated 755 state(s).
[t=0.239043s, 431364 KB] Dead ends: 0 state(s).
[t=0.239043s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.239043s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.239043s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.239043s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.239043s, 431364 KB] Number of registered states: 604
[t=0.239043s, 431364 KB] Int hash set load factor: 604/1024 = 0.589844
[t=0.239043s, 431364 KB] Int hash set resizes: 10
[t=0.239043s, 431364 KB] Search time: 0.212631s
[t=0.239043s, 431364 KB] Total time: 0.239043s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p33.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6984e-05s, 424928 KB] reading input...
[t=0.00216921s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257602s, 427536 KB] Building successor generator...done!
[t=0.0260609s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260851s, 427536 KB] time for successor generation creation: 0.000187287s
[t=0.0261141s, 427536 KB] Variables: 25
[t=0.0261471s, 427536 KB] FactPairs: 182
[t=0.0261705s, 427536 KB] Bytes per state: 8
[t=0.0263654s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098459s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0985104s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985363s, 430128 KB] f = 130, 1 evaluated, 0 expanded
[t=0.0985654s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.0985894s, 430128 KB] pruning method: none
[t=0.110441s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.11049s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117452s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.117494s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117706s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.117735s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.121783s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.121817s, 431100 KB] g=4, 29 evaluated, 9 expanded
[t=0.133374s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.13341s, 431100 KB] g=13, 91 evaluated, 29 expanded
[t=0.133804s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.133836s, 431100 KB] g=13, 93 evaluated, 29 expanded
[t=0.140282s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.140316s, 431100 KB] g=14, 128 evaluated, 40 expanded
[t=0.143099s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.143132s, 431100 KB] g=15, 143 evaluated, 44 expanded
[t=0.1477s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.147736s, 431100 KB] g=18, 168 evaluated, 51 expanded
[t=0.153902s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.15394s, 431232 KB] g=20, 201 evaluated, 61 expanded
[t=0.154155s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.154183s, 431232 KB] g=20, 202 evaluated, 61 expanded
[t=0.200969s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.201007s, 431364 KB] g=31, 459 evaluated, 129 expanded
[t=0.20653s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.206565s, 431364 KB] g=34, 489 evaluated, 138 expanded
[t=0.306399s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.306452s, 431496 KB] g=39, 1037 evaluated, 302 expanded, 8 reopened
[t=0.307033s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.307063s, 431496 KB] g=40, 1040 evaluated, 303 expanded, 8 reopened
[t=0.307274s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.307303s, 431496 KB] g=40, 1041 evaluated, 303 expanded, 8 reopened
[t=0.310084s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.310121s, 431628 KB] g=44, 1056 evaluated, 308 expanded, 8 reopened
[t=0.312878s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.312909s, 431628 KB] g=47, 1071 evaluated, 312 expanded, 8 reopened
[t=0.313485s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.313517s, 431628 KB] g=48, 1074 evaluated, 313 expanded, 8 reopened
[t=0.315003s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.315034s, 431628 KB] g=49, 1082 evaluated, 314 expanded, 8 reopened
[t=0.317057s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.317089s, 431628 KB] g=50, 1093 evaluated, 317 expanded, 8 reopened
[t=0.318225s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.318257s, 431628 KB] g=51, 1099 evaluated, 318 expanded, 8 reopened
[t=0.320104s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.320137s, 431628 KB] g=52, 1109 evaluated, 320 expanded, 8 reopened
[t=0.350705s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.350746s, 431628 KB] g=57, 1278 evaluated, 366 expanded, 8 reopened
[t=0.355832s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.355869s, 431628 KB] g=58, 1306 evaluated, 372 expanded, 8 reopened
[t=0.358248s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.358286s, 431760 KB] g=60, 1319 evaluated, 375 expanded, 8 reopened
[t=0.359039s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.359068s, 431760 KB] g=61, 1323 evaluated, 376 expanded, 8 reopened
[t=0.359999s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.360032s, 431760 KB] g=62, 1328 evaluated, 377 expanded, 8 reopened
[t=0.36351s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.363549s, 431760 KB] g=61, 1347 evaluated, 383 expanded, 8 reopened
[t=0.365387s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.365417s, 431760 KB] g=64, 1357 evaluated, 386 expanded, 8 reopened
[t=0.366555s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.366587s, 431760 KB] g=66, 1363 evaluated, 389 expanded, 8 reopened
[t=0.37336s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.373395s, 431760 KB] g=69, 1400 evaluated, 406 expanded, 8 reopened
[t=0.375261s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.375296s, 431760 KB] g=70, 1411 evaluated, 413 expanded, 8 reopened
[t=0.375323s, 431760 KB] Solution found!
[t=0.37535s, 431760 KB] Actual search time: 0.276757s
unstack d g (1)
put-down d (1)
unstack k a (1)
stack k d (1)
unstack g i (1)
put-down g (1)
unstack k d (1)
put-down k (1)
pick-up g (1)
stack g h (1)
unstack i c (1)
stack i a (1)
pick-up c (1)
stack c d (1)
unstack i a (1)
stack i c (1)
unstack a b (1)
stack a k (1)
unstack b f (1)
put-down b (1)
unstack f j (1)
put-down f (1)
unstack g h (1)
put-down g (1)
pick-up b (1)
stack b j (1)
unstack h e (1)
stack h g (1)
pick-up f (1)
stack f i (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack b j (1)
put-down b (1)
unstack e k (1)
stack e j (1)
unstack k f (1)
stack k e (1)
unstack f i (1)
stack f a (1)
unstack i c (1)
put-down i (1)
unstack c d (1)
stack c b (1)
unstack k e (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d b (1)
pick-up l (1)
stack l c (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.375375s, 431760 KB] Plan length: 70 step(s).
[t=0.375375s, 431760 KB] Plan cost: 70
[t=0.375375s, 431760 KB] Expanded 414 state(s).
[t=0.375375s, 431760 KB] Reopened 8 state(s).
[t=0.375375s, 431760 KB] Evaluated 1411 state(s).
[t=0.375375s, 431760 KB] Evaluations: 1411
[t=0.375375s, 431760 KB] Generated 1917 state(s).
[t=0.375375s, 431760 KB] Dead ends: 0 state(s).
[t=0.375375s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.375375s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.375375s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.375375s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.375375s, 431760 KB] Number of registered states: 1411
[t=0.375375s, 431760 KB] Int hash set load factor: 1411/2048 = 0.688965
[t=0.375375s, 431760 KB] Int hash set resizes: 11
[t=0.375375s, 431760 KB] Search time: 0.34901s
[t=0.375375s, 431760 KB] Total time: 0.375375s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p34.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.010s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7795e-05s, 424928 KB] reading input...
[t=0.00214145s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256946s, 427536 KB] Building successor generator...done!
[t=0.0259757s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259991s, 427536 KB] time for successor generation creation: 0.000169111s
[t=0.0260276s, 427536 KB] Variables: 25
[t=0.0260507s, 427536 KB] FactPairs: 182
[t=0.0260729s, 427536 KB] Bytes per state: 8
[t=0.0262685s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979214s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0979732s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979995s, 430128 KB] f = 142, 1 evaluated, 0 expanded
[t=0.0980281s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0980522s, 430128 KB] pruning method: none
[t=0.109877s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.109928s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117989s, 431100 KB] f = 143, 12 evaluated, 3 expanded
[t=0.118768s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.1188s, 431100 KB] g=3, 16 evaluated, 4 expanded
[t=0.12008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.12011s, 431100 KB] g=5, 23 evaluated, 6 expanded
[t=0.129448s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.129482s, 431100 KB] g=7, 75 evaluated, 21 expanded, 1 reopened
[t=0.134165s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.134198s, 431100 KB] g=10, 101 evaluated, 26 expanded, 1 reopened
[t=0.156368s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.156403s, 431232 KB] g=15, 224 evaluated, 56 expanded, 1 reopened
[t=0.177089s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.177124s, 431232 KB] g=19, 339 evaluated, 87 expanded, 1 reopened
[t=0.177336s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.177365s, 431232 KB] g=19, 340 evaluated, 87 expanded, 1 reopened
[t=0.179548s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.179579s, 431232 KB] g=21, 352 evaluated, 90 expanded, 1 reopened
[t=0.202087s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.202124s, 431364 KB] g=25, 477 evaluated, 123 expanded, 1 reopened
[t=0.242088s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.242129s, 431364 KB] g=29, 699 evaluated, 178 expanded, 1 reopened
[t=0.244146s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.244177s, 431364 KB] g=31, 710 evaluated, 182 expanded, 1 reopened
[t=0.257263s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.257301s, 431496 KB] g=29, 782 evaluated, 200 expanded, 1 reopened
[t=0.265665s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.265703s, 431496 KB] g=32, 828 evaluated, 210 expanded, 1 reopened
[t=0.272342s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.272376s, 431496 KB] g=35, 865 evaluated, 219 expanded, 1 reopened
[t=0.277945s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.277982s, 431496 KB] g=38, 896 evaluated, 227 expanded, 1 reopened
[t=0.278727s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.278763s, 431496 KB] g=39, 900 evaluated, 228 expanded, 1 reopened
[t=0.279691s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.279724s, 431496 KB] g=39, 905 evaluated, 230 expanded, 1 reopened
[t=0.281903s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.281936s, 431496 KB] g=41, 917 evaluated, 233 expanded, 1 reopened
[t=0.282861s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.282891s, 431496 KB] g=43, 922 evaluated, 235 expanded, 1 reopened
[t=0.288138s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.288175s, 431496 KB] g=45, 951 evaluated, 246 expanded, 1 reopened
[t=0.291806s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.29184s, 431496 KB] g=48, 971 evaluated, 252 expanded, 1 reopened
[t=0.292592s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.292627s, 431628 KB] g=49, 975 evaluated, 253 expanded, 1 reopened
[t=0.317898s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.317939s, 431628 KB] g=53, 1115 evaluated, 291 expanded, 1 reopened
[t=0.318868s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.318898s, 431628 KB] g=54, 1120 evaluated, 292 expanded, 1 reopened
[t=0.319828s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.319857s, 431628 KB] g=55, 1125 evaluated, 293 expanded, 1 reopened
[t=0.320431s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.320461s, 431628 KB] g=56, 1128 evaluated, 294 expanded, 1 reopened
[t=0.321041s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.321077s, 431628 KB] g=57, 1131 evaluated, 295 expanded, 1 reopened
[t=0.32165s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.321679s, 431628 KB] g=58, 1134 evaluated, 296 expanded, 1 reopened
[t=0.322069s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.322098s, 431628 KB] g=59, 1136 evaluated, 297 expanded, 1 reopened
[t=0.325364s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.325397s, 431628 KB] g=64, 1154 evaluated, 304 expanded, 1 reopened
[t=0.326328s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.326369s, 431628 KB] g=66, 1159 evaluated, 307 expanded, 1 reopened
[t=0.326584s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.326613s, 431628 KB] g=67, 1160 evaluated, 308 expanded, 1 reopened
[t=0.327004s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.327037s, 431628 KB] g=68, 1162 evaluated, 309 expanded, 1 reopened
[t=0.328156s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.328186s, 431628 KB] g=70, 1168 evaluated, 314 expanded, 1 reopened
[t=0.328219s, 431628 KB] Solution found!
[t=0.328246s, 431628 KB] Actual search time: 0.230191s
stack d a (1)
unstack e h (1)
put-down e (1)
unstack d a (1)
stack d k (1)
unstack h j (1)
stack h a (1)
unstack d k (1)
stack d i (1)
unstack j f (1)
stack j k (1)
unstack f l (1)
put-down f (1)
unstack j k (1)
stack j e (1)
pick-up k (1)
stack k f (1)
unstack d i (1)
put-down d (1)
pick-up l (1)
stack l d (1)
unstack h a (1)
stack h j (1)
unstack a b (1)
put-down a (1)
unstack b g (1)
stack b l (1)
pick-up a (1)
stack a k (1)
unstack h j (1)
stack h g (1)
unstack i c (1)
stack i j (1)
pick-up c (1)
stack c b (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k i (1)
pick-up f (1)
stack f a (1)
unstack c b (1)
put-down c (1)
unstack k i (1)
stack k f (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l b (1)
unstack i j (1)
stack i l (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
stack i c (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.328271s, 431628 KB] Plan length: 71 step(s).
[t=0.328271s, 431628 KB] Plan cost: 71
[t=0.328271s, 431628 KB] Expanded 316 state(s).
[t=0.328271s, 431628 KB] Reopened 1 state(s).
[t=0.328271s, 431628 KB] Evaluated 1169 state(s).
[t=0.328271s, 431628 KB] Evaluations: 1169
[t=0.328271s, 431628 KB] Generated 1521 state(s).
[t=0.328271s, 431628 KB] Dead ends: 0 state(s).
[t=0.328271s, 431628 KB] Expanded until last jump: 3 state(s).
[t=0.328271s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.328271s, 431628 KB] Evaluated until last jump: 12 state(s).
[t=0.328271s, 431628 KB] Generated until last jump: 13 state(s).
[t=0.328271s, 431628 KB] Number of registered states: 1169
[t=0.328271s, 431628 KB] Int hash set load factor: 1169/2048 = 0.570801
[t=0.328271s, 431628 KB] Int hash set resizes: 11
[t=0.328271s, 431628 KB] Search time: 0.302004s
[t=0.328271s, 431628 KB] Total time: 0.328271s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p35.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6149e-05s, 424928 KB] reading input...
[t=0.00237746s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0266295s, 427536 KB] Building successor generator...done!
[t=0.0269005s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0269243s, 427536 KB] time for successor generation creation: 0.00016538s
[t=0.0269528s, 427536 KB] Variables: 25
[t=0.0269758s, 427536 KB] FactPairs: 182
[t=0.0269983s, 427536 KB] Bytes per state: 8
[t=0.0272278s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992719s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0993264s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993536s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0993826s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0994086s, 430128 KB] pruning method: none
[t=0.111403s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.111455s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.11805s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118449s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.11849s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.119079s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.119112s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119509s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.119539s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.12066s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.12069s, 431100 KB] g=4, 16 evaluated, 5 expanded
[t=0.121451s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.121481s, 431100 KB] g=5, 20 evaluated, 6 expanded
[t=0.121691s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.121719s, 431100 KB] g=5, 21 evaluated, 6 expanded
[t=0.12193s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.121959s, 431100 KB] g=5, 22 evaluated, 6 expanded
[t=0.134951s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.134986s, 431100 KB] g=9, 92 evaluated, 23 expanded
[t=0.135388s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.135418s, 431100 KB] g=10, 94 evaluated, 24 expanded
[t=0.136178s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.136208s, 431100 KB] g=11, 98 evaluated, 25 expanded
[t=0.153387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.153425s, 431232 KB] g=18, 191 evaluated, 48 expanded
[t=0.154002s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.154031s, 431232 KB] g=19, 194 evaluated, 49 expanded
[t=0.156176s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.156221s, 431232 KB] g=19, 205 evaluated, 51 expanded
[t=0.184461s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.184497s, 431232 KB] g=26, 358 evaluated, 92 expanded
[t=0.187122s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.187161s, 431232 KB] g=29, 372 evaluated, 95 expanded
[t=0.190918s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.190954s, 431232 KB] g=32, 392 evaluated, 100 expanded
[t=0.191349s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.191387s, 431232 KB] g=32, 394 evaluated, 100 expanded
[t=0.193241s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.193273s, 431232 KB] g=34, 404 evaluated, 103 expanded
[t=0.261383s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.261422s, 431364 KB] g=25, 776 evaluated, 189 expanded, 2 reopened
[t=0.263523s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.263561s, 431364 KB] g=27, 787 evaluated, 192 expanded, 2 reopened
[t=0.264729s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.264762s, 431364 KB] g=28, 793 evaluated, 193 expanded, 2 reopened
[t=0.274338s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.274373s, 431364 KB] g=33, 845 evaluated, 208 expanded, 2 reopened
[t=0.277309s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.277345s, 431364 KB] g=35, 861 evaluated, 211 expanded, 2 reopened
[t=0.278277s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.278312s, 431496 KB] g=36, 866 evaluated, 212 expanded, 2 reopened
[t=0.285192s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.285226s, 431496 KB] g=40, 903 evaluated, 225 expanded, 3 reopened
[t=0.295987s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.296024s, 431496 KB] g=39, 961 evaluated, 242 expanded, 3 reopened
[t=0.299896s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.299932s, 431496 KB] g=42, 982 evaluated, 248 expanded, 3 reopened
[t=0.305801s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.305837s, 431496 KB] g=46, 1013 evaluated, 258 expanded, 3 reopened
[t=0.306236s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.306265s, 431496 KB] g=47, 1015 evaluated, 259 expanded, 3 reopened
[t=0.315135s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.315173s, 431496 KB] g=49, 1063 evaluated, 278 expanded, 3 reopened
[t=0.315755s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.315787s, 431496 KB] g=51, 1066 evaluated, 280 expanded, 3 reopened
[t=0.316365s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.316398s, 431496 KB] g=52, 1069 evaluated, 281 expanded, 3 reopened
[t=0.318067s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.3181s, 431496 KB] g=54, 1078 evaluated, 284 expanded, 3 reopened
[t=0.318887s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.318921s, 431496 KB] g=57, 1082 evaluated, 287 expanded, 3 reopened
[t=0.319544s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.319576s, 431496 KB] g=59, 1085 evaluated, 289 expanded, 3 reopened
[t=0.326959s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.326996s, 431496 KB] g=60, 1125 evaluated, 310 expanded, 4 reopened
[t=0.327033s, 431496 KB] Solution found!
[t=0.327062s, 431496 KB] Actual search time: 0.227649s
put-down l (1)
unstack i h (1)
put-down i (1)
unstack g a (1)
stack g l (1)
unstack b d (1)
stack b i (1)
unstack g l (1)
stack g h (1)
unstack d c (1)
put-down d (1)
pick-up c (1)
stack c d (1)
unstack b i (1)
stack b l (1)
unstack g h (1)
put-down g (1)
unstack h e (1)
stack h g (1)
pick-up e (1)
stack e i (1)
unstack c d (1)
stack c b (1)
unstack a k (1)
stack a h (1)
unstack e i (1)
stack e d (1)
pick-up i (1)
stack i c (1)
unstack e d (1)
put-down e (1)
unstack k j (1)
put-down k (1)
unstack j f (1)
stack j e (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.327089s, 431496 KB] Plan length: 61 step(s).
[t=0.327089s, 431496 KB] Plan cost: 61
[t=0.327089s, 431496 KB] Expanded 312 state(s).
[t=0.327089s, 431496 KB] Reopened 4 state(s).
[t=0.327089s, 431496 KB] Evaluated 1126 state(s).
[t=0.327089s, 431496 KB] Evaluations: 1126
[t=0.327089s, 431496 KB] Generated 1483 state(s).
[t=0.327089s, 431496 KB] Dead ends: 0 state(s).
[t=0.327089s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.327089s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.327089s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.327089s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.327089s, 431496 KB] Number of registered states: 1126
[t=0.327089s, 431496 KB] Int hash set load factor: 1126/2048 = 0.549805
[t=0.327089s, 431496 KB] Int hash set resizes: 11
[t=0.327089s, 431496 KB] Search time: 0.299862s
[t=0.327089s, 431496 KB] Total time: 0.327089s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p36.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7042e-05s, 424928 KB] reading input...
[t=0.00213208s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257435s, 427536 KB] Building successor generator...done!
[t=0.0260229s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260462s, 427536 KB] time for successor generation creation: 0.000168544s
[t=0.0260742s, 427536 KB] Variables: 25
[t=0.0260967s, 427536 KB] FactPairs: 182
[t=0.0261183s, 427536 KB] Bytes per state: 8
[t=0.0263124s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977503s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.0978014s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978276s, 430128 KB] f = 103, 1 evaluated, 0 expanded
[t=0.0978551s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.09788s, 430128 KB] pruning method: none
[t=0.116209s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.11626s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.116473s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.116502s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.116902s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.116943s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117336s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.117366s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.121201s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.121234s, 431100 KB] g=4, 30 evaluated, 8 expanded
[t=0.133351s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.133389s, 431100 KB] g=11, 97 evaluated, 21 expanded
[t=0.135397s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.135433s, 431100 KB] g=12, 108 evaluated, 23 expanded
[t=0.147395s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.14743s, 431232 KB] g=18, 174 evaluated, 37 expanded
[t=0.147651s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.14768s, 431232 KB] g=19, 175 evaluated, 38 expanded
[t=0.14789s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.147919s, 431232 KB] g=19, 176 evaluated, 38 expanded
[t=0.149763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.149793s, 431232 KB] g=20, 186 evaluated, 41 expanded
[t=0.155439s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.155476s, 431232 KB] g=22, 217 evaluated, 51 expanded
[t=0.163337s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.163376s, 431232 KB] g=27, 260 evaluated, 64 expanded
[t=0.16432s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.164351s, 431232 KB] g=28, 265 evaluated, 65 expanded
[t=0.165106s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.165138s, 431232 KB] g=29, 269 evaluated, 66 expanded
[t=0.166077s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.16611s, 431232 KB] g=30, 274 evaluated, 68 expanded
[t=0.173752s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.173789s, 431232 KB] g=34, 316 evaluated, 82 expanded
[t=0.174001s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.17403s, 431232 KB] g=34, 317 evaluated, 82 expanded
[t=0.174424s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.174463s, 431232 KB] g=35, 319 evaluated, 83 expanded
[t=0.176144s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.176177s, 431232 KB] g=36, 328 evaluated, 87 expanded
[t=0.18039s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.180423s, 431232 KB] g=41, 351 evaluated, 95 expanded
[t=0.180641s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.18067s, 431232 KB] g=42, 352 evaluated, 96 expanded
[t=0.181604s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.181637s, 431232 KB] g=43, 357 evaluated, 97 expanded
[t=0.19132s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.191361s, 431364 KB] g=44, 410 evaluated, 117 expanded
[t=0.193034s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.193067s, 431364 KB] g=47, 419 evaluated, 121 expanded
[t=0.193466s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.193495s, 431364 KB] g=48, 421 evaluated, 122 expanded
[t=0.194437s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.19447s, 431364 KB] g=50, 426 evaluated, 124 expanded
[t=0.197596s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.197631s, 431364 KB] g=52, 443 evaluated, 130 expanded
[t=0.197844s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.197872s, 431364 KB] g=52, 444 evaluated, 130 expanded
[t=0.198447s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.198477s, 431364 KB] g=53, 447 evaluated, 131 expanded
[t=0.199053s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.199083s, 431364 KB] g=54, 450 evaluated, 132 expanded
[t=0.199483s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.199516s, 431364 KB] g=54, 452 evaluated, 132 expanded
[t=0.200098s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.200128s, 431364 KB] g=56, 455 evaluated, 134 expanded
[t=0.203253s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.203284s, 431364 KB] g=58, 473 evaluated, 143 expanded
[t=0.203312s, 431364 KB] Solution found!
[t=0.203347s, 431364 KB] Actual search time: 0.105463s
unstack j k (1)
put-down j (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack l h (1)
stack l d (1)
unstack g a (1)
stack g h (1)
pick-up b (1)
stack b l (1)
unstack e k (1)
put-down e (1)
pick-up j (1)
stack j e (1)
pick-up a (1)
stack a k (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a j (1)
unstack k f (1)
stack k b (1)
unstack a j (1)
stack a k (1)
pick-up f (1)
stack f j (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack b l (1)
put-down b (1)
unstack j e (1)
stack j b (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.203372s, 431364 KB] Plan length: 58 step(s).
[t=0.203372s, 431364 KB] Plan cost: 58
[t=0.203372s, 431364 KB] Expanded 144 state(s).
[t=0.203372s, 431364 KB] Reopened 0 state(s).
[t=0.203372s, 431364 KB] Evaluated 473 state(s).
[t=0.203372s, 431364 KB] Evaluations: 473
[t=0.203372s, 431364 KB] Generated 617 state(s).
[t=0.203372s, 431364 KB] Dead ends: 0 state(s).
[t=0.203372s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.203372s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.203372s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.203372s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.203372s, 431364 KB] Number of registered states: 473
[t=0.203372s, 431364 KB] Int hash set load factor: 473/512 = 0.923828
[t=0.203372s, 431364 KB] Int hash set resizes: 9
[t=0.203372s, 431364 KB] Search time: 0.17706s
[t=0.203372s, 431364 KB] Total time: 0.203372s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p37.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6698e-05s, 424928 KB] reading input...
[t=0.00222058s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259378s, 427536 KB] Building successor generator...done!
[t=0.0262172s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262409s, 427536 KB] time for successor generation creation: 0.000168194s
[t=0.026269s, 427536 KB] Variables: 25
[t=0.0262919s, 427536 KB] FactPairs: 182
[t=0.0263139s, 427536 KB] Bytes per state: 8
[t=0.0265069s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983355s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0983861s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984123s, 430128 KB] f = 129, 1 evaluated, 0 expanded
[t=0.0984408s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0984646s, 430128 KB] pruning method: none
[t=0.117384s, 431100 KB] f = 134, 7 evaluated, 1 expanded
[t=0.117798s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.117829s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.126083s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.126117s, 431100 KB] g=5, 55 evaluated, 12 expanded
[t=0.127048s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.127084s, 431100 KB] g=6, 60 evaluated, 13 expanded
[t=0.132282s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.132317s, 431100 KB] g=9, 89 evaluated, 19 expanded
[t=0.134313s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.134344s, 431100 KB] g=9, 100 evaluated, 21 expanded
[t=0.138843s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.138879s, 431100 KB] g=12, 125 evaluated, 26 expanded
[t=0.139089s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.139117s, 431100 KB] g=12, 126 evaluated, 26 expanded
[t=0.149687s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.149732s, 431232 KB] g=17, 185 evaluated, 39 expanded
[t=0.156941s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.156977s, 431232 KB] g=15, 225 evaluated, 49 expanded
[t=0.158432s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.158464s, 431232 KB] g=16, 233 evaluated, 50 expanded
[t=0.159228s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.159259s, 431232 KB] g=17, 237 evaluated, 51 expanded
[t=0.161447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.161479s, 431232 KB] g=20, 249 evaluated, 54 expanded
[t=0.161688s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.161716s, 431232 KB] g=20, 250 evaluated, 54 expanded
[t=0.162653s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.162688s, 431232 KB] g=21, 255 evaluated, 55 expanded
[t=0.166333s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.166364s, 431232 KB] g=24, 275 evaluated, 60 expanded
[t=0.174306s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.174342s, 431232 KB] g=26, 319 evaluated, 73 expanded, 1 reopened
[t=0.190883s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.190922s, 431364 KB] g=26, 411 evaluated, 99 expanded, 5 reopened
[t=0.191848s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.191878s, 431364 KB] g=27, 416 evaluated, 100 expanded, 5 reopened
[t=0.19371s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.19374s, 431364 KB] g=31, 426 evaluated, 104 expanded, 5 reopened
[t=0.194864s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.194898s, 431364 KB] g=33, 432 evaluated, 106 expanded, 5 reopened
[t=0.198159s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.198192s, 431364 KB] g=35, 450 evaluated, 113 expanded, 5 reopened
[t=0.19895s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.198981s, 431364 KB] g=36, 454 evaluated, 114 expanded, 5 reopened
[t=0.206606s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.206641s, 431364 KB] g=34, 496 evaluated, 132 expanded, 10 reopened
[t=0.213171s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.213207s, 431364 KB] g=36, 532 evaluated, 148 expanded, 10 reopened
[t=0.214308s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.214337s, 431364 KB] g=38, 538 evaluated, 150 expanded, 10 reopened
[t=0.214738s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.21477s, 431364 KB] g=39, 540 evaluated, 151 expanded, 10 reopened
[t=0.215878s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.215911s, 431364 KB] g=40, 546 evaluated, 155 expanded, 10 reopened
[t=0.216488s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.216518s, 431364 KB] g=41, 550 evaluated, 159 expanded, 10 reopened
[t=0.216545s, 431364 KB] Solution found!
[t=0.216571s, 431364 KB] Actual search time: 0.118103s
stack j i (1)
unstack d g (1)
stack d j (1)
unstack h l (1)
stack h a (1)
unstack g b (1)
put-down g (1)
unstack h a (1)
stack h d (1)
pick-up a (1)
stack a k (1)
unstack l f (1)
put-down l (1)
unstack h d (1)
stack h g (1)
pick-up f (1)
stack f d (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack d j (1)
stack d b (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.216596s, 431364 KB] Plan length: 41 step(s).
[t=0.216596s, 431364 KB] Plan cost: 41
[t=0.216596s, 431364 KB] Expanded 160 state(s).
[t=0.216596s, 431364 KB] Reopened 10 state(s).
[t=0.216596s, 431364 KB] Evaluated 550 state(s).
[t=0.216596s, 431364 KB] Evaluations: 550
[t=0.216596s, 431364 KB] Generated 760 state(s).
[t=0.216596s, 431364 KB] Dead ends: 0 state(s).
[t=0.216596s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.216596s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.216596s, 431364 KB] Evaluated until last jump: 7 state(s).
[t=0.216596s, 431364 KB] Generated until last jump: 6 state(s).
[t=0.216596s, 431364 KB] Number of registered states: 550
[t=0.216596s, 431364 KB] Int hash set load factor: 550/1024 = 0.537109
[t=0.216596s, 431364 KB] Int hash set resizes: 10
[t=0.216596s, 431364 KB] Search time: 0.19009s
[t=0.216596s, 431364 KB] Total time: 0.216596s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6405e-05s, 424928 KB] reading input...
[t=0.00212064s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257559s, 427536 KB] Building successor generator...done!
[t=0.0260353s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026059s, 427536 KB] time for successor generation creation: 0.000168048s
[t=0.0260877s, 427536 KB] Variables: 25
[t=0.0261102s, 427536 KB] FactPairs: 182
[t=0.0261324s, 427536 KB] Bytes per state: 8
[t=0.0263286s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980928s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0981447s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981707s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0981984s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0982229s, 430128 KB] pruning method: none
[t=0.110018s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.11007s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117028s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.117072s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118732s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.118773s, 431100 KB] g=3, 15 evaluated, 4 expanded
[t=0.120262s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.120295s, 431100 KB] g=5, 23 evaluated, 6 expanded
[t=0.122319s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.12235s, 431100 KB] g=6, 34 evaluated, 9 expanded
[t=0.122742s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.122772s, 431100 KB] g=6, 36 evaluated, 9 expanded
[t=0.126067s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.126099s, 431100 KB] g=8, 54 evaluated, 13 expanded
[t=0.12813s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.128162s, 431100 KB] g=10, 65 evaluated, 15 expanded
[t=0.135094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.135128s, 431100 KB] g=11, 103 evaluated, 23 expanded
[t=0.143351s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.143389s, 431100 KB] g=16, 148 evaluated, 33 expanded
[t=0.15448s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.154515s, 431232 KB] g=16, 209 evaluated, 46 expanded
[t=0.155638s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.155669s, 431232 KB] g=17, 215 evaluated, 47 expanded
[t=0.157521s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.157555s, 431232 KB] g=19, 225 evaluated, 49 expanded
[t=0.158128s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.158161s, 431232 KB] g=19, 228 evaluated, 49 expanded
[t=0.15984s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.159872s, 431232 KB] g=21, 237 evaluated, 52 expanded
[t=0.162274s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.162307s, 431232 KB] g=23, 250 evaluated, 55 expanded
[t=0.162706s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.162735s, 431232 KB] g=24, 252 evaluated, 56 expanded
[t=0.163897s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.163933s, 431232 KB] g=25, 258 evaluated, 58 expanded
[t=0.172163s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.172204s, 431232 KB] g=29, 303 evaluated, 69 expanded
[t=0.172601s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.172631s, 431232 KB] g=29, 305 evaluated, 69 expanded
[t=0.174484s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.174514s, 431232 KB] g=31, 315 evaluated, 71 expanded
[t=0.175465s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.175498s, 431232 KB] g=33, 320 evaluated, 73 expanded
[t=0.175707s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.175736s, 431232 KB] g=33, 321 evaluated, 73 expanded
[t=0.177783s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.177816s, 431232 KB] g=36, 332 evaluated, 76 expanded
[t=0.178577s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.17861s, 431232 KB] g=37, 336 evaluated, 77 expanded
[t=0.17919s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.179219s, 431232 KB] g=38, 339 evaluated, 78 expanded
[t=0.179434s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.179463s, 431232 KB] g=39, 340 evaluated, 79 expanded
[t=0.179672s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.179701s, 431232 KB] g=39, 341 evaluated, 79 expanded
[t=0.179923s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.179953s, 431232 KB] g=40, 342 evaluated, 80 expanded
[t=0.183659s, 431232 KB] Solution found!
[t=0.183693s, 431232 KB] Actual search time: 0.0854667s
unstack b a (1)
put-down b (1)
unstack h l (1)
stack h e (1)
unstack l f (1)
stack l k (1)
unstack a g (1)
put-down a (1)
unstack l k (1)
put-down l (1)
unstack h e (1)
stack h b (1)
pick-up f (1)
stack f k (1)
unstack h b (1)
stack h g (1)
pick-up a (1)
stack a h (1)
pick-up b (1)
stack b l (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack i c (1)
put-down i (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d c (1)
pick-up j (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.183719s, 431232 KB] Plan length: 44 step(s).
[t=0.183719s, 431232 KB] Plan cost: 44
[t=0.183719s, 431232 KB] Expanded 93 state(s).
[t=0.183719s, 431232 KB] Reopened 0 state(s).
[t=0.183719s, 431232 KB] Evaluated 363 state(s).
[t=0.183719s, 431232 KB] Evaluations: 363
[t=0.183719s, 431232 KB] Generated 455 state(s).
[t=0.183719s, 431232 KB] Dead ends: 0 state(s).
[t=0.183719s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.183719s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.183719s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.183719s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.183719s, 431232 KB] Number of registered states: 363
[t=0.183719s, 431232 KB] Int hash set load factor: 363/512 = 0.708984
[t=0.183719s, 431232 KB] Int hash set resizes: 9
[t=0.183719s, 431232 KB] Search time: 0.157391s
[t=0.183719s, 431232 KB] Total time: 0.183719s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p39.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5863e-05s, 424928 KB] reading input...
[t=0.00217465s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258215s, 427536 KB] Building successor generator...done!
[t=0.0261021s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261261s, 427536 KB] time for successor generation creation: 0.000169294s
[t=0.0261548s, 427536 KB] Variables: 25
[t=0.0261776s, 427536 KB] FactPairs: 182
[t=0.0261995s, 427536 KB] Bytes per state: 8
[t=0.0263938s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991264s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0991776s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992043s, 430128 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0992327s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0992571s, 430128 KB] pruning method: none
[t=0.117936s, 431100 KB] f = 141, 5 evaluated, 1 expanded
[t=0.118372s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.118403s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118814s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118844s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.119254s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.119283s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.119498s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.119527s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.12183s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.121863s, 431100 KB] g=6, 24 evaluated, 9 expanded
[t=0.123589s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.123619s, 431100 KB] g=8, 33 evaluated, 12 expanded
[t=0.124061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.124092s, 431100 KB] g=9, 35 evaluated, 13 expanded
[t=0.124685s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.124715s, 431100 KB] g=10, 38 evaluated, 14 expanded
[t=0.125129s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.12516s, 431100 KB] g=11, 40 evaluated, 15 expanded
[t=0.128938s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.128968s, 431100 KB] g=16, 60 evaluated, 22 expanded
[t=0.130142s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.130176s, 431100 KB] g=17, 66 evaluated, 23 expanded
[t=0.147173s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.14721s, 431100 KB] g=17, 156 evaluated, 49 expanded
[t=0.152528s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.152562s, 431232 KB] g=22, 184 evaluated, 57 expanded
[t=0.16166s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.161705s, 431232 KB] g=28, 232 evaluated, 67 expanded
[t=0.176265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.176301s, 431232 KB] g=28, 309 evaluated, 87 expanded, 3 reopened
[t=0.199075s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.199111s, 431232 KB] g=27, 430 evaluated, 116 expanded, 3 reopened
[t=0.217437s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.217476s, 431364 KB] g=33, 527 evaluated, 142 expanded, 3 reopened
[t=0.218263s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.218292s, 431364 KB] g=34, 531 evaluated, 143 expanded, 3 reopened
[t=0.219638s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.219669s, 431364 KB] g=36, 538 evaluated, 145 expanded, 3 reopened
[t=0.22045s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.220483s, 431364 KB] g=37, 542 evaluated, 146 expanded, 3 reopened
[t=0.233027s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.233063s, 431364 KB] g=45, 608 evaluated, 170 expanded, 3 reopened
[t=0.243285s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.243325s, 431496 KB] g=47, 662 evaluated, 184 expanded, 3 reopened
[t=0.249218s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.249252s, 431496 KB] g=51, 693 evaluated, 190 expanded, 3 reopened
[t=0.257005s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.25704s, 431496 KB] g=53, 734 evaluated, 201 expanded, 3 reopened
[t=0.27462s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.274656s, 431496 KB] g=59, 827 evaluated, 225 expanded, 3 reopened
[t=0.275441s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.275473s, 431496 KB] g=60, 831 evaluated, 226 expanded, 3 reopened
[t=0.27569s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.275719s, 431496 KB] g=60, 832 evaluated, 226 expanded, 3 reopened
[t=0.276505s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.276536s, 431496 KB] g=61, 836 evaluated, 227 expanded, 3 reopened
[t=0.278659s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.278698s, 431496 KB] g=62, 847 evaluated, 231 expanded, 3 reopened
[t=0.28062s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.280654s, 431496 KB] g=64, 857 evaluated, 234 expanded, 3 reopened
[t=0.286385s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.286422s, 431496 KB] g=62, 887 evaluated, 244 expanded, 3 reopened
[t=0.298552s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.29859s, 431496 KB] g=62, 951 evaluated, 263 expanded, 3 reopened
[t=0.299002s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.299031s, 431496 KB] g=63, 953 evaluated, 264 expanded, 3 reopened
[t=0.30732s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.307357s, 431628 KB] g=67, 996 evaluated, 292 expanded, 17 reopened
[t=0.308913s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.308948s, 431628 KB] g=68, 1004 evaluated, 295 expanded, 17 reopened
[t=0.311072s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.311102s, 431628 KB] g=71, 1015 evaluated, 298 expanded, 17 reopened
[t=0.312083s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.312114s, 431628 KB] g=72, 1020 evaluated, 300 expanded, 17 reopened
[t=0.320599s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.320637s, 431628 KB] g=76, 1064 evaluated, 318 expanded, 17 reopened
[t=0.321257s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.321289s, 431628 KB] g=77, 1067 evaluated, 319 expanded, 17 reopened
[t=0.32323s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.32326s, 431628 KB] g=78, 1077 evaluated, 326 expanded, 17 reopened
[t=0.323682s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.323712s, 431628 KB] g=79, 1080 evaluated, 330 expanded, 17 reopened
[t=0.323738s, 431628 KB] Solution found!
[t=0.323765s, 431628 KB] Actual search time: 0.224504s
stack d c (1)
unstack j h (1)
stack j d (1)
unstack g e (1)
stack g h (1)
unstack j d (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack c a (1)
stack c d (1)
unstack a i (1)
put-down a (1)
unstack c d (1)
put-down c (1)
pick-up a (1)
stack a d (1)
unstack g h (1)
put-down g (1)
unstack h l (1)
put-down h (1)
unstack l f (1)
put-down l (1)
pick-up f (1)
stack f i (1)
unstack a d (1)
stack a f (1)
pick-up h (1)
stack h g (1)
pick-up l (1)
stack l d (1)
unstack a f (1)
stack a h (1)
unstack f i (1)
stack f a (1)
pick-up i (1)
stack i c (1)
unstack l d (1)
put-down l (1)
unstack i c (1)
stack i l (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
put-down j (1)
unstack i l (1)
stack i j (1)
pick-up l (1)
stack l d (1)
unstack e k (1)
stack e i (1)
unstack k b (1)
stack k f (1)
pick-up b (1)
stack b c (1)
unstack e i (1)
stack e k (1)
unstack i j (1)
stack i l (1)
pick-up j (1)
stack j e (1)
unstack i l (1)
put-down i (1)
unstack b c (1)
put-down b (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
pick-up b (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.32379s, 431628 KB] Plan length: 79 step(s).
[t=0.32379s, 431628 KB] Plan cost: 79
[t=0.32379s, 431628 KB] Expanded 331 state(s).
[t=0.32379s, 431628 KB] Reopened 17 state(s).
[t=0.32379s, 431628 KB] Evaluated 1080 state(s).
[t=0.32379s, 431628 KB] Evaluations: 1080
[t=0.32379s, 431628 KB] Generated 1503 state(s).
[t=0.32379s, 431628 KB] Dead ends: 0 state(s).
[t=0.32379s, 431628 KB] Expanded until last jump: 1 state(s).
[t=0.32379s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.32379s, 431628 KB] Evaluated until last jump: 5 state(s).
[t=0.32379s, 431628 KB] Generated until last jump: 4 state(s).
[t=0.32379s, 431628 KB] Number of registered states: 1080
[t=0.32379s, 431628 KB] Int hash set load factor: 1080/2048 = 0.527344
[t=0.32379s, 431628 KB] Int hash set resizes: 11
[t=0.32379s, 431628 KB] Search time: 0.297397s
[t=0.32379s, 431628 KB] Total time: 0.32379s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p40.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7992e-05s, 424928 KB] reading input...
[t=0.00223383s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025821s, 427536 KB] Building successor generator...done!
[t=0.0261029s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261264s, 427536 KB] time for successor generation creation: 0.000171003s
[t=0.0261551s, 427536 KB] Variables: 25
[t=0.0261781s, 427536 KB] FactPairs: 182
[t=0.0262001s, 427536 KB] Bytes per state: 8
[t=0.0263952s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980831s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0981357s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981623s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.09819s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0982145s, 430128 KB] pruning method: none
[t=0.116935s, 431100 KB] f = 142, 6 evaluated, 1 expanded
[t=0.117533s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.117564s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.121207s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.12124s, 431100 KB] g=6, 29 evaluated, 6 expanded
[t=0.124336s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.124369s, 431100 KB] g=7, 46 evaluated, 10 expanded
[t=0.128911s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.128944s, 431100 KB] g=12, 71 evaluated, 17 expanded
[t=0.13188s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.131916s, 431100 KB] g=16, 87 evaluated, 24 expanded
[t=0.145176s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.145212s, 431100 KB] g=21, 160 evaluated, 49 expanded
[t=0.151032s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.151068s, 431232 KB] g=27, 192 evaluated, 57 expanded
[t=0.152918s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.15295s, 431232 KB] g=30, 202 evaluated, 60 expanded
[t=0.154421s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.15446s, 431232 KB] g=29, 210 evaluated, 62 expanded
[t=0.157377s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.157413s, 431232 KB] g=32, 226 evaluated, 66 expanded
[t=0.158883s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.158916s, 431232 KB] g=34, 234 evaluated, 68 expanded
[t=0.15951s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.159541s, 431232 KB] g=35, 237 evaluated, 69 expanded
[t=0.179856s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.179892s, 431232 KB] g=44, 350 evaluated, 92 expanded
[t=0.191903s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.191938s, 431232 KB] g=44, 417 evaluated, 105 expanded
[t=0.192327s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.192362s, 431364 KB] g=44, 419 evaluated, 105 expanded
[t=0.192755s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.192785s, 431364 KB] g=45, 421 evaluated, 106 expanded
[t=0.19389s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.193921s, 431364 KB] g=46, 427 evaluated, 107 expanded
[t=0.200927s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.200962s, 431364 KB] g=48, 466 evaluated, 115 expanded
[t=0.201172s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.201201s, 431364 KB] g=48, 467 evaluated, 115 expanded
[t=0.209336s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.209373s, 431364 KB] g=50, 512 evaluated, 125 expanded
[t=0.21781s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.217847s, 431364 KB] g=52, 559 evaluated, 135 expanded
[t=0.228092s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.22813s, 431364 KB] g=58, 616 evaluated, 148 expanded
[t=0.235314s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.235351s, 431364 KB] g=56, 656 evaluated, 158 expanded
[t=0.235921s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.235951s, 431364 KB] g=57, 659 evaluated, 159 expanded
[t=0.237941s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.237982s, 431364 KB] g=59, 670 evaluated, 161 expanded
[t=0.261342s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.261379s, 431496 KB] g=63, 800 evaluated, 197 expanded
[t=0.261777s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.261806s, 431496 KB] g=64, 802 evaluated, 198 expanded
[t=0.262014s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.262046s, 431496 KB] g=64, 803 evaluated, 198 expanded
[t=0.26586s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.265894s, 431496 KB] g=67, 824 evaluated, 204 expanded
[t=0.27023s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.270267s, 431496 KB] g=67, 848 evaluated, 210 expanded
[t=0.270479s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.270509s, 431496 KB] g=68, 849 evaluated, 211 expanded
[t=0.272702s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.272734s, 431496 KB] g=70, 861 evaluated, 214 expanded
[t=0.279257s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.279291s, 431496 KB] g=74, 897 evaluated, 231 expanded, 2 reopened
[t=0.281321s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.281352s, 431496 KB] g=76, 908 evaluated, 237 expanded, 2 reopened
[t=0.281383s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_1.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.281407s, 431496 KB] g=77, 909 evaluated, 238 expanded, 2 reopened
[t=0.281434s, 431496 KB] Solution found!
[t=0.28146s, 431496 KB] Actual search time: 0.183242s
put-down h (1)
unstack d g (1)
stack d j (1)
unstack g k (1)
put-down g (1)
pick-up h (1)
stack h a (1)
pick-up k (1)
stack k c (1)
pick-up g (1)
stack g h (1)
unstack k c (1)
stack k g (1)
unstack d j (1)
put-down d (1)
unstack c f (1)
stack c k (1)
unstack j l (1)
stack j f (1)
unstack l i (1)
put-down l (1)
unstack i e (1)
stack i c (1)
unstack e b (1)
stack e j (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
unstack c k (1)
stack c d (1)
unstack k g (1)
stack k b (1)
unstack e j (1)
stack e k (1)
unstack j f (1)
put-down j (1)
unstack g h (1)
put-down g (1)
unstack e k (1)
stack e i (1)
pick-up f (1)
stack f k (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack e i (1)
stack e j (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack c d (1)
stack c b (1)
unstack e j (1)
stack e d (1)
pick-up j (1)
stack j c (1)
unstack e d (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.281485s, 431496 KB] Plan length: 77 step(s).
[t=0.281485s, 431496 KB] Plan cost: 77
[t=0.281485s, 431496 KB] Expanded 239 state(s).
[t=0.281485s, 431496 KB] Reopened 2 state(s).
[t=0.281485s, 431496 KB] Evaluated 909 state(s).
[t=0.281485s, 431496 KB] Evaluations: 909
[t=0.281485s, 431496 KB] Generated 1173 state(s).
[t=0.281485s, 431496 KB] Dead ends: 0 state(s).
[t=0.281485s, 431496 KB] Expanded until last jump: 1 state(s).
[t=0.281485s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.281485s, 431496 KB] Evaluated until last jump: 6 state(s).
[t=0.281485s, 431496 KB] Generated until last jump: 5 state(s).
[t=0.281485s, 431496 KB] Number of registered states: 909
[t=0.281485s, 431496 KB] Int hash set load factor: 909/1024 = 0.887695
[t=0.281485s, 431496 KB] Int hash set resizes: 10
[t=0.281485s, 431496 KB] Search time: 0.25509s
[t=0.281485s, 431496 KB] Total time: 0.281485s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023823
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 1 test success: 20 of 20 (100.0%)

---------- FOLD 3/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 166 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.06885993480682373 (0.5214669704437256 vs. 0.45260703563690186), which occurred at index 100.
  _module_class,
 | avg_train_loss=0.099673 | avg_val_loss=0.091270
Epoch 2 | avg_train_loss=0.063403 | avg_val_loss=0.045072
Epoch 3 | avg_train_loss=0.042624 | avg_val_loss=0.039360
Epoch 4 | avg_train_loss=0.038931 | avg_val_loss=0.037343
Epoch 5 | avg_train_loss=0.037169 | avg_val_loss=0.036344
Epoch 6 | avg_train_loss=0.036110 | avg_val_loss=0.035708
Epoch 7 | avg_train_loss=0.035346 | avg_val_loss=0.034669
Epoch 8 | avg_train_loss=0.034668 | avg_val_loss=0.033954
Epoch 9 | avg_train_loss=0.033876 | avg_val_loss=0.033132
Epoch 10 | avg_train_loss=0.033394 | avg_val_loss=0.032851
Epoch 11 | avg_train_loss=0.032761 | avg_val_loss=0.032043
Epoch 12 | avg_train_loss=0.032472 | avg_val_loss=0.031648
Epoch 13 | avg_train_loss=0.032076 | avg_val_loss=0.031878
Epoch 14 | avg_train_loss=0.031769 | avg_val_loss=0.031280
Epoch 15 | avg_train_loss=0.031403 | avg_val_loss=0.030630
Epoch 16 | avg_train_loss=0.031009 | avg_val_loss=0.030664
Epoch 17 | avg_train_loss=0.030806 | avg_val_loss=0.029642
Epoch 18 | avg_train_loss=0.030413 | avg_val_loss=0.030114
Epoch 19 | avg_train_loss=0.030292 | avg_val_loss=0.029523
Epoch 20 | avg_train_loss=0.030006 | avg_val_loss=0.029248
Epoch 21 | avg_train_loss=0.029736 | avg_val_loss=0.029325
Epoch 22 | avg_train_loss=0.029578 | avg_val_loss=0.028921
Epoch 23 | avg_train_loss=0.029258 | avg_val_loss=0.028826
Epoch 24 | avg_train_loss=0.029009 | avg_val_loss=0.028620
Epoch 25 | avg_train_loss=0.028750 | avg_val_loss=0.028244
Epoch 26 | avg_train_loss=0.028630 | avg_val_loss=0.028389
Epoch 27 | avg_train_loss=0.028540 | avg_val_loss=0.027522
Epoch 28 | avg_train_loss=0.028211 | avg_val_loss=0.028212
Epoch 29 | avg_train_loss=0.028055 | avg_val_loss=0.027980
Epoch 30 | avg_train_loss=0.027822 | avg_val_loss=0.027589
Epoch 31 | avg_train_loss=0.027604 | avg_val_loss=0.027593
Epoch 32 | avg_train_loss=0.027471 | avg_val_loss=0.026832
Epoch 33 | avg_train_loss=0.027281 | avg_val_loss=0.027327
Epoch 34 | avg_train_loss=0.027142 | avg_val_loss=0.026607
Epoch 35 | avg_train_loss=0.026698 | avg_val_loss=0.026790
Epoch 36 | avg_train_loss=0.026735 | avg_val_loss=0.026216
Epoch 37 | avg_train_loss=0.026568 | avg_val_loss=0.026310
Epoch 38 | avg_train_loss=0.026238 | avg_val_loss=0.026088
Epoch 39 | avg_train_loss=0.026151 | avg_val_loss=0.026044
Epoch 40 | avg_train_loss=0.025977 | avg_val_loss=0.026205
Epoch 41 | avg_train_loss=0.025827 | avg_val_loss=0.025908
Epoch 42 | avg_train_loss=0.025733 | avg_val_loss=0.025331
Epoch 43 | avg_train_loss=0.025425 | avg_val_loss=0.025342
Epoch 44 | avg_train_loss=0.025351 | avg_val_loss=0.025296
Epoch 45 | avg_train_loss=0.025239 | avg_val_loss=0.025021
Epoch 46 | avg_train_loss=0.025015 | avg_val_loss=0.025332
Epoch 47 | avg_train_loss=0.024893 | avg_val_loss=0.024820
Epoch 48 | avg_train_loss=0.024775 | avg_val_loss=0.024796
Epoch 49 | avg_train_loss=0.024585 | avg_val_loss=0.024873
Epoch 50 | avg_train_loss=0.024472 | avg_val_loss=0.025029
Epoch 51 | avg_train_loss=0.024330 | avg_val_loss=0.025299
Epoch 52 | avg_train_loss=0.024231 | avg_val_loss=0.025291
Epoch 53 | avg_train_loss=0.024096 | avg_val_loss=0.024324
Epoch 54 | avg_train_loss=0.024015 | avg_val_loss=0.025029
Epoch 55 | avg_train_loss=0.023766 | avg_val_loss=0.024881
Epoch 56 | avg_train_loss=0.023808 | avg_val_loss=0.024426
Epoch 57 | avg_train_loss=0.023677 | avg_val_loss=0.024493
Epoch 58 | avg_train_loss=0.023662 | avg_val_loss=0.023897
Epoch 59 | avg_train_loss=0.023481 | avg_val_loss=0.024541
Epoch 60 | avg_train_loss=0.023357 | avg_val_loss=0.024368
Epoch 61 | avg_train_loss=0.023240 | avg_val_loss=0.023940
Epoch 62 | avg_train_loss=0.023058 | avg_val_loss=0.023847
Epoch 63 | avg_train_loss=0.023023 | avg_val_loss=0.023914
Epoch 64 | avg_train_loss=0.022843 | avg_val_loss=0.023783
Epoch 65 | avg_train_loss=0.022990 | avg_val_loss=0.024289
Epoch 66 | avg_train_loss=0.022758 | avg_val_loss=0.023727
Epoch 67 | avg_train_loss=0.022647 | avg_val_loss=0.023568
Epoch 68 | avg_train_loss=0.022611 | avg_val_loss=0.023929
Epoch 69 | avg_train_loss=0.022504 | avg_val_loss=0.024644
Epoch 70 | avg_train_loss=0.022340 | avg_val_loss=0.024074
Epoch 71 | avg_train_loss=0.022426 | avg_val_loss=0.023792
Epoch 72 | avg_train_loss=0.022291 | avg_val_loss=0.023367
Epoch 73 | avg_train_loss=0.022205 | avg_val_loss=0.024065
Epoch 74 | avg_train_loss=0.022042 | avg_val_loss=0.023878
Epoch 75 | avg_train_loss=0.022050 | avg_val_loss=0.023113
Epoch 76 | avg_train_loss=0.021947 | avg_val_loss=0.023595
Epoch 77 | avg_train_loss=0.021655 | avg_val_loss=0.023548
Epoch 78 | avg_train_loss=0.021661 | avg_val_loss=0.023858
Epoch 79 | avg_train_loss=0.021519 | avg_val_loss=0.023704
Epoch 80 | avg_train_loss=0.021692 | avg_val_loss=0.023551
Epoch 81 | avg_train_loss=0.021381 | avg_val_loss=0.023297
Epoch 82 | avg_train_loss=0.021608 | avg_val_loss=0.023323
Epoch 83 | avg_train_loss=0.021360 | avg_val_loss=0.023868
Epoch 84 | avg_train_loss=0.021326 | avg_val_loss=0.023416
Epoch 85 | avg_train_loss=0.021184 | avg_val_loss=0.023670
Epoch 86 | avg_train_loss=0.020932 | avg_val_loss=0.023243
Epoch 87 | avg_train_loss=0.021050 | avg_val_loss=0.022863
Epoch 88 | avg_train_loss=0.020976 | avg_val_loss=0.022939
Epoch 89 | avg_train_loss=0.020808 | avg_val_loss=0.022926
Epoch 90 | avg_train_loss=0.020864 | avg_val_loss=0.023027
Epoch 91 | avg_train_loss=0.020748 | avg_val_loss=0.023293
Epoch 92 | avg_train_loss=0.020631 | avg_val_loss=0.023512
Epoch 93 | avg_train_loss=0.020638 | avg_val_loss=0.023201
Epoch 94 | avg_train_loss=0.020505 | avg_val_loss=0.023343
Epoch 95 | avg_train_loss=0.020478 | avg_val_loss=0.023375
Epoch 96 | avg_train_loss=0.020371 | avg_val_loss=0.023039
Epoch 97 | avg_train_loss=0.020524 | avg_val_loss=0.023534
Epoch 98 | avg_train_loss=0.020395 | avg_val_loss=0.023354
Epoch 99 | avg_train_loss=0.020382 | avg_val_loss=0.023093
Epoch 100 | avg_train_loss=0.020029 | avg_val_loss=0.023174
Epoch 101 | avg_train_loss=0.019993 | avg_val_loss=0.023006
Epoch 102 | avg_train_loss=0.020011INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p41.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6286e-05s, 424928 KB] reading input...
[t=0.00221041s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0264583s, 427536 KB] Building successor generator...done!
[t=0.0267572s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0267804s, 427536 KB] time for successor generation creation: 0.000184597s
[t=0.0268088s, 427536 KB] Variables: 25
[t=0.0268323s, 427536 KB] FactPairs: 182
[t=0.0268551s, 427536 KB] Bytes per state: 8
[t=0.0270484s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106825s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.106878s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106903s, 430128 KB] f = 136, 1 evaluated, 0 expanded
[t=0.106931s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.106955s, 430128 KB] pruning method: none
[t=0.125833s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.125893s, 431100 KB] g=1, 7 evaluated, 1 expanded
[t=0.126826s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.126856s, 431100 KB] g=2, 12 evaluated, 2 expanded
[t=0.127248s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.127298s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.128779s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.12881s, 431100 KB] g=4, 22 evaluated, 5 expanded
[t=0.12902s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.129049s, 431100 KB] g=4, 23 evaluated, 5 expanded
[t=0.129798s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.129828s, 431100 KB] g=5, 27 evaluated, 6 expanded
[t=0.130218s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.130247s, 431100 KB] g=5, 29 evaluated, 6 expanded
[t=0.131s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.13103s, 431100 KB] g=6, 33 evaluated, 7 expanded
[t=0.13521s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.135243s, 431100 KB] g=7, 56 evaluated, 13 expanded
[t=0.148859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.148896s, 431100 KB] g=7, 131 evaluated, 33 expanded
[t=0.159548s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.159584s, 431100 KB] g=13, 190 evaluated, 45 expanded
[t=0.161596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.161629s, 431100 KB] g=14, 201 evaluated, 47 expanded
[t=0.164552s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.164588s, 431232 KB] g=16, 217 evaluated, 50 expanded
[t=0.164801s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.16483s, 431232 KB] g=16, 218 evaluated, 50 expanded
[t=0.170636s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.170669s, 431232 KB] g=17, 250 evaluated, 56 expanded
[t=0.173256s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.173291s, 431232 KB] g=20, 264 evaluated, 59 expanded
[t=0.182536s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.182576s, 431232 KB] g=25, 315 evaluated, 71 expanded
[t=0.191985s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.192021s, 431232 KB] g=28, 367 evaluated, 84 expanded
[t=0.194211s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.194242s, 431232 KB] g=20, 379 evaluated, 87 expanded
[t=0.205408s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.205447s, 431364 KB] g=24, 441 evaluated, 103 expanded
[t=0.206372s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.206401s, 431364 KB] g=25, 446 evaluated, 104 expanded
[t=0.207153s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.207185s, 431364 KB] g=26, 450 evaluated, 105 expanded
[t=0.210472s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.210504s, 431364 KB] g=30, 468 evaluated, 109 expanded
[t=0.212876s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.212908s, 431364 KB] g=32, 481 evaluated, 112 expanded
[t=0.214381s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.214411s, 431364 KB] g=34, 489 evaluated, 114 expanded
[t=0.216619s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.216652s, 431364 KB] g=37, 501 evaluated, 118 expanded
[t=0.224102s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.224136s, 431364 KB] g=42, 542 evaluated, 131 expanded
[t=0.226677s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.226708s, 431364 KB] g=42, 556 evaluated, 134 expanded
[t=0.237375s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.23741s, 431364 KB] g=48, 615 evaluated, 150 expanded
[t=0.270061s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.270101s, 431496 KB] g=50, 796 evaluated, 207 expanded, 4 reopened
[t=0.270858s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.270887s, 431496 KB] g=51, 800 evaluated, 208 expanded, 4 reopened
[t=0.271838s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.27187s, 431496 KB] g=52, 805 evaluated, 209 expanded, 4 reopened
[t=0.273171s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.273207s, 431496 KB] g=55, 812 evaluated, 212 expanded, 4 reopened
[t=0.280708s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.280742s, 431496 KB] g=56, 853 evaluated, 238 expanded, 5 reopened
[t=0.285497s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.28553s, 431496 KB] g=57, 879 evaluated, 249 expanded, 5 reopened
[t=0.28593s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.285959s, 431496 KB] g=58, 881 evaluated, 250 expanded, 5 reopened
[t=0.28599s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.286014s, 431496 KB] g=59, 882 evaluated, 251 expanded, 5 reopened
[t=0.28604s, 431496 KB] Solution found!
[t=0.286066s, 431496 KB] Actual search time: 0.179107s
put-down j (1)
pick-up l (1)
stack l d (1)
unstack b g (1)
put-down b (1)
unstack l d (1)
stack l i (1)
pick-up j (1)
stack j b (1)
unstack d e (1)
put-down d (1)
unstack e h (1)
stack e d (1)
unstack j b (1)
stack j e (1)
pick-up b (1)
stack b j (1)
unstack h c (1)
stack h g (1)
unstack l i (1)
put-down l (1)
unstack b j (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack a k (1)
stack a c (1)
unstack k f (1)
stack k j (1)
pick-up f (1)
stack f i (1)
unstack a c (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack c b (1)
put-down c (1)
unstack j e (1)
stack j i (1)
unstack e d (1)
stack e k (1)
pick-up d (1)
stack d b (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.286091s, 431496 KB] Plan length: 59 step(s).
[t=0.286091s, 431496 KB] Plan cost: 59
[t=0.286091s, 431496 KB] Expanded 252 state(s).
[t=0.286091s, 431496 KB] Reopened 5 state(s).
[t=0.286091s, 431496 KB] Evaluated 882 state(s).
[t=0.286091s, 431496 KB] Evaluations: 882
[t=0.286091s, 431496 KB] Generated 1183 state(s).
[t=0.286091s, 431496 KB] Dead ends: 0 state(s).
[t=0.286091s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.286091s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.286091s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.286091s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.286091s, 431496 KB] Number of registered states: 882
[t=0.286091s, 431496 KB] Int hash set load factor: 882/1024 = 0.861328
[t=0.286091s, 431496 KB] Int hash set resizes: 10
[t=0.286091s, 431496 KB] Search time: 0.259043s
[t=0.286091s, 431496 KB] Total time: 0.286091s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p42.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5736e-05s, 424928 KB] reading input...
[t=0.0021244s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025972s, 427536 KB] Building successor generator...done!
[t=0.0262539s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262777s, 427536 KB] time for successor generation creation: 0.000168172s
[t=0.0263056s, 427536 KB] Variables: 25
[t=0.0263279s, 427536 KB] FactPairs: 182
[t=0.0263501s, 427536 KB] Bytes per state: 8
[t=0.0265695s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990415s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0990929s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.099119s, 430128 KB] f = 154, 1 evaluated, 0 expanded
[t=0.0991473s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0991717s, 430128 KB] pruning method: none
[t=0.111046s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.111098s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.119041s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.119096s, 431100 KB] g=3, 11 evaluated, 4 expanded
[t=0.119877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.119906s, 431100 KB] g=4, 15 evaluated, 5 expanded
[t=0.121253s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.121283s, 431100 KB] g=5, 22 evaluated, 7 expanded
[t=0.121872s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.121902s, 431100 KB] g=5, 25 evaluated, 7 expanded
[t=0.124001s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.124033s, 431100 KB] g=7, 36 evaluated, 10 expanded
[t=0.139498s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.139533s, 431100 KB] g=11, 118 evaluated, 28 expanded
[t=0.14427s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.144306s, 431100 KB] g=15, 143 evaluated, 33 expanded
[t=0.14754s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.147573s, 431100 KB] g=18, 160 evaluated, 37 expanded
[t=0.150621s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.150653s, 431232 KB] g=21, 176 evaluated, 40 expanded
[t=0.151814s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.151846s, 431232 KB] g=23, 182 evaluated, 42 expanded
[t=0.155085s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.155118s, 431232 KB] g=25, 199 evaluated, 45 expanded
[t=0.15553s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.155562s, 431232 KB] g=26, 201 evaluated, 46 expanded
[t=0.165002s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.165035s, 431232 KB] g=31, 251 evaluated, 55 expanded
[t=0.165823s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.165853s, 431232 KB] g=32, 255 evaluated, 56 expanded
[t=0.166071s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.1661s, 431232 KB] g=32, 256 evaluated, 56 expanded
[t=0.167303s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.167335s, 431232 KB] g=33, 262 evaluated, 58 expanded
[t=0.168681s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.168716s, 431232 KB] g=34, 269 evaluated, 59 expanded
[t=0.172683s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.172716s, 431232 KB] g=35, 290 evaluated, 64 expanded
[t=0.177071s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.177106s, 431232 KB] g=37, 313 evaluated, 71 expanded
[t=0.1794s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.179433s, 431232 KB] g=37, 325 evaluated, 76 expanded
[t=0.194819s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.194859s, 431364 KB] g=39, 407 evaluated, 98 expanded
[t=0.195269s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.195299s, 431364 KB] g=40, 409 evaluated, 99 expanded
[t=0.199097s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.199132s, 431364 KB] g=44, 429 evaluated, 104 expanded
[t=0.200102s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.200131s, 431364 KB] g=45, 434 evaluated, 105 expanded
[t=0.239307s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.239346s, 431496 KB] g=46, 641 evaluated, 164 expanded
[t=0.254988s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.255027s, 431496 KB] g=61, 724 evaluated, 187 expanded
[t=0.257118s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.257151s, 431496 KB] g=64, 735 evaluated, 190 expanded
[t=0.258122s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.258151s, 431496 KB] g=66, 740 evaluated, 192 expanded
[t=0.271343s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.271381s, 431496 KB] g=70, 809 evaluated, 217 expanded
[t=0.271974s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.272004s, 431496 KB] g=71, 812 evaluated, 218 expanded
[t=0.272597s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.272626s, 431496 KB] g=72, 815 evaluated, 219 expanded
[t=0.273406s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.273438s, 431496 KB] g=75, 819 evaluated, 222 expanded
[t=0.42101s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.421064s, 431892 KB] g=74, 1598 evaluated, 636 expanded, 139 reopened
[t=0.421096s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.42112s, 431892 KB] g=75, 1599 evaluated, 637 expanded, 139 reopened
[t=0.421146s, 431892 KB] Solution found!
[t=0.421172s, 431892 KB] Actual search time: 0.321996s
put-down b (1)
unstack e g (1)
stack e b (1)
unstack c h (1)
put-down c (1)
unstack g k (1)
stack g h (1)
unstack e b (1)
put-down e (1)
pick-up c (1)
stack c b (1)
unstack k l (1)
stack k e (1)
unstack l f (1)
put-down l (1)
unstack k e (1)
stack k c (1)
pick-up e (1)
stack e l (1)
unstack g h (1)
stack g i (1)
unstack h d (1)
stack h g (1)
unstack k c (1)
put-down k (1)
unstack d a (1)
stack d f (1)
unstack a j (1)
stack a h (1)
pick-up j (1)
stack j e (1)
unstack d f (1)
stack d j (1)
pick-up f (1)
stack f d (1)
unstack a h (1)
stack a k (1)
unstack h g (1)
stack h a (1)
unstack g i (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack f d (1)
stack f i (1)
unstack a k (1)
stack a h (1)
unstack f i (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack d j (1)
stack d i (1)
unstack j e (1)
put-down j (1)
unstack e l (1)
stack e k (1)
unstack d i (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b i (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.421196s, 431892 KB] Plan length: 75 step(s).
[t=0.421196s, 431892 KB] Plan cost: 75
[t=0.421196s, 431892 KB] Expanded 638 state(s).
[t=0.421196s, 431892 KB] Reopened 139 state(s).
[t=0.421196s, 431892 KB] Evaluated 1599 state(s).
[t=0.421196s, 431892 KB] Evaluations: 1599
[t=0.421196s, 431892 KB] Generated 2648 state(s).
[t=0.421196s, 431892 KB] Dead ends: 0 state(s).
[t=0.421196s, 431892 KB] Expanded until last jump: 0 state(s).
[t=0.421196s, 431892 KB] Reopened until last jump: 0 state(s).
[t=0.421196s, 431892 KB] Evaluated until last jump: 1 state(s).
[t=0.421196s, 431892 KB] Generated until last jump: 0 state(s).
[t=0.421196s, 431892 KB] Number of registered states: 1599
[t=0.421196s, 431892 KB] Int hash set load factor: 1599/2048 = 0.780762
[t=0.421196s, 431892 KB] Int hash set resizes: 11
[t=0.421196s, 431892 KB] Search time: 0.394628s
[t=0.421196s, 431892 KB] Total time: 0.421196s
Solution found.
Peak memory: 431892 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p43.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.661e-05s, 424928 KB] reading input...
[t=0.00213476s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258085s, 427536 KB] Building successor generator...done!
[t=0.0260866s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261107s, 427536 KB] time for successor generation creation: 0.000165321s
[t=0.0261397s, 427536 KB] Variables: 25
[t=0.0261631s, 427536 KB] FactPairs: 182
[t=0.0261859s, 427536 KB] Bytes per state: 8
[t=0.0263793s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980599s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0981116s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981375s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.098165s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0981891s, 430128 KB] pruning method: none
[t=0.109992s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.110044s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11651s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.116553s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117139s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.11717s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.119005s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.119038s, 431100 KB] g=5, 16 evaluated, 6 expanded
[t=0.121584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.121625s, 431100 KB] g=8, 30 evaluated, 10 expanded
[t=0.125966s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.125999s, 431100 KB] g=11, 54 evaluated, 18 expanded
[t=0.126757s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.126789s, 431100 KB] g=12, 58 evaluated, 19 expanded
[t=0.128261s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.128297s, 431100 KB] g=14, 66 evaluated, 21 expanded
[t=0.129581s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.129611s, 431100 KB] g=15, 73 evaluated, 23 expanded
[t=0.131811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.131843s, 431100 KB] g=14, 85 evaluated, 26 expanded
[t=0.138151s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.138186s, 431100 KB] g=21, 120 evaluated, 37 expanded
[t=0.140758s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.140794s, 431100 KB] g=24, 134 evaluated, 41 expanded
[t=0.146548s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.146584s, 431100 KB] g=20, 166 evaluated, 50 expanded
[t=0.146973s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.147002s, 431100 KB] g=20, 168 evaluated, 50 expanded
[t=0.15278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.152815s, 431232 KB] g=24, 200 evaluated, 59 expanded
[t=0.15356s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.153593s, 431232 KB] g=25, 204 evaluated, 60 expanded
[t=0.153986s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.154016s, 431232 KB] g=26, 206 evaluated, 61 expanded
[t=0.15674s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.156775s, 431232 KB] g=28, 221 evaluated, 65 expanded
[t=0.158971s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.159006s, 431232 KB] g=32, 233 evaluated, 70 expanded
[t=0.163372s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.163405s, 431232 KB] g=33, 257 evaluated, 79 expanded
[t=0.166122s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.166162s, 431232 KB] g=36, 272 evaluated, 85 expanded
[t=0.20744s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.207478s, 431364 KB] g=37, 503 evaluated, 170 expanded, 8 reopened
[t=0.218833s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.218868s, 431364 KB] g=34, 566 evaluated, 188 expanded, 8 reopened
[t=0.222122s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.222153s, 431364 KB] g=36, 584 evaluated, 193 expanded, 8 reopened
[t=0.223095s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.223127s, 431364 KB] g=38, 589 evaluated, 195 expanded, 8 reopened
[t=0.223518s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.223548s, 431364 KB] g=39, 591 evaluated, 196 expanded, 8 reopened
[t=0.233429s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.233463s, 431364 KB] g=39, 646 evaluated, 213 expanded, 10 reopened
[t=0.237257s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.237293s, 431364 KB] g=42, 667 evaluated, 219 expanded, 10 reopened
[t=0.238769s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.238802s, 431364 KB] g=43, 675 evaluated, 223 expanded, 10 reopened
[t=0.239011s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.239041s, 431364 KB] g=43, 676 evaluated, 223 expanded, 10 reopened
[t=0.239436s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.239466s, 431364 KB] g=44, 678 evaluated, 224 expanded, 10 reopened
[t=0.239855s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.239884s, 431364 KB] g=44, 680 evaluated, 224 expanded, 10 reopened
[t=0.240282s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.240311s, 431364 KB] g=45, 682 evaluated, 226 expanded, 10 reopened
[t=0.243398s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.243431s, 431364 KB] g=47, 699 evaluated, 232 expanded, 10 reopened
[t=0.243829s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.243862s, 431364 KB] g=48, 701 evaluated, 233 expanded, 10 reopened
[t=0.245694s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.245724s, 431364 KB] g=51, 711 evaluated, 237 expanded, 10 reopened
[t=0.248462s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.248499s, 431364 KB] g=50, 726 evaluated, 242 expanded, 10 reopened
[t=0.249073s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.249106s, 431364 KB] g=51, 729 evaluated, 243 expanded, 10 reopened
[t=0.251122s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.251157s, 431364 KB] g=55, 740 evaluated, 248 expanded, 10 reopened
[t=0.254792s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.254828s, 431364 KB] g=57, 760 evaluated, 258 expanded, 10 reopened
[t=0.263528s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.263565s, 431496 KB] g=59, 808 evaluated, 280 expanded, 11 reopened
[t=0.277002s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.277039s, 431496 KB] g=59, 882 evaluated, 312 expanded, 13 reopened
[t=0.277439s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.277468s, 431496 KB] g=61, 884 evaluated, 314 expanded, 13 reopened
[t=0.277683s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.277712s, 431496 KB] g=62, 885 evaluated, 315 expanded, 13 reopened
[t=0.278474s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.278509s, 431496 KB] g=64, 889 evaluated, 317 expanded, 13 reopened
[t=0.279085s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.279115s, 431496 KB] g=66, 892 evaluated, 319 expanded, 13 reopened
[t=0.279519s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.279548s, 431496 KB] g=67, 894 evaluated, 320 expanded, 13 reopened
[t=0.279578s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.279603s, 431496 KB] g=68, 895 evaluated, 321 expanded, 13 reopened
[t=0.279629s, 431496 KB] Solution found!
[t=0.279656s, 431496 KB] Actual search time: 0.181461s
unstack d e (1)
stack d j (1)
unstack c i (1)
put-down c (1)
unstack e f (1)
stack e d (1)
unstack i k (1)
stack i c (1)
unstack k l (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack l b (1)
stack l d (1)
unstack b g (1)
stack b i (1)
unstack g a (1)
stack g b (1)
unstack a h (1)
stack a e (1)
unstack g b (1)
stack g h (1)
unstack b i (1)
stack b l (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h b (1)
unstack a e (1)
stack a h (1)
unstack e k (1)
stack e i (1)
unstack a h (1)
stack a e (1)
unstack k f (1)
put-down k (1)
unstack h b (1)
stack h g (1)
pick-up k (1)
stack k b (1)
unstack a e (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.27968s, 431496 KB] Plan length: 68 step(s).
[t=0.27968s, 431496 KB] Plan cost: 68
[t=0.27968s, 431496 KB] Expanded 322 state(s).
[t=0.27968s, 431496 KB] Reopened 13 state(s).
[t=0.27968s, 431496 KB] Evaluated 895 state(s).
[t=0.27968s, 431496 KB] Evaluations: 895
[t=0.27968s, 431496 KB] Generated 1294 state(s).
[t=0.27968s, 431496 KB] Dead ends: 0 state(s).
[t=0.27968s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.27968s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.27968s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.27968s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.27968s, 431496 KB] Number of registered states: 895
[t=0.27968s, 431496 KB] Int hash set load factor: 895/1024 = 0.874023
[t=0.27968s, 431496 KB] Int hash set resizes: 10
[t=0.27968s, 431496 KB] Search time: 0.253302s
[t=0.27968s, 431496 KB] Total time: 0.27968s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p44.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5918e-05s, 424928 KB] reading input...
[t=0.00221149s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0264735s, 427536 KB] Building successor generator...done!
[t=0.0267562s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0267806s, 427536 KB] time for successor generation creation: 0.000168861s
[t=0.0268103s, 427536 KB] Variables: 25
[t=0.0268348s, 427536 KB] FactPairs: 182
[t=0.0268576s, 427536 KB] Bytes per state: 8
[t=0.0270525s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.100023s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.100076s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.100103s, 430128 KB] f = 138, 1 evaluated, 0 expanded
[t=0.100131s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.100156s, 430128 KB] pruning method: none
[t=0.118972s, 431100 KB] f = 140, 6 evaluated, 1 expanded
[t=0.119735s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.119767s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.120337s, 431100 KB] f = 141, 13 evaluated, 3 expanded
[t=0.120907s, 431100 KB] f = 142, 16 evaluated, 4 expanded
[t=0.123273s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.123306s, 431100 KB] g=6, 29 evaluated, 8 expanded
[t=0.138117s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.138156s, 431100 KB] g=10, 112 evaluated, 33 expanded
[t=0.145656s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.145691s, 431100 KB] g=10, 154 evaluated, 45 expanded
[t=0.16275s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.162785s, 431100 KB] g=17, 250 evaluated, 63 expanded
[t=0.164984s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.165016s, 431232 KB] g=19, 262 evaluated, 65 expanded
[t=0.170038s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.170075s, 431232 KB] g=21, 290 evaluated, 70 expanded
[t=0.171881s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.171914s, 431232 KB] g=22, 300 evaluated, 72 expanded
[t=0.173198s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.17323s, 431232 KB] g=23, 307 evaluated, 73 expanded
[t=0.174701s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.174732s, 431232 KB] g=21, 315 evaluated, 75 expanded
[t=0.175829s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.175862s, 431232 KB] g=22, 321 evaluated, 76 expanded
[t=0.178565s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.178614s, 431232 KB] g=22, 336 evaluated, 78 expanded
[t=0.183651s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.183689s, 431232 KB] g=25, 364 evaluated, 84 expanded
[t=0.190693s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.190727s, 431232 KB] g=27, 403 evaluated, 92 expanded
[t=0.209085s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.209121s, 431232 KB] g=31, 506 evaluated, 113 expanded
[t=0.209347s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.209377s, 431232 KB] g=31, 507 evaluated, 113 expanded
[t=0.211402s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.211437s, 431368 KB] g=33, 518 evaluated, 115 expanded
[t=0.229519s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.229556s, 431368 KB] g=38, 619 evaluated, 137 expanded
[t=0.235745s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.23578s, 431368 KB] g=39, 653 evaluated, 146 expanded
[t=0.243229s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.243264s, 431368 KB] g=44, 694 evaluated, 158 expanded
[t=0.244183s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.244214s, 431368 KB] g=45, 699 evaluated, 159 expanded
[t=0.246748s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.24678s, 431368 KB] g=46, 713 evaluated, 163 expanded
[t=0.247703s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.247733s, 431368 KB] g=47, 718 evaluated, 164 expanded
[t=0.248831s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.248865s, 431368 KB] g=49, 724 evaluated, 166 expanded
[t=0.250057s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.250093s, 431368 KB] g=51, 730 evaluated, 168 expanded
[t=0.252118s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.252149s, 431368 KB] g=53, 741 evaluated, 172 expanded
[t=0.252539s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.252568s, 431368 KB] g=54, 743 evaluated, 173 expanded
[t=0.252782s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.252812s, 431500 KB] g=54, 744 evaluated, 173 expanded
[t=0.254113s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.254149s, 431500 KB] g=56, 751 evaluated, 175 expanded
[t=0.256682s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.256715s, 431500 KB] g=58, 765 evaluated, 179 expanded
[t=0.257479s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.25751s, 431500 KB] g=58, 769 evaluated, 181 expanded
[t=0.258259s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.258289s, 431500 KB] g=59, 773 evaluated, 182 expanded
[t=0.265126s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.265162s, 431500 KB] g=64, 811 evaluated, 196 expanded
[t=0.26663s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.266663s, 431500 KB] g=65, 819 evaluated, 200 expanded
[t=0.267054s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.267084s, 431500 KB] g=66, 821 evaluated, 201 expanded
[t=0.269466s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.269499s, 431500 KB] g=70, 835 evaluated, 210 expanded
[t=0.269527s, 431500 KB] Solution found!
[t=0.269555s, 431500 KB] Actual search time: 0.169394s
pick-up k (1)
stack k j (1)
unstack h e (1)
stack h a (1)
unstack e i (1)
put-down e (1)
unstack i c (1)
put-down i (1)
unstack k j (1)
stack k e (1)
unstack c l (1)
put-down c (1)
pick-up j (1)
stack j d (1)
unstack l f (1)
put-down l (1)
unstack k e (1)
stack k f (1)
unstack j d (1)
stack j e (1)
unstack h a (1)
stack h j (1)
pick-up l (1)
stack l d (1)
unstack k f (1)
put-down k (1)
unstack a b (1)
stack a h (1)
unstack b g (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up k (1)
stack k i (1)
unstack a h (1)
stack a k (1)
unstack h j (1)
stack h g (1)
pick-up f (1)
stack f j (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
stack b j (1)
unstack l d (1)
stack l c (1)
unstack b j (1)
stack b i (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.26958s, 431500 KB] Plan length: 70 step(s).
[t=0.26958s, 431500 KB] Plan cost: 70
[t=0.26958s, 431500 KB] Expanded 211 state(s).
[t=0.26958s, 431500 KB] Reopened 0 state(s).
[t=0.26958s, 431500 KB] Evaluated 835 state(s).
[t=0.26958s, 431500 KB] Evaluations: 835
[t=0.26958s, 431500 KB] Generated 1056 state(s).
[t=0.26958s, 431500 KB] Dead ends: 0 state(s).
[t=0.26958s, 431500 KB] Expanded until last jump: 4 state(s).
[t=0.26958s, 431500 KB] Reopened until last jump: 0 state(s).
[t=0.26958s, 431500 KB] Evaluated until last jump: 16 state(s).
[t=0.26958s, 431500 KB] Generated until last jump: 18 state(s).
[t=0.26958s, 431500 KB] Number of registered states: 835
[t=0.26958s, 431500 KB] Int hash set load factor: 835/1024 = 0.81543
[t=0.26958s, 431500 KB] Int hash set resizes: 10
[t=0.26958s, 431500 KB] Search time: 0.242528s
[t=0.26958s, 431500 KB] Total time: 0.26958s
Solution found.
Peak memory: 431500 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p45.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6161e-05s, 424928 KB] reading input...
[t=0.00217083s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259952s, 427536 KB] Building successor generator...done!
[t=0.0262742s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262977s, 427536 KB] time for successor generation creation: 0.00016952s
[t=0.0263261s, 427536 KB] Variables: 25
[t=0.0263489s, 427536 KB] FactPairs: 182
[t=0.0263708s, 427536 KB] Bytes per state: 8
[t=0.026566s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984154s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0984674s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984933s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0985202s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0985436s, 430128 KB] pruning method: none
[t=0.110354s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.110405s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118675s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.11872s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.122517s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.12255s, 431100 KB] g=7, 34 evaluated, 8 expanded
[t=0.123119s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.123149s, 431100 KB] g=8, 37 evaluated, 9 expanded
[t=0.12837s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.128407s, 431100 KB] g=14, 66 evaluated, 15 expanded
[t=0.137803s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.13784s, 431100 KB] g=19, 118 evaluated, 31 expanded
[t=0.142606s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.142639s, 431100 KB] g=19, 144 evaluated, 41 expanded
[t=0.15561s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.155645s, 431232 KB] g=22, 215 evaluated, 61 expanded
[t=0.156221s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.156253s, 431232 KB] g=23, 218 evaluated, 62 expanded
[t=0.163556s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.16359s, 431232 KB] g=33, 258 evaluated, 75 expanded
[t=0.163804s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.163832s, 431232 KB] g=33, 259 evaluated, 75 expanded
[t=0.168948s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.168991s, 431232 KB] g=35, 287 evaluated, 83 expanded
[t=0.176608s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.176641s, 431232 KB] g=39, 329 evaluated, 94 expanded
[t=0.180805s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.180842s, 431232 KB] g=42, 352 evaluated, 99 expanded
[t=0.18106s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.181091s, 431232 KB] g=42, 353 evaluated, 99 expanded
[t=0.183455s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.183485s, 431232 KB] g=44, 366 evaluated, 102 expanded
[t=0.185689s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.185723s, 431232 KB] g=47, 378 evaluated, 106 expanded
[t=0.185931s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.18596s, 431232 KB] g=47, 379 evaluated, 106 expanded
[t=0.188152s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.188185s, 431232 KB] g=49, 391 evaluated, 110 expanded
[t=0.196544s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.196581s, 431364 KB] g=51, 437 evaluated, 125 expanded
[t=0.197892s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.197924s, 431364 KB] g=53, 444 evaluated, 129 expanded
[t=0.198499s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.198529s, 431364 KB] g=54, 447 evaluated, 130 expanded
[t=0.198925s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.198957s, 431364 KB] g=55, 449 evaluated, 131 expanded
[t=0.200079s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.200109s, 431364 KB] g=58, 455 evaluated, 134 expanded
[t=0.205606s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.20564s, 431364 KB] g=61, 486 evaluated, 153 expanded
[t=0.205668s, 431364 KB] Solution found!
[t=0.205694s, 431364 KB] Actual search time: 0.107147s
stack e a (1)
unstack c h (1)
put-down c (1)
unstack k d (1)
stack k c (1)
unstack e a (1)
stack e k (1)
unstack d f (1)
put-down d (1)
unstack a g (1)
stack a f (1)
pick-up d (1)
stack d e (1)
pick-up h (1)
stack h g (1)
unstack d e (1)
stack d i (1)
unstack a f (1)
stack a h (1)
unstack d i (1)
stack d e (1)
unstack f b (1)
stack f a (1)
pick-up i (1)
stack i f (1)
unstack d e (1)
put-down d (1)
unstack i f (1)
stack i d (1)
unstack e k (1)
stack e i (1)
unstack k c (1)
stack k e (1)
unstack b l (1)
put-down b (1)
unstack l j (1)
put-down l (1)
pick-up b (1)
stack b c (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i d (1)
put-down i (1)
pick-up d (1)
stack d b (1)
pick-up l (1)
stack l i (1)
unstack d b (1)
stack d j (1)
unstack l i (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.205719s, 431364 KB] Plan length: 61 step(s).
[t=0.205719s, 431364 KB] Plan cost: 61
[t=0.205719s, 431364 KB] Expanded 154 state(s).
[t=0.205719s, 431364 KB] Reopened 0 state(s).
[t=0.205719s, 431364 KB] Evaluated 486 state(s).
[t=0.205719s, 431364 KB] Evaluations: 486
[t=0.205719s, 431364 KB] Generated 647 state(s).
[t=0.205719s, 431364 KB] Dead ends: 0 state(s).
[t=0.205719s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.205719s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.205719s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.205719s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.205719s, 431364 KB] Number of registered states: 486
[t=0.205719s, 431364 KB] Int hash set load factor: 486/512 = 0.949219
[t=0.205719s, 431364 KB] Int hash set resizes: 9
[t=0.205719s, 431364 KB] Search time: 0.179154s
[t=0.205719s, 431364 KB] Total time: 0.205719s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p46.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6091e-05s, 424928 KB] reading input...
[t=0.00216809s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259155s, 427536 KB] Building successor generator...done!
[t=0.0261948s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262181s, 427536 KB] time for successor generation creation: 0.00016498s
[t=0.0262469s, 427536 KB] Variables: 25
[t=0.0262702s, 427536 KB] FactPairs: 182
[t=0.0262922s, 427536 KB] Bytes per state: 8
[t=0.026486s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.09875s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0988024s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988285s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0988561s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.09888s, 430128 KB] pruning method: none
[t=0.110767s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.110817s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11911s, 431100 KB] f = 144, 13 evaluated, 3 expanded
[t=0.11971s, 431100 KB] f = 145, 16 evaluated, 4 expanded
[t=0.122471s, 431100 KB] f = 146, 31 evaluated, 8 expanded
[t=0.123258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.123291s, 431100 KB] g=4, 35 evaluated, 9 expanded
[t=0.124239s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.12427s, 431100 KB] g=5, 40 evaluated, 11 expanded
[t=0.126304s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.126334s, 431100 KB] g=7, 51 evaluated, 13 expanded
[t=0.126735s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.126766s, 431100 KB] g=7, 53 evaluated, 13 expanded
[t=0.128794s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.128824s, 431100 KB] g=9, 64 evaluated, 15 expanded
[t=0.129047s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.129076s, 431100 KB] g=10, 65 evaluated, 16 expanded
[t=0.130009s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.130039s, 431100 KB] g=10, 70 evaluated, 16 expanded
[t=0.150907s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.150953s, 431100 KB] g=19, 184 evaluated, 37 expanded
[t=0.151538s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.151574s, 431232 KB] g=20, 187 evaluated, 38 expanded
[t=0.153784s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.153817s, 431232 KB] g=21, 199 evaluated, 40 expanded
[t=0.154958s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.154994s, 431232 KB] g=22, 205 evaluated, 41 expanded
[t=0.155752s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.155785s, 431232 KB] g=23, 209 evaluated, 42 expanded
[t=0.165356s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.16539s, 431232 KB] g=22, 261 evaluated, 55 expanded
[t=0.184683s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.184721s, 431232 KB] g=29, 366 evaluated, 84 expanded
[t=0.210472s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.210508s, 431364 KB] g=23, 507 evaluated, 122 expanded
[t=0.232862s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.232901s, 431364 KB] g=31, 629 evaluated, 164 expanded, 3 reopened
[t=0.239335s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.23937s, 431364 KB] g=34, 664 evaluated, 174 expanded, 3 reopened
[t=0.241401s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.241432s, 431364 KB] g=36, 675 evaluated, 177 expanded, 3 reopened
[t=0.247504s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.247538s, 431364 KB] g=40, 708 evaluated, 184 expanded, 3 reopened
[t=0.253051s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.253085s, 431496 KB] g=39, 738 evaluated, 192 expanded, 3 reopened
[t=0.253668s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.253701s, 431496 KB] g=40, 741 evaluated, 193 expanded, 3 reopened
[t=0.254285s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.254315s, 431496 KB] g=41, 744 evaluated, 194 expanded, 3 reopened
[t=0.255088s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.25512s, 431496 KB] g=42, 748 evaluated, 195 expanded, 3 reopened
[t=0.256992s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.257023s, 431496 KB] g=44, 758 evaluated, 199 expanded, 3 reopened
[t=0.269915s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.26995s, 431496 KB] g=50, 828 evaluated, 229 expanded, 6 reopened
[t=0.270166s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.2702s, 431496 KB] g=51, 829 evaluated, 230 expanded, 6 reopened
[t=0.271332s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.271363s, 431496 KB] g=52, 835 evaluated, 231 expanded, 6 reopened
[t=0.274685s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.27472s, 431496 KB] g=56, 853 evaluated, 237 expanded, 6 reopened
[t=0.279673s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.279707s, 431496 KB] g=58, 880 evaluated, 245 expanded, 6 reopened
[t=0.279919s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.279951s, 431496 KB] g=58, 881 evaluated, 245 expanded, 6 reopened
[t=0.282165s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.282196s, 431496 KB] g=60, 893 evaluated, 248 expanded, 6 reopened
[t=0.289555s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.28959s, 431496 KB] g=63, 933 evaluated, 260 expanded, 6 reopened
[t=0.293119s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.293156s, 431496 KB] g=66, 952 evaluated, 265 expanded, 6 reopened
[t=0.299093s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.299129s, 431628 KB] g=68, 984 evaluated, 275 expanded, 6 reopened
[t=0.300345s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.300377s, 431628 KB] g=69, 990 evaluated, 277 expanded, 6 reopened
[t=0.302807s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.302841s, 431628 KB] g=70, 1003 evaluated, 282 expanded, 6 reopened
[t=0.313739s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.313774s, 431628 KB] g=70, 1062 evaluated, 302 expanded, 6 reopened
[t=0.314538s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.31458s, 431628 KB] g=72, 1066 evaluated, 304 expanded, 6 reopened
[t=0.319407s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.319449s, 431628 KB] g=73, 1092 evaluated, 319 expanded, 6 reopened
[t=0.32908s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.329119s, 431628 KB] g=74, 1144 evaluated, 349 expanded, 8 reopened
[t=0.329888s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.329919s, 431628 KB] g=76, 1148 evaluated, 351 expanded, 8 reopened
[t=0.329949s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.329973s, 431628 KB] g=77, 1149 evaluated, 352 expanded, 8 reopened
[t=0.329999s, 431628 KB] Solution found!
[t=0.330026s, 431628 KB] Actual search time: 0.231142s
stack k a (1)
unstack c i (1)
put-down c (1)
unstack b e (1)
stack b c (1)
unstack e g (1)
put-down e (1)
unstack b c (1)
put-down b (1)
pick-up g (1)
stack g h (1)
unstack k a (1)
stack k e (1)
pick-up c (1)
stack c b (1)
unstack k e (1)
stack k i (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
pick-up a (1)
stack a e (1)
unstack g h (1)
put-down g (1)
unstack h j (1)
stack h a (1)
pick-up g (1)
stack g h (1)
unstack j l (1)
put-down j (1)
pick-up b (1)
stack b j (1)
unstack l f (1)
put-down l (1)
pick-up c (1)
stack c f (1)
unstack b j (1)
stack b l (1)
unstack c f (1)
stack c b (1)
unstack g h (1)
put-down g (1)
pick-up f (1)
stack f j (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack e k (1)
stack e c (1)
unstack k i (1)
stack k f (1)
unstack i d (1)
put-down i (1)
unstack e c (1)
stack e k (1)
pick-up d (1)
stack d i (1)
unstack c b (1)
put-down c (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.33005s, 431628 KB] Plan length: 77 step(s).
[t=0.33005s, 431628 KB] Plan cost: 77
[t=0.33005s, 431628 KB] Expanded 353 state(s).
[t=0.33005s, 431628 KB] Reopened 8 state(s).
[t=0.33005s, 431628 KB] Evaluated 1149 state(s).
[t=0.33005s, 431628 KB] Evaluations: 1149
[t=0.33005s, 431628 KB] Generated 1562 state(s).
[t=0.33005s, 431628 KB] Dead ends: 0 state(s).
[t=0.33005s, 431628 KB] Expanded until last jump: 8 state(s).
[t=0.33005s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.33005s, 431628 KB] Evaluated until last jump: 31 state(s).
[t=0.33005s, 431628 KB] Generated until last jump: 37 state(s).
[t=0.33005s, 431628 KB] Number of registered states: 1149
[t=0.33005s, 431628 KB] Int hash set load factor: 1149/2048 = 0.561035
[t=0.33005s, 431628 KB] Int hash set resizes: 11
[t=0.33005s, 431628 KB] Search time: 0.303565s
[t=0.33005s, 431628 KB] Total time: 0.33005s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p47.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9448e-05s, 424928 KB] reading input...
[t=0.00223704s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261204s, 427536 KB] Building successor generator...done!
[t=0.0264s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264231s, 427536 KB] time for successor generation creation: 0.000167046s
[t=0.0264516s, 427536 KB] Variables: 25
[t=0.0264754s, 427536 KB] FactPairs: 182
[t=0.0264973s, 427536 KB] Bytes per state: 8
[t=0.0266926s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983912s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.0984423s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984682s, 430128 KB] f = 135, 1 evaluated, 0 expanded
[t=0.098495s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.0985188s, 430128 KB] pruning method: none
[t=0.110324s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 126
[t=0.110374s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117565s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.117609s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.11836s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.118391s, 431100 KB] g=2, 11 evaluated, 2 expanded
[t=0.118956s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.118986s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.124335s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.124368s, 431100 KB] g=5, 44 evaluated, 11 expanded
[t=0.125309s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.125341s, 431100 KB] g=6, 49 evaluated, 12 expanded
[t=0.125548s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.125577s, 431100 KB] g=6, 50 evaluated, 12 expanded
[t=0.125789s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.125818s, 431100 KB] g=7, 51 evaluated, 13 expanded
[t=0.127628s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.127663s, 431100 KB] g=10, 61 evaluated, 16 expanded
[t=0.130903s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.130938s, 431100 KB] g=14, 79 evaluated, 21 expanded
[t=0.133299s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.133332s, 431100 KB] g=16, 92 evaluated, 25 expanded
[t=0.134791s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.134823s, 431100 KB] g=18, 100 evaluated, 28 expanded
[t=0.145771s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.145809s, 431232 KB] g=20, 161 evaluated, 46 expanded
[t=0.146914s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.146944s, 431232 KB] g=22, 167 evaluated, 48 expanded
[t=0.148042s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.148075s, 431232 KB] g=23, 173 evaluated, 49 expanded
[t=0.148289s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.148318s, 431232 KB] g=24, 174 evaluated, 50 expanded
[t=0.14854s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.148571s, 431232 KB] g=24, 175 evaluated, 50 expanded
[t=0.148782s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.14881s, 431232 KB] g=24, 176 evaluated, 50 expanded
[t=0.149212s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.149243s, 431232 KB] g=25, 178 evaluated, 51 expanded
[t=0.15088s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.150912s, 431232 KB] g=28, 187 evaluated, 55 expanded
[t=0.151483s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.151512s, 431232 KB] g=29, 190 evaluated, 57 expanded
[t=0.151901s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.151932s, 431232 KB] g=30, 192 evaluated, 58 expanded
[t=0.153228s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.153259s, 431232 KB] g=33, 199 evaluated, 62 expanded
[t=0.154539s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.154569s, 431232 KB] g=36, 206 evaluated, 65 expanded
[t=0.159798s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.159831s, 431232 KB] g=39, 235 evaluated, 77 expanded
[t=0.164368s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.164405s, 431232 KB] g=38, 260 evaluated, 89 expanded
[t=0.165166s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.165197s, 431232 KB] g=41, 264 evaluated, 92 expanded
[t=0.167037s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.167067s, 431232 KB] g=44, 275 evaluated, 100 expanded
[t=0.167095s, 431232 KB] Solution found!
[t=0.167121s, 431232 KB] Actual search time: 0.0685987s
unstack g e (1)
put-down g (1)
pick-up h (1)
stack h g (1)
pick-up e (1)
stack e k (1)
unstack b f (1)
stack b j (1)
unstack f a (1)
stack f e (1)
unstack b j (1)
stack b f (1)
unstack a l (1)
stack a h (1)
unstack b f (1)
stack b l (1)
unstack f e (1)
put-down f (1)
unstack e k (1)
stack e j (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.167146s, 431232 KB] Plan length: 44 step(s).
[t=0.167146s, 431232 KB] Plan cost: 44
[t=0.167146s, 431232 KB] Expanded 101 state(s).
[t=0.167146s, 431232 KB] Reopened 0 state(s).
[t=0.167146s, 431232 KB] Evaluated 275 state(s).
[t=0.167146s, 431232 KB] Evaluations: 275
[t=0.167146s, 431232 KB] Generated 378 state(s).
[t=0.167146s, 431232 KB] Dead ends: 0 state(s).
[t=0.167146s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.167146s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.167146s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.167146s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.167146s, 431232 KB] Number of registered states: 275
[t=0.167146s, 431232 KB] Int hash set load factor: 275/512 = 0.537109
[t=0.167146s, 431232 KB] Int hash set resizes: 9
[t=0.167146s, 431232 KB] Search time: 0.140454s
[t=0.167146s, 431232 KB] Total time: 0.167146s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p48.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6721e-05s, 424928 KB] reading input...
[t=0.00215295s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261975s, 427536 KB] Building successor generator...done!
[t=0.0264756s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264987s, 427536 KB] time for successor generation creation: 0.000166259s
[t=0.0265273s, 427536 KB] Variables: 25
[t=0.0265504s, 427536 KB] FactPairs: 182
[t=0.0265729s, 427536 KB] Bytes per state: 8
[t=0.0267694s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986254s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0986766s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987023s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.09873s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0987541s, 430128 KB] pruning method: none
[t=0.117158s, 431100 KB] f = 145, 4 evaluated, 1 expanded
[t=0.117579s, 431100 KB] f = 148, 6 evaluated, 2 expanded
[t=0.118725s, 431100 KB] f = 149, 12 evaluated, 5 expanded
[t=0.119664s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.119696s, 431100 KB] g=5, 17 evaluated, 7 expanded
[t=0.121172s, 431100 KB] f = 150, 25 evaluated, 11 expanded
[t=0.121387s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.121417s, 431100 KB] g=7, 26 evaluated, 12 expanded
[t=0.122353s, 431100 KB] f = 151, 31 evaluated, 13 expanded
[t=0.12671s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.126743s, 431100 KB] g=6, 55 evaluated, 21 expanded
[t=0.141722s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.141755s, 431100 KB] g=9, 138 evaluated, 43 expanded
[t=0.145766s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.145807s, 431100 KB] g=11, 160 evaluated, 49 expanded
[t=0.15922s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.159256s, 431100 KB] g=13, 234 evaluated, 66 expanded
[t=0.167996s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.168033s, 431100 KB] g=13, 282 evaluated, 79 expanded
[t=0.188149s, 431232 KB] f = 152, 393 evaluated, 112 expanded
[t=0.207705s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.207741s, 431232 KB] g=16, 501 evaluated, 136 expanded
[t=0.218308s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.218343s, 431232 KB] g=21, 559 evaluated, 143 expanded
[t=0.220353s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.220384s, 431232 KB] g=22, 570 evaluated, 144 expanded
[t=0.220963s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.220993s, 431232 KB] g=23, 573 evaluated, 145 expanded
[t=0.221565s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.221597s, 431232 KB] g=23, 576 evaluated, 145 expanded
[t=0.224877s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.224921s, 431232 KB] g=25, 594 evaluated, 147 expanded
[t=0.234734s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.234772s, 431364 KB] g=27, 648 evaluated, 156 expanded
[t=0.24079s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.240823s, 431364 KB] g=32, 681 evaluated, 163 expanded
[t=0.243041s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.243076s, 431364 KB] g=35, 693 evaluated, 166 expanded
[t=0.243658s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.243687s, 431364 KB] g=36, 696 evaluated, 168 expanded
[t=0.244448s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.24448s, 431364 KB] g=37, 700 evaluated, 169 expanded
[t=0.248534s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.248567s, 431364 KB] g=38, 722 evaluated, 178 expanded
[t=0.248965s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.248995s, 431364 KB] g=39, 724 evaluated, 179 expanded
[t=0.251965s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.251997s, 431364 KB] g=41, 740 evaluated, 185 expanded
[t=0.252399s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.25243s, 431364 KB] g=42, 742 evaluated, 186 expanded
[t=0.25264s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.252668s, 431364 KB] g=42, 743 evaluated, 186 expanded
[t=0.256356s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.256388s, 431364 KB] g=45, 763 evaluated, 194 expanded
[t=0.259518s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.259555s, 431364 KB] g=50, 780 evaluated, 200 expanded
[t=0.259953s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.259982s, 431364 KB] g=51, 782 evaluated, 201 expanded
[t=0.260192s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.260223s, 431364 KB] g=51, 783 evaluated, 201 expanded
[t=0.261344s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.261374s, 431364 KB] g=53, 789 evaluated, 203 expanded
[t=0.261584s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.261621s, 431364 KB] g=53, 790 evaluated, 203 expanded
[t=0.262206s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.262238s, 431364 KB] g=54, 793 evaluated, 204 expanded
[t=0.264262s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.264295s, 431364 KB] g=56, 804 evaluated, 208 expanded
[t=0.264691s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.264721s, 431364 KB] g=57, 806 evaluated, 209 expanded
[t=0.265115s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.265144s, 431364 KB] g=58, 808 evaluated, 210 expanded
[t=0.265177s, 431364 KB] Solution found!
[t=0.265205s, 431364 KB] Actual search time: 0.166447s
put-down e (1)
unstack g b (1)
put-down g (1)
unstack b f (1)
put-down b (1)
unstack f a (1)
put-down f (1)
unstack c k (1)
stack c b (1)
unstack a i (1)
put-down a (1)
unstack i d (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack d l (1)
stack d i (1)
unstack l j (1)
stack l d (1)
unstack j h (1)
stack j c (1)
pick-up h (1)
stack h e (1)
pick-up b (1)
stack b l (1)
pick-up k (1)
stack k b (1)
pick-up a (1)
stack a k (1)
unstack h e (1)
stack h g (1)
pick-up e (1)
stack e j (1)
pick-up f (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.26523s, 431364 KB] Plan length: 59 step(s).
[t=0.26523s, 431364 KB] Plan cost: 59
[t=0.26523s, 431364 KB] Expanded 212 state(s).
[t=0.26523s, 431364 KB] Reopened 0 state(s).
[t=0.26523s, 431364 KB] Evaluated 809 state(s).
[t=0.26523s, 431364 KB] Evaluations: 809
[t=0.26523s, 431364 KB] Generated 1038 state(s).
[t=0.26523s, 431364 KB] Dead ends: 0 state(s).
[t=0.26523s, 431364 KB] Expanded until last jump: 112 state(s).
[t=0.26523s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.26523s, 431364 KB] Evaluated until last jump: 393 state(s).
[t=0.26523s, 431364 KB] Generated until last jump: 518 state(s).
[t=0.26523s, 431364 KB] Number of registered states: 809
[t=0.26523s, 431364 KB] Int hash set load factor: 809/1024 = 0.790039
[t=0.26523s, 431364 KB] Int hash set resizes: 10
[t=0.26523s, 431364 KB] Search time: 0.238461s
[t=0.26523s, 431364 KB] Total time: 0.26523s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p49.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6616e-05s, 424928 KB] reading input...
[t=0.00219795s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025983s, 427536 KB] Building successor generator...done!
[t=0.0262615s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262853s, 427536 KB] time for successor generation creation: 0.000165828s
[t=0.0263146s, 427536 KB] Variables: 25
[t=0.0263377s, 427536 KB] FactPairs: 182
[t=0.0263603s, 427536 KB] Bytes per state: 8
[t=0.0265562s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983336s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0983849s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098411s, 430128 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0984384s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0984625s, 430128 KB] pruning method: none
[t=0.110241s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.110293s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116703s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.116745s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117326s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.117366s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.11796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.117991s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.121276s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.121307s, 431100 KB] g=3, 27 evaluated, 6 expanded
[t=0.122795s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.122827s, 431100 KB] g=5, 35 evaluated, 8 expanded
[t=0.126866s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.126898s, 431100 KB] g=7, 57 evaluated, 12 expanded
[t=0.131482s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.131518s, 431100 KB] g=10, 82 evaluated, 16 expanded
[t=0.132637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.132669s, 431100 KB] g=11, 88 evaluated, 17 expanded
[t=0.138364s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.138397s, 431100 KB] g=14, 119 evaluated, 23 expanded
[t=0.146985s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.147019s, 431232 KB] g=19, 166 evaluated, 33 expanded
[t=0.147409s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.147441s, 431232 KB] g=19, 168 evaluated, 33 expanded
[t=0.148381s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.148413s, 431232 KB] g=20, 173 evaluated, 34 expanded
[t=0.152265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.152299s, 431232 KB] g=22, 194 evaluated, 38 expanded
[t=0.15379s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.153822s, 431232 KB] g=23, 202 evaluated, 40 expanded
[t=0.163299s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.163332s, 431232 KB] g=24, 254 evaluated, 52 expanded
[t=0.168297s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.168333s, 431232 KB] g=27, 281 evaluated, 58 expanded
[t=0.170008s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.17004s, 431232 KB] g=29, 290 evaluated, 61 expanded
[t=0.170615s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.170652s, 431232 KB] g=30, 293 evaluated, 62 expanded
[t=0.226277s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.226318s, 431364 KB] g=30, 599 evaluated, 141 expanded, 4 reopened
[t=0.228883s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.228916s, 431364 KB] g=31, 613 evaluated, 144 expanded, 4 reopened
[t=0.229875s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.22991s, 431364 KB] g=32, 618 evaluated, 145 expanded, 4 reopened
[t=0.231033s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.231062s, 431364 KB] g=33, 624 evaluated, 147 expanded, 4 reopened
[t=0.231457s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.231486s, 431364 KB] g=34, 626 evaluated, 148 expanded, 4 reopened
[t=0.231697s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.231728s, 431364 KB] g=34, 627 evaluated, 148 expanded, 4 reopened
[t=0.232304s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.232333s, 431364 KB] g=35, 630 evaluated, 149 expanded, 4 reopened
[t=0.233646s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.233678s, 431364 KB] g=36, 637 evaluated, 151 expanded, 4 reopened
[t=0.234987s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.235017s, 431364 KB] g=38, 644 evaluated, 153 expanded, 4 reopened
[t=0.235593s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.235625s, 431364 KB] g=39, 647 evaluated, 154 expanded, 4 reopened
[t=0.237104s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.237134s, 431364 KB] g=40, 655 evaluated, 156 expanded, 4 reopened
[t=0.237535s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.237568s, 431364 KB] g=41, 657 evaluated, 157 expanded, 4 reopened
[t=0.2385s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.238529s, 431364 KB] g=42, 662 evaluated, 158 expanded, 4 reopened
[t=0.239285s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.239314s, 431364 KB] g=43, 666 evaluated, 159 expanded, 4 reopened
[t=0.239705s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.239739s, 431364 KB] g=44, 668 evaluated, 160 expanded, 4 reopened
[t=0.23995s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.239981s, 431364 KB] g=44, 669 evaluated, 160 expanded, 4 reopened
[t=0.240918s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.24095s, 431364 KB] g=46, 674 evaluated, 162 expanded, 4 reopened
[t=0.242078s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.242111s, 431364 KB] g=47, 680 evaluated, 165 expanded, 4 reopened
[t=0.243049s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.243082s, 431364 KB] g=49, 685 evaluated, 168 expanded, 4 reopened
[t=0.243113s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.243137s, 431364 KB] g=50, 686 evaluated, 169 expanded, 4 reopened
[t=0.243163s, 431364 KB] Solution found!
[t=0.243189s, 431364 KB] Actual search time: 0.144723s
unstack k h (1)
stack k f (1)
unstack a j (1)
put-down a (1)
unstack g e (1)
stack g h (1)
unstack e c (1)
stack e d (1)
unstack c l (1)
stack c k (1)
pick-up j (1)
stack j e (1)
unstack l b (1)
put-down l (1)
unstack c k (1)
stack c b (1)
unstack j e (1)
stack j l (1)
unstack e d (1)
stack e j (1)
pick-up a (1)
stack a e (1)
unstack k f (1)
stack k d (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.243214s, 431364 KB] Plan length: 50 step(s).
[t=0.243214s, 431364 KB] Plan cost: 50
[t=0.243214s, 431364 KB] Expanded 170 state(s).
[t=0.243214s, 431364 KB] Reopened 4 state(s).
[t=0.243214s, 431364 KB] Evaluated 686 state(s).
[t=0.243214s, 431364 KB] Evaluations: 686
[t=0.243214s, 431364 KB] Generated 880 state(s).
[t=0.243214s, 431364 KB] Dead ends: 0 state(s).
[t=0.243214s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.243214s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.243214s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.243214s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.243214s, 431364 KB] Number of registered states: 686
[t=0.243214s, 431364 KB] Int hash set load factor: 686/1024 = 0.669922
[t=0.243214s, 431364 KB] Int hash set resizes: 10
[t=0.243214s, 431364 KB] Search time: 0.216658s
[t=0.243214s, 431364 KB] Total time: 0.243214s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p50.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7899e-05s, 424928 KB] reading input...
[t=0.00213457s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026275s, 427536 KB] Building successor generator...done!
[t=0.0265563s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265805s, 427536 KB] time for successor generation creation: 0.000169464s
[t=0.0266104s, 427536 KB] Variables: 25
[t=0.0266339s, 427536 KB] FactPairs: 182
[t=0.0266567s, 427536 KB] Bytes per state: 8
[t=0.0268506s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994685s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0995198s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995457s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0995733s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0995975s, 430128 KB] pruning method: none
[t=0.117892s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.117943s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11816s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.118201s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.11949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.119521s, 431100 KB] g=2, 11 evaluated, 3 expanded
[t=0.120116s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.120149s, 431100 KB] g=3, 14 evaluated, 4 expanded
[t=0.12036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.120389s, 431100 KB] g=3, 15 evaluated, 4 expanded
[t=0.121501s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.121531s, 431100 KB] g=5, 21 evaluated, 6 expanded
[t=0.121744s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.121773s, 431100 KB] g=6, 22 evaluated, 7 expanded
[t=0.123423s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.123453s, 431100 KB] g=8, 31 evaluated, 10 expanded
[t=0.131211s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.131245s, 431100 KB] g=10, 74 evaluated, 27 expanded
[t=0.168554s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.168594s, 431232 KB] g=19, 282 evaluated, 90 expanded
[t=0.29407s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.294114s, 431496 KB] g=27, 981 evaluated, 398 expanded, 74 reopened
[t=0.295406s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.295436s, 431496 KB] g=29, 988 evaluated, 400 expanded, 74 reopened
[t=0.297263s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.297299s, 431496 KB] g=31, 998 evaluated, 402 expanded, 74 reopened
[t=0.298402s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.298435s, 431496 KB] g=32, 1004 evaluated, 403 expanded, 74 reopened
[t=0.300613s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.300648s, 431496 KB] g=35, 1016 evaluated, 406 expanded, 74 reopened
[t=0.307569s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.307607s, 431496 KB] g=38, 1054 evaluated, 413 expanded, 74 reopened
[t=0.377644s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.377689s, 431628 KB] g=38, 1445 evaluated, 507 expanded, 79 reopened
[t=0.389919s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.389969s, 431760 KB] g=47, 1513 evaluated, 524 expanded, 79 reopened
[t=0.391083s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.391117s, 431760 KB] g=48, 1519 evaluated, 525 expanded, 79 reopened
[t=0.391876s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.391908s, 431760 KB] g=49, 1523 evaluated, 526 expanded, 79 reopened
[t=0.392834s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.392865s, 431760 KB] g=50, 1528 evaluated, 527 expanded, 79 reopened
[t=0.396873s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.396907s, 431760 KB] g=53, 1550 evaluated, 533 expanded, 79 reopened
[t=0.397654s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.397687s, 431760 KB] g=54, 1554 evaluated, 534 expanded, 79 reopened
[t=0.398261s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.39829s, 431760 KB] g=55, 1557 evaluated, 535 expanded, 79 reopened
[t=0.399407s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.39944s, 431760 KB] g=58, 1563 evaluated, 538 expanded, 79 reopened
[t=0.399841s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.399873s, 431760 KB] g=59, 1565 evaluated, 539 expanded, 79 reopened
[t=0.403518s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.403552s, 431760 KB] g=67, 1585 evaluated, 552 expanded, 79 reopened
[t=0.403583s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.403608s, 431760 KB] g=68, 1586 evaluated, 553 expanded, 79 reopened
[t=0.403634s, 431760 KB] Solution found!
[t=0.40366s, 431760 KB] Actual search time: 0.304058s
unstack c h (1)
stack c d (1)
pick-up h (1)
stack h a (1)
unstack i g (1)
put-down i (1)
unstack h a (1)
stack h g (1)
unstack a l (1)
put-down a (1)
unstack c d (1)
put-down c (1)
pick-up l (1)
stack l d (1)
pick-up i (1)
stack i c (1)
pick-up a (1)
stack a h (1)
unstack i c (1)
stack i a (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
put-down d (1)
unstack j f (1)
stack j l (1)
unstack f b (1)
stack f d (1)
unstack b k (1)
stack b j (1)
unstack f d (1)
stack f k (1)
unstack b j (1)
put-down b (1)
pick-up c (1)
stack c b (1)
unstack j l (1)
put-down j (1)
unstack i a (1)
put-down i (1)
pick-up j (1)
stack j i (1)
unstack f k (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up l (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack c b (1)
stack c l (1)
pick-up b (1)
stack b i (1)
unstack c l (1)
put-down c (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.403685s, 431760 KB] Plan length: 68 step(s).
[t=0.403685s, 431760 KB] Plan cost: 68
[t=0.403685s, 431760 KB] Expanded 554 state(s).
[t=0.403685s, 431760 KB] Reopened 79 state(s).
[t=0.403685s, 431760 KB] Evaluated 1586 state(s).
[t=0.403685s, 431760 KB] Evaluations: 1586
[t=0.403685s, 431760 KB] Generated 2540 state(s).
[t=0.403685s, 431760 KB] Dead ends: 0 state(s).
[t=0.403685s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.403685s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.403685s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.403685s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.403685s, 431760 KB] Number of registered states: 1586
[t=0.403685s, 431760 KB] Int hash set load factor: 1586/2048 = 0.774414
[t=0.403685s, 431760 KB] Int hash set resizes: 11
[t=0.403685s, 431760 KB] Search time: 0.376835s
[t=0.403685s, 431760 KB] Total time: 0.403685s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p51.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.636e-05s, 424928 KB] reading input...
[t=0.00216449s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.02608s, 427536 KB] Building successor generator...done!
[t=0.0263542s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263777s, 427536 KB] time for successor generation creation: 0.000163357s
[t=0.0264066s, 427536 KB] Variables: 25
[t=0.0264297s, 427536 KB] FactPairs: 182
[t=0.0264525s, 427536 KB] Bytes per state: 8
[t=0.026647s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993387s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.0993904s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994171s, 430128 KB] f = 102, 1 evaluated, 0 expanded
[t=0.0994447s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.099469s, 430128 KB] pruning method: none
[t=0.117987s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.118038s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118444s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.118474s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.119056s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.119086s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.119488s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.119517s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.119728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.119757s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.120175s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.120206s, 431100 KB] g=5, 14 evaluated, 5 expanded
[t=0.120605s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.120634s, 431100 KB] g=6, 16 evaluated, 6 expanded
[t=0.122509s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.12254s, 431100 KB] g=6, 26 evaluated, 11 expanded
[t=0.126259s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.126292s, 431100 KB] g=8, 46 evaluated, 22 expanded
[t=0.127419s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.12745s, 431100 KB] g=9, 52 evaluated, 24 expanded
[t=0.13263s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.132664s, 431100 KB] g=13, 80 evaluated, 34 expanded
[t=0.132877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.132919s, 431100 KB] g=13, 81 evaluated, 34 expanded
[t=0.133875s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.133905s, 431100 KB] g=15, 86 evaluated, 36 expanded
[t=0.13485s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.134882s, 431100 KB] g=16, 91 evaluated, 37 expanded
[t=0.135279s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.135307s, 431100 KB] g=17, 93 evaluated, 38 expanded
[t=0.135519s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.13555s, 431100 KB] g=17, 94 evaluated, 38 expanded
[t=0.136328s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.136362s, 431100 KB] g=18, 98 evaluated, 39 expanded
[t=0.138049s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.138081s, 431100 KB] g=21, 107 evaluated, 43 expanded
[t=0.138295s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.138323s, 431100 KB] g=21, 108 evaluated, 43 expanded
[t=0.140748s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.140782s, 431100 KB] g=23, 121 evaluated, 48 expanded
[t=0.142477s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.14251s, 431100 KB] g=26, 130 evaluated, 52 expanded
[t=0.143458s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.143488s, 431100 KB] g=28, 135 evaluated, 54 expanded
[t=0.143702s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.143731s, 431100 KB] g=28, 136 evaluated, 54 expanded
[t=0.14542s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.145455s, 431100 KB] g=30, 145 evaluated, 58 expanded
[t=0.145669s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.145698s, 431100 KB] g=30, 146 evaluated, 58 expanded
[t=0.150141s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.150174s, 431100 KB] g=31, 170 evaluated, 71 expanded, 1 reopened
[t=0.150574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.150603s, 431100 KB] g=33, 172 evaluated, 73 expanded, 1 reopened
[t=0.151001s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.151036s, 431100 KB] g=34, 174 evaluated, 74 expanded, 1 reopened
[t=0.152185s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.15222s, 431100 KB] g=36, 180 evaluated, 78 expanded, 1 reopened
[t=0.152253s, 431100 KB] Solution found!
[t=0.152281s, 431100 KB] Actual search time: 0.0528078s
stack k j (1)
unstack a g (1)
stack a k (1)
unstack h l (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k j (1)
put-down k (1)
unstack j f (1)
put-down j (1)
pick-up k (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
pick-up j (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.152306s, 431100 KB] Plan length: 37 step(s).
[t=0.152306s, 431100 KB] Plan cost: 37
[t=0.152306s, 431100 KB] Expanded 80 state(s).
[t=0.152306s, 431100 KB] Reopened 1 state(s).
[t=0.152306s, 431100 KB] Evaluated 181 state(s).
[t=0.152306s, 431100 KB] Evaluations: 181
[t=0.152306s, 431100 KB] Generated 265 state(s).
[t=0.152306s, 431100 KB] Dead ends: 0 state(s).
[t=0.152306s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.152306s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.152306s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.152306s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.152306s, 431100 KB] Number of registered states: 181
[t=0.152306s, 431100 KB] Int hash set load factor: 181/256 = 0.707031
[t=0.152306s, 431100 KB] Int hash set resizes: 8
[t=0.152306s, 431100 KB] Search time: 0.12566s
[t=0.152306s, 431100 KB] Total time: 0.152306s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p52.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7471e-05s, 424928 KB] reading input...
[t=0.00217922s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025754s, 427536 KB] Building successor generator...done!
[t=0.0260311s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260541s, 427536 KB] time for successor generation creation: 0.000165986s
[t=0.0260819s, 427536 KB] Variables: 25
[t=0.0261048s, 427536 KB] FactPairs: 182
[t=0.0261265s, 427536 KB] Bytes per state: 8
[t=0.026321s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0976087s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.0976597s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0976856s, 430128 KB] f = 88, 1 evaluated, 0 expanded
[t=0.097712s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.0977357s, 430128 KB] pruning method: none
[t=0.116253s, 431100 KB] f = 102, 5 evaluated, 1 expanded
[t=0.116673s, 431100 KB] f = 119, 7 evaluated, 2 expanded
[t=0.117427s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.117458s, 431100 KB] g=3, 11 evaluated, 4 expanded
[t=0.118742s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.118772s, 431100 KB] g=4, 18 evaluated, 6 expanded
[t=0.119895s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.119928s, 431100 KB] g=5, 24 evaluated, 7 expanded
[t=0.121747s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.121777s, 431100 KB] g=5, 34 evaluated, 10 expanded
[t=0.137142s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.13718s, 431100 KB] g=14, 120 evaluated, 30 expanded
[t=0.137572s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.137602s, 431100 KB] g=15, 122 evaluated, 31 expanded
[t=0.149067s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.149102s, 431232 KB] g=17, 186 evaluated, 48 expanded
[t=0.149669s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.149701s, 431232 KB] g=17, 189 evaluated, 48 expanded
[t=0.153147s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.153182s, 431232 KB] g=19, 208 evaluated, 53 expanded
[t=0.157515s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.157549s, 431232 KB] g=21, 232 evaluated, 58 expanded
[t=0.158835s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.158867s, 431232 KB] g=22, 239 evaluated, 59 expanded
[t=0.161777s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.161814s, 431232 KB] g=24, 255 evaluated, 63 expanded
[t=0.165995s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.166027s, 431232 KB] g=26, 278 evaluated, 68 expanded
[t=0.415759s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.415804s, 431628 KB] g=31, 1684 evaluated, 468 expanded, 53 reopened
[t=0.444151s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.444191s, 431628 KB] g=37, 1842 evaluated, 521 expanded, 57 reopened
[t=0.448838s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.448875s, 431628 KB] g=42, 1868 evaluated, 526 expanded, 57 reopened
[t=0.450335s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.450368s, 431628 KB] g=42, 1876 evaluated, 528 expanded, 57 reopened
[t=0.450575s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.450605s, 431628 KB] g=42, 1877 evaluated, 528 expanded, 57 reopened
[t=0.451345s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.451383s, 431628 KB] g=43, 1881 evaluated, 529 expanded, 57 reopened
[t=0.453554s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.453587s, 431628 KB] g=44, 1893 evaluated, 532 expanded, 57 reopened
[t=0.454508s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.454542s, 431628 KB] g=45, 1898 evaluated, 533 expanded, 57 reopened
[t=0.455287s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.455326s, 431628 KB] g=46, 1902 evaluated, 534 expanded, 57 reopened
[t=0.455735s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.455766s, 431628 KB] g=47, 1904 evaluated, 535 expanded, 57 reopened
[t=0.457401s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.457431s, 431628 KB] g=49, 1913 evaluated, 537 expanded, 57 reopened
[t=0.463865s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.463901s, 431768 KB] g=50, 1948 evaluated, 547 expanded, 57 reopened
[t=0.465173s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.465203s, 431768 KB] g=51, 1955 evaluated, 548 expanded, 57 reopened
[t=0.469513s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.469547s, 431768 KB] g=53, 1979 evaluated, 555 expanded, 57 reopened
[t=0.470654s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.470685s, 431768 KB] g=55, 1985 evaluated, 557 expanded, 57 reopened
[t=0.473749s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.473784s, 431768 KB] g=59, 2002 evaluated, 564 expanded, 57 reopened
[t=0.477743s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.477776s, 431768 KB] g=57, 2024 evaluated, 576 expanded, 57 reopened
[t=0.47817s, 431768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.478199s, 431768 KB] g=59, 2027 evaluated, 578 expanded, 57 reopened
[t=0.478226s, 431768 KB] Solution found!
[t=0.478252s, 431768 KB] Actual search time: 0.380512s
put-down d (1)
unstack c j (1)
stack c d (1)
unstack a b (1)
put-down a (1)
unstack f g (1)
put-down f (1)
unstack c d (1)
stack c b (1)
pick-up a (1)
stack a c (1)
unstack g h (1)
stack g f (1)
unstack h i (1)
stack h g (1)
unstack i e (1)
put-down i (1)
unstack e k (1)
stack e j (1)
pick-up k (1)
stack k d (1)
unstack a c (1)
stack a k (1)
unstack h g (1)
stack h a (1)
unstack g f (1)
stack g h (1)
pick-up f (1)
stack f g (1)
unstack e j (1)
stack e i (1)
unstack f g (1)
stack f e (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.478275s, 431768 KB] Plan length: 59 step(s).
[t=0.478275s, 431768 KB] Plan cost: 59
[t=0.478275s, 431768 KB] Expanded 579 state(s).
[t=0.478275s, 431768 KB] Reopened 57 state(s).
[t=0.478275s, 431768 KB] Evaluated 2027 state(s).
[t=0.478275s, 431768 KB] Evaluations: 2027
[t=0.478275s, 431768 KB] Generated 2968 state(s).
[t=0.478275s, 431768 KB] Dead ends: 0 state(s).
[t=0.478275s, 431768 KB] Expanded until last jump: 2 state(s).
[t=0.478275s, 431768 KB] Reopened until last jump: 0 state(s).
[t=0.478275s, 431768 KB] Evaluated until last jump: 7 state(s).
[t=0.478275s, 431768 KB] Generated until last jump: 7 state(s).
[t=0.478275s, 431768 KB] Number of registered states: 2027
[t=0.478275s, 431768 KB] Int hash set load factor: 2027/4096 = 0.494873
[t=0.478275s, 431768 KB] Int hash set resizes: 12
[t=0.478275s, 431768 KB] Search time: 0.451955s
[t=0.478275s, 431768 KB] Total time: 0.478275s
Solution found.
Peak memory: 431768 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p53.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6335e-05s, 424928 KB] reading input...
[t=0.00217033s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260535s, 427536 KB] Building successor generator...done!
[t=0.026336s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.02636s, 427536 KB] time for successor generation creation: 0.000168771s
[t=0.0263996s, 427536 KB] Variables: 25
[t=0.0264235s, 427536 KB] FactPairs: 182
[t=0.0264457s, 427536 KB] Bytes per state: 8
[t=0.0266421s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109512s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.109569s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109595s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.109622s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.109647s, 430128 KB] pruning method: none
[t=0.128253s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.128304s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.128526s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.128556s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.128948s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.128977s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.131016s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.131048s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.131626s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.131655s, 431100 KB] g=6, 22 evaluated, 6 expanded
[t=0.132051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.13208s, 431100 KB] g=7, 24 evaluated, 7 expanded
[t=0.135011s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.135043s, 431100 KB] g=9, 40 evaluated, 10 expanded
[t=0.135801s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.135831s, 431100 KB] g=10, 44 evaluated, 11 expanded
[t=0.137671s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.1377s, 431100 KB] g=12, 54 evaluated, 13 expanded
[t=0.139552s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.139588s, 431100 KB] g=14, 64 evaluated, 15 expanded
[t=0.144179s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.144213s, 431100 KB] g=17, 89 evaluated, 20 expanded
[t=0.150249s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.150282s, 431100 KB] g=22, 122 evaluated, 27 expanded
[t=0.15325s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.153283s, 431100 KB] g=26, 138 evaluated, 31 expanded
[t=0.154782s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.154815s, 431232 KB] g=27, 146 evaluated, 32 expanded
[t=0.155039s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.155069s, 431232 KB] g=28, 147 evaluated, 33 expanded
[t=0.155279s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.155307s, 431232 KB] g=28, 148 evaluated, 33 expanded
[t=0.160431s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.160465s, 431232 KB] g=30, 176 evaluated, 39 expanded
[t=0.180765s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.180802s, 431232 KB] g=31, 287 evaluated, 66 expanded
[t=0.204304s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.204343s, 431364 KB] g=38, 416 evaluated, 99 expanded
[t=0.205651s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.205682s, 431364 KB] g=40, 423 evaluated, 101 expanded
[t=0.205896s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.205925s, 431364 KB] g=41, 424 evaluated, 102 expanded
[t=0.207973s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.208008s, 431364 KB] g=44, 435 evaluated, 105 expanded
[t=0.235655s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.235694s, 431364 KB] g=38, 587 evaluated, 142 expanded
[t=0.238087s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.238118s, 431364 KB] g=39, 600 evaluated, 145 expanded
[t=0.244155s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.244189s, 431364 KB] g=42, 633 evaluated, 154 expanded
[t=0.245854s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.245887s, 431364 KB] g=44, 642 evaluated, 156 expanded
[t=0.28793s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.287974s, 431496 KB] g=47, 872 evaluated, 211 expanded
[t=0.2893s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.28933s, 431496 KB] g=48, 879 evaluated, 212 expanded
[t=0.291377s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.291413s, 431496 KB] g=50, 890 evaluated, 215 expanded
[t=0.302669s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.302708s, 431628 KB] g=52, 951 evaluated, 227 expanded
[t=0.304017s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.304049s, 431628 KB] g=53, 958 evaluated, 228 expanded
[t=0.304809s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.304839s, 431628 KB] g=54, 962 evaluated, 229 expanded
[t=0.305966s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.305999s, 431628 KB] g=56, 968 evaluated, 231 expanded
[t=0.309515s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.309548s, 431628 KB] g=59, 987 evaluated, 237 expanded
[t=0.311236s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.311273s, 431628 KB] g=60, 996 evaluated, 239 expanded
[t=0.312037s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.312066s, 431628 KB] g=62, 1000 evaluated, 241 expanded
[t=0.31676s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.316795s, 431628 KB] g=65, 1025 evaluated, 251 expanded
[t=0.317736s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.317766s, 431628 KB] g=66, 1030 evaluated, 252 expanded
[t=0.322994s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.323029s, 431628 KB] g=68, 1058 evaluated, 274 expanded, 8 reopened
[t=0.337177s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.337214s, 431628 KB] g=71, 1136 evaluated, 314 expanded, 10 reopened
[t=0.337242s, 431628 KB] Solution found!
[t=0.33727s, 431628 KB] Actual search time: 0.22762s
put-down a (1)
unstack k c (1)
stack k e (1)
unstack d b (1)
put-down d (1)
unstack c l (1)
put-down c (1)
pick-up d (1)
stack d c (1)
unstack b g (1)
stack b k (1)
unstack d c (1)
put-down d (1)
unstack l f (1)
stack l d (1)
unstack f j (1)
stack f c (1)
pick-up j (1)
stack j l (1)
unstack b k (1)
stack b j (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
put-down e (1)
pick-up a (1)
stack a e (1)
unstack k f (1)
stack k i (1)
unstack g h (1)
put-down g (1)
unstack a e (1)
stack a k (1)
pick-up h (1)
stack h g (1)
unstack b j (1)
put-down b (1)
unstack j l (1)
stack j e (1)
pick-up b (1)
stack b l (1)
unstack f c (1)
stack f j (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack j e (1)
put-down j (1)
unstack k i (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d j (1)
unstack b i (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.337295s, 431628 KB] Plan length: 71 step(s).
[t=0.337295s, 431628 KB] Plan cost: 71
[t=0.337295s, 431628 KB] Expanded 315 state(s).
[t=0.337295s, 431628 KB] Reopened 10 state(s).
[t=0.337295s, 431628 KB] Evaluated 1136 state(s).
[t=0.337295s, 431628 KB] Evaluations: 1136
[t=0.337295s, 431628 KB] Generated 1499 state(s).
[t=0.337295s, 431628 KB] Dead ends: 0 state(s).
[t=0.337295s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.337295s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.337295s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.337295s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.337295s, 431628 KB] Number of registered states: 1136
[t=0.337295s, 431628 KB] Int hash set load factor: 1136/2048 = 0.554688
[t=0.337295s, 431628 KB] Int hash set resizes: 11
[t=0.337295s, 431628 KB] Search time: 0.310654s
[t=0.337295s, 431628 KB] Total time: 0.337295s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p54.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6715e-05s, 424928 KB] reading input...
[t=0.0021634s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259092s, 427536 KB] Building successor generator...done!
[t=0.0261843s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026208s, 427536 KB] time for successor generation creation: 0.000164535s
[t=0.0262378s, 427536 KB] Variables: 25
[t=0.026261s, 427536 KB] FactPairs: 182
[t=0.0262836s, 427536 KB] Bytes per state: 8
[t=0.026479s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983734s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0984251s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984509s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0984788s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0985028s, 430128 KB] pruning method: none
[t=0.116702s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.116752s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117537s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.11757s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117782s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.117812s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118393s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.118423s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.119904s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.119934s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.120148s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.120178s, 431100 KB] g=6, 20 evaluated, 6 expanded
[t=0.122587s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.12262s, 431100 KB] g=7, 33 evaluated, 11 expanded
[t=0.123018s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.123048s, 431100 KB] g=8, 35 evaluated, 12 expanded
[t=0.123982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.124012s, 431100 KB] g=9, 40 evaluated, 13 expanded
[t=0.12605s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.126082s, 431100 KB] g=10, 51 evaluated, 17 expanded
[t=0.130321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.130354s, 431100 KB] g=13, 74 evaluated, 24 expanded
[t=0.163969s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.164009s, 431232 KB] g=17, 257 evaluated, 80 expanded
[t=0.181107s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.181145s, 431232 KB] g=24, 350 evaluated, 108 expanded, 2 reopened
[t=0.183549s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.183583s, 431232 KB] g=26, 363 evaluated, 111 expanded, 2 reopened
[t=0.185097s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.185133s, 431232 KB] g=30, 371 evaluated, 115 expanded, 2 reopened
[t=0.185346s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.185376s, 431232 KB] g=30, 372 evaluated, 115 expanded, 2 reopened
[t=0.185954s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.185987s, 431232 KB] g=31, 375 evaluated, 116 expanded, 2 reopened
[t=0.186932s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.186962s, 431232 KB] g=33, 380 evaluated, 118 expanded, 2 reopened
[t=0.194705s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.194741s, 431232 KB] g=39, 422 evaluated, 137 expanded, 2 reopened
[t=0.19989s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.199923s, 431232 KB] g=40, 450 evaluated, 148 expanded, 2 reopened
[t=0.20106s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.201097s, 431364 KB] g=42, 456 evaluated, 150 expanded, 2 reopened
[t=0.202791s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.202821s, 431364 KB] g=44, 465 evaluated, 155 expanded, 2 reopened
[t=0.203403s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.203432s, 431364 KB] g=45, 468 evaluated, 156 expanded, 2 reopened
[t=0.206233s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.206269s, 431364 KB] g=47, 483 evaluated, 163 expanded, 2 reopened
[t=0.209508s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.209544s, 431364 KB] g=52, 500 evaluated, 170 expanded, 2 reopened
[t=0.238885s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.238922s, 431364 KB] g=49, 658 evaluated, 254 expanded, 11 reopened
[t=0.238957s, 431364 KB] Solution found!
[t=0.238984s, 431364 KB] Actual search time: 0.140478s
unstack e h (1)
stack e k (1)
unstack f g (1)
stack f e (1)
pick-up h (1)
stack h a (1)
unstack g l (1)
put-down g (1)
unstack l j (1)
put-down l (1)
unstack h a (1)
stack h g (1)
pick-up j (1)
stack j l (1)
unstack a d (1)
stack a h (1)
unstack f e (1)
put-down f (1)
unstack j l (1)
put-down j (1)
pick-up l (1)
stack l d (1)
pick-up f (1)
stack f a (1)
pick-up j (1)
stack j l (1)
unstack e k (1)
stack e j (1)
unstack k b (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
put-down j (1)
unstack l d (1)
stack l b (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.239015s, 431364 KB] Plan length: 50 step(s).
[t=0.239015s, 431364 KB] Plan cost: 50
[t=0.239015s, 431364 KB] Expanded 256 state(s).
[t=0.239015s, 431364 KB] Reopened 11 state(s).
[t=0.239015s, 431364 KB] Evaluated 659 state(s).
[t=0.239015s, 431364 KB] Evaluations: 659
[t=0.239015s, 431364 KB] Generated 958 state(s).
[t=0.239015s, 431364 KB] Dead ends: 0 state(s).
[t=0.239015s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.239015s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.239015s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.239015s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.239015s, 431364 KB] Number of registered states: 659
[t=0.239015s, 431364 KB] Int hash set load factor: 659/1024 = 0.643555
[t=0.239015s, 431364 KB] Int hash set resizes: 10
[t=0.239015s, 431364 KB] Search time: 0.212537s
[t=0.239015s, 431364 KB] Total time: 0.239015s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p55.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9551e-05s, 424928 KB] reading input...
[t=0.00211087s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258176s, 427536 KB] Building successor generator...done!
[t=0.0260995s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261236s, 427536 KB] time for successor generation creation: 0.000170203s
[t=0.0261523s, 427536 KB] Variables: 25
[t=0.0261747s, 427536 KB] FactPairs: 182
[t=0.0261968s, 427536 KB] Bytes per state: 8
[t=0.026392s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0978643s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0979156s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979415s, 430128 KB] f = 154, 1 evaluated, 0 expanded
[t=0.0979693s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.097994s, 430128 KB] pruning method: none
[t=0.109887s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 153
[t=0.10994s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116397s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.11644s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118653s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.118687s, 431100 KB] g=5, 15 evaluated, 6 expanded
[t=0.119975s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.120006s, 431100 KB] g=7, 22 evaluated, 8 expanded
[t=0.120399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.120428s, 431100 KB] g=8, 24 evaluated, 9 expanded
[t=0.122806s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.122839s, 431100 KB] g=10, 37 evaluated, 12 expanded
[t=0.125897s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.125927s, 431100 KB] g=11, 54 evaluated, 15 expanded
[t=0.131364s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.131412s, 431100 KB] g=13, 84 evaluated, 21 expanded
[t=0.131992s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.132022s, 431100 KB] g=14, 87 evaluated, 22 expanded
[t=0.137092s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.137127s, 431100 KB] g=16, 115 evaluated, 28 expanded
[t=0.138421s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.138452s, 431100 KB] g=17, 122 evaluated, 29 expanded
[t=0.138676s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.138707s, 431100 KB] g=17, 123 evaluated, 29 expanded
[t=0.141272s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.141305s, 431100 KB] g=19, 137 evaluated, 33 expanded
[t=0.144402s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.144435s, 431100 KB] g=23, 154 evaluated, 38 expanded
[t=0.14953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.149564s, 431232 KB] g=28, 182 evaluated, 45 expanded
[t=0.155386s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.155419s, 431232 KB] g=29, 214 evaluated, 54 expanded
[t=0.156174s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.156203s, 431232 KB] g=30, 218 evaluated, 55 expanded
[t=0.157314s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.157347s, 431232 KB] g=31, 224 evaluated, 57 expanded
[t=0.1581s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.15813s, 431232 KB] g=32, 228 evaluated, 58 expanded
[t=0.168853s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.168888s, 431232 KB] g=30, 287 evaluated, 75 expanded, 1 reopened
[t=0.169103s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.169132s, 431232 KB] g=31, 288 evaluated, 76 expanded, 1 reopened
[t=0.170651s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.170689s, 431232 KB] g=33, 296 evaluated, 79 expanded, 1 reopened
[t=0.189113s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.18915s, 431364 KB] g=37, 396 evaluated, 128 expanded, 18 reopened
[t=0.189543s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.189578s, 431364 KB] g=37, 398 evaluated, 128 expanded, 18 reopened
[t=0.192159s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.192196s, 431364 KB] g=39, 412 evaluated, 133 expanded, 18 reopened
[t=0.192776s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.192807s, 431364 KB] g=40, 415 evaluated, 134 expanded, 18 reopened
[t=0.193735s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.193765s, 431364 KB] g=41, 420 evaluated, 135 expanded, 18 reopened
[t=0.194896s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.194931s, 431364 KB] g=43, 426 evaluated, 138 expanded, 18 reopened
[t=0.195506s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.195536s, 431364 KB] g=44, 429 evaluated, 139 expanded, 18 reopened
[t=0.195931s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.19596s, 431364 KB] g=45, 431 evaluated, 140 expanded, 18 reopened
[t=0.196717s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.196746s, 431364 KB] g=46, 435 evaluated, 141 expanded, 18 reopened
[t=0.199141s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.199176s, 431364 KB] g=48, 448 evaluated, 146 expanded, 18 reopened
[t=0.210444s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.210488s, 431364 KB] g=52, 510 evaluated, 170 expanded, 18 reopened
[t=0.217841s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.217879s, 431364 KB] g=55, 550 evaluated, 189 expanded, 20 reopened
[t=0.219914s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.219951s, 431364 KB] g=60, 561 evaluated, 195 expanded, 20 reopened
[t=0.242326s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.242365s, 431364 KB] g=56, 684 evaluated, 276 expanded, 46 reopened
[t=0.243496s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.243529s, 431364 KB] g=58, 690 evaluated, 280 expanded, 46 reopened
[t=0.24356s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.243584s, 431364 KB] g=59, 691 evaluated, 281 expanded, 46 reopened
[t=0.24361s, 431364 KB] Solution found!
[t=0.243637s, 431364 KB] Actual search time: 0.145638s
put-down h (1)
unstack e b (1)
stack e h (1)
unstack b d (1)
put-down b (1)
unstack e h (1)
put-down e (1)
unstack d i (1)
put-down d (1)
unstack k a (1)
stack k i (1)
unstack a l (1)
stack a k (1)
unstack l j (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up h (1)
stack h e (1)
unstack j f (1)
put-down j (1)
unstack f g (1)
stack f a (1)
pick-up j (1)
stack j f (1)
unstack h e (1)
stack h g (1)
unstack j f (1)
put-down j (1)
unstack f a (1)
stack f e (1)
pick-up j (1)
stack j b (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k i (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.243661s, 431364 KB] Plan length: 59 step(s).
[t=0.243661s, 431364 KB] Plan cost: 59
[t=0.243661s, 431364 KB] Expanded 282 state(s).
[t=0.243661s, 431364 KB] Reopened 46 state(s).
[t=0.243661s, 431364 KB] Evaluated 691 state(s).
[t=0.243661s, 431364 KB] Evaluations: 691
[t=0.243661s, 431364 KB] Generated 1139 state(s).
[t=0.243661s, 431364 KB] Dead ends: 0 state(s).
[t=0.243661s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.243661s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.243661s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.243661s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.243661s, 431364 KB] Number of registered states: 691
[t=0.243661s, 431364 KB] Int hash set load factor: 691/1024 = 0.674805
[t=0.243661s, 431364 KB] Int hash set resizes: 10
[t=0.243661s, 431364 KB] Search time: 0.217269s
[t=0.243661s, 431364 KB] Total time: 0.243661s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p56.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6684e-05s, 424928 KB] reading input...
[t=0.00219532s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259435s, 427536 KB] Building successor generator...done!
[t=0.026221s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262445s, 427536 KB] time for successor generation creation: 0.000164869s
[t=0.0262737s, 427536 KB] Variables: 25
[t=0.0262968s, 427536 KB] FactPairs: 182
[t=0.0263194s, 427536 KB] Bytes per state: 8
[t=0.0265144s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988955s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0989472s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098973s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0989999s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0990239s, 430128 KB] pruning method: none
[t=0.110873s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.110925s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11819s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118233s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118646s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.118676s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.121344s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.121374s, 431100 KB] g=4, 23 evaluated, 5 expanded
[t=0.121791s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.121821s, 431100 KB] g=5, 25 evaluated, 6 expanded
[t=0.122795s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.122825s, 431100 KB] g=6, 30 evaluated, 7 expanded
[t=0.136272s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.136306s, 431100 KB] g=11, 101 evaluated, 21 expanded
[t=0.136529s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.136567s, 431100 KB] g=11, 102 evaluated, 21 expanded
[t=0.145896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.145929s, 431100 KB] g=12, 151 evaluated, 32 expanded
[t=0.15277s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.152806s, 431232 KB] g=16, 187 evaluated, 40 expanded
[t=0.159859s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.159895s, 431232 KB] g=21, 224 evaluated, 49 expanded
[t=0.167349s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.167383s, 431232 KB] g=25, 263 evaluated, 62 expanded
[t=0.170481s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.170515s, 431232 KB] g=26, 279 evaluated, 66 expanded
[t=0.260285s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.260327s, 431364 KB] g=31, 753 evaluated, 222 expanded, 13 reopened
[t=0.261696s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.261731s, 431364 KB] g=32, 760 evaluated, 223 expanded, 13 reopened
[t=0.26574s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.265773s, 431496 KB] g=36, 781 evaluated, 227 expanded, 13 reopened
[t=0.270548s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.270582s, 431496 KB] g=37, 806 evaluated, 236 expanded, 13 reopened
[t=0.27099s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.271019s, 431496 KB] g=37, 808 evaluated, 236 expanded, 13 reopened
[t=0.271241s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.271269s, 431496 KB] g=38, 809 evaluated, 237 expanded, 13 reopened
[t=0.274528s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.274563s, 431496 KB] g=39, 826 evaluated, 243 expanded, 13 reopened
[t=0.277053s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.277086s, 431496 KB] g=43, 839 evaluated, 250 expanded, 13 reopened
[t=0.278081s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.278113s, 431496 KB] g=45, 844 evaluated, 253 expanded, 13 reopened
[t=0.279279s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.279309s, 431496 KB] g=46, 850 evaluated, 256 expanded, 13 reopened
[t=0.279529s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.279563s, 431496 KB] g=46, 851 evaluated, 256 expanded, 13 reopened
[t=0.279781s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.279811s, 431496 KB] g=46, 852 evaluated, 256 expanded, 13 reopened
[t=0.282685s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.28272s, 431496 KB] g=48, 867 evaluated, 261 expanded, 13 reopened
[t=0.283883s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.283912s, 431496 KB] g=50, 873 evaluated, 263 expanded, 13 reopened
[t=0.284695s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.284724s, 431496 KB] g=51, 877 evaluated, 264 expanded, 13 reopened
[t=0.285526s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.28556s, 431496 KB] g=52, 881 evaluated, 265 expanded, 13 reopened
[t=0.295787s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.295823s, 431496 KB] g=55, 935 evaluated, 288 expanded, 15 reopened
[t=0.298514s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.298549s, 431496 KB] g=57, 949 evaluated, 294 expanded, 15 reopened
[t=0.300469s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.300502s, 431496 KB] g=58, 959 evaluated, 299 expanded, 15 reopened
[t=0.300914s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.300942s, 431496 KB] g=59, 961 evaluated, 300 expanded, 15 reopened
[t=0.300972s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.300996s, 431496 KB] g=60, 962 evaluated, 301 expanded, 15 reopened
[t=0.301022s, 431496 KB] Solution found!
[t=0.301047s, 431496 KB] Actual search time: 0.202019s
unstack b h (1)
put-down b (1)
unstack i f (1)
put-down i (1)
unstack j l (1)
stack j i (1)
unstack l a (1)
stack l j (1)
unstack h d (1)
stack h a (1)
unstack l j (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack j i (1)
put-down j (1)
pick-up i (1)
stack i c (1)
unstack h a (1)
stack h j (1)
unstack f k (1)
put-down f (1)
unstack a e (1)
stack a k (1)
unstack e g (1)
put-down e (1)
unstack h j (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up e (1)
stack e i (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.301072s, 431496 KB] Plan length: 60 step(s).
[t=0.301072s, 431496 KB] Plan cost: 60
[t=0.301072s, 431496 KB] Expanded 302 state(s).
[t=0.301072s, 431496 KB] Reopened 15 state(s).
[t=0.301072s, 431496 KB] Evaluated 962 state(s).
[t=0.301072s, 431496 KB] Evaluations: 962
[t=0.301072s, 431496 KB] Generated 1356 state(s).
[t=0.301072s, 431496 KB] Dead ends: 0 state(s).
[t=0.301072s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.301072s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.301072s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.301072s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.301072s, 431496 KB] Number of registered states: 962
[t=0.301072s, 431496 KB] Int hash set load factor: 962/1024 = 0.939453
[t=0.301072s, 431496 KB] Int hash set resizes: 10
[t=0.301072s, 431496 KB] Search time: 0.274558s
[t=0.301072s, 431496 KB] Total time: 0.301072s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p57.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6148e-05s, 424928 KB] reading input...
[t=0.00215865s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259441s, 427536 KB] Building successor generator...done!
[t=0.0262253s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262493s, 427536 KB] time for successor generation creation: 0.000167369s
[t=0.0262776s, 427536 KB] Variables: 25
[t=0.0263009s, 427536 KB] FactPairs: 182
[t=0.0263236s, 427536 KB] Bytes per state: 8
[t=0.0265166s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098976s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.0990285s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990551s, 430128 KB] f = 121, 1 evaluated, 0 expanded
[t=0.0990834s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.0991085s, 430128 KB] pruning method: none
[t=0.117414s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.117465s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119826s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.119857s, 431100 KB] g=2, 16 evaluated, 3 expanded
[t=0.124026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.12406s, 431100 KB] g=6, 39 evaluated, 8 expanded
[t=0.131256s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.131294s, 431100 KB] g=9, 79 evaluated, 15 expanded
[t=0.134846s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.134882s, 431100 KB] g=13, 98 evaluated, 19 expanded
[t=0.139568s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.139603s, 431100 KB] g=15, 124 evaluated, 25 expanded
[t=0.142331s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.142367s, 431100 KB] g=16, 139 evaluated, 28 expanded
[t=0.145438s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.145472s, 431100 KB] g=18, 156 evaluated, 32 expanded
[t=0.146763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.146797s, 431232 KB] g=19, 163 evaluated, 33 expanded
[t=0.149343s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.149376s, 431232 KB] g=20, 177 evaluated, 36 expanded
[t=0.15173s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.151761s, 431232 KB] g=23, 190 evaluated, 39 expanded
[t=0.152331s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.152373s, 431232 KB] g=24, 193 evaluated, 40 expanded
[t=0.175168s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.175207s, 431232 KB] g=26, 320 evaluated, 73 expanded
[t=0.192243s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.192281s, 431364 KB] g=28, 415 evaluated, 93 expanded
[t=0.192493s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.192521s, 431364 KB] g=28, 416 evaluated, 93 expanded
[t=0.225414s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.225454s, 431364 KB] g=32, 599 evaluated, 135 expanded
[t=0.31581s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.315852s, 431496 KB] g=26, 1102 evaluated, 255 expanded, 2 reopened
[t=0.317168s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.317201s, 431628 KB] g=27, 1109 evaluated, 256 expanded, 2 reopened
[t=0.317777s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.31781s, 431628 KB] g=28, 1112 evaluated, 257 expanded, 2 reopened
[t=0.318922s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.318952s, 431628 KB] g=29, 1118 evaluated, 258 expanded, 2 reopened
[t=0.321871s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.321907s, 431628 KB] g=31, 1134 evaluated, 262 expanded, 2 reopened
[t=0.323372s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.323403s, 431628 KB] g=32, 1142 evaluated, 263 expanded, 2 reopened
[t=0.324156s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.324185s, 431628 KB] g=33, 1146 evaluated, 264 expanded, 2 reopened
[t=0.326749s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.326782s, 431628 KB] g=35, 1160 evaluated, 267 expanded, 2 reopened
[t=0.33112s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.331158s, 431628 KB] g=37, 1184 evaluated, 272 expanded, 2 reopened
[t=0.331374s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.331404s, 431628 KB] g=38, 1185 evaluated, 273 expanded, 2 reopened
[t=0.332695s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.332728s, 431628 KB] g=39, 1192 evaluated, 275 expanded, 2 reopened
[t=0.333316s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.333349s, 431628 KB] g=40, 1195 evaluated, 276 expanded, 2 reopened
[t=0.337167s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.337202s, 431628 KB] g=44, 1216 evaluated, 285 expanded, 2 reopened
[t=0.34193s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.341967s, 431628 KB] g=42, 1242 evaluated, 299 expanded, 2 reopened
[t=0.342364s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.342394s, 431628 KB] g=43, 1244 evaluated, 300 expanded, 2 reopened
[t=0.342425s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.34245s, 431628 KB] g=44, 1245 evaluated, 301 expanded, 2 reopened
[t=0.342476s, 431628 KB] Solution found!
[t=0.342503s, 431628 KB] Actual search time: 0.24339s
unstack i c (1)
put-down i (1)
unstack a j (1)
stack a b (1)
unstack j e (1)
stack j i (1)
unstack e h (1)
stack e j (1)
pick-up c (1)
stack c d (1)
unstack h l (1)
stack h e (1)
unstack a b (1)
stack a l (1)
unstack c d (1)
stack c b (1)
unstack g k (1)
put-down g (1)
unstack h e (1)
stack h g (1)
unstack k f (1)
stack k d (1)
unstack a l (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.342528s, 431628 KB] Plan length: 44 step(s).
[t=0.342528s, 431628 KB] Plan cost: 44
[t=0.342528s, 431628 KB] Expanded 302 state(s).
[t=0.342528s, 431628 KB] Reopened 2 state(s).
[t=0.342528s, 431628 KB] Evaluated 1245 state(s).
[t=0.342528s, 431628 KB] Evaluations: 1245
[t=0.342528s, 431628 KB] Generated 1600 state(s).
[t=0.342528s, 431628 KB] Dead ends: 0 state(s).
[t=0.342528s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.342528s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.342528s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.342528s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.342528s, 431628 KB] Number of registered states: 1245
[t=0.342528s, 431628 KB] Int hash set load factor: 1245/2048 = 0.60791
[t=0.342528s, 431628 KB] Int hash set resizes: 11
[t=0.342528s, 431628 KB] Search time: 0.316012s
[t=0.342528s, 431628 KB] Total time: 0.342528s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p58.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6218e-05s, 424928 KB] reading input...
[t=0.00213168s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258262s, 427536 KB] Building successor generator...done!
[t=0.0261017s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261249s, 427536 KB] time for successor generation creation: 0.000163089s
[t=0.0261532s, 427536 KB] Variables: 25
[t=0.026176s, 427536 KB] FactPairs: 182
[t=0.0261981s, 427536 KB] Bytes per state: 8
[t=0.0263903s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988156s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.0988679s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988947s, 430128 KB] f = 136, 1 evaluated, 0 expanded
[t=0.0989225s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.0989463s, 430128 KB] pruning method: none
[t=0.117786s, 431100 KB] f = 142, 6 evaluated, 1 expanded
[t=0.118032s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.118063s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118281s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.118311s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119852s, 431100 KB] f = 144, 16 evaluated, 4 expanded
[t=0.120464s, 431100 KB] f = 146, 19 evaluated, 5 expanded
[t=0.126526s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.126559s, 431100 KB] g=7, 51 evaluated, 15 expanded
[t=0.128654s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.128684s, 431100 KB] g=9, 62 evaluated, 18 expanded
[t=0.130797s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.130832s, 431100 KB] g=11, 73 evaluated, 20 expanded
[t=0.139337s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.139371s, 431100 KB] g=16, 118 evaluated, 29 expanded
[t=0.140533s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.140563s, 431100 KB] g=17, 124 evaluated, 30 expanded
[t=0.141753s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.141785s, 431100 KB] g=18, 130 evaluated, 31 expanded
[t=0.148404s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.148442s, 431232 KB] g=24, 165 evaluated, 38 expanded
[t=0.150178s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.15021s, 431232 KB] g=26, 174 evaluated, 40 expanded
[t=0.152505s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.152535s, 431232 KB] g=26, 186 evaluated, 42 expanded
[t=0.155403s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.155436s, 431232 KB] g=28, 201 evaluated, 45 expanded
[t=0.155845s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.155875s, 431232 KB] g=28, 203 evaluated, 45 expanded
[t=0.175196s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.175232s, 431232 KB] g=34, 305 evaluated, 74 expanded, 6 reopened
[t=0.215099s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.215139s, 431364 KB] g=40, 517 evaluated, 141 expanded, 11 reopened
[t=0.222608s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.222645s, 431364 KB] g=48, 556 evaluated, 152 expanded, 11 reopened
[t=0.223614s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.223649s, 431364 KB] g=49, 561 evaluated, 153 expanded, 11 reopened
[t=0.229169s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.229216s, 431364 KB] g=52, 590 evaluated, 159 expanded, 11 reopened
[t=0.230749s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.230782s, 431364 KB] g=54, 598 evaluated, 161 expanded, 11 reopened
[t=0.232508s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.232539s, 431364 KB] g=57, 607 evaluated, 164 expanded, 11 reopened
[t=0.233899s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.233931s, 431364 KB] g=58, 614 evaluated, 166 expanded, 11 reopened
[t=0.235279s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.235309s, 431364 KB] g=59, 621 evaluated, 168 expanded, 11 reopened
[t=0.240976s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.241011s, 431496 KB] g=63, 651 evaluated, 177 expanded, 11 reopened
[t=0.242941s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.242975s, 431496 KB] g=67, 661 evaluated, 181 expanded, 11 reopened
[t=0.243379s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.243408s, 431496 KB] g=67, 663 evaluated, 181 expanded, 11 reopened
[t=0.246276s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.246309s, 431496 KB] g=70, 678 evaluated, 186 expanded, 11 reopened
[t=0.247092s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.247122s, 431496 KB] g=72, 682 evaluated, 188 expanded, 11 reopened
[t=0.256791s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.256825s, 431496 KB] g=74, 733 evaluated, 215 expanded, 11 reopened
[t=0.265342s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.265377s, 431496 KB] g=80, 778 evaluated, 237 expanded, 11 reopened
[t=0.265408s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.265432s, 431496 KB] g=81, 779 evaluated, 238 expanded, 11 reopened
[t=0.265457s, 431496 KB] Solution found!
[t=0.265484s, 431496 KB] Actual search time: 0.166533s
stack a g (1)
unstack d i (1)
stack d e (1)
unstack k b (1)
stack k i (1)
unstack d e (1)
put-down d (1)
unstack b f (1)
stack b d (1)
unstack k i (1)
put-down k (1)
unstack f j (1)
put-down f (1)
pick-up k (1)
stack k f (1)
unstack j l (1)
put-down j (1)
unstack l h (1)
stack l b (1)
pick-up e (1)
stack e j (1)
pick-up h (1)
stack h e (1)
unstack i c (1)
put-down i (1)
unstack a g (1)
stack a k (1)
pick-up g (1)
stack g h (1)
pick-up i (1)
stack i a (1)
pick-up c (1)
stack c i (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack c i (1)
stack c b (1)
unstack i a (1)
stack i c (1)
unstack g h (1)
put-down g (1)
unstack a k (1)
stack a d (1)
unstack h e (1)
stack h g (1)
unstack a d (1)
stack a h (1)
unstack e j (1)
stack e d (1)
unstack k f (1)
stack k j (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack i c (1)
put-down i (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b d (1)
pick-up l (1)
stack l c (1)
unstack b d (1)
put-down b (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.265507s, 431496 KB] Plan length: 81 step(s).
[t=0.265507s, 431496 KB] Plan cost: 81
[t=0.265507s, 431496 KB] Expanded 239 state(s).
[t=0.265507s, 431496 KB] Reopened 11 state(s).
[t=0.265507s, 431496 KB] Evaluated 779 state(s).
[t=0.265507s, 431496 KB] Evaluations: 779
[t=0.265507s, 431496 KB] Generated 1097 state(s).
[t=0.265507s, 431496 KB] Dead ends: 0 state(s).
[t=0.265507s, 431496 KB] Expanded until last jump: 5 state(s).
[t=0.265507s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.265507s, 431496 KB] Evaluated until last jump: 19 state(s).
[t=0.265507s, 431496 KB] Generated until last jump: 22 state(s).
[t=0.265507s, 431496 KB] Number of registered states: 779
[t=0.265507s, 431496 KB] Int hash set load factor: 779/1024 = 0.760742
[t=0.265507s, 431496 KB] Int hash set resizes: 10
[t=0.265507s, 431496 KB] Search time: 0.239118s
[t=0.265507s, 431496 KB] Total time: 0.265507s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p59.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5708e-05s, 424928 KB] reading input...
[t=0.00219109s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258657s, 427536 KB] Building successor generator...done!
[t=0.0261441s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026168s, 427536 KB] time for successor generation creation: 0.000167222s
[t=0.0261967s, 427536 KB] Variables: 25
[t=0.0262213s, 427536 KB] FactPairs: 182
[t=0.0262439s, 427536 KB] Bytes per state: 8
[t=0.0264389s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979865s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.098037s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980626s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0980903s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0981141s, 430128 KB] pruning method: none
[t=0.116475s, 431100 KB] f = 150, 4 evaluated, 1 expanded
[t=0.116905s, 431100 KB] f = 151, 6 evaluated, 3 expanded
[t=0.117678s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.11771s, 431100 KB] g=4, 10 evaluated, 5 expanded
[t=0.12374s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.123774s, 431100 KB] g=9, 43 evaluated, 23 expanded
[t=0.12509s, 431100 KB] f = 152, 50 evaluated, 30 expanded
[t=0.131824s, 431100 KB] f = 153, 87 evaluated, 43 expanded
[t=0.135503s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.135536s, 431100 KB] g=13, 107 evaluated, 53 expanded
[t=0.136109s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.136141s, 431100 KB] g=13, 110 evaluated, 53 expanded
[t=0.13726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.13729s, 431100 KB] g=14, 116 evaluated, 55 expanded
[t=0.14132s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.141356s, 431100 KB] g=18, 138 evaluated, 60 expanded
[t=0.148443s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.14848s, 431100 KB] g=22, 177 evaluated, 69 expanded
[t=0.149416s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.149456s, 431100 KB] g=23, 182 evaluated, 70 expanded
[t=0.153309s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.153342s, 431232 KB] g=23, 203 evaluated, 76 expanded
[t=0.158817s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.158849s, 431232 KB] g=32, 233 evaluated, 85 expanded
[t=0.167011s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.167047s, 431232 KB] g=35, 277 evaluated, 110 expanded, 11 reopened
[t=0.171624s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.17166s, 431232 KB] g=38, 302 evaluated, 117 expanded, 11 reopened
[t=0.172774s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.172804s, 431232 KB] g=39, 308 evaluated, 118 expanded, 11 reopened
[t=0.173744s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.173778s, 431232 KB] g=40, 313 evaluated, 119 expanded, 11 reopened
[t=0.174175s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.174204s, 431232 KB] g=41, 315 evaluated, 120 expanded, 11 reopened
[t=0.174596s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.174627s, 431232 KB] g=41, 317 evaluated, 120 expanded, 11 reopened
[t=0.174835s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.174863s, 431232 KB] g=41, 318 evaluated, 120 expanded, 11 reopened
[t=0.177251s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.177282s, 431232 KB] g=43, 331 evaluated, 124 expanded, 11 reopened
[t=0.178051s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.178086s, 431232 KB] g=44, 335 evaluated, 125 expanded, 11 reopened
[t=0.178844s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.178873s, 431232 KB] g=45, 339 evaluated, 126 expanded, 11 reopened
[t=0.17927s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.179302s, 431232 KB] g=46, 341 evaluated, 127 expanded, 11 reopened
[t=0.180953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.180985s, 431232 KB] g=48, 350 evaluated, 129 expanded, 11 reopened
[t=0.183905s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.18394s, 431232 KB] g=49, 366 evaluated, 133 expanded, 11 reopened
[t=0.184698s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.184729s, 431232 KB] g=50, 370 evaluated, 134 expanded, 11 reopened
[t=0.186392s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.186424s, 431232 KB] g=52, 379 evaluated, 137 expanded, 11 reopened
[t=0.187185s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.187214s, 431232 KB] g=54, 383 evaluated, 139 expanded, 11 reopened
[t=0.18833s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.188364s, 431364 KB] g=56, 389 evaluated, 141 expanded, 11 reopened
[t=0.196013s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.196048s, 431364 KB] g=60, 431 evaluated, 158 expanded, 11 reopened
[t=0.196986s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.197015s, 431364 KB] g=61, 436 evaluated, 159 expanded, 11 reopened
[t=0.198323s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.198354s, 431364 KB] g=63, 443 evaluated, 163 expanded, 11 reopened
[t=0.199118s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.199149s, 431364 KB] g=65, 448 evaluated, 166 expanded, 11 reopened
[t=0.199177s, 431364 KB] Solution found!
[t=0.199204s, 431364 KB] Actual search time: 0.101086s
stack a f (1)
unstack l j (1)
put-down l (1)
unstack j h (1)
put-down j (1)
unstack a f (1)
put-down a (1)
pick-up j (1)
stack j l (1)
unstack f k (1)
put-down f (1)
unstack k g (1)
stack k f (1)
unstack g e (1)
stack g a (1)
unstack j l (1)
stack j e (1)
unstack g a (1)
put-down g (1)
pick-up h (1)
stack h j (1)
unstack k f (1)
put-down k (1)
pick-up g (1)
stack g h (1)
pick-up a (1)
stack a f (1)
pick-up k (1)
stack k l (1)
unstack g h (1)
put-down g (1)
unstack h j (1)
stack h g (1)
unstack j e (1)
put-down j (1)
unstack e b (1)
stack e j (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack b d (1)
put-down b (1)
unstack k l (1)
stack k f (1)
pick-up b (1)
stack b l (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.199229s, 431364 KB] Plan length: 65 step(s).
[t=0.199229s, 431364 KB] Plan cost: 65
[t=0.199229s, 431364 KB] Expanded 167 state(s).
[t=0.199229s, 431364 KB] Reopened 11 state(s).
[t=0.199229s, 431364 KB] Evaluated 448 state(s).
[t=0.199229s, 431364 KB] Evaluations: 448
[t=0.199229s, 431364 KB] Generated 662 state(s).
[t=0.199229s, 431364 KB] Dead ends: 0 state(s).
[t=0.199229s, 431364 KB] Expanded until last jump: 43 state(s).
[t=0.199229s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.199229s, 431364 KB] Evaluated until last jump: 87 state(s).
[t=0.199229s, 431364 KB] Generated until last jump: 136 state(s).
[t=0.199229s, 431364 KB] Number of registered states: 448
[t=0.199229s, 431364 KB] Int hash set load factor: 448/512 = 0.875
[t=0.199229s, 431364 KB] Int hash set resizes: 9
[t=0.199229s, 431364 KB] Search time: 0.172791s
[t=0.199229s, 431364 KB] Total time: 0.199229s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p60.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.565e-05s, 424928 KB] reading input...
[t=0.00221655s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258474s, 427536 KB] Building successor generator...done!
[t=0.0261253s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261487s, 427536 KB] time for successor generation creation: 0.000166826s
[t=0.0261776s, 427536 KB] Variables: 25
[t=0.0262005s, 427536 KB] FactPairs: 182
[t=0.026223s, 427536 KB] Bytes per state: 8
[t=0.0264167s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983075s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0983693s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983961s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0984236s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0984477s, 430128 KB] pruning method: none
[t=0.11027s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.110322s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11876s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.118803s, 431100 KB] g=4, 14 evaluated, 5 expanded
[t=0.120815s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.120845s, 431100 KB] g=7, 25 evaluated, 8 expanded
[t=0.121782s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.121814s, 431100 KB] g=8, 30 evaluated, 9 expanded
[t=0.123103s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.123134s, 431100 KB] g=10, 37 evaluated, 11 expanded
[t=0.125315s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.125344s, 431100 KB] g=11, 49 evaluated, 15 expanded
[t=0.126107s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.126139s, 431100 KB] g=12, 53 evaluated, 16 expanded
[t=0.142576s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.142613s, 431100 KB] g=19, 144 evaluated, 37 expanded
[t=0.143191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.14322s, 431100 KB] g=20, 147 evaluated, 38 expanded
[t=0.146864s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.146902s, 431232 KB] g=23, 167 evaluated, 42 expanded
[t=0.165531s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.165568s, 431232 KB] g=23, 270 evaluated, 71 expanded
[t=0.177877s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.177914s, 431232 KB] g=29, 338 evaluated, 91 expanded
[t=0.1846s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.184637s, 431232 KB] g=31, 375 evaluated, 100 expanded
[t=0.187918s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.18795s, 431232 KB] g=30, 393 evaluated, 104 expanded
[t=0.19249s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.192526s, 431232 KB] g=34, 418 evaluated, 110 expanded
[t=0.193277s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.193307s, 431232 KB] g=35, 422 evaluated, 111 expanded
[t=0.201645s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.201686s, 431364 KB] g=42, 468 evaluated, 125 expanded
[t=0.202109s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.20214s, 431364 KB] g=42, 470 evaluated, 125 expanded
[t=0.204013s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.204043s, 431364 KB] g=45, 480 evaluated, 129 expanded
[t=0.204255s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.204284s, 431364 KB] g=46, 481 evaluated, 130 expanded
[t=0.206138s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.206172s, 431364 KB] g=45, 491 evaluated, 134 expanded
[t=0.206564s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.206592s, 431364 KB] g=45, 493 evaluated, 134 expanded
[t=0.206982s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.20701s, 431364 KB] g=46, 495 evaluated, 135 expanded
[t=0.207399s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.207428s, 431364 KB] g=47, 497 evaluated, 136 expanded
[t=0.215531s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.215568s, 431364 KB] g=49, 541 evaluated, 149 expanded
[t=0.220648s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.220684s, 431364 KB] g=50, 569 evaluated, 159 expanded
[t=0.220901s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.220929s, 431364 KB] g=51, 570 evaluated, 160 expanded
[t=0.224208s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.224241s, 431364 KB] g=54, 588 evaluated, 165 expanded
[t=0.227145s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.22718s, 431364 KB] g=57, 604 evaluated, 169 expanded
[t=0.227751s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.22778s, 431364 KB] g=58, 607 evaluated, 170 expanded
[t=0.228532s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.228565s, 431364 KB] g=59, 611 evaluated, 171 expanded
[t=0.229137s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.229166s, 431364 KB] g=60, 614 evaluated, 172 expanded
[t=0.231359s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.231394s, 431364 KB] g=62, 626 evaluated, 175 expanded
[t=0.231606s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.231635s, 431364 KB] g=63, 627 evaluated, 176 expanded
[t=0.233646s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.233681s, 431364 KB] g=65, 638 evaluated, 180 expanded
[t=0.234436s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.234471s, 431496 KB] g=67, 642 evaluated, 182 expanded
[t=0.235587s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.235621s, 431496 KB] g=69, 648 evaluated, 184 expanded
[t=0.236376s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.236406s, 431496 KB] g=71, 652 evaluated, 186 expanded
[t=0.237155s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.237187s, 431496 KB] g=72, 656 evaluated, 187 expanded
[t=0.237762s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.237792s, 431496 KB] g=73, 659 evaluated, 188 expanded
[t=0.244301s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.244337s, 431496 KB] g=74, 695 evaluated, 202 expanded
[t=0.244555s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.244586s, 431496 KB] g=75, 696 evaluated, 203 expanded
[t=0.245156s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.245185s, 431496 KB] g=76, 699 evaluated, 204 expanded
[t=0.245596s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.245626s, 431496 KB] g=77, 701 evaluated, 206 expanded
[t=0.245657s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_2.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.245681s, 431496 KB] g=78, 702 evaluated, 207 expanded
[t=0.245707s, 431496 KB] Solution found!
[t=0.245733s, 431496 KB] Actual search time: 0.147281s
unstack i d (1)
put-down i (1)
unstack h c (1)
stack h d (1)
unstack c g (1)
put-down c (1)
pick-up g (1)
stack g h (1)
unstack l f (1)
put-down l (1)
unstack f a (1)
stack f i (1)
unstack a j (1)
stack a c (1)
unstack j k (1)
stack j l (1)
unstack k e (1)
stack k f (1)
unstack j l (1)
stack j e (1)
unstack a c (1)
stack a k (1)
pick-up l (1)
stack l j (1)
unstack g h (1)
put-down g (1)
unstack h d (1)
stack h g (1)
unstack l j (1)
stack l c (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
put-down k (1)
unstack f i (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack c b (1)
stack c i (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
put-down l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i l (1)
unstack d j (1)
stack d i (1)
unstack j e (1)
stack j d (1)
pick-up e (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.245758s, 431496 KB] Plan length: 78 step(s).
[t=0.245758s, 431496 KB] Plan cost: 78
[t=0.245758s, 431496 KB] Expanded 208 state(s).
[t=0.245758s, 431496 KB] Reopened 0 state(s).
[t=0.245758s, 431496 KB] Evaluated 702 state(s).
[t=0.245758s, 431496 KB] Evaluations: 702
[t=0.245758s, 431496 KB] Generated 921 state(s).
[t=0.245758s, 431496 KB] Dead ends: 0 state(s).
[t=0.245758s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.245758s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.245758s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.245758s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.245758s, 431496 KB] Number of registered states: 702
[t=0.245758s, 431496 KB] Int hash set load factor: 702/1024 = 0.685547
[t=0.245758s, 431496 KB] Int hash set resizes: 10
[t=0.245758s, 431496 KB] Search time: 0.219342s
[t=0.245758s, 431496 KB] Total time: 0.245758s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.022979
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 2 test success: 20 of 20 (100.0%)

---------- FOLD 4/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 164 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.10887158662080765 (0.22296105325222015 vs. 0.1140894666314125), which occurred at index 110.
  _module_class,
 | avg_train_loss=0.099213 | avg_val_loss=0.092367
Epoch 2 | avg_train_loss=0.065226 | avg_val_loss=0.046562
Epoch 3 | avg_train_loss=0.042818 | avg_val_loss=0.040932
Epoch 4 | avg_train_loss=0.039075 | avg_val_loss=0.039157
Epoch 5 | avg_train_loss=0.037175 | avg_val_loss=0.038387
Epoch 6 | avg_train_loss=0.035955 | avg_val_loss=0.036684
Epoch 7 | avg_train_loss=0.035302 | avg_val_loss=0.036306
Epoch 8 | avg_train_loss=0.034312 | avg_val_loss=0.034993
Epoch 9 | avg_train_loss=0.033890 | avg_val_loss=0.034302
Epoch 10 | avg_train_loss=0.033455 | avg_val_loss=0.034090
Epoch 11 | avg_train_loss=0.032635 | avg_val_loss=0.034017
Epoch 12 | avg_train_loss=0.032141 | avg_val_loss=0.033362
Epoch 13 | avg_train_loss=0.031947 | avg_val_loss=0.033019
Epoch 14 | avg_train_loss=0.031534 | avg_val_loss=0.032246
Epoch 15 | avg_train_loss=0.031199 | avg_val_loss=0.032681
Epoch 16 | avg_train_loss=0.030900 | avg_val_loss=0.031831
Epoch 17 | avg_train_loss=0.030785 | avg_val_loss=0.031554
Epoch 18 | avg_train_loss=0.030373 | avg_val_loss=0.031711
Epoch 19 | avg_train_loss=0.030128 | avg_val_loss=0.031234
Epoch 20 | avg_train_loss=0.029868 | avg_val_loss=0.030508
Epoch 21 | avg_train_loss=0.029592 | avg_val_loss=0.030629
Epoch 22 | avg_train_loss=0.029306 | avg_val_loss=0.030317
Epoch 23 | avg_train_loss=0.029010 | avg_val_loss=0.030004
Epoch 24 | avg_train_loss=0.028990 | avg_val_loss=0.030115
Epoch 25 | avg_train_loss=0.028713 | avg_val_loss=0.029643
Epoch 26 | avg_train_loss=0.028487 | avg_val_loss=0.029694
Epoch 27 | avg_train_loss=0.028414 | avg_val_loss=0.029412
Epoch 28 | avg_train_loss=0.027993 | avg_val_loss=0.028965
Epoch 29 | avg_train_loss=0.027830 | avg_val_loss=0.028807
Epoch 30 | avg_train_loss=0.027644 | avg_val_loss=0.028697
Epoch 31 | avg_train_loss=0.027428 | avg_val_loss=0.028494
Epoch 32 | avg_train_loss=0.027185 | avg_val_loss=0.028503
Epoch 33 | avg_train_loss=0.027113 | avg_val_loss=0.028168
Epoch 34 | avg_train_loss=0.026821 | avg_val_loss=0.028173
Epoch 35 | avg_train_loss=0.026679 | avg_val_loss=0.027773
Epoch 36 | avg_train_loss=0.026609 | avg_val_loss=0.027598
Epoch 37 | avg_train_loss=0.026388 | avg_val_loss=0.027711
Epoch 38 | avg_train_loss=0.026211 | avg_val_loss=0.027678
Epoch 39 | avg_train_loss=0.026031 | avg_val_loss=0.027302
Epoch 40 | avg_train_loss=0.025827 | avg_val_loss=0.027337
Epoch 41 | avg_train_loss=0.025646 | avg_val_loss=0.026938
Epoch 42 | avg_train_loss=0.025567 | avg_val_loss=0.026758
Epoch 43 | avg_train_loss=0.025368 | avg_val_loss=0.026624
Epoch 44 | avg_train_loss=0.025308 | avg_val_loss=0.026311
Epoch 45 | avg_train_loss=0.025084 | avg_val_loss=0.026518
Epoch 46 | avg_train_loss=0.025038 | avg_val_loss=0.025991
Epoch 47 | avg_train_loss=0.025014 | avg_val_loss=0.025901
Epoch 48 | avg_train_loss=0.024713 | avg_val_loss=0.025832
Epoch 49 | avg_train_loss=0.024605 | avg_val_loss=0.025883
Epoch 50 | avg_train_loss=0.024339 | avg_val_loss=0.025801
Epoch 51 | avg_train_loss=0.024191 | avg_val_loss=0.025462
Epoch 52 | avg_train_loss=0.024354 | avg_val_loss=0.025574
Epoch 53 | avg_train_loss=0.024140 | avg_val_loss=0.025021
Epoch 54 | avg_train_loss=0.023917 | avg_val_loss=0.025536
Epoch 55 | avg_train_loss=0.023763 | avg_val_loss=0.025887
Epoch 56 | avg_train_loss=0.023662 | avg_val_loss=0.025486
Epoch 57 | avg_train_loss=0.023647 | avg_val_loss=0.024648
Epoch 58 | avg_train_loss=0.023515 | avg_val_loss=0.025335
Epoch 59 | avg_train_loss=0.023470 | avg_val_loss=0.024750
Epoch 60 | avg_train_loss=0.023430 | avg_val_loss=0.025015
Epoch 61 | avg_train_loss=0.023318 | avg_val_loss=0.024646
Epoch 62 | avg_train_loss=0.023142 | avg_val_loss=0.025631
Epoch 63 | avg_train_loss=0.022917 | avg_val_loss=0.024784
Epoch 64 | avg_train_loss=0.022899 | avg_val_loss=0.024298
Epoch 65 | avg_train_loss=0.022872 | avg_val_loss=0.025231
Epoch 66 | avg_train_loss=0.022590 | avg_val_loss=0.024429
Epoch 67 | avg_train_loss=0.022575 | avg_val_loss=0.024403
Epoch 68 | avg_train_loss=0.022634 | avg_val_loss=0.024802
Epoch 69 | avg_train_loss=0.022494 | avg_val_loss=0.024742
Epoch 70 | avg_train_loss=0.022356 | avg_val_loss=0.024046
Epoch 71 | avg_train_loss=0.022234 | avg_val_loss=0.024323
Epoch 72 | avg_train_loss=0.022060 | avg_val_loss=0.024946
Epoch 73 | avg_train_loss=0.022152 | avg_val_loss=0.024408
Epoch 74 | avg_train_loss=0.022244 | avg_val_loss=0.024334
Epoch 75 | avg_train_loss=0.021846 | avg_val_loss=0.024203
Epoch 76 | avg_train_loss=0.021908 | avg_val_loss=0.024290
Epoch 77 | avg_train_loss=0.021769 | avg_val_loss=0.024158
Epoch 78 | avg_train_loss=0.021758 | avg_val_loss=0.024301
Epoch 79 | avg_train_loss=0.021688 | avg_val_loss=0.023906
Epoch 80 | avg_train_loss=0.021475 | avg_val_loss=0.023697
Epoch 81 | avg_train_loss=0.021389 | avg_val_loss=0.023716
Epoch 82 | avg_train_loss=0.021345 | avg_val_loss=0.024292
Epoch 83 | avg_train_loss=0.021361 | avg_val_loss=0.024113
Epoch 84 | avg_train_loss=0.021176 | avg_val_loss=0.023926
Epoch 85 | avg_train_loss=0.021112 | avg_val_loss=0.024100
Epoch 86 | avg_train_loss=0.021084 | avg_val_loss=0.023873
Epoch 87 | avg_train_loss=0.021075 | avg_val_loss=0.023586
Epoch 88 | avg_train_loss=0.020795 | avg_val_loss=0.023646
Epoch 89 | avg_train_loss=0.021005 | avg_val_loss=0.023198
Epoch 90 | avg_train_loss=0.020892 | avg_val_loss=0.023858
Epoch 91 | avg_train_loss=0.020866 | avg_val_loss=0.023298
Epoch 92 | avg_train_loss=0.020657 | avg_val_loss=0.023778
Epoch 93 | avg_train_loss=0.020456 | avg_val_loss=0.023479
Epoch 94 | avg_train_loss=0.020625 | avg_val_loss=0.023591
Epoch 95 | avg_train_loss=0.020571 | avg_val_loss=0.023636
Epoch 96 | avg_train_loss=0.020447 | avg_val_loss=0.023212
Epoch 97 | avg_train_loss=0.020304 | avg_val_loss=0.023413
Epoch 98 | avg_train_loss=0.020147 | avg_val_loss=0.023611
Epoch 99 | avg_train_loss=0.020120 | avg_val_loss=0.023640
Epoch 100 | avg_train_loss=0.020084 | avg_val_loss=0.023270
Epoch 101 | avg_train_loss=0.019981 | avg_val_loss=0.023548
Epoch 102 | avg_train_loss=0.019890INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p61.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.659e-05s, 424928 KB] reading input...
[t=0.00215148s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260778s, 427536 KB] Building successor generator...done!
[t=0.0263597s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263832s, 427536 KB] time for successor generation creation: 0.000170755s
[t=0.0264118s, 427536 KB] Variables: 25
[t=0.0264351s, 427536 KB] FactPairs: 182
[t=0.0264575s, 427536 KB] Bytes per state: 8
[t=0.0266546s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109097s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.109151s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109177s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.109204s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.109228s, 430128 KB] pruning method: none
[t=0.121141s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.121193s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.128053s, 431100 KB] f = 146, 5 evaluated, 2 expanded
[t=0.128654s, 431100 KB] f = 147, 8 evaluated, 4 expanded
[t=0.128877s, 431100 KB] f = 148, 9 evaluated, 5 expanded
[t=0.1291s, 431100 KB] f = 149, 10 evaluated, 7 expanded
[t=0.129318s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.129347s, 431100 KB] g=5, 11 evaluated, 8 expanded
[t=0.129923s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.129953s, 431100 KB] g=6, 14 evaluated, 9 expanded
[t=0.131272s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.131303s, 431100 KB] g=9, 21 evaluated, 12 expanded
[t=0.138245s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.138278s, 431100 KB] g=11, 59 evaluated, 22 expanded
[t=0.139417s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.139449s, 431100 KB] g=13, 65 evaluated, 25 expanded
[t=0.141673s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.141707s, 431100 KB] g=14, 77 evaluated, 29 expanded
[t=0.142106s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.142135s, 431100 KB] g=15, 79 evaluated, 30 expanded
[t=0.14764s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.147674s, 431100 KB] g=21, 109 evaluated, 38 expanded
[t=0.14843s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.148463s, 431100 KB] g=22, 113 evaluated, 39 expanded
[t=0.148679s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.148716s, 431100 KB] g=23, 114 evaluated, 40 expanded
[t=0.149476s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.149508s, 431100 KB] g=24, 118 evaluated, 41 expanded
[t=0.150268s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.150298s, 431100 KB] g=25, 122 evaluated, 42 expanded
[t=0.151258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.15129s, 431100 KB] g=26, 127 evaluated, 43 expanded
[t=0.154236s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.154269s, 431100 KB] g=30, 143 evaluated, 47 expanded
[t=0.154667s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.1547s, 431100 KB] g=31, 145 evaluated, 48 expanded
[t=0.156377s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.156412s, 431100 KB] g=32, 154 evaluated, 50 expanded
[t=0.156807s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.156836s, 431100 KB] g=32, 156 evaluated, 50 expanded
[t=0.157232s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.157267s, 431232 KB] g=33, 158 evaluated, 51 expanded
[t=0.162606s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.162641s, 431232 KB] g=34, 187 evaluated, 59 expanded
[t=0.163778s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.16381s, 431232 KB] g=36, 193 evaluated, 61 expanded
[t=0.164572s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.164601s, 431232 KB] g=37, 197 evaluated, 62 expanded
[t=0.165733s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.165763s, 431232 KB] g=39, 203 evaluated, 64 expanded
[t=0.1812s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.181234s, 431232 KB] g=42, 287 evaluated, 92 expanded
[t=0.184573s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.184605s, 431232 KB] g=44, 305 evaluated, 102 expanded
[t=0.185741s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.185771s, 431232 KB] g=45, 311 evaluated, 105 expanded
[t=0.206973s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.207015s, 431232 KB] g=50, 427 evaluated, 154 expanded, 3 reopened
[t=0.207236s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.207265s, 431232 KB] g=51, 428 evaluated, 155 expanded, 3 reopened
[t=0.207669s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.207699s, 431232 KB] g=53, 431 evaluated, 157 expanded, 3 reopened
[t=0.207726s, 431232 KB] Solution found!
[t=0.207752s, 431232 KB] Actual search time: 0.0985197s
stack i c (1)
unstack b g (1)
stack b i (1)
unstack g k (1)
put-down g (1)
unstack k e (1)
put-down k (1)
unstack b i (1)
put-down b (1)
pick-up k (1)
stack k i (1)
unstack e d (1)
stack e k (1)
unstack d a (1)
stack d b (1)
unstack e k (1)
stack e d (1)
unstack a f (1)
stack a k (1)
unstack f h (1)
stack f e (1)
unstack h l (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack l j (1)
put-down l (1)
unstack f e (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack i c (1)
stack i b (1)
pick-up l (1)
stack l c (1)
unstack i b (1)
put-down i (1)
pick-up b (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.207777s, 431232 KB] Plan length: 53 step(s).
[t=0.207777s, 431232 KB] Plan cost: 53
[t=0.207777s, 431232 KB] Expanded 158 state(s).
[t=0.207777s, 431232 KB] Reopened 3 state(s).
[t=0.207777s, 431232 KB] Evaluated 431 state(s).
[t=0.207777s, 431232 KB] Evaluations: 431
[t=0.207777s, 431232 KB] Generated 616 state(s).
[t=0.207777s, 431232 KB] Dead ends: 0 state(s).
[t=0.207777s, 431232 KB] Expanded until last jump: 7 state(s).
[t=0.207777s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.207777s, 431232 KB] Evaluated until last jump: 10 state(s).
[t=0.207777s, 431232 KB] Generated until last jump: 15 state(s).
[t=0.207777s, 431232 KB] Number of registered states: 431
[t=0.207777s, 431232 KB] Int hash set load factor: 431/512 = 0.841797
[t=0.207777s, 431232 KB] Int hash set resizes: 9
[t=0.207777s, 431232 KB] Search time: 0.181123s
[t=0.207777s, 431232 KB] Total time: 0.207777s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p62.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5159e-05s, 424928 KB] reading input...
[t=0.00224386s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259227s, 427536 KB] Building successor generator...done!
[t=0.0261968s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262202s, 427536 KB] time for successor generation creation: 0.000163679s
[t=0.0262481s, 427536 KB] Variables: 25
[t=0.0262708s, 427536 KB] FactPairs: 182
[t=0.0262927s, 427536 KB] Bytes per state: 8
[t=0.0264862s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981694s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0982204s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098246s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0982727s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0982962s, 430128 KB] pruning method: none
[t=0.117208s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.117258s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118022s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.118053s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.118812s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.118842s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.119055s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.119084s, 431100 KB] g=3, 15 evaluated, 3 expanded
[t=0.1193s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.119329s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.120463s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.120493s, 431100 KB] g=5, 22 evaluated, 5 expanded
[t=0.126728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.126767s, 431100 KB] g=8, 56 evaluated, 11 expanded
[t=0.127711s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.12774s, 431100 KB] g=9, 61 evaluated, 12 expanded
[t=0.127952s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.127981s, 431100 KB] g=9, 62 evaluated, 12 expanded
[t=0.130926s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.130959s, 431100 KB] g=12, 78 evaluated, 15 expanded
[t=0.131717s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.131749s, 431100 KB] g=13, 82 evaluated, 16 expanded
[t=0.13577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.135803s, 431100 KB] g=14, 104 evaluated, 21 expanded
[t=0.137105s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.137135s, 431100 KB] g=15, 111 evaluated, 22 expanded
[t=0.139351s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.139384s, 431100 KB] g=17, 123 evaluated, 24 expanded
[t=0.140319s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.140351s, 431100 KB] g=18, 128 evaluated, 25 expanded
[t=0.141493s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.141526s, 431100 KB] g=18, 134 evaluated, 27 expanded
[t=0.141915s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.141945s, 431100 KB] g=18, 136 evaluated, 27 expanded
[t=0.142881s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.142911s, 431100 KB] g=19, 141 evaluated, 28 expanded
[t=0.161433s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.161471s, 431232 KB] g=23, 243 evaluated, 52 expanded
[t=0.163858s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.163888s, 431232 KB] g=24, 256 evaluated, 54 expanded
[t=0.183966s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.184004s, 431232 KB] g=22, 366 evaluated, 79 expanded
[t=0.185139s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.185172s, 431232 KB] g=24, 372 evaluated, 81 expanded
[t=0.186297s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.186327s, 431232 KB] g=25, 378 evaluated, 82 expanded
[t=0.187457s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.187486s, 431232 KB] g=27, 384 evaluated, 84 expanded
[t=0.188426s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.188459s, 431232 KB] g=28, 389 evaluated, 85 expanded
[t=0.189407s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.189438s, 431232 KB] g=29, 394 evaluated, 86 expanded
[t=0.190192s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.190225s, 431232 KB] g=30, 398 evaluated, 87 expanded
[t=0.192444s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.192476s, 431232 KB] g=33, 410 evaluated, 92 expanded
[t=0.192875s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.192904s, 431232 KB] g=34, 412 evaluated, 93 expanded
[t=0.193501s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.193533s, 431232 KB] g=35, 415 evaluated, 94 expanded
[t=0.194305s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.194335s, 431232 KB] g=37, 420 evaluated, 98 expanded
[t=0.194362s, 431232 KB] Solution found!
[t=0.194387s, 431232 KB] Actual search time: 0.0960868s
put-down i (1)
unstack l g (1)
put-down l (1)
unstack g b (1)
stack g f (1)
unstack c k (1)
stack c b (1)
unstack k h (1)
stack k l (1)
unstack g f (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b i (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.194411s, 431232 KB] Plan length: 37 step(s).
[t=0.194411s, 431232 KB] Plan cost: 37
[t=0.194411s, 431232 KB] Expanded 99 state(s).
[t=0.194411s, 431232 KB] Reopened 0 state(s).
[t=0.194411s, 431232 KB] Evaluated 420 state(s).
[t=0.194411s, 431232 KB] Evaluations: 420
[t=0.194411s, 431232 KB] Generated 518 state(s).
[t=0.194411s, 431232 KB] Dead ends: 0 state(s).
[t=0.194411s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.194411s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.194411s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.194411s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.194411s, 431232 KB] Number of registered states: 420
[t=0.194411s, 431232 KB] Int hash set load factor: 420/512 = 0.820312
[t=0.194411s, 431232 KB] Int hash set resizes: 9
[t=0.194411s, 431232 KB] Search time: 0.167926s
[t=0.194411s, 431232 KB] Total time: 0.194411s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p63.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5814e-05s, 424928 KB] reading input...
[t=0.00214255s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257382s, 427536 KB] Building successor generator...done!
[t=0.026014s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260366s, 427536 KB] time for successor generation creation: 0.000164054s
[t=0.0260652s, 427536 KB] Variables: 25
[t=0.026088s, 427536 KB] FactPairs: 182
[t=0.0261097s, 427536 KB] Bytes per state: 8
[t=0.0263056s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977095s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0977714s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.097798s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0978255s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0978496s, 430128 KB] pruning method: none
[t=0.109629s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.109679s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116463s, 431100 KB] f = 146, 5 evaluated, 2 expanded
[t=0.116694s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.116725s, 431100 KB] g=2, 6 evaluated, 3 expanded
[t=0.11712s, 431100 KB] f = 147, 8 evaluated, 4 expanded
[t=0.117336s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.117365s, 431100 KB] g=3, 9 evaluated, 5 expanded
[t=0.117756s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.117786s, 431100 KB] g=4, 11 evaluated, 6 expanded
[t=0.120853s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.120886s, 431100 KB] g=8, 28 evaluated, 11 expanded
[t=0.121629s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.121659s, 431100 KB] g=9, 32 evaluated, 12 expanded
[t=0.122231s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.122261s, 431100 KB] g=10, 35 evaluated, 13 expanded
[t=0.141762s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.141798s, 431100 KB] g=14, 144 evaluated, 37 expanded
[t=0.145614s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.14565s, 431232 KB] g=18, 165 evaluated, 41 expanded
[t=0.146574s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.146606s, 431232 KB] g=18, 170 evaluated, 41 expanded
[t=0.150573s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.150609s, 431232 KB] g=19, 192 evaluated, 45 expanded
[t=0.152255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.152288s, 431232 KB] g=20, 201 evaluated, 47 expanded
[t=0.153756s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.153786s, 431232 KB] g=22, 209 evaluated, 49 expanded
[t=0.153997s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.154032s, 431232 KB] g=22, 210 evaluated, 49 expanded
[t=0.163954s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.163991s, 431232 KB] g=26, 265 evaluated, 61 expanded
[t=0.331415s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.331464s, 431628 KB] g=36, 1206 evaluated, 291 expanded, 3 reopened
[t=0.332035s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.332065s, 431628 KB] g=37, 1209 evaluated, 292 expanded, 3 reopened
[t=0.333704s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.333737s, 431628 KB] g=38, 1218 evaluated, 294 expanded, 3 reopened
[t=0.334855s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.334891s, 431628 KB] g=39, 1224 evaluated, 295 expanded, 3 reopened
[t=0.336358s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.336388s, 431628 KB] g=41, 1232 evaluated, 297 expanded, 3 reopened
[t=0.337849s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.33788s, 431628 KB] g=42, 1240 evaluated, 298 expanded, 3 reopened
[t=0.33935s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.339383s, 431628 KB] g=44, 1248 evaluated, 300 expanded, 3 reopened
[t=0.344772s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.344807s, 431628 KB] g=43, 1278 evaluated, 306 expanded, 3 reopened
[t=0.345917s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.345952s, 431628 KB] g=45, 1284 evaluated, 308 expanded, 3 reopened
[t=0.346704s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.346736s, 431628 KB] g=46, 1288 evaluated, 309 expanded, 3 reopened
[t=0.347661s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.347691s, 431628 KB] g=48, 1293 evaluated, 311 expanded, 3 reopened
[t=0.347896s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.347925s, 431628 KB] g=48, 1294 evaluated, 311 expanded, 3 reopened
[t=0.349561s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.349594s, 431628 KB] g=50, 1303 evaluated, 314 expanded, 3 reopened
[t=0.350539s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.350571s, 431628 KB] g=51, 1308 evaluated, 316 expanded, 3 reopened
[t=0.351323s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.351356s, 431628 KB] g=52, 1312 evaluated, 317 expanded, 3 reopened
[t=0.354241s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.354277s, 431628 KB] g=55, 1328 evaluated, 322 expanded, 3 reopened
[t=0.358418s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.358455s, 431628 KB] g=60, 1351 evaluated, 329 expanded, 3 reopened
[t=0.367922s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.367958s, 431760 KB] g=63, 1403 evaluated, 348 expanded, 3 reopened
[t=0.36854s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.36857s, 431760 KB] g=65, 1406 evaluated, 350 expanded, 3 reopened
[t=0.369143s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.369173s, 431760 KB] g=66, 1409 evaluated, 351 expanded, 3 reopened
[t=0.38138s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.381417s, 431760 KB] g=65, 1476 evaluated, 381 expanded, 3 reopened
[t=0.381812s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.381842s, 431760 KB] g=66, 1478 evaluated, 382 expanded, 3 reopened
[t=0.382252s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.382284s, 431760 KB] g=67, 1480 evaluated, 383 expanded, 3 reopened
[t=0.382318s, 431760 KB] Solution found!
[t=0.382345s, 431760 KB] Actual search time: 0.284492s
unstack l f (1)
put-down l (1)
unstack g c (1)
stack g l (1)
unstack f d (1)
put-down f (1)
unstack d j (1)
put-down d (1)
unstack j k (1)
put-down j (1)
unstack k b (1)
stack k j (1)
unstack b e (1)
stack b c (1)
unstack e h (1)
stack e f (1)
unstack h a (1)
stack h g (1)
unstack e f (1)
stack e k (1)
pick-up a (1)
stack a e (1)
unstack b c (1)
stack b d (1)
unstack c i (1)
stack c b (1)
unstack h g (1)
stack h a (1)
unstack g l (1)
put-down g (1)
pick-up f (1)
stack f i (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack e k (1)
stack e l (1)
unstack k j (1)
stack k f (1)
pick-up j (1)
stack j i (1)
unstack e l (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up i (1)
stack i l (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b c (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
stack i b (1)
pick-up l (1)
stack l d (1)
unstack i b (1)
put-down i (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.38237s, 431760 KB] Plan length: 68 step(s).
[t=0.38237s, 431760 KB] Plan cost: 68
[t=0.38237s, 431760 KB] Expanded 385 state(s).
[t=0.38237s, 431760 KB] Reopened 3 state(s).
[t=0.38237s, 431760 KB] Evaluated 1481 state(s).
[t=0.38237s, 431760 KB] Evaluations: 1481
[t=0.38237s, 431760 KB] Generated 1925 state(s).
[t=0.38237s, 431760 KB] Dead ends: 0 state(s).
[t=0.38237s, 431760 KB] Expanded until last jump: 4 state(s).
[t=0.38237s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.38237s, 431760 KB] Evaluated until last jump: 8 state(s).
[t=0.38237s, 431760 KB] Generated until last jump: 10 state(s).
[t=0.38237s, 431760 KB] Number of registered states: 1481
[t=0.38237s, 431760 KB] Int hash set load factor: 1481/2048 = 0.723145
[t=0.38237s, 431760 KB] Int hash set resizes: 11
[t=0.38237s, 431760 KB] Search time: 0.356065s
[t=0.38237s, 431760 KB] Total time: 0.38237s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p64.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6648e-05s, 424928 KB] reading input...
[t=0.00213705s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261545s, 427536 KB] Building successor generator...done!
[t=0.0264367s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264609s, 427536 KB] time for successor generation creation: 0.00016877s
[t=0.0264994s, 427536 KB] Variables: 25
[t=0.0265233s, 427536 KB] FactPairs: 182
[t=0.0265459s, 427536 KB] Bytes per state: 8
[t=0.026743s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0998662s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.0999184s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0999444s, 430128 KB] f = 136, 1 evaluated, 0 expanded
[t=0.0999726s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.0999969s, 430128 KB] pruning method: none
[t=0.111896s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.111948s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11846s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.118503s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.121254s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.121287s, 431100 KB] g=2, 18 evaluated, 5 expanded
[t=0.125633s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.125667s, 431100 KB] g=5, 42 evaluated, 13 expanded
[t=0.158416s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.158452s, 431232 KB] g=19, 224 evaluated, 70 expanded
[t=0.1652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.165234s, 431232 KB] g=25, 261 evaluated, 80 expanded
[t=0.168339s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.168374s, 431232 KB] g=26, 278 evaluated, 85 expanded
[t=0.169487s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.169519s, 431232 KB] g=28, 284 evaluated, 87 expanded
[t=0.169912s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.169942s, 431232 KB] g=29, 286 evaluated, 88 expanded
[t=0.171228s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.171258s, 431232 KB] g=31, 293 evaluated, 90 expanded
[t=0.202408s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.202451s, 431364 KB] g=38, 466 evaluated, 139 expanded, 1 reopened
[t=0.205916s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.205953s, 431364 KB] g=41, 485 evaluated, 142 expanded, 1 reopened
[t=0.20724s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.207273s, 431364 KB] g=42, 492 evaluated, 143 expanded, 1 reopened
[t=0.216339s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.216375s, 431364 KB] g=46, 542 evaluated, 152 expanded, 1 reopened
[t=0.217668s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.217701s, 431364 KB] g=47, 549 evaluated, 153 expanded, 1 reopened
[t=0.221137s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.221172s, 431364 KB] g=49, 568 evaluated, 157 expanded, 1 reopened
[t=0.22156s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.22159s, 431364 KB] g=49, 570 evaluated, 157 expanded, 1 reopened
[t=0.2218s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.22183s, 431364 KB] g=49, 571 evaluated, 157 expanded, 1 reopened
[t=0.225098s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.225134s, 431364 KB] g=51, 589 evaluated, 162 expanded, 1 reopened
[t=0.22767s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.227703s, 431364 KB] g=53, 603 evaluated, 165 expanded, 1 reopened
[t=0.228827s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.228864s, 431496 KB] g=55, 609 evaluated, 167 expanded, 1 reopened
[t=0.230506s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.230536s, 431496 KB] g=57, 618 evaluated, 170 expanded, 1 reopened
[t=0.230745s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.230774s, 431496 KB] g=57, 619 evaluated, 170 expanded, 1 reopened
[t=0.231346s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.23138s, 431496 KB] g=58, 622 evaluated, 171 expanded, 1 reopened
[t=0.23195s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.23198s, 431496 KB] g=59, 625 evaluated, 172 expanded, 1 reopened
[t=0.237066s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.237101s, 431496 KB] g=62, 653 evaluated, 183 expanded, 1 reopened
[t=0.237675s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.237705s, 431496 KB] g=63, 656 evaluated, 184 expanded, 1 reopened
[t=0.238635s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.238668s, 431496 KB] g=65, 661 evaluated, 186 expanded, 1 reopened
[t=0.241755s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.241793s, 431496 KB] g=68, 678 evaluated, 192 expanded, 1 reopened
[t=0.246507s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.246541s, 431496 KB] g=70, 704 evaluated, 204 expanded, 1 reopened
[t=0.249972s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.250005s, 431496 KB] g=74, 723 evaluated, 210 expanded, 1 reopened
[t=0.250754s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.250787s, 431496 KB] g=76, 727 evaluated, 212 expanded, 1 reopened
[t=0.252266s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.252299s, 431496 KB] g=78, 735 evaluated, 215 expanded, 1 reopened
[t=0.253053s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.253086s, 431496 KB] g=80, 739 evaluated, 217 expanded, 1 reopened
[t=0.25312s, 431496 KB] Solution found!
[t=0.253147s, 431496 KB] Actual search time: 0.153147s
stack g h (1)
pick-up e (1)
stack e i (1)
unstack g h (1)
put-down g (1)
unstack d b (1)
put-down d (1)
pick-up b (1)
stack b d (1)
unstack e i (1)
put-down e (1)
unstack h f (1)
stack h g (1)
unstack f k (1)
stack f b (1)
pick-up e (1)
stack e k (1)
unstack f b (1)
stack f e (1)
unstack h g (1)
stack h b (1)
unstack i c (1)
put-down i (1)
unstack h b (1)
stack h f (1)
pick-up c (1)
stack c b (1)
unstack h f (1)
stack h g (1)
unstack f e (1)
stack f i (1)
unstack e k (1)
put-down e (1)
unstack f i (1)
put-down f (1)
unstack k j (1)
stack k i (1)
unstack j a (1)
put-down j (1)
unstack k i (1)
put-down k (1)
pick-up j (1)
stack j e (1)
pick-up k (1)
stack k j (1)
unstack a l (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up i (1)
stack i c (1)
unstack k j (1)
stack k l (1)
unstack j e (1)
stack j i (1)
unstack k l (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i c (1)
stack i l (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
put-down b (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
stack i c (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.253173s, 431496 KB] Plan length: 81 step(s).
[t=0.253173s, 431496 KB] Plan cost: 81
[t=0.253173s, 431496 KB] Expanded 219 state(s).
[t=0.253173s, 431496 KB] Reopened 1 state(s).
[t=0.253173s, 431496 KB] Evaluated 740 state(s).
[t=0.253173s, 431496 KB] Evaluations: 740
[t=0.253173s, 431496 KB] Generated 983 state(s).
[t=0.253173s, 431496 KB] Dead ends: 0 state(s).
[t=0.253173s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.253173s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.253173s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.253173s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.253173s, 431496 KB] Number of registered states: 740
[t=0.253173s, 431496 KB] Int hash set load factor: 740/1024 = 0.722656
[t=0.253173s, 431496 KB] Int hash set resizes: 10
[t=0.253173s, 431496 KB] Search time: 0.226431s
[t=0.253173s, 431496 KB] Total time: 0.253173s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p65.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6774e-05s, 424928 KB] reading input...
[t=0.00220377s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257336s, 427536 KB] Building successor generator...done!
[t=0.0260131s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260367s, 427536 KB] time for successor generation creation: 0.000166631s
[t=0.0260652s, 427536 KB] Variables: 25
[t=0.0260879s, 427536 KB] FactPairs: 182
[t=0.0261099s, 427536 KB] Bytes per state: 8
[t=0.0263051s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0976056s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0976581s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0976836s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0977111s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0977445s, 430128 KB] pruning method: none
[t=0.109546s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.109598s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117325s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.11737s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.118504s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.118535s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.119296s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.119325s, 431100 KB] g=5, 20 evaluated, 5 expanded
[t=0.122097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.122132s, 431100 KB] g=8, 35 evaluated, 9 expanded
[t=0.129807s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.129843s, 431100 KB] g=14, 77 evaluated, 20 expanded
[t=0.133708s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.133741s, 431100 KB] g=18, 98 evaluated, 25 expanded
[t=0.144358s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.144397s, 431100 KB] g=23, 156 evaluated, 37 expanded
[t=0.154093s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.154131s, 431232 KB] g=24, 209 evaluated, 49 expanded
[t=0.170599s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.170636s, 431232 KB] g=25, 299 evaluated, 71 expanded
[t=0.171579s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.171612s, 431232 KB] g=26, 304 evaluated, 72 expanded
[t=0.180513s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.180551s, 431232 KB] g=28, 353 evaluated, 82 expanded
[t=0.20559s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.205628s, 431364 KB] g=31, 491 evaluated, 118 expanded
[t=0.219954s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.219993s, 431364 KB] g=33, 569 evaluated, 133 expanded
[t=0.222764s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.222797s, 431364 KB] g=35, 584 evaluated, 136 expanded
[t=0.236141s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.236188s, 431364 KB] g=38, 657 evaluated, 157 expanded
[t=0.236773s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.236805s, 431364 KB] g=38, 660 evaluated, 157 expanded
[t=0.237573s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.237605s, 431364 KB] g=39, 664 evaluated, 158 expanded
[t=0.237821s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.237849s, 431364 KB] g=40, 665 evaluated, 159 expanded
[t=0.264072s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.264112s, 431496 KB] g=49, 809 evaluated, 193 expanded, 1 reopened
[t=0.264871s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.264916s, 431496 KB] g=50, 813 evaluated, 194 expanded, 1 reopened
[t=0.266221s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.266251s, 431496 KB] g=52, 820 evaluated, 196 expanded, 1 reopened
[t=0.26646s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.266488s, 431496 KB] g=52, 821 evaluated, 196 expanded, 1 reopened
[t=0.266703s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.266735s, 431496 KB] g=53, 822 evaluated, 197 expanded, 1 reopened
[t=0.273688s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.273727s, 431496 KB] g=56, 860 evaluated, 206 expanded, 1 reopened
[t=0.304834s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.304882s, 431628 KB] g=60, 1031 evaluated, 245 expanded, 1 reopened
[t=0.31271s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.312748s, 431628 KB] g=62, 1074 evaluated, 256 expanded, 1 reopened
[t=0.316252s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.316287s, 431628 KB] g=65, 1093 evaluated, 261 expanded, 1 reopened
[t=0.316502s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.31653s, 431628 KB] g=65, 1094 evaluated, 261 expanded, 1 reopened
[t=0.316739s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.31677s, 431628 KB] g=65, 1095 evaluated, 261 expanded, 1 reopened
[t=0.317177s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.317209s, 431628 KB] g=66, 1097 evaluated, 262 expanded, 1 reopened
[t=0.317426s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.317455s, 431628 KB] g=66, 1098 evaluated, 262 expanded, 1 reopened
[t=0.319853s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.319886s, 431628 KB] g=68, 1111 evaluated, 266 expanded, 1 reopened
[t=0.32139s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.321424s, 431628 KB] g=71, 1119 evaluated, 269 expanded, 1 reopened
[t=0.322006s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.322039s, 431628 KB] g=73, 1122 evaluated, 271 expanded, 1 reopened
[t=0.323161s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.323193s, 431628 KB] g=76, 1128 evaluated, 274 expanded, 1 reopened
[t=0.343281s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.343323s, 431628 KB] g=74, 1238 evaluated, 327 expanded, 3 reopened
[t=0.344457s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.344488s, 431628 KB] g=76, 1244 evaluated, 331 expanded, 3 reopened
[t=0.344895s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.344928s, 431628 KB] g=77, 1246 evaluated, 332 expanded, 3 reopened
[t=0.344959s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.344982s, 431628 KB] g=78, 1247 evaluated, 333 expanded, 3 reopened
[t=0.345008s, 431628 KB] Solution found!
[t=0.345034s, 431628 KB] Actual search time: 0.247285s
unstack g l (1)
stack g b (1)
unstack a d (1)
put-down a (1)
unstack l j (1)
stack l d (1)
unstack g b (1)
stack g a (1)
pick-up j (1)
stack j e (1)
unstack g a (1)
put-down g (1)
unstack l d (1)
stack l j (1)
unstack d f (1)
put-down d (1)
unstack l j (1)
stack l d (1)
pick-up a (1)
stack a g (1)
unstack b i (1)
stack b l (1)
unstack j e (1)
put-down j (1)
unstack i c (1)
stack i a (1)
unstack e k (1)
put-down e (1)
unstack k h (1)
stack k e (1)
pick-up c (1)
stack c b (1)
pick-up f (1)
stack f c (1)
unstack i a (1)
put-down i (1)
unstack k e (1)
stack k f (1)
unstack a g (1)
stack a e (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a h (1)
pick-up e (1)
stack e j (1)
unstack k f (1)
stack k e (1)
unstack f c (1)
stack f k (1)
unstack c b (1)
put-down c (1)
unstack f k (1)
stack f a (1)
pick-up i (1)
stack i c (1)
unstack k e (1)
stack k f (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
put-down l (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.345058s, 431628 KB] Plan length: 78 step(s).
[t=0.345058s, 431628 KB] Plan cost: 78
[t=0.345058s, 431628 KB] Expanded 334 state(s).
[t=0.345058s, 431628 KB] Reopened 3 state(s).
[t=0.345058s, 431628 KB] Evaluated 1247 state(s).
[t=0.345058s, 431628 KB] Evaluations: 1247
[t=0.345058s, 431628 KB] Generated 1635 state(s).
[t=0.345058s, 431628 KB] Dead ends: 0 state(s).
[t=0.345058s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.345058s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.345058s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.345058s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.345058s, 431628 KB] Number of registered states: 1247
[t=0.345058s, 431628 KB] Int hash set load factor: 1247/2048 = 0.608887
[t=0.345058s, 431628 KB] Int hash set resizes: 11
[t=0.345058s, 431628 KB] Search time: 0.318754s
[t=0.345058s, 431628 KB] Total time: 0.345058s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p66.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.010s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7311e-05s, 424928 KB] reading input...
[t=0.00214702s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260206s, 427536 KB] Building successor generator...done!
[t=0.0263349s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263609s, 427536 KB] time for successor generation creation: 0.000183535s
[t=0.0263922s, 427536 KB] Variables: 25
[t=0.0264175s, 427536 KB] FactPairs: 182
[t=0.0264418s, 427536 KB] Bytes per state: 8
[t=0.0266472s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098406s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.0984569s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984824s, 430128 KB] f = 91, 1 evaluated, 0 expanded
[t=0.0985108s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.0985351s, 430128 KB] pruning method: none
[t=0.117662s, 431100 KB] f = 101, 8 evaluated, 1 expanded
[t=0.11881s, 431100 KB] f = 104, 14 evaluated, 2 expanded
[t=0.119939s, 431100 KB] f = 108, 20 evaluated, 3 expanded
[t=0.12016s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.12019s, 431100 KB] g=3, 21 evaluated, 4 expanded
[t=0.121498s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.121547s, 431100 KB] g=4, 28 evaluated, 5 expanded
[t=0.123226s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.123256s, 431100 KB] g=5, 37 evaluated, 6 expanded
[t=0.124558s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.124588s, 431100 KB] g=6, 44 evaluated, 7 expanded
[t=0.129378s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.129411s, 431100 KB] g=10, 70 evaluated, 13 expanded
[t=0.135305s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.135338s, 431100 KB] g=12, 102 evaluated, 20 expanded
[t=0.149101s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.149135s, 431100 KB] g=14, 177 evaluated, 37 expanded
[t=0.149541s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.149575s, 431100 KB] g=15, 179 evaluated, 38 expanded
[t=0.151255s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.151285s, 431100 KB] g=17, 188 evaluated, 41 expanded
[t=0.153162s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.153195s, 431232 KB] g=18, 198 evaluated, 44 expanded
[t=0.155804s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.155839s, 431232 KB] g=20, 212 evaluated, 48 expanded
[t=0.156785s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.156825s, 431232 KB] g=20, 217 evaluated, 50 expanded
[t=0.158335s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.158366s, 431232 KB] g=22, 225 evaluated, 53 expanded
[t=0.161871s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.161907s, 431232 KB] g=24, 244 evaluated, 60 expanded
[t=0.162671s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.1627s, 431232 KB] g=26, 248 evaluated, 62 expanded
[t=0.163095s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.163125s, 431232 KB] g=27, 250 evaluated, 63 expanded
[t=0.163337s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.163366s, 431232 KB] g=27, 251 evaluated, 63 expanded
[t=0.16452s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.164549s, 431232 KB] g=30, 257 evaluated, 67 expanded
[t=0.165133s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.165165s, 431232 KB] g=32, 260 evaluated, 69 expanded
[t=0.165196s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.16522s, 431232 KB] g=33, 261 evaluated, 70 expanded
[t=0.165246s, 431232 KB] Solution found!
[t=0.165271s, 431232 KB] Actual search time: 0.0667318s
put-down e (1)
unstack h j (1)
stack h g (1)
pick-up a (1)
stack a h (1)
pick-up e (1)
stack e j (1)
unstack b d (1)
stack b l (1)
unstack e j (1)
stack e b (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.165296s, 431232 KB] Plan length: 33 step(s).
[t=0.165296s, 431232 KB] Plan cost: 33
[t=0.165296s, 431232 KB] Expanded 71 state(s).
[t=0.165296s, 431232 KB] Reopened 0 state(s).
[t=0.165296s, 431232 KB] Evaluated 261 state(s).
[t=0.165296s, 431232 KB] Evaluations: 261
[t=0.165296s, 431232 KB] Generated 334 state(s).
[t=0.165296s, 431232 KB] Dead ends: 0 state(s).
[t=0.165296s, 431232 KB] Expanded until last jump: 3 state(s).
[t=0.165296s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.165296s, 431232 KB] Evaluated until last jump: 20 state(s).
[t=0.165296s, 431232 KB] Generated until last jump: 21 state(s).
[t=0.165296s, 431232 KB] Number of registered states: 261
[t=0.165296s, 431232 KB] Int hash set load factor: 261/512 = 0.509766
[t=0.165296s, 431232 KB] Int hash set resizes: 9
[t=0.165296s, 431232 KB] Search time: 0.138649s
[t=0.165296s, 431232 KB] Total time: 0.165296s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p67.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5613e-05s, 424928 KB] reading input...
[t=0.00212205s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025782s, 427536 KB] Building successor generator...done!
[t=0.026061s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260847s, 427536 KB] time for successor generation creation: 0.000165377s
[t=0.0261131s, 427536 KB] Variables: 25
[t=0.026136s, 427536 KB] FactPairs: 182
[t=0.0261579s, 427536 KB] Bytes per state: 8
[t=0.0263521s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985938s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0986468s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986733s, 430128 KB] f = 141, 1 evaluated, 0 expanded
[t=0.098701s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0987246s, 430128 KB] pruning method: none
[t=0.110613s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.110665s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.117681s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118437s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.118467s, 431100 KB] g=4, 10 evaluated, 4 expanded
[t=0.125507s, 431100 KB] f = 142, 49 evaluated, 18 expanded
[t=0.126269s, 431100 KB] f = 143, 53 evaluated, 20 expanded
[t=0.131512s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.131549s, 431100 KB] g=10, 82 evaluated, 27 expanded
[t=0.132654s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.132685s, 431100 KB] g=11, 88 evaluated, 28 expanded
[t=0.133074s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.133103s, 431100 KB] g=12, 90 evaluated, 29 expanded
[t=0.145898s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.145933s, 431100 KB] g=24, 161 evaluated, 51 expanded
[t=0.147418s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.147451s, 431100 KB] g=25, 169 evaluated, 53 expanded
[t=0.163546s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.163584s, 431232 KB] g=34, 258 evaluated, 73 expanded
[t=0.165582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.165616s, 431232 KB] g=35, 269 evaluated, 75 expanded
[t=0.172478s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.172515s, 431232 KB] g=37, 307 evaluated, 83 expanded
[t=0.24005s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.24009s, 431496 KB] g=44, 683 evaluated, 169 expanded
[t=0.241376s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.241407s, 431496 KB] g=45, 690 evaluated, 170 expanded
[t=0.242339s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.24237s, 431496 KB] g=46, 695 evaluated, 171 expanded
[t=0.242764s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.242796s, 431496 KB] g=47, 697 evaluated, 172 expanded
[t=0.24392s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.243961s, 431496 KB] g=48, 703 evaluated, 173 expanded
[t=0.244716s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.244746s, 431496 KB] g=49, 707 evaluated, 174 expanded
[t=0.267513s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.26755s, 431496 KB] g=54, 834 evaluated, 204 expanded
[t=0.283123s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.283163s, 431496 KB] g=59, 921 evaluated, 230 expanded, 2 reopened
[t=0.284089s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.284122s, 431496 KB] g=60, 926 evaluated, 231 expanded, 2 reopened
[t=0.286477s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.286509s, 431496 KB] g=63, 939 evaluated, 235 expanded, 2 reopened
[t=0.287629s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.287664s, 431496 KB] g=64, 945 evaluated, 236 expanded, 2 reopened
[t=0.289125s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.289158s, 431496 KB] g=66, 953 evaluated, 238 expanded, 2 reopened
[t=0.289907s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.289943s, 431628 KB] g=68, 957 evaluated, 240 expanded, 2 reopened
[t=0.301151s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.30119s, 431628 KB] g=70, 1019 evaluated, 262 expanded, 2 reopened
[t=0.307302s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.30734s, 431628 KB] g=71, 1053 evaluated, 273 expanded, 2 reopened
[t=0.317881s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.317918s, 431628 KB] g=72, 1112 evaluated, 297 expanded, 2 reopened
[t=0.324132s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.324171s, 431628 KB] g=75, 1146 evaluated, 309 expanded, 2 reopened
[t=0.324741s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.324772s, 431628 KB] g=77, 1149 evaluated, 311 expanded, 2 reopened
[t=0.324987s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.325015s, 431628 KB] g=78, 1150 evaluated, 312 expanded, 2 reopened
[t=0.386383s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.386426s, 431628 KB] g=75, 1492 evaluated, 503 expanded, 30 reopened
[t=0.4378s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.437842s, 431760 KB] g=76, 1779 evaluated, 641 expanded, 49 reopened
[t=0.43787s, 431760 KB] Solution found!
[t=0.437898s, 431760 KB] Actual search time: 0.339162s
unstack j g (1)
put-down j (1)
unstack g e (1)
put-down g (1)
unstack b f (1)
put-down b (1)
pick-up j (1)
stack j g (1)
pick-up c (1)
stack c b (1)
unstack j g (1)
stack j e (1)
pick-up g (1)
stack g f (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e j (1)
unstack k h (1)
put-down k (1)
unstack e j (1)
put-down e (1)
pick-up h (1)
stack h e (1)
unstack g f (1)
stack g k (1)
unstack h e (1)
stack h g (1)
unstack f i (1)
put-down f (1)
pick-up j (1)
stack j e (1)
unstack i a (1)
put-down i (1)
pick-up f (1)
stack f i (1)
unstack h g (1)
stack h a (1)
unstack g k (1)
put-down g (1)
pick-up k (1)
stack k j (1)
unstack h a (1)
stack h g (1)
unstack f i (1)
stack f k (1)
unstack a d (1)
stack a h (1)
unstack d l (1)
put-down d (1)
pick-up l (1)
stack l d (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j c (1)
pick-up e (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack c b (1)
stack c i (1)
pick-up b (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.437923s, 431760 KB] Plan length: 76 step(s).
[t=0.437923s, 431760 KB] Plan cost: 76
[t=0.437923s, 431760 KB] Expanded 642 state(s).
[t=0.437923s, 431760 KB] Reopened 49 state(s).
[t=0.437923s, 431760 KB] Evaluated 1779 state(s).
[t=0.437923s, 431760 KB] Evaluations: 1779
[t=0.437923s, 431760 KB] Generated 2687 state(s).
[t=0.437923s, 431760 KB] Dead ends: 0 state(s).
[t=0.437923s, 431760 KB] Expanded until last jump: 20 state(s).
[t=0.437923s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.437923s, 431760 KB] Evaluated until last jump: 53 state(s).
[t=0.437923s, 431760 KB] Generated until last jump: 71 state(s).
[t=0.437923s, 431760 KB] Number of registered states: 1779
[t=0.437923s, 431760 KB] Int hash set load factor: 1779/2048 = 0.868652
[t=0.437923s, 431760 KB] Int hash set resizes: 11
[t=0.437923s, 431760 KB] Search time: 0.411572s
[t=0.437923s, 431760 KB] Total time: 0.437923s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p68.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.030s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.050s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7474e-05s, 424928 KB] reading input...
[t=0.00212049s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025879s, 427536 KB] Building successor generator...done!
[t=0.0261566s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261803s, 427536 KB] time for successor generation creation: 0.000166059s
[t=0.0262086s, 427536 KB] Variables: 25
[t=0.026231s, 427536 KB] FactPairs: 182
[t=0.0262527s, 427536 KB] Bytes per state: 8
[t=0.0264466s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098672s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0987236s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987492s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0987764s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0987999s, 430128 KB] pruning method: none
[t=0.11714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.11719s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117416s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.117445s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.119182s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.119212s, 431100 KB] g=3, 13 evaluated, 5 expanded
[t=0.119998s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.120035s, 431100 KB] g=4, 17 evaluated, 6 expanded
[t=0.121403s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.121442s, 431100 KB] g=6, 24 evaluated, 10 expanded
[t=0.121851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.121881s, 431100 KB] g=7, 26 evaluated, 11 expanded
[t=0.122283s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.122311s, 431100 KB] g=7, 28 evaluated, 11 expanded
[t=0.123283s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.123313s, 431100 KB] g=9, 33 evaluated, 13 expanded
[t=0.124672s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.124704s, 431100 KB] g=10, 40 evaluated, 15 expanded
[t=0.148384s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.148421s, 431100 KB] g=15, 165 evaluated, 54 expanded, 2 reopened
[t=0.154637s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.15467s, 431232 KB] g=22, 198 evaluated, 62 expanded, 2 reopened
[t=0.155636s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.155669s, 431232 KB] g=23, 203 evaluated, 63 expanded, 2 reopened
[t=0.15722s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.157254s, 431232 KB] g=25, 211 evaluated, 65 expanded, 2 reopened
[t=0.159542s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.159572s, 431232 KB] g=26, 223 evaluated, 67 expanded, 2 reopened
[t=0.161482s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.161514s, 431232 KB] g=28, 233 evaluated, 69 expanded, 2 reopened
[t=0.163601s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.16363s, 431232 KB] g=30, 244 evaluated, 71 expanded, 2 reopened
[t=0.174618s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.174651s, 431232 KB] g=38, 302 evaluated, 84 expanded, 2 reopened
[t=0.257775s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.257819s, 431496 KB] g=58, 742 evaluated, 198 expanded, 2 reopened
[t=0.258981s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.259013s, 431496 KB] g=60, 748 evaluated, 200 expanded, 2 reopened
[t=0.261325s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.261358s, 431496 KB] g=63, 760 evaluated, 203 expanded, 2 reopened
[t=0.278421s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.278465s, 431496 KB] g=66, 850 evaluated, 233 expanded, 2 reopened
[t=0.333226s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.333272s, 431628 KB] g=68, 1139 evaluated, 325 expanded, 4 reopened
[t=0.33388s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.33391s, 431628 KB] g=69, 1142 evaluated, 326 expanded, 4 reopened
[t=0.341304s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.34134s, 431628 KB] g=74, 1181 evaluated, 338 expanded, 4 reopened
[t=0.353382s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.353418s, 431628 KB] g=71, 1245 evaluated, 359 expanded, 4 reopened
[t=0.354393s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.354423s, 431628 KB] g=72, 1250 evaluated, 361 expanded, 4 reopened
[t=0.35557s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.355603s, 431628 KB] g=73, 1256 evaluated, 362 expanded, 4 reopened
[t=0.358632s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.358667s, 431628 KB] g=75, 1272 evaluated, 367 expanded, 4 reopened
[t=0.360215s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.360248s, 431760 KB] g=77, 1280 evaluated, 369 expanded, 4 reopened
[t=0.360471s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.360499s, 431760 KB] g=78, 1281 evaluated, 370 expanded, 4 reopened
[t=0.362228s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.362257s, 431760 KB] g=81, 1290 evaluated, 373 expanded, 4 reopened
[t=0.363045s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.363077s, 431760 KB] g=83, 1294 evaluated, 375 expanded, 4 reopened
[t=0.364246s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.36428s, 431760 KB] g=84, 1300 evaluated, 377 expanded, 4 reopened
[t=0.364691s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.36472s, 431760 KB] g=85, 1302 evaluated, 378 expanded, 4 reopened
[t=0.381939s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.381978s, 431760 KB] g=83, 1393 evaluated, 414 expanded, 5 reopened
[t=0.382958s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.382994s, 431760 KB] g=85, 1398 evaluated, 416 expanded, 5 reopened
[t=0.383404s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.383432s, 431760 KB] g=86, 1400 evaluated, 417 expanded, 5 reopened
[t=0.384241s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.384275s, 431760 KB] g=89, 1405 evaluated, 420 expanded, 5 reopened
[t=0.384303s, 431760 KB] Solution found!
[t=0.38433s, 431760 KB] Actual search time: 0.285527s
stack e c (1)
unstack h j (1)
stack h a (1)
unstack e c (1)
stack e j (1)
unstack c d (1)
put-down c (1)
unstack d b (1)
stack d c (1)
unstack e j (1)
stack e h (1)
unstack b i (1)
put-down b (1)
pick-up j (1)
stack j d (1)
unstack i l (1)
stack i b (1)
unstack e h (1)
put-down e (1)
unstack l g (1)
put-down l (1)
unstack j d (1)
stack j l (1)
unstack d c (1)
put-down d (1)
pick-up e (1)
stack e i (1)
unstack g f (1)
stack g e (1)
pick-up c (1)
stack c j (1)
unstack g e (1)
stack g h (1)
unstack c j (1)
stack c g (1)
unstack e i (1)
put-down e (1)
unstack i b (1)
stack i f (1)
pick-up e (1)
stack e i (1)
pick-up b (1)
stack b d (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack j e (1)
put-down j (1)
unstack c g (1)
stack c b (1)
pick-up j (1)
stack j d (1)
unstack e i (1)
stack e j (1)
unstack i f (1)
stack i c (1)
pick-up f (1)
stack f e (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack i c (1)
put-down i (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
unstack e j (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.384354s, 431760 KB] Plan length: 89 step(s).
[t=0.384354s, 431760 KB] Plan cost: 89
[t=0.384354s, 431760 KB] Expanded 421 state(s).
[t=0.384354s, 431760 KB] Reopened 5 state(s).
[t=0.384354s, 431760 KB] Evaluated 1405 state(s).
[t=0.384354s, 431760 KB] Evaluations: 1405
[t=0.384354s, 431760 KB] Generated 1894 state(s).
[t=0.384354s, 431760 KB] Dead ends: 0 state(s).
[t=0.384354s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.384354s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.384354s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.384354s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.384354s, 431760 KB] Number of registered states: 1405
[t=0.384354s, 431760 KB] Int hash set load factor: 1405/2048 = 0.686035
[t=0.384354s, 431760 KB] Int hash set resizes: 11
[t=0.384354s, 431760 KB] Search time: 0.357908s
[t=0.384354s, 431760 KB] Total time: 0.384354s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p69.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6169e-05s, 424928 KB] reading input...
[t=0.00212121s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258097s, 427536 KB] Building successor generator...done!
[t=0.026093s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261165s, 427536 KB] time for successor generation creation: 0.000171352s
[t=0.0261457s, 427536 KB] Variables: 25
[t=0.0261685s, 427536 KB] FactPairs: 182
[t=0.0261912s, 427536 KB] Bytes per state: 8
[t=0.0263849s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981833s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.0982367s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982626s, 430128 KB] f = 121, 1 evaluated, 0 expanded
[t=0.0982902s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.0983143s, 430128 KB] pruning method: none
[t=0.110109s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.110159s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116583s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.116626s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117388s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.117428s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.120165s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.120198s, 431100 KB] g=5, 22 evaluated, 7 expanded
[t=0.120408s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.120437s, 431100 KB] g=5, 23 evaluated, 7 expanded
[t=0.122813s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.122845s, 431100 KB] g=9, 36 evaluated, 12 expanded
[t=0.126277s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.126311s, 431100 KB] g=13, 55 evaluated, 17 expanded
[t=0.13066s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.130693s, 431100 KB] g=15, 79 evaluated, 24 expanded
[t=0.137226s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.137262s, 431100 KB] g=15, 115 evaluated, 39 expanded
[t=0.139472s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.139505s, 431100 KB] g=19, 127 evaluated, 43 expanded
[t=0.163293s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.16333s, 431232 KB] g=21, 259 evaluated, 82 expanded, 1 reopened
[t=0.178005s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.178043s, 431232 KB] g=27, 341 evaluated, 105 expanded, 1 reopened
[t=0.185753s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.185791s, 431232 KB] g=30, 384 evaluated, 118 expanded, 1 reopened
[t=0.188329s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.188365s, 431232 KB] g=35, 398 evaluated, 125 expanded, 1 reopened
[t=0.189105s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.189136s, 431232 KB] g=36, 402 evaluated, 126 expanded, 1 reopened
[t=0.189348s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.189377s, 431232 KB] g=37, 403 evaluated, 127 expanded, 1 reopened
[t=0.190855s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.190901s, 431232 KB] g=40, 411 evaluated, 130 expanded, 1 reopened
[t=0.191518s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.19155s, 431232 KB] g=41, 414 evaluated, 131 expanded, 1 reopened
[t=0.194142s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.194174s, 431232 KB] g=45, 428 evaluated, 137 expanded, 1 reopened
[t=0.196715s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.196753s, 431364 KB] g=50, 442 evaluated, 143 expanded, 1 reopened
[t=0.19786s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.19789s, 431364 KB] g=51, 448 evaluated, 145 expanded, 1 reopened
[t=0.198106s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.198135s, 431364 KB] g=52, 449 evaluated, 146 expanded, 1 reopened
[t=0.216948s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.216987s, 431364 KB] g=55, 554 evaluated, 177 expanded, 1 reopened
[t=0.217381s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.217411s, 431364 KB] g=56, 556 evaluated, 178 expanded, 1 reopened
[t=0.218513s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.218543s, 431364 KB] g=59, 562 evaluated, 181 expanded, 1 reopened
[t=0.252005s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.252044s, 431364 KB] g=58, 749 evaluated, 253 expanded, 9 reopened
[t=0.252258s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.252287s, 431364 KB] g=59, 750 evaluated, 254 expanded, 9 reopened
[t=0.252496s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.252525s, 431364 KB] g=59, 751 evaluated, 254 expanded, 9 reopened
[t=0.254349s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.254383s, 431364 KB] g=60, 761 evaluated, 260 expanded, 9 reopened
[t=0.255154s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.25519s, 431364 KB] g=62, 765 evaluated, 262 expanded, 9 reopened
[t=0.255223s, 431364 KB] Solution found!
[t=0.255251s, 431364 KB] Actual search time: 0.156933s
stack i c (1)
pick-up b (1)
stack b f (1)
unstack e d (1)
put-down e (1)
unstack b f (1)
stack b d (1)
unstack f a (1)
stack f e (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
unstack f e (1)
put-down f (1)
unstack a k (1)
stack a e (1)
unstack k g (1)
stack k i (1)
unstack a e (1)
stack a c (1)
pick-up e (1)
stack e k (1)
pick-up f (1)
stack f e (1)
unstack a c (1)
stack a f (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e c (1)
unstack k i (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack c b (1)
stack c i (1)
unstack b d (1)
put-down b (1)
unstack c i (1)
put-down c (1)
pick-up b (1)
stack b i (1)
unstack d j (1)
stack d b (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.255275s, 431364 KB] Plan length: 63 step(s).
[t=0.255275s, 431364 KB] Plan cost: 63
[t=0.255275s, 431364 KB] Expanded 264 state(s).
[t=0.255275s, 431364 KB] Reopened 9 state(s).
[t=0.255275s, 431364 KB] Evaluated 766 state(s).
[t=0.255275s, 431364 KB] Evaluations: 766
[t=0.255275s, 431364 KB] Generated 1103 state(s).
[t=0.255275s, 431364 KB] Dead ends: 0 state(s).
[t=0.255275s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.255275s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.255275s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.255275s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.255275s, 431364 KB] Number of registered states: 766
[t=0.255275s, 431364 KB] Int hash set load factor: 766/1024 = 0.748047
[t=0.255275s, 431364 KB] Int hash set resizes: 10
[t=0.255275s, 431364 KB] Search time: 0.228891s
[t=0.255275s, 431364 KB] Total time: 0.255275s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p70.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6304e-05s, 424928 KB] reading input...
[t=0.00212182s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259846s, 427536 KB] Building successor generator...done!
[t=0.0262636s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262874s, 427536 KB] time for successor generation creation: 0.000166099s
[t=0.0263162s, 427536 KB] Variables: 25
[t=0.0263395s, 427536 KB] FactPairs: 182
[t=0.0263616s, 427536 KB] Bytes per state: 8
[t=0.0265562s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987362s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.0987883s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988142s, 430128 KB] f = 96, 1 evaluated, 0 expanded
[t=0.0988419s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.0988666s, 430128 KB] pruning method: none
[t=0.117425s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.117475s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.120901s, 431100 KB] f = 102, 23 evaluated, 5 expanded
[t=0.125062s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.125096s, 431100 KB] g=4, 45 evaluated, 13 expanded
[t=0.133684s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.133721s, 431100 KB] g=5, 90 evaluated, 26 expanded
[t=0.139556s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.139591s, 431100 KB] g=9, 121 evaluated, 33 expanded
[t=0.142088s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.142119s, 431100 KB] g=10, 134 evaluated, 35 expanded
[t=0.144428s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.144463s, 431100 KB] g=10, 146 evaluated, 38 expanded
[t=0.146184s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.146215s, 431100 KB] g=12, 155 evaluated, 40 expanded
[t=0.157712s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.157746s, 431232 KB] g=17, 216 evaluated, 55 expanded
[t=0.159669s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.159701s, 431232 KB] g=18, 226 evaluated, 58 expanded
[t=0.174068s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.174105s, 431232 KB] g=14, 302 evaluated, 78 expanded
[t=0.17794s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.177973s, 431232 KB] g=19, 322 evaluated, 85 expanded
[t=0.225351s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.225389s, 431364 KB] g=27, 573 evaluated, 157 expanded, 8 reopened
[t=0.226358s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.226391s, 431364 KB] g=28, 578 evaluated, 158 expanded, 8 reopened
[t=0.226794s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.226823s, 431364 KB] g=28, 580 evaluated, 158 expanded, 8 reopened
[t=0.23024s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.230275s, 431364 KB] g=31, 598 evaluated, 162 expanded, 8 reopened
[t=0.233121s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.233158s, 431364 KB] g=33, 613 evaluated, 165 expanded, 8 reopened
[t=0.243661s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.243696s, 431496 KB] g=35, 669 evaluated, 179 expanded, 8 reopened
[t=0.248783s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.248819s, 431496 KB] g=38, 696 evaluated, 187 expanded, 8 reopened
[t=0.254285s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.254318s, 431496 KB] g=41, 725 evaluated, 194 expanded, 8 reopened
[t=0.254726s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.254755s, 431496 KB] g=42, 727 evaluated, 195 expanded, 8 reopened
[t=0.256107s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.256142s, 431496 KB] g=43, 734 evaluated, 197 expanded, 8 reopened
[t=0.257863s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.257893s, 431496 KB] g=45, 743 evaluated, 200 expanded, 8 reopened
[t=0.258485s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.258517s, 431496 KB] g=46, 746 evaluated, 201 expanded, 8 reopened
[t=0.260811s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.260842s, 431496 KB] g=47, 758 evaluated, 205 expanded, 8 reopened
[t=0.263498s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.263528s, 431496 KB] g=50, 772 evaluated, 210 expanded, 8 reopened
[t=0.263942s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.263977s, 431496 KB] g=51, 774 evaluated, 211 expanded, 8 reopened
[t=0.2753s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.275339s, 431496 KB] g=53, 834 evaluated, 236 expanded, 8 reopened
[t=0.275755s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.275787s, 431496 KB] g=53, 836 evaluated, 236 expanded, 8 reopened
[t=0.276193s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.276222s, 431496 KB] g=54, 838 evaluated, 237 expanded, 8 reopened
[t=0.276437s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.276466s, 431496 KB] g=54, 839 evaluated, 237 expanded, 8 reopened
[t=0.277432s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.277464s, 431496 KB] g=56, 844 evaluated, 239 expanded, 8 reopened
[t=0.279366s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.279399s, 431496 KB] g=59, 854 evaluated, 244 expanded, 8 reopened
[t=0.280395s, 431496 KB] Solution found!
[t=0.28043s, 431496 KB] Actual search time: 0.181561s
unstack h k (1)
stack h a (1)
unstack k f (1)
stack k l (1)
unstack j e (1)
put-down j (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
stack b j (1)
unstack d i (1)
put-down d (1)
pick-up g (1)
stack g h (1)
pick-up f (1)
stack f d (1)
unstack b j (1)
stack b i (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack b i (1)
put-down b (1)
pick-up a (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack i c (1)
stack i j (1)
pick-up c (1)
stack c b (1)
unstack i j (1)
stack i c (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e j (1)
unstack k l (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.280457s, 431496 KB] Plan length: 60 step(s).
[t=0.280457s, 431496 KB] Plan cost: 60
[t=0.280457s, 431496 KB] Expanded 251 state(s).
[t=0.280457s, 431496 KB] Reopened 8 state(s).
[t=0.280457s, 431496 KB] Evaluated 860 state(s).
[t=0.280457s, 431496 KB] Evaluations: 860
[t=0.280457s, 431496 KB] Generated 1165 state(s).
[t=0.280457s, 431496 KB] Dead ends: 0 state(s).
[t=0.280457s, 431496 KB] Expanded until last jump: 5 state(s).
[t=0.280457s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.280457s, 431496 KB] Evaluated until last jump: 23 state(s).
[t=0.280457s, 431496 KB] Generated until last jump: 26 state(s).
[t=0.280457s, 431496 KB] Number of registered states: 860
[t=0.280457s, 431496 KB] Int hash set load factor: 860/1024 = 0.839844
[t=0.280457s, 431496 KB] Int hash set resizes: 10
[t=0.280457s, 431496 KB] Search time: 0.253901s
[t=0.280457s, 431496 KB] Total time: 0.280457s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p71.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7222e-05s, 424928 KB] reading input...
[t=0.00214993s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258166s, 427536 KB] Building successor generator...done!
[t=0.026101s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261244s, 427536 KB] time for successor generation creation: 0.000167735s
[t=0.026153s, 427536 KB] Variables: 25
[t=0.0261763s, 427536 KB] FactPairs: 182
[t=0.0261981s, 427536 KB] Bytes per state: 8
[t=0.0263929s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985777s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.098628s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986536s, 430128 KB] f = 121, 1 evaluated, 0 expanded
[t=0.0986808s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.0987147s, 430128 KB] pruning method: none
[t=0.117568s, 431100 KB] f = 132, 6 evaluated, 1 expanded
[t=0.119076s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.119108s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.120231s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.120261s, 431100 KB] g=4, 20 evaluated, 4 expanded
[t=0.126837s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.126877s, 431100 KB] g=10, 56 evaluated, 11 expanded
[t=0.139635s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.139674s, 431100 KB] g=12, 126 evaluated, 24 expanded
[t=0.140272s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.140302s, 431100 KB] g=13, 129 evaluated, 25 expanded
[t=0.141061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.141094s, 431100 KB] g=14, 133 evaluated, 26 expanded
[t=0.144596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.144629s, 431100 KB] g=17, 152 evaluated, 30 expanded
[t=0.145591s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.145626s, 431232 KB] g=18, 157 evaluated, 31 expanded
[t=0.146571s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.1466s, 431232 KB] g=19, 162 evaluated, 32 expanded
[t=0.153946s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.153983s, 431232 KB] g=22, 202 evaluated, 40 expanded
[t=0.15511s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.155142s, 431232 KB] g=23, 208 evaluated, 41 expanded
[t=0.159016s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.159054s, 431232 KB] g=25, 229 evaluated, 44 expanded
[t=0.160001s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.160032s, 431232 KB] g=26, 234 evaluated, 45 expanded
[t=0.160608s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.16064s, 431232 KB] g=26, 237 evaluated, 45 expanded
[t=0.16232s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.162356s, 431232 KB] g=27, 246 evaluated, 47 expanded
[t=0.171705s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.171749s, 431232 KB] g=29, 297 evaluated, 57 expanded
[t=0.173434s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.173471s, 431232 KB] g=31, 306 evaluated, 59 expanded
[t=0.17568s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.175716s, 431232 KB] g=33, 318 evaluated, 62 expanded
[t=0.182324s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.182358s, 431232 KB] g=36, 354 evaluated, 72 expanded
[t=0.182759s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.18279s, 431232 KB] g=37, 356 evaluated, 73 expanded
[t=0.183737s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.183769s, 431232 KB] g=39, 361 evaluated, 75 expanded
[t=0.186374s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.18641s, 431232 KB] g=41, 375 evaluated, 82 expanded
[t=0.186812s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.186841s, 431232 KB] g=42, 377 evaluated, 83 expanded
[t=0.187234s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.187263s, 431232 KB] g=42, 379 evaluated, 83 expanded
[t=0.187478s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.187507s, 431232 KB] g=43, 380 evaluated, 84 expanded
[t=0.188445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.188477s, 431232 KB] g=44, 385 evaluated, 85 expanded
[t=0.189062s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.189091s, 431232 KB] g=46, 388 evaluated, 87 expanded
[t=0.189503s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.189534s, 431232 KB] g=48, 391 evaluated, 89 expanded
[t=0.189561s, 431232 KB] Solution found!
[t=0.189587s, 431232 KB] Actual search time: 0.0908682s
unstack h j (1)
stack h a (1)
unstack i g (1)
put-down i (1)
unstack j l (1)
stack j i (1)
unstack g k (1)
stack g h (1)
unstack l f (1)
put-down l (1)
pick-up k (1)
stack k l (1)
pick-up c (1)
stack c b (1)
unstack j i (1)
put-down j (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a d (1)
stack a h (1)
unstack d e (1)
stack d i (1)
pick-up f (1)
stack f a (1)
pick-up e (1)
stack e j (1)
unstack k l (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up l (1)
stack l c (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.189612s, 431232 KB] Plan length: 48 step(s).
[t=0.189612s, 431232 KB] Plan cost: 48
[t=0.189612s, 431232 KB] Expanded 90 state(s).
[t=0.189612s, 431232 KB] Reopened 0 state(s).
[t=0.189612s, 431232 KB] Evaluated 391 state(s).
[t=0.189612s, 431232 KB] Evaluations: 391
[t=0.189612s, 431232 KB] Generated 481 state(s).
[t=0.189612s, 431232 KB] Dead ends: 0 state(s).
[t=0.189612s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.189612s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.189612s, 431232 KB] Evaluated until last jump: 6 state(s).
[t=0.189612s, 431232 KB] Generated until last jump: 5 state(s).
[t=0.189612s, 431232 KB] Number of registered states: 391
[t=0.189612s, 431232 KB] Int hash set load factor: 391/512 = 0.763672
[t=0.189612s, 431232 KB] Int hash set resizes: 9
[t=0.189612s, 431232 KB] Search time: 0.16322s
[t=0.189612s, 431232 KB] Total time: 0.189612s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p72.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6391e-05s, 424928 KB] reading input...
[t=0.00212875s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257558s, 427536 KB] Building successor generator...done!
[t=0.0260384s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260621s, 427536 KB] time for successor generation creation: 0.000169596s
[t=0.0260907s, 427536 KB] Variables: 25
[t=0.026113s, 427536 KB] FactPairs: 182
[t=0.0261352s, 427536 KB] Bytes per state: 8
[t=0.0263389s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098055s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0981067s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981321s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0981699s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0981959s, 430128 KB] pruning method: none
[t=0.116554s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.116604s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117009s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.117039s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117251s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.11728s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117497s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.117526s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.118292s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.118324s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.1189s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.11893s, 431100 KB] g=5, 15 evaluated, 5 expanded
[t=0.122951s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.122984s, 431100 KB] g=8, 37 evaluated, 10 expanded
[t=0.143501s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.143539s, 431100 KB] g=14, 150 evaluated, 34 expanded
[t=0.146113s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.146163s, 431100 KB] g=17, 164 evaluated, 37 expanded
[t=0.151473s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.151511s, 431100 KB] g=22, 193 evaluated, 43 expanded
[t=0.153548s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.153579s, 431232 KB] g=24, 204 evaluated, 45 expanded
[t=0.154357s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.154401s, 431232 KB] g=25, 208 evaluated, 46 expanded
[t=0.17075s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.170786s, 431232 KB] g=27, 297 evaluated, 73 expanded, 5 reopened
[t=0.192509s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.192546s, 431364 KB] g=25, 416 evaluated, 109 expanded, 10 reopened
[t=0.192943s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.192972s, 431364 KB] g=25, 418 evaluated, 109 expanded, 10 reopened
[t=0.194113s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.194146s, 431364 KB] g=26, 424 evaluated, 111 expanded, 10 reopened
[t=0.195279s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.195309s, 431364 KB] g=28, 430 evaluated, 113 expanded, 10 reopened
[t=0.200475s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.200509s, 431364 KB] g=28, 458 evaluated, 123 expanded, 10 reopened
[t=0.207986s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.208023s, 431364 KB] g=34, 499 evaluated, 133 expanded, 10 reopened
[t=0.234904s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.234944s, 431496 KB] g=38, 646 evaluated, 179 expanded, 10 reopened
[t=0.23607s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.2361s, 431496 KB] g=39, 652 evaluated, 180 expanded, 10 reopened
[t=0.240173s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.240211s, 431496 KB] g=41, 674 evaluated, 188 expanded, 10 reopened
[t=0.242077s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.242112s, 431496 KB] g=44, 684 evaluated, 193 expanded, 10 reopened
[t=0.244338s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.244369s, 431496 KB] g=46, 696 evaluated, 197 expanded, 10 reopened
[t=0.248176s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.248213s, 431496 KB] g=50, 716 evaluated, 203 expanded, 10 reopened
[t=0.253544s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.253581s, 431496 KB] g=57, 745 evaluated, 211 expanded, 10 reopened
[t=0.255372s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.255412s, 431496 KB] g=59, 754 evaluated, 213 expanded, 10 reopened
[t=0.255808s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.255837s, 431496 KB] g=59, 756 evaluated, 213 expanded, 10 reopened
[t=0.256048s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.256077s, 431496 KB] g=59, 757 evaluated, 213 expanded, 10 reopened
[t=0.257021s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.257051s, 431496 KB] g=61, 762 evaluated, 215 expanded, 10 reopened
[t=0.258928s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.25896s, 431496 KB] g=64, 772 evaluated, 219 expanded, 10 reopened
[t=0.259908s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.259942s, 431496 KB] g=65, 777 evaluated, 222 expanded, 10 reopened
[t=0.260164s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.260194s, 431496 KB] g=66, 779 evaluated, 225 expanded, 10 reopened
[t=0.260221s, 431496 KB] Solution found!
[t=0.260248s, 431496 KB] Actual search time: 0.162048s
unstack i d (1)
put-down i (1)
unstack g c (1)
stack g a (1)
unstack c e (1)
put-down c (1)
unstack d j (1)
stack d i (1)
unstack g a (1)
put-down g (1)
unstack j h (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack h k (1)
stack h a (1)
pick-up c (1)
stack c d (1)
pick-up k (1)
stack k i (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a k (1)
unstack b f (1)
put-down b (1)
unstack c d (1)
put-down c (1)
pick-up b (1)
stack b d (1)
pick-up c (1)
stack c b (1)
unstack a k (1)
stack a h (1)
unstack k i (1)
put-down k (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack c b (1)
stack c i (1)
unstack b d (1)
stack b c (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j d (1)
unstack e l (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack b c (1)
put-down b (1)
unstack c i (1)
put-down c (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.260272s, 431496 KB] Plan length: 66 step(s).
[t=0.260272s, 431496 KB] Plan cost: 66
[t=0.260272s, 431496 KB] Expanded 226 state(s).
[t=0.260272s, 431496 KB] Reopened 10 state(s).
[t=0.260272s, 431496 KB] Evaluated 779 state(s).
[t=0.260272s, 431496 KB] Evaluations: 779
[t=0.260272s, 431496 KB] Generated 1069 state(s).
[t=0.260272s, 431496 KB] Dead ends: 0 state(s).
[t=0.260272s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.260272s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.260272s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.260272s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.260272s, 431496 KB] Number of registered states: 779
[t=0.260272s, 431496 KB] Int hash set load factor: 779/1024 = 0.760742
[t=0.260272s, 431496 KB] Int hash set resizes: 10
[t=0.260272s, 431496 KB] Search time: 0.233934s
[t=0.260272s, 431496 KB] Total time: 0.260272s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p73.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.010s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6546e-05s, 424928 KB] reading input...
[t=0.00217245s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258562s, 427536 KB] Building successor generator...done!
[t=0.0261358s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026159s, 427536 KB] time for successor generation creation: 0.00016919s
[t=0.0261876s, 427536 KB] Variables: 25
[t=0.0262102s, 427536 KB] FactPairs: 182
[t=0.026232s, 427536 KB] Bytes per state: 8
[t=0.0264255s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982102s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0982625s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982884s, 430128 KB] f = 132, 1 evaluated, 0 expanded
[t=0.0983158s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0983484s, 430128 KB] pruning method: none
[t=0.116945s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.116994s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117214s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.117244s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.11781s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.11784s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.120758s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.120791s, 431100 KB] g=3, 25 evaluated, 6 expanded
[t=0.124945s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.124979s, 431100 KB] g=8, 48 evaluated, 12 expanded
[t=0.128967s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.129001s, 431100 KB] g=9, 70 evaluated, 17 expanded
[t=0.15295s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.152986s, 431232 KB] g=23, 202 evaluated, 62 expanded
[t=0.156084s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.156118s, 431232 KB] g=24, 219 evaluated, 67 expanded
[t=0.15815s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.158183s, 431232 KB] g=23, 230 evaluated, 70 expanded
[t=0.161644s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.161679s, 431232 KB] g=26, 249 evaluated, 75 expanded
[t=0.162433s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.162462s, 431232 KB] g=27, 253 evaluated, 76 expanded
[t=0.177246s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.177283s, 431232 KB] g=30, 335 evaluated, 97 expanded
[t=0.177853s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.177883s, 431232 KB] g=31, 338 evaluated, 98 expanded
[t=0.179347s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.179378s, 431232 KB] g=33, 346 evaluated, 101 expanded
[t=0.182823s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.18286s, 431232 KB] g=37, 365 evaluated, 106 expanded
[t=0.184508s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.184546s, 431232 KB] g=40, 374 evaluated, 109 expanded
[t=0.1853s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.185335s, 431232 KB] g=41, 378 evaluated, 110 expanded
[t=0.186437s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.186467s, 431232 KB] g=43, 384 evaluated, 112 expanded
[t=0.187578s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.18761s, 431232 KB] g=46, 390 evaluated, 115 expanded
[t=0.187999s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.18803s, 431232 KB] g=46, 392 evaluated, 115 expanded
[t=0.189514s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.189549s, 431232 KB] g=47, 400 evaluated, 118 expanded
[t=0.19084s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.19087s, 431232 KB] g=50, 407 evaluated, 121 expanded
[t=0.191445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.191475s, 431232 KB] g=51, 410 evaluated, 123 expanded
[t=0.192042s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.192071s, 431232 KB] g=53, 413 evaluated, 125 expanded
[t=0.192283s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.192312s, 431232 KB] g=54, 414 evaluated, 126 expanded
[t=0.193961s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.193996s, 431232 KB] g=58, 423 evaluated, 130 expanded
[t=0.195637s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.195672s, 431364 KB] g=60, 432 evaluated, 133 expanded
[t=0.197154s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.197189s, 431364 KB] g=62, 440 evaluated, 137 expanded
[t=0.19776s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.197789s, 431364 KB] g=63, 443 evaluated, 138 expanded
[t=0.200153s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.200186s, 431364 KB] g=64, 456 evaluated, 144 expanded
[t=0.202203s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.202235s, 431364 KB] g=61, 467 evaluated, 150 expanded
[t=0.204594s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.204632s, 431364 KB] g=64, 480 evaluated, 156 expanded
[t=0.20504s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.205069s, 431364 KB] g=65, 482 evaluated, 157 expanded
[t=0.20528s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.205308s, 431364 KB] g=66, 483 evaluated, 158 expanded
[t=0.205885s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.205914s, 431364 KB] g=67, 486 evaluated, 160 expanded
[t=0.207927s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.207961s, 431364 KB] g=68, 497 evaluated, 167 expanded
[t=0.208904s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.208936s, 431364 KB] g=70, 503 evaluated, 171 expanded
[t=0.208963s, 431364 KB] Solution found!
[t=0.20899s, 431364 KB] Actual search time: 0.110637s
unstack l g (1)
put-down l (1)
unstack e a (1)
put-down e (1)
pick-up g (1)
stack g h (1)
unstack a j (1)
stack a e (1)
pick-up l (1)
stack l b (1)
pick-up j (1)
stack j l (1)
unstack a e (1)
stack a g (1)
unstack j l (1)
stack j e (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d j (1)
unstack a g (1)
stack a d (1)
unstack i c (1)
stack i a (1)
pick-up c (1)
stack c b (1)
unstack i a (1)
stack i c (1)
unstack g h (1)
put-down g (1)
unstack h k (1)
stack h a (1)
unstack k f (1)
stack k i (1)
unstack h a (1)
stack h g (1)
unstack a d (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack d j (1)
stack d i (1)
unstack j e (1)
stack j d (1)
pick-up e (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
stack c d (1)
unstack b l (1)
stack b i (1)
unstack c d (1)
put-down c (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.209014s, 431364 KB] Plan length: 70 step(s).
[t=0.209014s, 431364 KB] Plan cost: 70
[t=0.209014s, 431364 KB] Expanded 172 state(s).
[t=0.209014s, 431364 KB] Reopened 0 state(s).
[t=0.209014s, 431364 KB] Evaluated 503 state(s).
[t=0.209014s, 431364 KB] Evaluations: 503
[t=0.209014s, 431364 KB] Generated 688 state(s).
[t=0.209014s, 431364 KB] Dead ends: 0 state(s).
[t=0.209014s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.209014s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.209014s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.209014s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.209014s, 431364 KB] Number of registered states: 503
[t=0.209014s, 431364 KB] Int hash set load factor: 503/512 = 0.982422
[t=0.209014s, 431364 KB] Int hash set resizes: 9
[t=0.209014s, 431364 KB] Search time: 0.18259s
[t=0.209014s, 431364 KB] Total time: 0.209014s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p74.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0643e-05s, 424928 KB] reading input...
[t=0.00219925s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256951s, 427536 KB] Building successor generator...done!
[t=0.0259756s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259997s, 427536 KB] time for successor generation creation: 0.000166322s
[t=0.0260281s, 427536 KB] Variables: 25
[t=0.0260504s, 427536 KB] FactPairs: 182
[t=0.0260721s, 427536 KB] Bytes per state: 8
[t=0.0262676s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980564s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0981092s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981351s, 430128 KB] f = 149, 1 evaluated, 0 expanded
[t=0.0981629s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0981871s, 430128 KB] pruning method: none
[t=0.110021s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.110083s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116701s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.116745s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.11776s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.121807s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.121841s, 431100 KB] g=6, 31 evaluated, 7 expanded
[t=0.122057s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.122086s, 431100 KB] g=6, 32 evaluated, 7 expanded
[t=0.125037s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.125069s, 431100 KB] g=8, 48 evaluated, 10 expanded
[t=0.135375s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.135413s, 431100 KB] g=10, 104 evaluated, 21 expanded
[t=0.135629s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.135658s, 431100 KB] g=10, 105 evaluated, 21 expanded
[t=0.141041s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.141076s, 431100 KB] g=12, 134 evaluated, 27 expanded
[t=0.203909s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.203952s, 431364 KB] g=31, 477 evaluated, 124 expanded, 5 reopened
[t=0.204543s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.204574s, 431364 KB] g=32, 480 evaluated, 125 expanded, 5 reopened
[t=0.205156s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.205192s, 431364 KB] g=32, 483 evaluated, 125 expanded, 5 reopened
[t=0.206145s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.206175s, 431364 KB] g=33, 488 evaluated, 126 expanded, 5 reopened
[t=0.207125s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.207158s, 431364 KB] g=34, 493 evaluated, 127 expanded, 5 reopened
[t=0.208654s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.208687s, 431364 KB] g=35, 501 evaluated, 128 expanded, 5 reopened
[t=0.210373s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.210409s, 431364 KB] g=36, 510 evaluated, 130 expanded, 5 reopened
[t=0.2114s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.211439s, 431364 KB] g=37, 515 evaluated, 131 expanded, 5 reopened
[t=0.212025s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.212059s, 431364 KB] g=38, 518 evaluated, 132 expanded, 5 reopened
[t=0.218818s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.218854s, 431364 KB] g=41, 554 evaluated, 142 expanded, 5 reopened
[t=0.275792s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.275833s, 431496 KB] g=48, 864 evaluated, 229 expanded, 8 reopened
[t=0.282478s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.282516s, 431496 KB] g=48, 900 evaluated, 238 expanded, 8 reopened
[t=0.284011s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.284045s, 431496 KB] g=50, 908 evaluated, 240 expanded, 8 reopened
[t=0.284258s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.284287s, 431496 KB] g=50, 909 evaluated, 240 expanded, 8 reopened
[t=0.286702s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.28674s, 431496 KB] g=51, 922 evaluated, 244 expanded, 8 reopened
[t=0.289693s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.289731s, 431496 KB] g=51, 938 evaluated, 248 expanded, 8 reopened
[t=0.289947s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.289976s, 431496 KB] g=52, 939 evaluated, 249 expanded, 8 reopened
[t=0.290924s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.290957s, 431496 KB] g=53, 944 evaluated, 251 expanded, 8 reopened
[t=0.291355s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.291385s, 431496 KB] g=54, 946 evaluated, 252 expanded, 8 reopened
[t=0.291595s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.291629s, 431628 KB] g=54, 947 evaluated, 252 expanded, 8 reopened
[t=0.29258s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.29261s, 431628 KB] g=56, 952 evaluated, 254 expanded, 8 reopened
[t=0.294862s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.294898s, 431628 KB] g=58, 964 evaluated, 259 expanded, 8 reopened
[t=0.295112s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.295147s, 431628 KB] g=58, 965 evaluated, 259 expanded, 8 reopened
[t=0.296286s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.296317s, 431628 KB] g=60, 971 evaluated, 262 expanded, 8 reopened
[t=0.296711s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.29674s, 431628 KB] g=60, 973 evaluated, 262 expanded, 8 reopened
[t=0.300994s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.301032s, 431628 KB] g=64, 996 evaluated, 270 expanded, 8 reopened
[t=0.301516s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.301554s, 431628 KB] g=64, 998 evaluated, 270 expanded, 8 reopened
[t=0.30822s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.308256s, 431628 KB] g=69, 1034 evaluated, 285 expanded, 9 reopened
[t=0.310873s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.310907s, 431628 KB] g=72, 1048 evaluated, 291 expanded, 9 reopened
[t=0.330747s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.330787s, 431628 KB] g=71, 1156 evaluated, 334 expanded, 10 reopened
[t=0.332105s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.332136s, 431628 KB] g=73, 1163 evaluated, 338 expanded, 10 reopened
[t=0.332914s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.332945s, 431628 KB] g=74, 1168 evaluated, 343 expanded, 10 reopened
[t=0.332972s, 431628 KB] Solution found!
[t=0.332999s, 431628 KB] Actual search time: 0.234808s
unstack f g (1)
put-down f (1)
unstack d b (1)
put-down d (1)
unstack g a (1)
put-down g (1)
unstack e i (1)
stack e k (1)
pick-up f (1)
stack f e (1)
pick-up g (1)
stack g f (1)
pick-up a (1)
stack a g (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
unstack a g (1)
stack a i (1)
unstack g f (1)
put-down g (1)
unstack a i (1)
stack a f (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b d (1)
unstack l j (1)
put-down l (1)
unstack j h (1)
stack j l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack i c (1)
stack i a (1)
unstack f e (1)
put-down f (1)
unstack i a (1)
stack i c (1)
unstack e k (1)
stack e i (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack i c (1)
stack i l (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b c (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.333023s, 431628 KB] Plan length: 74 step(s).
[t=0.333023s, 431628 KB] Plan cost: 74
[t=0.333023s, 431628 KB] Expanded 344 state(s).
[t=0.333023s, 431628 KB] Reopened 10 state(s).
[t=0.333023s, 431628 KB] Evaluated 1168 state(s).
[t=0.333023s, 431628 KB] Evaluations: 1168
[t=0.333023s, 431628 KB] Generated 1598 state(s).
[t=0.333023s, 431628 KB] Dead ends: 0 state(s).
[t=0.333023s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.333023s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.333023s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.333023s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.333023s, 431628 KB] Number of registered states: 1168
[t=0.333023s, 431628 KB] Int hash set load factor: 1168/2048 = 0.570312
[t=0.333023s, 431628 KB] Int hash set resizes: 11
[t=0.333023s, 431628 KB] Search time: 0.306756s
[t=0.333023s, 431628 KB] Total time: 0.333023s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p75.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6085e-05s, 424928 KB] reading input...
[t=0.00221766s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259456s, 427536 KB] Building successor generator...done!
[t=0.026234s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026257s, 427536 KB] time for successor generation creation: 0.000168351s
[t=0.0262857s, 427536 KB] Variables: 25
[t=0.0263077s, 427536 KB] FactPairs: 182
[t=0.0263291s, 427536 KB] Bytes per state: 8
[t=0.0265249s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981181s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0981701s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098196s, 430128 KB] f = 154, 1 evaluated, 0 expanded
[t=0.0982235s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0982476s, 430128 KB] pruning method: none
[t=0.110118s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.11017s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118788s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118832s, 431100 KB] g=2, 15 evaluated, 3 expanded
[t=0.119401s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.119433s, 431100 KB] g=3, 18 evaluated, 4 expanded
[t=0.119643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.119673s, 431100 KB] g=3, 19 evaluated, 4 expanded
[t=0.121476s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.121507s, 431100 KB] g=5, 29 evaluated, 7 expanded
[t=0.122068s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.122098s, 431100 KB] g=5, 32 evaluated, 7 expanded
[t=0.122855s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.122888s, 431100 KB] g=6, 36 evaluated, 8 expanded
[t=0.123631s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.123661s, 431100 KB] g=7, 40 evaluated, 9 expanded
[t=0.124752s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.124783s, 431100 KB] g=8, 46 evaluated, 10 expanded
[t=0.137251s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.137286s, 431100 KB] g=15, 116 evaluated, 28 expanded
[t=0.137851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.137883s, 431100 KB] g=15, 119 evaluated, 28 expanded
[t=0.138095s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.138125s, 431100 KB] g=16, 120 evaluated, 29 expanded
[t=0.139961s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.140005s, 431100 KB] g=18, 130 evaluated, 31 expanded
[t=0.140577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.140611s, 431100 KB] g=19, 133 evaluated, 32 expanded
[t=0.140995s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.141024s, 431100 KB] g=19, 135 evaluated, 32 expanded
[t=0.1423s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.142331s, 431100 KB] g=20, 142 evaluated, 34 expanded
[t=0.148932s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.148967s, 431232 KB] g=24, 179 evaluated, 43 expanded
[t=0.152366s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.152402s, 431232 KB] g=26, 198 evaluated, 48 expanded
[t=0.153853s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.153883s, 431232 KB] g=26, 206 evaluated, 51 expanded
[t=0.155172s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.155207s, 431232 KB] g=27, 213 evaluated, 53 expanded
[t=0.155784s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.155814s, 431232 KB] g=28, 216 evaluated, 54 expanded
[t=0.156909s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.156942s, 431232 KB] g=30, 222 evaluated, 56 expanded
[t=0.158213s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.158246s, 431232 KB] g=31, 229 evaluated, 58 expanded
[t=0.159697s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.159732s, 431232 KB] g=32, 237 evaluated, 61 expanded
[t=0.16351s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163547s, 431232 KB] g=35, 258 evaluated, 69 expanded
[t=0.167636s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.167672s, 431232 KB] g=34, 281 evaluated, 77 expanded
[t=0.168063s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.168093s, 431232 KB] g=35, 283 evaluated, 78 expanded
[t=0.171667s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.171703s, 431232 KB] g=38, 303 evaluated, 87 expanded
[t=0.172972s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.173012s, 431232 KB] g=39, 310 evaluated, 90 expanded
[t=0.174101s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.174131s, 431232 KB] g=41, 316 evaluated, 92 expanded
[t=0.174705s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.17474s, 431232 KB] g=43, 319 evaluated, 94 expanded
[t=0.175132s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.175162s, 431232 KB] g=45, 322 evaluated, 96 expanded
[t=0.175188s, 431232 KB] Solution found!
[t=0.175213s, 431232 KB] Actual search time: 0.076961s
stack b d (1)
unstack k h (1)
stack k j (1)
unstack a g (1)
stack a k (1)
unstack f l (1)
put-down f (1)
pick-up l (1)
stack l b (1)
unstack h e (1)
stack h g (1)
pick-up e (1)
stack e a (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack e a (1)
stack e b (1)
pick-up f (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.175237s, 431232 KB] Plan length: 45 step(s).
[t=0.175237s, 431232 KB] Plan cost: 45
[t=0.175237s, 431232 KB] Expanded 97 state(s).
[t=0.175237s, 431232 KB] Reopened 0 state(s).
[t=0.175237s, 431232 KB] Evaluated 322 state(s).
[t=0.175237s, 431232 KB] Evaluations: 322
[t=0.175237s, 431232 KB] Generated 422 state(s).
[t=0.175237s, 431232 KB] Dead ends: 0 state(s).
[t=0.175237s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.175237s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.175237s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.175237s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.175237s, 431232 KB] Number of registered states: 322
[t=0.175237s, 431232 KB] Int hash set load factor: 322/512 = 0.628906
[t=0.175237s, 431232 KB] Int hash set resizes: 9
[t=0.175237s, 431232 KB] Search time: 0.148713s
[t=0.175237s, 431232 KB] Total time: 0.175237s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p76.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5956e-05s, 424928 KB] reading input...
[t=0.00216926s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258953s, 427536 KB] Building successor generator...done!
[t=0.0261738s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261969s, 427536 KB] time for successor generation creation: 0.000167449s
[t=0.0262246s, 427536 KB] Variables: 25
[t=0.0262467s, 427536 KB] FactPairs: 182
[t=0.026269s, 427536 KB] Bytes per state: 8
[t=0.0264628s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098796s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0988489s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988748s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0989022s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0989257s, 430128 KB] pruning method: none
[t=0.117207s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.117257s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118651s, 431100 KB] f = 147, 10 evaluated, 5 expanded
[t=0.119261s, 431100 KB] f = 148, 13 evaluated, 7 expanded
[t=0.119486s, 431100 KB] f = 151, 14 evaluated, 8 expanded
[t=0.120303s, 431100 KB] f = 152, 18 evaluated, 11 expanded
[t=0.121485s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.121515s, 431100 KB] g=7, 24 evaluated, 14 expanded
[t=0.124405s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.124438s, 431100 KB] g=8, 39 evaluated, 19 expanded
[t=0.126179s, 431100 KB] f = 153, 48 evaluated, 24 expanded
[t=0.12717s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.127201s, 431100 KB] g=10, 53 evaluated, 26 expanded
[t=0.129712s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.129746s, 431100 KB] g=12, 66 evaluated, 29 expanded
[t=0.146117s, 431100 KB] f = 154, 152 evaluated, 66 expanded, 2 reopened
[t=0.153538s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.153576s, 431100 KB] g=12, 191 evaluated, 80 expanded, 2 reopened
[t=0.154928s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.15496s, 431100 KB] g=14, 198 evaluated, 82 expanded, 2 reopened
[t=0.15632s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.156356s, 431100 KB] g=16, 205 evaluated, 84 expanded, 2 reopened
[t=0.160947s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.160981s, 431100 KB] g=20, 229 evaluated, 89 expanded, 2 reopened
[t=0.161962s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.161995s, 431100 KB] g=21, 234 evaluated, 90 expanded, 2 reopened
[t=0.16297s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.163002s, 431100 KB] g=22, 239 evaluated, 91 expanded, 2 reopened
[t=0.163407s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.163436s, 431100 KB] g=22, 241 evaluated, 91 expanded, 2 reopened
[t=0.169165s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.169206s, 431232 KB] g=26, 271 evaluated, 97 expanded, 2 reopened
[t=0.173021s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.173058s, 431232 KB] g=29, 291 evaluated, 101 expanded, 2 reopened
[t=0.176876s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.176912s, 431232 KB] g=31, 311 evaluated, 104 expanded, 2 reopened
[t=0.179013s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.179043s, 431232 KB] g=33, 322 evaluated, 106 expanded, 2 reopened
[t=0.180777s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.180813s, 431232 KB] g=34, 331 evaluated, 107 expanded, 2 reopened
[t=0.191378s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.191415s, 431232 KB] g=36, 387 evaluated, 117 expanded, 2 reopened
[t=0.192037s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.192073s, 431232 KB] g=37, 390 evaluated, 118 expanded, 2 reopened
[t=0.195296s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.19533s, 431232 KB] g=39, 407 evaluated, 121 expanded, 2 reopened
[t=0.195739s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.195768s, 431232 KB] g=39, 409 evaluated, 121 expanded, 2 reopened
[t=0.197881s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.197916s, 431232 KB] g=42, 420 evaluated, 124 expanded, 2 reopened
[t=0.199831s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.199864s, 431232 KB] g=44, 430 evaluated, 126 expanded, 2 reopened
[t=0.200102s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.200133s, 431232 KB] g=44, 431 evaluated, 126 expanded, 2 reopened
[t=0.200733s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.200767s, 431232 KB] g=45, 434 evaluated, 127 expanded, 2 reopened
[t=0.202119s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.202149s, 431232 KB] g=46, 441 evaluated, 129 expanded, 2 reopened
[t=0.204265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.2043s, 431232 KB] g=48, 452 evaluated, 132 expanded, 2 reopened
[t=0.206979s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.20701s, 431232 KB] g=48, 466 evaluated, 137 expanded, 2 reopened
[t=0.20742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.207452s, 431232 KB] g=49, 468 evaluated, 138 expanded, 2 reopened
[t=0.211646s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.21168s, 431232 KB] g=52, 490 evaluated, 144 expanded, 2 reopened
[t=0.212478s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.212516s, 431364 KB] g=53, 494 evaluated, 145 expanded, 2 reopened
[t=0.222276s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.222311s, 431364 KB] g=56, 545 evaluated, 163 expanded, 2 reopened
[t=0.226548s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.226583s, 431364 KB] g=59, 567 evaluated, 173 expanded, 2 reopened
[t=0.227185s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.227223s, 431364 KB] g=60, 570 evaluated, 174 expanded, 2 reopened
[t=0.227639s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.227669s, 431364 KB] g=61, 572 evaluated, 175 expanded, 2 reopened
[t=0.228089s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.228121s, 431364 KB] g=62, 574 evaluated, 176 expanded, 2 reopened
[t=0.228541s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.22857s, 431364 KB] g=64, 577 evaluated, 178 expanded, 2 reopened
[t=0.228597s, 431364 KB] Solution found!
[t=0.228623s, 431364 KB] Actual search time: 0.129694s
pick-up h (1)
stack h j (1)
unstack d a (1)
put-down d (1)
unstack a c (1)
put-down a (1)
unstack h j (1)
stack h a (1)
pick-up j (1)
stack j d (1)
unstack c i (1)
put-down c (1)
unstack i k (1)
put-down i (1)
unstack j d (1)
stack j i (1)
unstack k b (1)
put-down k (1)
unstack b e (1)
stack b j (1)
unstack e g (1)
stack e k (1)
unstack h a (1)
stack h c (1)
unstack g l (1)
stack g b (1)
unstack l f (1)
stack l d (1)
unstack g b (1)
put-down g (1)
unstack h c (1)
stack h g (1)
unstack b j (1)
stack b e (1)
pick-up a (1)
stack a h (1)
unstack b e (1)
stack b l (1)
pick-up f (1)
stack f a (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
stack b j (1)
unstack l d (1)
stack l c (1)
unstack b j (1)
stack b i (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.228648s, 431364 KB] Plan length: 64 step(s).
[t=0.228648s, 431364 KB] Plan cost: 64
[t=0.228648s, 431364 KB] Expanded 179 state(s).
[t=0.228648s, 431364 KB] Reopened 2 state(s).
[t=0.228648s, 431364 KB] Evaluated 577 state(s).
[t=0.228648s, 431364 KB] Evaluations: 577
[t=0.228648s, 431364 KB] Generated 771 state(s).
[t=0.228648s, 431364 KB] Dead ends: 0 state(s).
[t=0.228648s, 431364 KB] Expanded until last jump: 66 state(s).
[t=0.228648s, 431364 KB] Reopened until last jump: 2 state(s).
[t=0.228648s, 431364 KB] Evaluated until last jump: 152 state(s).
[t=0.228648s, 431364 KB] Generated until last jump: 229 state(s).
[t=0.228648s, 431364 KB] Number of registered states: 577
[t=0.228648s, 431364 KB] Int hash set load factor: 577/1024 = 0.563477
[t=0.228648s, 431364 KB] Int hash set resizes: 10
[t=0.228648s, 431364 KB] Search time: 0.202185s
[t=0.228648s, 431364 KB] Total time: 0.228648s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p77.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5348e-05s, 424928 KB] reading input...
[t=0.00218776s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259171s, 427536 KB] Building successor generator...done!
[t=0.026192s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262157s, 427536 KB] time for successor generation creation: 0.000162919s
[t=0.0262447s, 427536 KB] Variables: 25
[t=0.026268s, 427536 KB] FactPairs: 182
[t=0.0262901s, 427536 KB] Bytes per state: 8
[t=0.0264855s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982343s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.0982867s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983136s, 430128 KB] f = 135, 1 evaluated, 0 expanded
[t=0.0983408s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.098365s, 430128 KB] pruning method: none
[t=0.117215s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.117268s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118248s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.118279s, 431100 KB] g=2, 11 evaluated, 2 expanded
[t=0.119928s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.11997s, 431100 KB] g=4, 20 evaluated, 5 expanded
[t=0.120363s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.120393s, 431100 KB] g=5, 22 evaluated, 6 expanded
[t=0.121699s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.121732s, 431100 KB] g=6, 29 evaluated, 8 expanded
[t=0.122301s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.122331s, 431100 KB] g=7, 32 evaluated, 9 expanded
[t=0.126407s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.126442s, 431100 KB] g=12, 54 evaluated, 15 expanded
[t=0.127375s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.127406s, 431100 KB] g=13, 59 evaluated, 16 expanded
[t=0.132645s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.132678s, 431100 KB] g=20, 88 evaluated, 23 expanded
[t=0.135225s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.135256s, 431100 KB] g=19, 102 evaluated, 26 expanded
[t=0.136014s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.136046s, 431100 KB] g=20, 106 evaluated, 27 expanded
[t=0.136628s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.136661s, 431100 KB] g=21, 109 evaluated, 28 expanded
[t=0.138129s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.13816s, 431100 KB] g=23, 117 evaluated, 30 expanded
[t=0.142168s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.142204s, 431100 KB] g=25, 139 evaluated, 36 expanded
[t=0.143671s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.143707s, 431232 KB] g=27, 147 evaluated, 38 expanded
[t=0.146454s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.146488s, 431232 KB] g=30, 162 evaluated, 44 expanded
[t=0.147059s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.147091s, 431232 KB] g=31, 165 evaluated, 45 expanded
[t=0.147485s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.147514s, 431232 KB] g=32, 167 evaluated, 46 expanded
[t=0.153841s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.153881s, 431232 KB] g=37, 202 evaluated, 58 expanded
[t=0.160412s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.160449s, 431232 KB] g=39, 238 evaluated, 71 expanded
[t=0.175263s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.175299s, 431232 KB] g=41, 320 evaluated, 102 expanded
[t=0.176053s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.176083s, 431232 KB] g=42, 324 evaluated, 103 expanded
[t=0.176846s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.176879s, 431232 KB] g=44, 328 evaluated, 105 expanded
[t=0.177997s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.17803s, 431232 KB] g=46, 334 evaluated, 108 expanded
[t=0.180239s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.18027s, 431232 KB] g=49, 347 evaluated, 115 expanded
[t=0.180298s, 431232 KB] Solution found!
[t=0.180324s, 431232 KB] Actual search time: 0.0819549s
stack g i (1)
pick-up k (1)
stack k f (1)
unstack a l (1)
stack a k (1)
unstack g i (1)
stack g a (1)
unstack l j (1)
stack l d (1)
unstack j h (1)
put-down j (1)
unstack g a (1)
stack g h (1)
pick-up j (1)
stack j i (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k j (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e l (1)
unstack k j (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack l d (1)
stack l i (1)
unstack d b (1)
stack d j (1)
pick-up b (1)
stack b c (1)
unstack l i (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.180349s, 431232 KB] Plan length: 49 step(s).
[t=0.180349s, 431232 KB] Plan cost: 49
[t=0.180349s, 431232 KB] Expanded 116 state(s).
[t=0.180349s, 431232 KB] Reopened 0 state(s).
[t=0.180349s, 431232 KB] Evaluated 347 state(s).
[t=0.180349s, 431232 KB] Evaluations: 347
[t=0.180349s, 431232 KB] Generated 470 state(s).
[t=0.180349s, 431232 KB] Dead ends: 0 state(s).
[t=0.180349s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.180349s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.180349s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.180349s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.180349s, 431232 KB] Number of registered states: 347
[t=0.180349s, 431232 KB] Int hash set load factor: 347/512 = 0.677734
[t=0.180349s, 431232 KB] Int hash set resizes: 9
[t=0.180349s, 431232 KB] Search time: 0.153864s
[t=0.180349s, 431232 KB] Total time: 0.180349s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p78.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7186e-05s, 424928 KB] reading input...
[t=0.00226164s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260143s, 427536 KB] Building successor generator...done!
[t=0.0262916s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026315s, 427536 KB] time for successor generation creation: 0.000165903s
[t=0.0263426s, 427536 KB] Variables: 25
[t=0.0263657s, 427536 KB] FactPairs: 182
[t=0.0263877s, 427536 KB] Bytes per state: 8
[t=0.0265806s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986449s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0986959s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987212s, 430128 KB] f = 132, 1 evaluated, 0 expanded
[t=0.0987483s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0987725s, 430128 KB] pruning method: none
[t=0.117193s, 431100 KB] f = 137, 4 evaluated, 1 expanded
[t=0.117643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.117676s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118102s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118133s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.118541s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.11857s, 431100 KB] g=4, 10 evaluated, 4 expanded
[t=0.118785s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.118814s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.119977s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.120007s, 431100 KB] g=6, 17 evaluated, 6 expanded
[t=0.127391s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.127431s, 431100 KB] g=8, 56 evaluated, 19 expanded
[t=0.131245s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.131279s, 431100 KB] g=10, 76 evaluated, 24 expanded
[t=0.131872s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.131902s, 431100 KB] g=10, 79 evaluated, 24 expanded
[t=0.143635s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.14367s, 431100 KB] g=17, 141 evaluated, 42 expanded
[t=0.150712s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.150748s, 431232 KB] g=18, 178 evaluated, 52 expanded
[t=0.152289s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.152322s, 431232 KB] g=19, 186 evaluated, 53 expanded
[t=0.15369s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.153723s, 431232 KB] g=20, 193 evaluated, 54 expanded
[t=0.163384s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.163418s, 431232 KB] g=25, 244 evaluated, 65 expanded
[t=0.168202s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.168239s, 431232 KB] g=30, 269 evaluated, 72 expanded
[t=0.187194s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.187235s, 431364 KB] g=41, 369 evaluated, 101 expanded
[t=0.187458s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.187486s, 431364 KB] g=41, 370 evaluated, 101 expanded
[t=0.189426s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.189459s, 431364 KB] g=43, 380 evaluated, 104 expanded
[t=0.189872s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.189907s, 431364 KB] g=44, 382 evaluated, 105 expanded
[t=0.190127s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.190157s, 431364 KB] g=44, 383 evaluated, 105 expanded
[t=0.190566s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.190595s, 431364 KB] g=45, 385 evaluated, 106 expanded
[t=0.191006s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.191034s, 431364 KB] g=46, 387 evaluated, 107 expanded
[t=0.192573s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.192603s, 431364 KB] g=48, 395 evaluated, 110 expanded
[t=0.193399s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.193434s, 431364 KB] g=50, 399 evaluated, 112 expanded
[t=0.194037s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.194066s, 431364 KB] g=51, 402 evaluated, 113 expanded
[t=0.194664s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.194695s, 431364 KB] g=52, 405 evaluated, 114 expanded
[t=0.19871s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.198746s, 431364 KB] g=54, 426 evaluated, 123 expanded, 1 reopened
[t=0.199535s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.199565s, 431364 KB] g=55, 430 evaluated, 124 expanded, 1 reopened
[t=0.199977s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.200006s, 431364 KB] g=56, 432 evaluated, 125 expanded, 1 reopened
[t=0.200221s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.200249s, 431364 KB] g=56, 433 evaluated, 125 expanded, 1 reopened
[t=0.200472s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.200499s, 431364 KB] g=57, 434 evaluated, 126 expanded, 1 reopened
[t=0.201488s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.201521s, 431364 KB] g=58, 439 evaluated, 128 expanded, 1 reopened
[t=0.202502s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.202532s, 431364 KB] g=59, 444 evaluated, 131 expanded, 1 reopened
[t=0.209409s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.209451s, 431364 KB] g=62, 480 evaluated, 151 expanded, 1 reopened
[t=1.33388s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=1.33393s, 431892 KB] g=62, 6450 evaluated, 3266 expanded, 296 reopened
[t=1.33396s, 431892 KB] Solution found!
[t=1.33398s, 431892 KB] Actual search time: 1.23521s
unstack g f (1)
stack g h (1)
unstack f l (1)
put-down f (1)
unstack l a (1)
put-down l (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack j e (1)
put-down j (1)
unstack e b (1)
stack e j (1)
unstack b i (1)
stack b l (1)
unstack h g (1)
stack h a (1)
unstack e j (1)
stack e i (1)
pick-up j (1)
stack j e (1)
pick-up f (1)
stack f j (1)
unstack h a (1)
stack h g (1)
unstack f j (1)
stack f a (1)
unstack j e (1)
put-down j (1)
unstack e i (1)
stack e b (1)
pick-up j (1)
stack j i (1)
unstack e b (1)
stack e j (1)
unstack f a (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i d (1)
put-down i (1)
unstack d c (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=1.33401s, 431892 KB] Plan length: 62 step(s).
[t=1.33401s, 431892 KB] Plan cost: 62
[t=1.33401s, 431892 KB] Expanded 3267 state(s).
[t=1.33401s, 431892 KB] Reopened 296 state(s).
[t=1.33401s, 431892 KB] Evaluated 6450 state(s).
[t=1.33401s, 431892 KB] Evaluations: 6450
[t=1.33401s, 431892 KB] Generated 12595 state(s).
[t=1.33401s, 431892 KB] Dead ends: 0 state(s).
[t=1.33401s, 431892 KB] Expanded until last jump: 1 state(s).
[t=1.33401s, 431892 KB] Reopened until last jump: 0 state(s).
[t=1.33401s, 431892 KB] Evaluated until last jump: 4 state(s).
[t=1.33401s, 431892 KB] Generated until last jump: 3 state(s).
[t=1.33401s, 431892 KB] Number of registered states: 6450
[t=1.33401s, 431892 KB] Int hash set load factor: 6450/8192 = 0.787354
[t=1.33401s, 431892 KB] Int hash set resizes: 13
[t=1.33401s, 431892 KB] Search time: 1.30743s
[t=1.33401s, 431892 KB] Total time: 1.33401s
Solution found.
Peak memory: 431892 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p79.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.1439e-05s, 424928 KB] reading input...
[t=0.00214003s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258185s, 427536 KB] Building successor generator...done!
[t=0.0260963s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261197s, 427536 KB] time for successor generation creation: 0.000167268s
[t=0.0261483s, 427536 KB] Variables: 25
[t=0.026171s, 427536 KB] FactPairs: 182
[t=0.026193s, 427536 KB] Bytes per state: 8
[t=0.0263866s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109153s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.10921s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109236s, 430128 KB] f = 132, 1 evaluated, 0 expanded
[t=0.109264s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.109288s, 430128 KB] pruning method: none
[t=0.127817s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.127867s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.128624s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.128656s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.129056s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.129087s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.1293s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.129329s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.133785s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.133822s, 431100 KB] g=5, 36 evaluated, 9 expanded
[t=0.135835s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.135879s, 431100 KB] g=7, 47 evaluated, 12 expanded
[t=0.136097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.136127s, 431100 KB] g=7, 48 evaluated, 12 expanded
[t=0.144081s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.14412s, 431100 KB] g=11, 92 evaluated, 22 expanded
[t=0.145419s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.145451s, 431100 KB] g=13, 99 evaluated, 24 expanded
[t=0.150522s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.150564s, 431100 KB] g=16, 127 evaluated, 30 expanded
[t=0.158026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.158062s, 431100 KB] g=16, 168 evaluated, 40 expanded
[t=0.170214s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.170254s, 431232 KB] g=22, 235 evaluated, 56 expanded
[t=0.171772s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.171809s, 431232 KB] g=24, 243 evaluated, 58 expanded
[t=0.172212s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.172243s, 431232 KB] g=25, 245 evaluated, 59 expanded
[t=0.173724s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.173761s, 431232 KB] g=26, 253 evaluated, 61 expanded
[t=0.17781s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.177845s, 431232 KB] g=28, 275 evaluated, 66 expanded
[t=0.179167s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.179202s, 431232 KB] g=30, 282 evaluated, 68 expanded
[t=0.180875s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.180908s, 431232 KB] g=31, 291 evaluated, 70 expanded
[t=0.185634s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.18567s, 431232 KB] g=34, 317 evaluated, 75 expanded
[t=0.185889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.185919s, 431232 KB] g=35, 318 evaluated, 76 expanded
[t=0.186871s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.186905s, 431232 KB] g=36, 323 evaluated, 77 expanded
[t=0.188574s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.188612s, 431232 KB] g=37, 332 evaluated, 80 expanded
[t=0.188826s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.188855s, 431232 KB] g=37, 333 evaluated, 80 expanded
[t=0.189791s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.189827s, 431232 KB] g=39, 338 evaluated, 82 expanded
[t=0.190592s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.190625s, 431232 KB] g=40, 342 evaluated, 83 expanded
[t=0.194096s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.194129s, 431232 KB] g=41, 361 evaluated, 89 expanded
[t=0.194539s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.194575s, 431232 KB] g=42, 363 evaluated, 90 expanded
[t=0.197142s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.197178s, 431232 KB] g=44, 377 evaluated, 94 expanded
[t=0.198849s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.198885s, 431232 KB] g=46, 386 evaluated, 96 expanded
[t=0.199831s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.199863s, 431232 KB] g=48, 391 evaluated, 98 expanded
[t=0.200445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.200479s, 431232 KB] g=50, 394 evaluated, 100 expanded
[t=0.201239s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.201273s, 431232 KB] g=49, 398 evaluated, 102 expanded
[t=0.203328s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.203368s, 431364 KB] g=52, 409 evaluated, 109 expanded
[t=0.203399s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.203423s, 431364 KB] g=53, 410 evaluated, 110 expanded
[t=0.203449s, 431364 KB] Solution found!
[t=0.203475s, 431364 KB] Actual search time: 0.0941829s
stack j f (1)
unstack d g (1)
put-down d (1)
unstack b e (1)
stack b d (1)
unstack j f (1)
stack j e (1)
unstack f l (1)
stack f j (1)
unstack b d (1)
stack b l (1)
unstack a i (1)
stack a d (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h a (1)
unstack i c (1)
stack i f (1)
pick-up c (1)
stack c b (1)
unstack h a (1)
stack h g (1)
unstack i f (1)
put-down i (1)
unstack a d (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack j e (1)
stack j c (1)
unstack e k (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.2035s, 431364 KB] Plan length: 53 step(s).
[t=0.2035s, 431364 KB] Plan cost: 53
[t=0.2035s, 431364 KB] Expanded 111 state(s).
[t=0.2035s, 431364 KB] Reopened 0 state(s).
[t=0.2035s, 431364 KB] Evaluated 410 state(s).
[t=0.2035s, 431364 KB] Evaluations: 410
[t=0.2035s, 431364 KB] Generated 519 state(s).
[t=0.2035s, 431364 KB] Dead ends: 0 state(s).
[t=0.2035s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.2035s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.2035s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.2035s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.2035s, 431364 KB] Number of registered states: 410
[t=0.2035s, 431364 KB] Int hash set load factor: 410/512 = 0.800781
[t=0.2035s, 431364 KB] Int hash set resizes: 9
[t=0.2035s, 431364 KB] Search time: 0.177114s
[t=0.2035s, 431364 KB] Total time: 0.2035s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p80.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6721e-05s, 424928 KB] reading input...
[t=0.00214373s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258899s, 427536 KB] Building successor generator...done!
[t=0.0261692s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261929s, 427536 KB] time for successor generation creation: 0.000166869s
[t=0.0262221s, 427536 KB] Variables: 25
[t=0.0262448s, 427536 KB] FactPairs: 182
[t=0.0262671s, 427536 KB] Bytes per state: 8
[t=0.0264613s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983503s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0984024s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984282s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0984567s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0984813s, 430128 KB] pruning method: none
[t=0.116679s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.116729s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118406s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.118438s, 431100 KB] g=6, 12 evaluated, 6 expanded
[t=0.118831s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.118861s, 431100 KB] g=7, 14 evaluated, 7 expanded
[t=0.119796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.119826s, 431100 KB] g=9, 19 evaluated, 9 expanded
[t=0.120597s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.120629s, 431100 KB] g=10, 23 evaluated, 10 expanded
[t=0.121379s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.121409s, 431100 KB] g=11, 27 evaluated, 11 expanded
[t=0.121621s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.12165s, 431100 KB] g=11, 28 evaluated, 11 expanded
[t=0.126738s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.126771s, 431100 KB] g=17, 56 evaluated, 23 expanded
[t=0.126985s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.127015s, 431100 KB] g=18, 57 evaluated, 24 expanded
[t=0.127225s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.127253s, 431100 KB] g=18, 58 evaluated, 24 expanded
[t=0.188827s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.188879s, 431232 KB] g=32, 400 evaluated, 145 expanded
[t=0.224426s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.224471s, 431364 KB] g=30, 597 evaluated, 225 expanded, 2 reopened
[t=0.224687s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.224719s, 431364 KB] g=30, 598 evaluated, 225 expanded, 2 reopened
[t=0.227261s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.227294s, 431364 KB] g=32, 612 evaluated, 229 expanded, 2 reopened
[t=0.233269s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.233305s, 431364 KB] g=34, 645 evaluated, 239 expanded, 2 reopened
[t=0.254148s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.254184s, 431364 KB] g=37, 761 evaluated, 265 expanded, 2 reopened
[t=0.256011s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.256042s, 431364 KB] g=38, 771 evaluated, 267 expanded, 2 reopened
[t=0.256805s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.256837s, 431364 KB] g=39, 775 evaluated, 268 expanded, 2 reopened
[t=0.272521s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.272558s, 431496 KB] g=49, 862 evaluated, 295 expanded, 2 reopened
[t=0.275103s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.275134s, 431496 KB] g=50, 876 evaluated, 300 expanded, 2 reopened
[t=0.282344s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.28238s, 431496 KB] g=54, 916 evaluated, 315 expanded, 2 reopened
[t=0.282594s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.282623s, 431496 KB] g=55, 917 evaluated, 316 expanded, 2 reopened
[t=0.283551s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.283583s, 431496 KB] g=56, 922 evaluated, 317 expanded, 2 reopened
[t=0.284533s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.284568s, 431496 KB] g=58, 927 evaluated, 320 expanded, 2 reopened
[t=0.284961s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_3.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.28499s, 431496 KB] g=59, 929 evaluated, 321 expanded, 2 reopened
[t=0.285755s, 431496 KB] Solution found!
[t=0.285791s, 431496 KB] Actual search time: 0.187307s
unstack k h (1)
stack k i (1)
unstack h f (1)
put-down h (1)
unstack f c (1)
stack f k (1)
unstack c a (1)
put-down c (1)
unstack a l (1)
stack a f (1)
unstack l g (1)
put-down l (1)
pick-up h (1)
stack h g (1)
pick-up c (1)
stack c h (1)
unstack a f (1)
put-down a (1)
unstack c h (1)
put-down c (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k l (1)
unstack i d (1)
stack i c (1)
unstack f a (1)
stack f k (1)
pick-up a (1)
stack a h (1)
unstack i c (1)
put-down i (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
pick-up i (1)
stack i l (1)
unstack d j (1)
stack d i (1)
unstack j e (1)
stack j d (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i l (1)
stack i b (1)
pick-up l (1)
stack l d (1)
unstack i b (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.285817s, 431496 KB] Plan length: 60 step(s).
[t=0.285817s, 431496 KB] Plan cost: 60
[t=0.285817s, 431496 KB] Expanded 326 state(s).
[t=0.285817s, 431496 KB] Reopened 2 state(s).
[t=0.285817s, 431496 KB] Evaluated 934 state(s).
[t=0.285817s, 431496 KB] Evaluations: 934
[t=0.285817s, 431496 KB] Generated 1328 state(s).
[t=0.285817s, 431496 KB] Dead ends: 0 state(s).
[t=0.285817s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.285817s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.285817s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.285817s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.285817s, 431496 KB] Number of registered states: 934
[t=0.285817s, 431496 KB] Int hash set load factor: 934/1024 = 0.912109
[t=0.285817s, 431496 KB] Int hash set resizes: 10
[t=0.285817s, 431496 KB] Search time: 0.259356s
[t=0.285817s, 431496 KB] Total time: 0.285817s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023723
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 3 test success: 20 of 20 (100.0%)

---------- FOLD 5/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 171 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.12979286909103394 (0.5903338193893433 vs. 0.4605409502983093), which occurred at index 93.
  _module_class,
 | avg_train_loss=0.100168 | avg_val_loss=0.092063
Epoch 2 | avg_train_loss=0.066901 | avg_val_loss=0.045932
Epoch 3 | avg_train_loss=0.043108 | avg_val_loss=0.040285
Epoch 4 | avg_train_loss=0.039203 | avg_val_loss=0.037341
Epoch 5 | avg_train_loss=0.037326 | avg_val_loss=0.036710
Epoch 6 | avg_train_loss=0.036259 | avg_val_loss=0.035998
Epoch 7 | avg_train_loss=0.035569 | avg_val_loss=0.034931
Epoch 8 | avg_train_loss=0.034609 | avg_val_loss=0.034579
Epoch 9 | avg_train_loss=0.034173 | avg_val_loss=0.034129
Epoch 10 | avg_train_loss=0.033379 | avg_val_loss=0.032765
Epoch 11 | avg_train_loss=0.032996 | avg_val_loss=0.032503
Epoch 12 | avg_train_loss=0.032678 | avg_val_loss=0.031541
Epoch 13 | avg_train_loss=0.032164 | avg_val_loss=0.031722
Epoch 14 | avg_train_loss=0.031721 | avg_val_loss=0.030965
Epoch 15 | avg_train_loss=0.031309 | avg_val_loss=0.030967
Epoch 16 | avg_train_loss=0.031018 | avg_val_loss=0.030731
Epoch 17 | avg_train_loss=0.030800 | avg_val_loss=0.030609
Epoch 18 | avg_train_loss=0.030594 | avg_val_loss=0.029901
Epoch 19 | avg_train_loss=0.030191 | avg_val_loss=0.030546
Epoch 20 | avg_train_loss=0.030000 | avg_val_loss=0.029845
Epoch 21 | avg_train_loss=0.029858 | avg_val_loss=0.029808
Epoch 22 | avg_train_loss=0.029505 | avg_val_loss=0.029391
Epoch 23 | avg_train_loss=0.029401 | avg_val_loss=0.029138
Epoch 24 | avg_train_loss=0.029076 | avg_val_loss=0.028956
Epoch 25 | avg_train_loss=0.028866 | avg_val_loss=0.028665
Epoch 26 | avg_train_loss=0.028718 | avg_val_loss=0.028974
Epoch 27 | avg_train_loss=0.028530 | avg_val_loss=0.028711
Epoch 28 | avg_train_loss=0.028221 | avg_val_loss=0.028685
Epoch 29 | avg_train_loss=0.028026 | avg_val_loss=0.028460
Epoch 30 | avg_train_loss=0.027960 | avg_val_loss=0.028099
Epoch 31 | avg_train_loss=0.027630 | avg_val_loss=0.027722
Epoch 32 | avg_train_loss=0.027454 | avg_val_loss=0.027769
Epoch 33 | avg_train_loss=0.027163 | avg_val_loss=0.027549
Epoch 34 | avg_train_loss=0.027169 | avg_val_loss=0.027396
Epoch 35 | avg_train_loss=0.026907 | avg_val_loss=0.027397
Epoch 36 | avg_train_loss=0.026729 | avg_val_loss=0.027134
Epoch 37 | avg_train_loss=0.026498 | avg_val_loss=0.027027
Epoch 38 | avg_train_loss=0.026505 | avg_val_loss=0.026557
Epoch 39 | avg_train_loss=0.026221 | avg_val_loss=0.027091
Epoch 40 | avg_train_loss=0.026047 | avg_val_loss=0.026641
Epoch 41 | avg_train_loss=0.025989 | avg_val_loss=0.026045
Epoch 42 | avg_train_loss=0.025583 | avg_val_loss=0.026316
Epoch 43 | avg_train_loss=0.025593 | avg_val_loss=0.025866
Epoch 44 | avg_train_loss=0.025434 | avg_val_loss=0.025840
Epoch 45 | avg_train_loss=0.025262 | avg_val_loss=0.026245
Epoch 46 | avg_train_loss=0.024979 | avg_val_loss=0.026185
Epoch 47 | avg_train_loss=0.024984 | avg_val_loss=0.025475
Epoch 48 | avg_train_loss=0.024813 | avg_val_loss=0.025513
Epoch 49 | avg_train_loss=0.024828 | avg_val_loss=0.025105
Epoch 50 | avg_train_loss=0.024508 | avg_val_loss=0.024769
Epoch 51 | avg_train_loss=0.024465 | avg_val_loss=0.025205
Epoch 52 | avg_train_loss=0.024316 | avg_val_loss=0.024655
Epoch 53 | avg_train_loss=0.024047 | avg_val_loss=0.024553
Epoch 54 | avg_train_loss=0.024049 | avg_val_loss=0.025196
Epoch 55 | avg_train_loss=0.023848 | avg_val_loss=0.024514
Epoch 56 | avg_train_loss=0.023691 | avg_val_loss=0.024791
Epoch 57 | avg_train_loss=0.023651 | avg_val_loss=0.024771
Epoch 58 | avg_train_loss=0.023521 | avg_val_loss=0.024373
Epoch 59 | avg_train_loss=0.023612 | avg_val_loss=0.024863
Epoch 60 | avg_train_loss=0.023215 | avg_val_loss=0.024117
Epoch 61 | avg_train_loss=0.023171 | avg_val_loss=0.024643
Epoch 62 | avg_train_loss=0.023212 | avg_val_loss=0.024150
Epoch 63 | avg_train_loss=0.023012 | avg_val_loss=0.024116
Epoch 64 | avg_train_loss=0.022885 | avg_val_loss=0.023947
Epoch 65 | avg_train_loss=0.022865 | avg_val_loss=0.023870
Epoch 66 | avg_train_loss=0.022718 | avg_val_loss=0.024051
Epoch 67 | avg_train_loss=0.022631 | avg_val_loss=0.023925
Epoch 68 | avg_train_loss=0.022651 | avg_val_loss=0.024161
Epoch 69 | avg_train_loss=0.022442 | avg_val_loss=0.023991
Epoch 70 | avg_train_loss=0.022368 | avg_val_loss=0.023662
Epoch 71 | avg_train_loss=0.022350 | avg_val_loss=0.023582
Epoch 72 | avg_train_loss=0.022386 | avg_val_loss=0.023716
Epoch 73 | avg_train_loss=0.022244 | avg_val_loss=0.023488
Epoch 74 | avg_train_loss=0.022115 | avg_val_loss=0.023831
Epoch 75 | avg_train_loss=0.022069 | avg_val_loss=0.023858
Epoch 76 | avg_train_loss=0.021734 | avg_val_loss=0.023731
Epoch 77 | avg_train_loss=0.021739 | avg_val_loss=0.023953
Epoch 78 | avg_train_loss=0.021776 | avg_val_loss=0.023254
Epoch 79 | avg_train_loss=0.021633 | avg_val_loss=0.023812
Epoch 80 | avg_train_loss=0.021650 | avg_val_loss=0.023543
Epoch 81 | avg_train_loss=0.021615 | avg_val_loss=0.023259
Epoch 82 | avg_train_loss=0.021439 | avg_val_loss=0.023653
Epoch 83 | avg_train_loss=0.021395 | avg_val_loss=0.023622
Epoch 84 | avg_train_loss=0.021240 | avg_val_loss=0.023131
Epoch 85 | avg_train_loss=0.021205 | avg_val_loss=0.023482
Epoch 86 | avg_train_loss=0.021300 | avg_val_loss=0.023136
Epoch 87 | avg_train_loss=0.021170 | avg_val_loss=0.023452
Epoch 88 | avg_train_loss=0.021013 | avg_val_loss=0.023332
Epoch 89 | avg_train_loss=0.020914 | avg_val_loss=0.023250
Epoch 90 | avg_train_loss=0.020780 | avg_val_loss=0.023642
Epoch 91 | avg_train_loss=0.020843 | avg_val_loss=0.022853
Epoch 92 | avg_train_loss=0.020793 | avg_val_loss=0.023401
Epoch 93 | avg_train_loss=0.020484 | avg_val_loss=0.023256
Epoch 94 | avg_train_loss=0.020755 | avg_val_loss=0.023383
Epoch 95 | avg_train_loss=0.020609 | avg_val_loss=0.023224
Epoch 96 | avg_train_loss=0.020367 | avg_val_loss=0.023087
Epoch 97 | avg_train_loss=0.020453 | avg_val_loss=0.023337
Epoch 98 | avg_train_loss=0.020401 | avg_val_loss=0.022877
Epoch 99 | avg_train_loss=0.020323 | avg_val_loss=0.023599
Epoch 100 | avg_train_loss=0.020306 | avg_val_loss=0.023186
Epoch 101 | avg_train_loss=0.020112 | avg_val_loss=0.023176
Epoch 102 | avg_train_loss=0.020223INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p81.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6345e-05s, 424928 KB] reading input...
[t=0.00213332s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259193s, 427536 KB] Building successor generator...done!
[t=0.026214s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262376s, 427536 KB] time for successor generation creation: 0.000180337s
[t=0.0262767s, 427536 KB] Variables: 25
[t=0.0263007s, 427536 KB] FactPairs: 182
[t=0.0263231s, 427536 KB] Bytes per state: 8
[t=0.0265183s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106288s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.10634s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106366s, 430128 KB] f = 97, 1 evaluated, 0 expanded
[t=0.106393s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.106417s, 430128 KB] pruning method: none
[t=0.124782s, 431100 KB] f = 106, 4 evaluated, 1 expanded
[t=0.125021s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.125052s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.125983s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.126013s, 431100 KB] g=4, 10 evaluated, 4 expanded
[t=0.126405s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.126434s, 431100 KB] g=5, 12 evaluated, 5 expanded
[t=0.134958s, 431100 KB] f = 107, 59 evaluated, 31 expanded, 4 reopened
[t=0.135715s, 431100 KB] f = 108, 63 evaluated, 32 expanded, 4 reopened
[t=0.137374s, 431100 KB] f = 109, 72 evaluated, 35 expanded, 4 reopened
[t=0.139762s, 431100 KB] f = 110, 85 evaluated, 44 expanded, 4 reopened
[t=0.15539s, 431100 KB] f = 111, 172 evaluated, 64 expanded, 4 reopened
[t=0.158116s, 431100 KB] f = 112, 187 evaluated, 68 expanded, 4 reopened
[t=0.164992s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.165026s, 431232 KB] g=15, 225 evaluated, 78 expanded, 4 reopened
[t=0.165776s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.165805s, 431232 KB] g=16, 229 evaluated, 79 expanded, 4 reopened
[t=0.168176s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.16821s, 431232 KB] g=17, 242 evaluated, 81 expanded, 4 reopened
[t=0.173262s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.173295s, 431232 KB] g=19, 270 evaluated, 88 expanded, 4 reopened
[t=0.180681s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.180715s, 431232 KB] g=21, 311 evaluated, 101 expanded, 4 reopened
[t=0.183982s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.184016s, 431232 KB] g=19, 329 evaluated, 105 expanded, 4 reopened
[t=0.184413s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.184443s, 431232 KB] g=20, 331 evaluated, 106 expanded, 4 reopened
[t=0.185544s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.185585s, 431232 KB] g=21, 337 evaluated, 107 expanded, 4 reopened
[t=0.190276s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.190313s, 431232 KB] g=25, 363 evaluated, 113 expanded, 4 reopened
[t=0.190523s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.190552s, 431232 KB] g=25, 364 evaluated, 113 expanded, 4 reopened
[t=0.191491s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.191525s, 431232 KB] g=26, 369 evaluated, 114 expanded, 4 reopened
[t=0.191734s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.191762s, 431232 KB] g=26, 370 evaluated, 114 expanded, 4 reopened
[t=0.194842s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.194879s, 431232 KB] g=29, 387 evaluated, 119 expanded, 4 reopened
[t=0.195089s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.195118s, 431232 KB] g=29, 388 evaluated, 119 expanded, 4 reopened
[t=0.197112s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.197142s, 431232 KB] g=32, 399 evaluated, 122 expanded, 4 reopened
[t=0.21328s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.213315s, 431364 KB] g=32, 489 evaluated, 143 expanded, 4 reopened
[t=0.235284s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.235323s, 431364 KB] g=38, 611 evaluated, 173 expanded, 5 reopened
[t=0.236967s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.236998s, 431364 KB] g=40, 620 evaluated, 175 expanded, 5 reopened
[t=0.23775s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.23778s, 431364 KB] g=41, 624 evaluated, 176 expanded, 5 reopened
[t=0.23998s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.240013s, 431364 KB] g=41, 636 evaluated, 180 expanded, 5 reopened
[t=0.242365s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.242397s, 431364 KB] g=44, 649 evaluated, 184 expanded, 5 reopened
[t=0.243151s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.243186s, 431364 KB] g=45, 653 evaluated, 185 expanded, 5 reopened
[t=0.244112s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.244142s, 431364 KB] g=47, 658 evaluated, 187 expanded, 5 reopened
[t=0.248656s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.24869s, 431364 KB] g=49, 683 evaluated, 195 expanded, 5 reopened
[t=0.262439s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.262474s, 431364 KB] g=51, 760 evaluated, 223 expanded, 5 reopened
[t=0.263059s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.263093s, 431364 KB] g=53, 763 evaluated, 225 expanded, 5 reopened
[t=0.263304s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.263333s, 431364 KB] g=54, 764 evaluated, 226 expanded, 5 reopened
[t=0.264263s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.264292s, 431364 KB] g=55, 769 evaluated, 230 expanded, 5 reopened
[t=0.264872s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.264902s, 431364 KB] g=58, 773 evaluated, 233 expanded, 5 reopened
[t=0.264928s, 431364 KB] Solution found!
[t=0.264955s, 431364 KB] Actual search time: 0.158535s
unstack a e (1)
put-down a (1)
unstack j l (1)
stack j e (1)
unstack h g (1)
put-down h (1)
unstack g f (1)
stack g h (1)
unstack f b (1)
put-down f (1)
pick-up a (1)
stack a f (1)
unstack b k (1)
stack b l (1)
unstack g h (1)
put-down g (1)
unstack k d (1)
stack k b (1)
pick-up h (1)
stack h g (1)
unstack d i (1)
stack d j (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f k (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j d (1)
unstack f k (1)
stack f a (1)
unstack i c (1)
stack i j (1)
unstack k b (1)
stack k f (1)
pick-up e (1)
stack e b (1)
unstack i j (1)
stack i c (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.26498s, 431364 KB] Plan length: 58 step(s).
[t=0.26498s, 431364 KB] Plan cost: 58
[t=0.26498s, 431364 KB] Expanded 234 state(s).
[t=0.26498s, 431364 KB] Reopened 5 state(s).
[t=0.26498s, 431364 KB] Evaluated 773 state(s).
[t=0.26498s, 431364 KB] Evaluations: 773
[t=0.26498s, 431364 KB] Generated 1052 state(s).
[t=0.26498s, 431364 KB] Dead ends: 0 state(s).
[t=0.26498s, 431364 KB] Expanded until last jump: 68 state(s).
[t=0.26498s, 431364 KB] Reopened until last jump: 4 state(s).
[t=0.26498s, 431364 KB] Evaluated until last jump: 187 state(s).
[t=0.26498s, 431364 KB] Generated until last jump: 280 state(s).
[t=0.26498s, 431364 KB] Number of registered states: 773
[t=0.26498s, 431364 KB] Int hash set load factor: 773/1024 = 0.754883
[t=0.26498s, 431364 KB] Int hash set resizes: 10
[t=0.26498s, 431364 KB] Search time: 0.238462s
[t=0.26498s, 431364 KB] Total time: 0.26498s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p82.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6399e-05s, 424928 KB] reading input...
[t=0.0022172s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258695s, 427536 KB] Building successor generator...done!
[t=0.0261492s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261725s, 427536 KB] time for successor generation creation: 0.000166896s
[t=0.0262008s, 427536 KB] Variables: 25
[t=0.0262232s, 427536 KB] FactPairs: 182
[t=0.0262457s, 427536 KB] Bytes per state: 8
[t=0.026445s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981287s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.0981812s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982075s, 430128 KB] f = 138, 1 evaluated, 0 expanded
[t=0.0982342s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.098258s, 430128 KB] pruning method: none
[t=0.116467s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.116528s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117111s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.117142s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118087s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.118119s, 431100 KB] g=2, 11 evaluated, 2 expanded
[t=0.119051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.119081s, 431100 KB] g=3, 16 evaluated, 3 expanded
[t=0.123206s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.12324s, 431100 KB] g=7, 38 evaluated, 7 expanded
[t=0.125975s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.126007s, 431100 KB] g=8, 53 evaluated, 10 expanded
[t=0.12838s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.128415s, 431100 KB] g=11, 66 evaluated, 13 expanded
[t=0.1297s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.129729s, 431100 KB] g=12, 73 evaluated, 14 expanded
[t=0.132948s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.132984s, 431100 KB] g=15, 90 evaluated, 18 expanded
[t=0.137359s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.137394s, 431100 KB] g=18, 114 evaluated, 24 expanded
[t=0.137987s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.138019s, 431100 KB] g=19, 117 evaluated, 25 expanded
[t=0.138593s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.138622s, 431100 KB] g=19, 120 evaluated, 25 expanded
[t=0.138831s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.13886s, 431100 KB] g=19, 121 evaluated, 25 expanded
[t=0.139619s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.139648s, 431100 KB] g=20, 125 evaluated, 26 expanded
[t=0.142761s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.142797s, 431100 KB] g=21, 142 evaluated, 29 expanded
[t=0.165794s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.16583s, 431232 KB] g=23, 269 evaluated, 57 expanded
[t=0.176837s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.176879s, 431232 KB] g=29, 330 evaluated, 71 expanded
[t=0.179264s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.179298s, 431232 KB] g=31, 343 evaluated, 74 expanded
[t=0.180229s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.180258s, 431232 KB] g=32, 348 evaluated, 75 expanded
[t=0.185325s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.185362s, 431232 KB] g=34, 376 evaluated, 84 expanded
[t=0.185953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.185985s, 431232 KB] g=35, 379 evaluated, 85 expanded
[t=0.187651s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.187681s, 431232 KB] g=36, 388 evaluated, 87 expanded
[t=0.192412s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.192446s, 431232 KB] g=39, 414 evaluated, 94 expanded
[t=0.197649s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.197682s, 431364 KB] g=40, 442 evaluated, 101 expanded
[t=0.199717s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.199753s, 431364 KB] g=41, 453 evaluated, 103 expanded
[t=0.202197s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.202232s, 431364 KB] g=43, 466 evaluated, 107 expanded
[t=0.20266s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.202694s, 431364 KB] g=44, 468 evaluated, 108 expanded
[t=0.204394s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.204424s, 431364 KB] g=47, 477 evaluated, 111 expanded
[t=0.204636s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.204664s, 431364 KB] g=47, 478 evaluated, 111 expanded
[t=0.207607s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.207643s, 431364 KB] g=50, 494 evaluated, 116 expanded
[t=0.208042s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.208071s, 431364 KB] g=51, 496 evaluated, 117 expanded
[t=0.211422s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.211458s, 431364 KB] g=55, 514 evaluated, 123 expanded
[t=0.216547s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.216588s, 431364 KB] g=58, 542 evaluated, 133 expanded
[t=0.220886s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.220919s, 431364 KB] g=59, 565 evaluated, 140 expanded
[t=5.42591s, 434228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=5.42596s, 434228 KB] g=59, 29151 evaluated, 17229 expanded, 5341 reopened
[t=5.42637s, 434228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=5.4264s, 434228 KB] g=60, 29153 evaluated, 17230 expanded, 5341 reopened
[t=5.42697s, 434228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=5.427s, 434228 KB] g=61, 29156 evaluated, 17231 expanded, 5341 reopened
[t=5.42777s, 434228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=5.4278s, 434228 KB] g=63, 29160 evaluated, 17235 expanded, 5341 reopened
[t=5.42986s, 434228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=5.4299s, 434228 KB] g=67, 29171 evaluated, 17241 expanded, 5341 reopened
[t=5.43049s, 434228 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=5.43052s, 434228 KB] g=69, 29175 evaluated, 17244 expanded, 5341 reopened
[t=5.43054s, 434228 KB] Solution found!
[t=5.43057s, 434228 KB] Actual search time: 5.33231s
stack i f (1)
unstack d g (1)
stack d e (1)
unstack l h (1)
stack l d (1)
unstack a b (1)
stack a g (1)
pick-up c (1)
stack c b (1)
unstack h j (1)
stack h a (1)
pick-up j (1)
stack j c (1)
unstack l d (1)
put-down l (1)
unstack j c (1)
stack j l (1)
unstack d e (1)
put-down d (1)
unstack i f (1)
stack i c (1)
pick-up e (1)
stack e i (1)
unstack h a (1)
put-down h (1)
unstack a g (1)
stack a e (1)
pick-up h (1)
stack h a (1)
unstack f k (1)
stack f d (1)
pick-up k (1)
stack k j (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack f d (1)
stack f k (1)
unstack e i (1)
stack e d (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up d (1)
stack d i (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
stack c l (1)
pick-up b (1)
stack b i (1)
unstack c l (1)
put-down c (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=5.4306s, 434228 KB] Plan length: 69 step(s).
[t=5.4306s, 434228 KB] Plan cost: 69
[t=5.4306s, 434228 KB] Expanded 17245 state(s).
[t=5.4306s, 434228 KB] Reopened 5341 state(s).
[t=5.4306s, 434228 KB] Evaluated 29175 state(s).
[t=5.4306s, 434228 KB] Evaluations: 29175
[t=5.4306s, 434228 KB] Generated 71362 state(s).
[t=5.4306s, 434228 KB] Dead ends: 0 state(s).
[t=5.4306s, 434228 KB] Expanded until last jump: 0 state(s).
[t=5.4306s, 434228 KB] Reopened until last jump: 0 state(s).
[t=5.4306s, 434228 KB] Evaluated until last jump: 1 state(s).
[t=5.4306s, 434228 KB] Generated until last jump: 0 state(s).
[t=5.4306s, 434228 KB] Number of registered states: 29175
[t=5.4306s, 434228 KB] Int hash set load factor: 29175/65536 = 0.445175
[t=5.4306s, 434228 KB] Int hash set resizes: 16
[t=5.4306s, 434228 KB] Search time: 5.40415s
[t=5.4306s, 434228 KB] Total time: 5.4306s
Solution found.
Peak memory: 434228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p83.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0082e-05s, 424928 KB] reading input...
[t=0.00215519s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261185s, 427536 KB] Building successor generator...done!
[t=0.0263957s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264194s, 427536 KB] time for successor generation creation: 0.000165717s
[t=0.0264483s, 427536 KB] Variables: 25
[t=0.0264709s, 427536 KB] FactPairs: 182
[t=0.0264937s, 427536 KB] Bytes per state: 8
[t=0.0266908s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.108492s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.108554s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.108581s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.108609s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.108634s, 430128 KB] pruning method: none
[t=0.120492s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.120546s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.127066s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.127109s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.129708s, 431100 KB] f = 148, 17 evaluated, 6 expanded
[t=0.130475s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.130507s, 431100 KB] g=3, 21 evaluated, 8 expanded
[t=0.133817s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.13385s, 431100 KB] g=5, 39 evaluated, 13 expanded
[t=0.138992s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.139026s, 431100 KB] g=7, 67 evaluated, 22 expanded
[t=0.145074s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.145111s, 431100 KB] g=13, 100 evaluated, 31 expanded
[t=0.147339s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.147375s, 431100 KB] g=14, 112 evaluated, 33 expanded
[t=0.148864s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.148898s, 431100 KB] g=15, 120 evaluated, 35 expanded
[t=0.152052s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.152088s, 431100 KB] g=17, 137 evaluated, 39 expanded
[t=0.154302s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.154335s, 431100 KB] g=19, 149 evaluated, 41 expanded
[t=0.161868s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.161903s, 431232 KB] g=26, 190 evaluated, 49 expanded
[t=0.233674s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.233717s, 431364 KB] g=36, 584 evaluated, 130 expanded
[t=0.234479s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.234512s, 431364 KB] g=36, 588 evaluated, 130 expanded
[t=0.23492s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.234952s, 431364 KB] g=37, 590 evaluated, 131 expanded
[t=0.239529s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.239572s, 431364 KB] g=39, 615 evaluated, 135 expanded
[t=0.250136s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.250172s, 431364 KB] g=41, 673 evaluated, 146 expanded
[t=0.251855s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.251888s, 431364 KB] g=43, 682 evaluated, 148 expanded
[t=0.258461s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.258496s, 431496 KB] g=48, 718 evaluated, 156 expanded
[t=0.259086s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.259117s, 431496 KB] g=48, 721 evaluated, 156 expanded
[t=0.269012s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.269047s, 431496 KB] g=52, 775 evaluated, 169 expanded
[t=0.271455s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.271489s, 431496 KB] g=52, 788 evaluated, 172 expanded
[t=0.272977s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.273008s, 431496 KB] g=54, 796 evaluated, 174 expanded
[t=0.307515s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.307556s, 431496 KB] g=55, 985 evaluated, 229 expanded
[t=0.309409s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.309444s, 431496 KB] g=58, 995 evaluated, 232 expanded
[t=0.309841s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.309871s, 431496 KB] g=59, 997 evaluated, 233 expanded
[t=0.313462s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.313499s, 431496 KB] g=61, 1016 evaluated, 242 expanded
[t=0.313902s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.313933s, 431496 KB] g=63, 1018 evaluated, 244 expanded
[t=0.318022s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.31806s, 431632 KB] g=65, 1041 evaluated, 258 expanded, 1 reopened
[t=0.318088s, 431632 KB] Solution found!
[t=0.318115s, 431632 KB] Actual search time: 0.209477s
put-down g (1)
unstack b a (1)
put-down b (1)
pick-up a (1)
stack a k (1)
unstack f i (1)
stack f b (1)
unstack i d (1)
put-down i (1)
unstack d e (1)
stack d f (1)
unstack e h (1)
stack e i (1)
unstack d f (1)
put-down d (1)
unstack h j (1)
stack h g (1)
unstack f b (1)
stack f d (1)
unstack e i (1)
put-down e (1)
pick-up j (1)
stack j e (1)
pick-up b (1)
stack b j (1)
unstack a k (1)
stack a h (1)
unstack b j (1)
stack b f (1)
unstack k l (1)
put-down k (1)
unstack l c (1)
put-down l (1)
unstack b f (1)
stack b l (1)
pick-up k (1)
stack k b (1)
unstack j e (1)
stack j i (1)
unstack f d (1)
stack f k (1)
pick-up e (1)
stack e d (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack j i (1)
stack j b (1)
unstack e d (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.31814s, 431632 KB] Plan length: 65 step(s).
[t=0.31814s, 431632 KB] Plan cost: 65
[t=0.31814s, 431632 KB] Expanded 259 state(s).
[t=0.31814s, 431632 KB] Reopened 1 state(s).
[t=0.31814s, 431632 KB] Evaluated 1041 state(s).
[t=0.31814s, 431632 KB] Evaluations: 1041
[t=0.31814s, 431632 KB] Generated 1324 state(s).
[t=0.31814s, 431632 KB] Dead ends: 0 state(s).
[t=0.31814s, 431632 KB] Expanded until last jump: 6 state(s).
[t=0.31814s, 431632 KB] Reopened until last jump: 0 state(s).
[t=0.31814s, 431632 KB] Evaluated until last jump: 17 state(s).
[t=0.31814s, 431632 KB] Generated until last jump: 21 state(s).
[t=0.31814s, 431632 KB] Number of registered states: 1041
[t=0.31814s, 431632 KB] Int hash set load factor: 1041/2048 = 0.508301
[t=0.31814s, 431632 KB] Int hash set resizes: 11
[t=0.31814s, 431632 KB] Search time: 0.29145s
[t=0.31814s, 431632 KB] Total time: 0.31814s
Solution found.
Peak memory: 431632 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p84.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5117e-05s, 424928 KB] reading input...
[t=0.00217985s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259299s, 427536 KB] Building successor generator...done!
[t=0.0262083s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262316s, 427536 KB] time for successor generation creation: 0.00016695s
[t=0.0262604s, 427536 KB] Variables: 25
[t=0.0262831s, 427536 KB] FactPairs: 182
[t=0.026305s, 427536 KB] Bytes per state: 8
[t=0.0264997s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984013s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0984531s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984799s, 430128 KB] f = 133, 1 evaluated, 0 expanded
[t=0.0985074s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0985316s, 430128 KB] pruning method: none
[t=0.116896s, 431100 KB] f = 141, 4 evaluated, 1 expanded
[t=0.117137s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.117168s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.119016s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.119047s, 431100 KB] g=4, 15 evaluated, 6 expanded
[t=0.132668s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.132705s, 431100 KB] g=13, 90 evaluated, 29 expanded
[t=0.133472s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.133503s, 431100 KB] g=14, 94 evaluated, 30 expanded
[t=0.134263s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.134293s, 431100 KB] g=15, 98 evaluated, 31 expanded
[t=0.13505s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.13508s, 431100 KB] g=16, 102 evaluated, 32 expanded
[t=0.135302s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.135336s, 431100 KB] g=16, 103 evaluated, 32 expanded
[t=0.136274s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.136305s, 431100 KB] g=17, 108 evaluated, 33 expanded
[t=0.137425s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.13747s, 431100 KB] g=18, 114 evaluated, 34 expanded
[t=0.138407s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.138437s, 431100 KB] g=19, 119 evaluated, 35 expanded
[t=0.138653s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.138685s, 431100 KB] g=20, 120 evaluated, 36 expanded
[t=0.154615s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.154653s, 431232 KB] g=30, 207 evaluated, 65 expanded
[t=0.155046s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.155075s, 431232 KB] g=30, 209 evaluated, 65 expanded
[t=0.19076s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.190798s, 431232 KB] g=32, 403 evaluated, 159 expanded, 37 reopened
[t=0.191592s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.191627s, 431232 KB] g=33, 407 evaluated, 160 expanded, 37 reopened
[t=0.194199s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.19423s, 431364 KB] g=36, 421 evaluated, 163 expanded, 37 reopened
[t=0.194995s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.195027s, 431364 KB] g=37, 425 evaluated, 164 expanded, 37 reopened
[t=0.198524s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.198559s, 431364 KB] g=39, 444 evaluated, 168 expanded, 37 reopened
[t=0.198778s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.198807s, 431364 KB] g=40, 445 evaluated, 169 expanded, 37 reopened
[t=0.199394s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.199427s, 431364 KB] g=40, 448 evaluated, 169 expanded, 37 reopened
[t=0.201103s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.201135s, 431364 KB] g=42, 457 evaluated, 172 expanded, 37 reopened
[t=0.20226s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.202294s, 431364 KB] g=43, 463 evaluated, 174 expanded, 37 reopened
[t=0.203618s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.203654s, 431364 KB] g=45, 470 evaluated, 177 expanded, 37 reopened
[t=0.208794s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.20883s, 431364 KB] g=49, 498 evaluated, 188 expanded, 37 reopened
[t=0.210683s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.210721s, 431364 KB] g=53, 508 evaluated, 193 expanded, 37 reopened
[t=0.21132s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.211352s, 431364 KB] g=53, 511 evaluated, 196 expanded, 37 reopened
[t=1.96284s, 432220 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=1.96289s, 432220 KB] g=54, 10108 evaluated, 5573 expanded, 1262 reopened
[t=1.96292s, 432220 KB] Solution found!
[t=1.96294s, 432220 KB] Actual search time: 1.86441s
unstack i g (1)
stack i c (1)
unstack f j (1)
put-down f (1)
unstack i c (1)
stack i j (1)
unstack c d (1)
put-down c (1)
unstack i j (1)
stack i c (1)
unstack d b (1)
stack d j (1)
unstack b e (1)
stack b d (1)
unstack g a (1)
stack g b (1)
unstack e h (1)
stack e i (1)
pick-up h (1)
stack h a (1)
unstack g b (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack b d (1)
put-down b (1)
pick-up f (1)
stack f d (1)
unstack e i (1)
stack e b (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=1.96297s, 432220 KB] Plan length: 54 step(s).
[t=1.96297s, 432220 KB] Plan cost: 54
[t=1.96297s, 432220 KB] Expanded 5574 state(s).
[t=1.96297s, 432220 KB] Reopened 1262 state(s).
[t=1.96297s, 432220 KB] Evaluated 10108 state(s).
[t=1.96297s, 432220 KB] Evaluations: 10108
[t=1.96297s, 432220 KB] Generated 22661 state(s).
[t=1.96297s, 432220 KB] Dead ends: 0 state(s).
[t=1.96297s, 432220 KB] Expanded until last jump: 1 state(s).
[t=1.96297s, 432220 KB] Reopened until last jump: 0 state(s).
[t=1.96297s, 432220 KB] Evaluated until last jump: 4 state(s).
[t=1.96297s, 432220 KB] Generated until last jump: 3 state(s).
[t=1.96297s, 432220 KB] Number of registered states: 10108
[t=1.96297s, 432220 KB] Int hash set load factor: 10108/16384 = 0.616943
[t=1.96297s, 432220 KB] Int hash set resizes: 14
[t=1.96297s, 432220 KB] Search time: 1.93647s
[t=1.96297s, 432220 KB] Total time: 1.96297s
Solution found.
Peak memory: 432220 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p85.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6089e-05s, 424928 KB] reading input...
[t=0.00213449s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257526s, 427536 KB] Building successor generator...done!
[t=0.0260291s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260521s, 427536 KB] time for successor generation creation: 0.000164798s
[t=0.0260805s, 427536 KB] Variables: 25
[t=0.0261037s, 427536 KB] FactPairs: 182
[t=0.0261258s, 427536 KB] Bytes per state: 8
[t=0.026317s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107659s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.107714s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.10774s, 430128 KB] f = 104, 1 evaluated, 0 expanded
[t=0.107768s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.107792s, 430128 KB] pruning method: none
[t=0.126544s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.126598s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.128264s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.128365s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.131521s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.131555s, 431100 KB] g=3, 16 evaluated, 4 expanded
[t=0.134113s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.134144s, 431100 KB] g=6, 30 evaluated, 8 expanded
[t=0.137434s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.13748s, 431100 KB] g=8, 48 evaluated, 11 expanded
[t=0.138786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.13882s, 431100 KB] g=9, 55 evaluated, 13 expanded
[t=0.146982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.147021s, 431100 KB] g=13, 100 evaluated, 23 expanded
[t=0.150306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.150338s, 431100 KB] g=16, 118 evaluated, 28 expanded
[t=0.151143s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.151187s, 431100 KB] g=17, 122 evaluated, 29 expanded
[t=0.156321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.156355s, 431100 KB] g=21, 150 evaluated, 37 expanded
[t=0.156569s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.156599s, 431100 KB] g=22, 151 evaluated, 38 expanded
[t=0.157538s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.157571s, 431100 KB] g=23, 156 evaluated, 40 expanded
[t=0.15797s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.158001s, 431100 KB] g=24, 158 evaluated, 41 expanded
[t=0.159625s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.159726s, 431100 KB] g=26, 163 evaluated, 43 expanded
[t=0.163658s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163694s, 431232 KB] g=29, 173 evaluated, 47 expanded
[t=0.167357s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.167394s, 431232 KB] g=31, 193 evaluated, 53 expanded
[t=0.168879s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.168912s, 431232 KB] g=34, 201 evaluated, 56 expanded
[t=0.169129s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.169159s, 431232 KB] g=35, 202 evaluated, 57 expanded
[t=0.170645s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.17068s, 431232 KB] g=37, 210 evaluated, 60 expanded
[t=0.171077s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.171107s, 431232 KB] g=38, 212 evaluated, 61 expanded
[t=0.171504s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.171541s, 431232 KB] g=39, 214 evaluated, 62 expanded
[t=0.171572s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.171596s, 431232 KB] g=40, 215 evaluated, 63 expanded
[t=0.171622s, 431232 KB] Solution found!
[t=0.171647s, 431232 KB] Actual search time: 0.0638509s
unstack l b (1)
put-down l (1)
unstack j f (1)
stack j b (1)
unstack a g (1)
stack a f (1)
unstack h k (1)
stack h g (1)
unstack j b (1)
put-down j (1)
pick-up k (1)
stack k l (1)
pick-up j (1)
stack j b (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e j (1)
unstack k l (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.171672s, 431232 KB] Plan length: 40 step(s).
[t=0.171672s, 431232 KB] Plan cost: 40
[t=0.171672s, 431232 KB] Expanded 64 state(s).
[t=0.171672s, 431232 KB] Reopened 0 state(s).
[t=0.171672s, 431232 KB] Evaluated 215 state(s).
[t=0.171672s, 431232 KB] Evaluations: 215
[t=0.171672s, 431232 KB] Generated 277 state(s).
[t=0.171672s, 431232 KB] Dead ends: 0 state(s).
[t=0.171672s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.171672s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.171672s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.171672s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.171672s, 431232 KB] Number of registered states: 215
[t=0.171672s, 431232 KB] Int hash set load factor: 215/256 = 0.839844
[t=0.171672s, 431232 KB] Int hash set resizes: 8
[t=0.171672s, 431232 KB] Search time: 0.145355s
[t=0.171672s, 431232 KB] Total time: 0.171672s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p86.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6403e-05s, 424928 KB] reading input...
[t=0.0021484s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261212s, 427536 KB] Building successor generator...done!
[t=0.0264181s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264423s, 427536 KB] time for successor generation creation: 0.000167735s
[t=0.0264721s, 427536 KB] Variables: 25
[t=0.0264957s, 427536 KB] FactPairs: 182
[t=0.0265187s, 427536 KB] Bytes per state: 8
[t=0.0267164s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0999398s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0999919s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.100019s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.100047s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.100072s, 430128 KB] pruning method: none
[t=0.11204s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.11209s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118808s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.118851s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.120183s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.120215s, 431100 KB] g=2, 11 evaluated, 2 expanded
[t=0.120997s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.121028s, 431100 KB] g=3, 15 evaluated, 3 expanded
[t=0.131835s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.131872s, 431100 KB] g=8, 73 evaluated, 13 expanded
[t=0.137848s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.137885s, 431100 KB] g=12, 105 evaluated, 18 expanded
[t=0.14035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.140396s, 431100 KB] g=14, 118 evaluated, 20 expanded
[t=0.142306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.142341s, 431100 KB] g=16, 128 evaluated, 22 expanded
[t=0.142753s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.142785s, 431100 KB] g=16, 130 evaluated, 22 expanded
[t=0.158452s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.158493s, 431232 KB] g=21, 214 evaluated, 42 expanded
[t=0.15946s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.159494s, 431232 KB] g=22, 219 evaluated, 43 expanded
[t=0.161568s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.161602s, 431232 KB] g=25, 230 evaluated, 46 expanded
[t=0.165351s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.165386s, 431232 KB] g=29, 250 evaluated, 52 expanded
[t=0.166179s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.166211s, 431232 KB] g=30, 254 evaluated, 53 expanded
[t=0.182237s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.182275s, 431232 KB] g=32, 340 evaluated, 80 expanded
[t=0.183609s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.183643s, 431232 KB] g=34, 347 evaluated, 82 expanded
[t=0.184231s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.184261s, 431232 KB] g=35, 350 evaluated, 83 expanded
[t=0.185029s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.185063s, 431232 KB] g=36, 354 evaluated, 84 expanded
[t=0.19086s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.190899s, 431232 KB] g=39, 385 evaluated, 96 expanded
[t=0.191123s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.191153s, 431232 KB] g=40, 386 evaluated, 97 expanded
[t=0.191559s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.191589s, 431232 KB] g=41, 388 evaluated, 98 expanded
[t=0.192374s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.192404s, 431232 KB] g=44, 392 evaluated, 101 expanded
[t=0.192434s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.192466s, 431232 KB] g=45, 393 evaluated, 102 expanded
[t=0.192493s, 431232 KB] Solution found!
[t=0.192519s, 431232 KB] Actual search time: 0.0924427s
stack h d (1)
unstack e g (1)
stack e l (1)
unstack g k (1)
put-down g (1)
unstack j f (1)
stack j b (1)
unstack h d (1)
stack h g (1)
unstack e l (1)
stack e d (1)
pick-up a (1)
stack a h (1)
pick-up f (1)
stack f k (1)
unstack e d (1)
stack e j (1)
pick-up l (1)
stack l d (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack i c (1)
put-down i (1)
unstack e j (1)
stack e k (1)
unstack l d (1)
stack l c (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up i (1)
stack i c (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.192544s, 431232 KB] Plan length: 45 step(s).
[t=0.192544s, 431232 KB] Plan cost: 45
[t=0.192544s, 431232 KB] Expanded 103 state(s).
[t=0.192544s, 431232 KB] Reopened 0 state(s).
[t=0.192544s, 431232 KB] Evaluated 393 state(s).
[t=0.192544s, 431232 KB] Evaluations: 393
[t=0.192544s, 431232 KB] Generated 500 state(s).
[t=0.192544s, 431232 KB] Dead ends: 0 state(s).
[t=0.192544s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.192544s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.192544s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.192544s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.192544s, 431232 KB] Number of registered states: 393
[t=0.192544s, 431232 KB] Int hash set load factor: 393/512 = 0.767578
[t=0.192544s, 431232 KB] Int hash set resizes: 9
[t=0.192544s, 431232 KB] Search time: 0.165828s
[t=0.192544s, 431232 KB] Total time: 0.192544s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p87.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6393e-05s, 424928 KB] reading input...
[t=0.00217435s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261893s, 427536 KB] Building successor generator...done!
[t=0.0264714s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264948s, 427536 KB] time for successor generation creation: 0.000170222s
[t=0.0265234s, 427536 KB] Variables: 25
[t=0.0265456s, 427536 KB] FactPairs: 182
[t=0.0265678s, 427536 KB] Bytes per state: 8
[t=0.0267643s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985453s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0985989s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0986252s, 430128 KB] f = 118, 1 evaluated, 0 expanded
[t=0.0986524s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0986766s, 430128 KB] pruning method: none
[t=0.110475s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.110526s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117126s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.11717s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118483s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.118515s, 431100 KB] g=4, 11 evaluated, 5 expanded
[t=0.121438s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.121472s, 431100 KB] g=7, 27 evaluated, 11 expanded
[t=0.135007s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.135043s, 431100 KB] g=16, 102 evaluated, 29 expanded
[t=0.135437s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.135467s, 431100 KB] g=17, 104 evaluated, 30 expanded
[t=0.143622s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.143657s, 431100 KB] g=21, 149 evaluated, 39 expanded
[t=0.363099s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.363156s, 431632 KB] g=33, 1362 evaluated, 571 expanded, 192 reopened
[t=0.36499s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.365028s, 431632 KB] g=35, 1372 evaluated, 573 expanded, 192 reopened
[t=0.365595s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.365624s, 431632 KB] g=35, 1375 evaluated, 573 expanded, 192 reopened
[t=0.366547s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.36658s, 431632 KB] g=36, 1380 evaluated, 574 expanded, 192 reopened
[t=0.367329s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.367362s, 431632 KB] g=37, 1384 evaluated, 575 expanded, 192 reopened
[t=0.369188s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.369222s, 431632 KB] g=39, 1394 evaluated, 577 expanded, 192 reopened
[t=0.372301s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.372334s, 431632 KB] g=42, 1411 evaluated, 581 expanded, 192 reopened
[t=0.377221s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.377256s, 431632 KB] g=43, 1438 evaluated, 588 expanded, 192 reopened
[t=0.377646s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.377681s, 431764 KB] g=43, 1440 evaluated, 588 expanded, 192 reopened
[t=0.379677s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.379708s, 431764 KB] g=44, 1451 evaluated, 590 expanded, 192 reopened
[t=0.380284s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.380317s, 431764 KB] g=45, 1454 evaluated, 591 expanded, 192 reopened
[t=0.381258s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.381291s, 431764 KB] g=46, 1459 evaluated, 592 expanded, 192 reopened
[t=0.382574s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.382605s, 431764 KB] g=47, 1466 evaluated, 593 expanded, 192 reopened
[t=0.385165s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.385203s, 431764 KB] g=50, 1480 evaluated, 597 expanded, 192 reopened
[t=0.385597s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.385626s, 431764 KB] g=51, 1482 evaluated, 598 expanded, 192 reopened
[t=0.387099s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.387136s, 431764 KB] g=52, 1490 evaluated, 601 expanded, 192 reopened
[t=0.389716s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.389753s, 431764 KB] g=56, 1504 evaluated, 607 expanded, 192 reopened
[t=0.39756s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.397596s, 431764 KB] g=60, 1547 evaluated, 627 expanded, 192 reopened
[t=0.416471s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.416509s, 431764 KB] g=56, 1652 evaluated, 666 expanded, 195 reopened
[t=0.427465s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.427504s, 431764 KB] g=58, 1713 evaluated, 685 expanded, 195 reopened
[t=0.430954s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.430988s, 431764 KB] g=57, 1732 evaluated, 693 expanded, 195 reopened
[t=0.431739s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.43177s, 431764 KB] g=59, 1736 evaluated, 695 expanded, 195 reopened
[t=0.433425s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.433458s, 431764 KB] g=60, 1745 evaluated, 700 expanded, 195 reopened
[t=0.433849s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.433881s, 431764 KB] g=61, 1747 evaluated, 701 expanded, 195 reopened
[t=0.434279s, 431764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.434308s, 431764 KB] g=63, 1750 evaluated, 703 expanded, 195 reopened
[t=0.434335s, 431764 KB] Solution found!
[t=0.434361s, 431764 KB] Actual search time: 0.335679s
put-down e (1)
unstack h g (1)
stack h e (1)
unstack g a (1)
put-down g (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b d (1)
unstack h e (1)
stack h g (1)
pick-up c (1)
stack c b (1)
pick-up e (1)
stack e i (1)
unstack h g (1)
stack h e (1)
unstack a k (1)
put-down a (1)
unstack h e (1)
stack h g (1)
unstack k f (1)
stack k e (1)
unstack f l (1)
stack f c (1)
unstack l j (1)
put-down l (1)
unstack f c (1)
stack f j (1)
unstack k e (1)
stack k l (1)
unstack f j (1)
stack f e (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e i (1)
put-down e (1)
unstack k l (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b c (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.434385s, 431764 KB] Plan length: 63 step(s).
[t=0.434385s, 431764 KB] Plan cost: 63
[t=0.434385s, 431764 KB] Expanded 704 state(s).
[t=0.434385s, 431764 KB] Reopened 195 state(s).
[t=0.434385s, 431764 KB] Evaluated 1750 state(s).
[t=0.434385s, 431764 KB] Evaluations: 1750
[t=0.434385s, 431764 KB] Generated 3388 state(s).
[t=0.434385s, 431764 KB] Dead ends: 0 state(s).
[t=0.434385s, 431764 KB] Expanded until last jump: 0 state(s).
[t=0.434385s, 431764 KB] Reopened until last jump: 0 state(s).
[t=0.434385s, 431764 KB] Evaluated until last jump: 1 state(s).
[t=0.434385s, 431764 KB] Generated until last jump: 0 state(s).
[t=0.434385s, 431764 KB] Number of registered states: 1750
[t=0.434385s, 431764 KB] Int hash set load factor: 1750/2048 = 0.854492
[t=0.434385s, 431764 KB] Int hash set resizes: 11
[t=0.434385s, 431764 KB] Search time: 0.407621s
[t=0.434385s, 431764 KB] Total time: 0.434385s
Solution found.
Peak memory: 431764 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p88.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6675e-05s, 424928 KB] reading input...
[t=0.00215802s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257001s, 427536 KB] Building successor generator...done!
[t=0.0259872s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260107s, 427536 KB] time for successor generation creation: 0.000165251s
[t=0.026039s, 427536 KB] Variables: 25
[t=0.0260614s, 427536 KB] FactPairs: 182
[t=0.0260833s, 427536 KB] Bytes per state: 8
[t=0.0262772s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0975261s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0975775s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0976027s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0976302s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0976535s, 430128 KB] pruning method: none
[t=0.109446s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.109498s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116672s, 431100 KB] f = 147, 7 evaluated, 2 expanded
[t=0.117078s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.117109s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.118574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.118606s, 431100 KB] g=3, 17 evaluated, 6 expanded
[t=0.121116s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.121146s, 431100 KB] g=3, 31 evaluated, 10 expanded
[t=0.121534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.121564s, 431100 KB] g=3, 33 evaluated, 10 expanded
[t=0.12339s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.123422s, 431100 KB] g=5, 43 evaluated, 13 expanded
[t=0.124338s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.124368s, 431100 KB] g=6, 48 evaluated, 14 expanded
[t=0.127587s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 126
[t=0.127619s, 431100 KB] g=6, 66 evaluated, 18 expanded
[t=0.134399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.134432s, 431100 KB] g=9, 104 evaluated, 26 expanded
[t=0.136426s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.136461s, 431100 KB] g=11, 115 evaluated, 29 expanded
[t=0.139188s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.139223s, 431100 KB] g=13, 130 evaluated, 31 expanded
[t=0.140851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.140881s, 431100 KB] g=14, 139 evaluated, 32 expanded
[t=0.141621s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.141662s, 431100 KB] g=15, 143 evaluated, 33 expanded
[t=0.142409s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.142439s, 431100 KB] g=16, 147 evaluated, 34 expanded
[t=0.142831s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.142861s, 431100 KB] g=16, 149 evaluated, 34 expanded
[t=0.144496s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.144526s, 431100 KB] g=17, 158 evaluated, 35 expanded
[t=0.14509s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.145125s, 431232 KB] g=18, 161 evaluated, 36 expanded
[t=0.145693s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.145725s, 431232 KB] g=19, 164 evaluated, 37 expanded
[t=0.149317s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.149352s, 431232 KB] g=21, 184 evaluated, 41 expanded
[t=0.150095s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.150124s, 431232 KB] g=22, 188 evaluated, 42 expanded
[t=0.150704s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.15074s, 431232 KB] g=23, 191 evaluated, 43 expanded
[t=0.158441s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.158473s, 431232 KB] g=29, 234 evaluated, 56 expanded
[t=0.160648s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.160683s, 431232 KB] g=32, 246 evaluated, 61 expanded
[t=0.162886s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.162921s, 431232 KB] g=31, 258 evaluated, 65 expanded
[t=0.163673s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.163702s, 431232 KB] g=33, 262 evaluated, 67 expanded
[t=0.167662s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.167697s, 431232 KB] g=38, 284 evaluated, 75 expanded
[t=0.168087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.168117s, 431232 KB] g=39, 286 evaluated, 76 expanded
[t=0.184981s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.185018s, 431232 KB] g=42, 381 evaluated, 104 expanded
[t=0.189483s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.189521s, 431232 KB] g=44, 406 evaluated, 110 expanded
[t=0.18973s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.189759s, 431232 KB] g=44, 407 evaluated, 110 expanded
[t=0.196222s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.196257s, 431364 KB] g=48, 443 evaluated, 122 expanded
[t=0.196821s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.196854s, 431364 KB] g=49, 446 evaluated, 123 expanded
[t=0.197245s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.197274s, 431364 KB] g=50, 448 evaluated, 124 expanded
[t=0.201756s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.201789s, 431364 KB] g=54, 473 evaluated, 131 expanded
[t=0.203083s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.203115s, 431364 KB] g=56, 480 evaluated, 133 expanded
[t=0.2035s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.203528s, 431364 KB] g=56, 482 evaluated, 133 expanded
[t=0.204801s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.204834s, 431364 KB] g=57, 489 evaluated, 135 expanded
[t=0.207183s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.207219s, 431364 KB] g=59, 502 evaluated, 140 expanded
[t=0.207433s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.207464s, 431364 KB] g=60, 503 evaluated, 141 expanded
[t=0.207854s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.207883s, 431364 KB] g=61, 505 evaluated, 142 expanded
[t=0.208317s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.208352s, 431364 KB] g=63, 508 evaluated, 144 expanded
[t=0.208379s, 431364 KB] Solution found!
[t=0.208404s, 431364 KB] Actual search time: 0.110747s
put-down k (1)
unstack b d (1)
put-down b (1)
unstack e i (1)
stack e k (1)
unstack j g (1)
stack j e (1)
unstack d a (1)
put-down d (1)
unstack g f (1)
put-down g (1)
unstack a l (1)
stack a f (1)
unstack l h (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up h (1)
stack h g (1)
unstack i c (1)
stack i j (1)
pick-up c (1)
stack c b (1)
unstack i j (1)
stack i c (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e f (1)
unstack i c (1)
put-down i (1)
pick-up k (1)
stack k j (1)
unstack c b (1)
put-down c (1)
unstack e f (1)
stack e b (1)
unstack k j (1)
stack k f (1)
pick-up j (1)
stack j i (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.208429s, 431364 KB] Plan length: 63 step(s).
[t=0.208429s, 431364 KB] Plan cost: 63
[t=0.208429s, 431364 KB] Expanded 145 state(s).
[t=0.208429s, 431364 KB] Reopened 0 state(s).
[t=0.208429s, 431364 KB] Evaluated 508 state(s).
[t=0.208429s, 431364 KB] Evaluations: 508
[t=0.208429s, 431364 KB] Generated 657 state(s).
[t=0.208429s, 431364 KB] Dead ends: 0 state(s).
[t=0.208429s, 431364 KB] Expanded until last jump: 2 state(s).
[t=0.208429s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.208429s, 431364 KB] Evaluated until last jump: 7 state(s).
[t=0.208429s, 431364 KB] Generated until last jump: 7 state(s).
[t=0.208429s, 431364 KB] Number of registered states: 508
[t=0.208429s, 431364 KB] Int hash set load factor: 508/1024 = 0.496094
[t=0.208429s, 431364 KB] Int hash set resizes: 10
[t=0.208429s, 431364 KB] Search time: 0.182152s
[t=0.208429s, 431364 KB] Total time: 0.208429s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p89.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8289e-05s, 424928 KB] reading input...
[t=0.00216267s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259037s, 427536 KB] Building successor generator...done!
[t=0.026183s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026207s, 427536 KB] time for successor generation creation: 0.000165524s
[t=0.0262359s, 427536 KB] Variables: 25
[t=0.0262594s, 427536 KB] FactPairs: 182
[t=0.0262826s, 427536 KB] Bytes per state: 8
[t=0.0264793s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988202s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0988726s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988991s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0989275s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0989523s, 430128 KB] pruning method: none
[t=0.110796s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.110849s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117699s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.117743s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.119619s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.119651s, 431100 KB] g=7, 15 evaluated, 8 expanded
[t=0.121154s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.121186s, 431100 KB] g=9, 23 evaluated, 11 expanded
[t=0.121771s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.121801s, 431100 KB] g=10, 26 evaluated, 12 expanded
[t=0.123114s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.123145s, 431100 KB] g=12, 33 evaluated, 14 expanded
[t=0.12411s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.124143s, 431100 KB] g=11, 38 evaluated, 16 expanded
[t=0.136659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.136696s, 431100 KB] g=16, 106 evaluated, 35 expanded
[t=0.137827s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.137858s, 431100 KB] g=17, 112 evaluated, 36 expanded
[t=0.141581s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.141626s, 431100 KB] g=20, 132 evaluated, 42 expanded
[t=0.159289s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.159326s, 431232 KB] g=29, 227 evaluated, 66 expanded
[t=0.175358s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.175397s, 431232 KB] g=33, 313 evaluated, 87 expanded
[t=0.175805s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.175836s, 431232 KB] g=33, 315 evaluated, 87 expanded
[t=0.178642s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.178674s, 431232 KB] g=35, 330 evaluated, 90 expanded
[t=0.187947s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.187988s, 431364 KB] g=36, 380 evaluated, 100 expanded
[t=0.194312s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.19435s, 431364 KB] g=39, 414 evaluated, 105 expanded
[t=0.197739s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.197776s, 431364 KB] g=39, 432 evaluated, 109 expanded
[t=0.198737s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.198768s, 431364 KB] g=40, 437 evaluated, 110 expanded
[t=0.210132s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.210171s, 431364 KB] g=42, 498 evaluated, 125 expanded, 2 reopened
[t=0.211137s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.211168s, 431364 KB] g=43, 503 evaluated, 126 expanded, 2 reopened
[t=0.215706s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.215742s, 431364 KB] g=46, 527 evaluated, 130 expanded, 2 reopened
[t=0.232014s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.232053s, 431496 KB] g=50, 615 evaluated, 148 expanded, 2 reopened
[t=0.233744s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.233778s, 431496 KB] g=51, 624 evaluated, 149 expanded, 2 reopened
[t=0.234737s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.234771s, 431496 KB] g=52, 629 evaluated, 150 expanded, 2 reopened
[t=0.240933s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.240969s, 431496 KB] g=55, 662 evaluated, 156 expanded, 2 reopened
[t=0.24436s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.2444s, 431496 KB] g=57, 680 evaluated, 160 expanded, 2 reopened
[t=0.246101s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.246133s, 431496 KB] g=59, 689 evaluated, 162 expanded, 2 reopened
[t=0.259867s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.259915s, 431496 KB] g=60, 763 evaluated, 186 expanded, 2 reopened
[t=0.260743s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.260776s, 431496 KB] g=61, 767 evaluated, 187 expanded, 2 reopened
[t=0.261578s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.261608s, 431496 KB] g=63, 771 evaluated, 189 expanded, 2 reopened
[t=0.266538s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.266576s, 431496 KB] g=65, 797 evaluated, 210 expanded, 13 reopened
[t=0.266793s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.266822s, 431496 KB] g=65, 798 evaluated, 210 expanded, 13 reopened
[t=0.267037s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.267066s, 431496 KB] g=65, 799 evaluated, 210 expanded, 13 reopened
[t=0.267652s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.267682s, 431496 KB] g=66, 802 evaluated, 211 expanded, 13 reopened
[t=0.268932s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.26897s, 431496 KB] g=66, 808 evaluated, 214 expanded, 13 reopened
[t=0.271239s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.271274s, 431496 KB] g=70, 820 evaluated, 218 expanded, 13 reopened
[t=0.275192s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.275231s, 431496 KB] g=72, 841 evaluated, 228 expanded, 13 reopened
[t=0.275845s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.275878s, 431496 KB] g=74, 845 evaluated, 231 expanded, 13 reopened
[t=0.275906s, 431496 KB] Solution found!
[t=0.275934s, 431496 KB] Actual search time: 0.176978s
unstack a j (1)
stack a f (1)
unstack j e (1)
stack j a (1)
unstack e l (1)
put-down e (1)
unstack l h (1)
put-down l (1)
unstack j a (1)
stack j e (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
put-down f (1)
unstack a h (1)
stack a k (1)
pick-up f (1)
stack f j (1)
unstack h g (1)
stack h a (1)
unstack f j (1)
put-down f (1)
unstack g b (1)
stack g f (1)
unstack h a (1)
stack h j (1)
unstack b d (1)
stack b l (1)
unstack h j (1)
stack h g (1)
unstack d i (1)
put-down d (1)
unstack h g (1)
stack h a (1)
unstack g f (1)
put-down g (1)
pick-up f (1)
stack f d (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
unstack h a (1)
stack h g (1)
unstack f d (1)
stack f i (1)
unstack a k (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack j e (1)
put-down j (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up d (1)
stack d i (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.275959s, 431496 KB] Plan length: 74 step(s).
[t=0.275959s, 431496 KB] Plan cost: 74
[t=0.275959s, 431496 KB] Expanded 232 state(s).
[t=0.275959s, 431496 KB] Reopened 13 state(s).
[t=0.275959s, 431496 KB] Evaluated 845 state(s).
[t=0.275959s, 431496 KB] Evaluations: 845
[t=0.275959s, 431496 KB] Generated 1139 state(s).
[t=0.275959s, 431496 KB] Dead ends: 0 state(s).
[t=0.275959s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.275959s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.275959s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.275959s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.275959s, 431496 KB] Number of registered states: 845
[t=0.275959s, 431496 KB] Int hash set load factor: 845/1024 = 0.825195
[t=0.275959s, 431496 KB] Int hash set resizes: 10
[t=0.275959s, 431496 KB] Search time: 0.24948s
[t=0.275959s, 431496 KB] Total time: 0.275959s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p90.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5301e-05s, 424928 KB] reading input...
[t=0.00220233s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257867s, 427536 KB] Building successor generator...done!
[t=0.0260697s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260927s, 427536 KB] time for successor generation creation: 0.000170081s
[t=0.0261203s, 427536 KB] Variables: 25
[t=0.0261424s, 427536 KB] FactPairs: 182
[t=0.0261638s, 427536 KB] Bytes per state: 8
[t=0.0263596s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977663s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.0978205s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978464s, 430128 KB] f = 135, 1 evaluated, 0 expanded
[t=0.0978733s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.0978976s, 430128 KB] pruning method: none
[t=0.109753s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.109802s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116257s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.1163s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117224s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.117257s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.117466s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.117496s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.121251s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.121285s, 431100 KB] g=4, 30 evaluated, 7 expanded
[t=0.123815s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.123848s, 431100 KB] g=7, 44 evaluated, 10 expanded
[t=0.124938s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.124969s, 431100 KB] g=8, 50 evaluated, 11 expanded
[t=0.126773s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.126808s, 431100 KB] g=10, 60 evaluated, 14 expanded
[t=0.127746s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.127793s, 431100 KB] g=11, 65 evaluated, 15 expanded
[t=0.131372s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.131406s, 431100 KB] g=14, 85 evaluated, 18 expanded
[t=0.132678s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.132711s, 431100 KB] g=15, 92 evaluated, 19 expanded
[t=0.132918s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.132948s, 431100 KB] g=15, 93 evaluated, 19 expanded
[t=0.133338s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.133371s, 431100 KB] g=16, 95 evaluated, 20 expanded
[t=0.134636s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.134667s, 431100 KB] g=17, 102 evaluated, 21 expanded
[t=0.134875s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.134909s, 431100 KB] g=17, 103 evaluated, 21 expanded
[t=0.136897s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.13693s, 431100 KB] g=19, 114 evaluated, 23 expanded
[t=0.137845s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.137875s, 431100 KB] g=20, 119 evaluated, 24 expanded
[t=0.138261s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.138293s, 431100 KB] g=20, 121 evaluated, 24 expanded
[t=0.138857s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.138898s, 431100 KB] g=21, 124 evaluated, 25 expanded
[t=0.139107s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.139136s, 431100 KB] g=21, 125 evaluated, 25 expanded
[t=0.140775s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.140809s, 431100 KB] g=23, 134 evaluated, 27 expanded
[t=0.141552s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.141582s, 431100 KB] g=24, 138 evaluated, 28 expanded
[t=0.143582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.143621s, 431232 KB] g=26, 149 evaluated, 31 expanded
[t=0.147746s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.147779s, 431232 KB] g=28, 172 evaluated, 36 expanded
[t=0.1503s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.150338s, 431232 KB] g=29, 186 evaluated, 39 expanded
[t=0.174694s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.174734s, 431232 KB] g=26, 323 evaluated, 77 expanded, 3 reopened
[t=0.175145s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.175178s, 431232 KB] g=27, 325 evaluated, 78 expanded, 3 reopened
[t=0.175565s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.175595s, 431232 KB] g=28, 327 evaluated, 79 expanded, 3 reopened
[t=0.176334s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.176364s, 431232 KB] g=29, 331 evaluated, 81 expanded, 3 reopened
[t=0.176927s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.176957s, 431232 KB] g=30, 334 evaluated, 82 expanded, 3 reopened
[t=0.177166s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.177194s, 431232 KB] g=30, 335 evaluated, 82 expanded, 3 reopened
[t=0.181653s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.18169s, 431232 KB] g=35, 360 evaluated, 89 expanded, 3 reopened
[t=0.1858s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.185835s, 431232 KB] g=40, 383 evaluated, 98 expanded, 3 reopened
[t=0.20042s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.200459s, 431364 KB] g=37, 465 evaluated, 131 expanded, 3 reopened
[t=0.212984s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.21302s, 431364 KB] g=38, 535 evaluated, 160 expanded, 3 reopened
[t=0.213416s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.213445s, 431364 KB] g=40, 537 evaluated, 162 expanded, 3 reopened
[t=0.214017s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.21405s, 431364 KB] g=42, 540 evaluated, 164 expanded, 3 reopened
[t=0.214441s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.214471s, 431364 KB] g=43, 542 evaluated, 165 expanded, 3 reopened
[t=0.217025s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.217058s, 431364 KB] g=47, 556 evaluated, 174 expanded, 3 reopened
[t=0.233853s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.233892s, 431364 KB] g=45, 650 evaluated, 225 expanded, 7 reopened
[t=0.233924s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.233954s, 431364 KB] g=46, 651 evaluated, 226 expanded, 7 reopened
[t=0.23398s, 431364 KB] Solution found!
[t=0.234006s, 431364 KB] Actual search time: 0.136104s
unstack b k (1)
put-down b (1)
unstack h d (1)
put-down h (1)
unstack d i (1)
stack d j (1)
pick-up h (1)
stack h k (1)
unstack g a (1)
put-down g (1)
unstack a l (1)
put-down a (1)
unstack l f (1)
stack l d (1)
unstack h k (1)
stack h g (1)
pick-up b (1)
stack b l (1)
pick-up a (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.234029s, 431364 KB] Plan length: 46 step(s).
[t=0.234029s, 431364 KB] Plan cost: 46
[t=0.234029s, 431364 KB] Expanded 227 state(s).
[t=0.234029s, 431364 KB] Reopened 7 state(s).
[t=0.234029s, 431364 KB] Evaluated 651 state(s).
[t=0.234029s, 431364 KB] Evaluations: 651
[t=0.234029s, 431364 KB] Generated 937 state(s).
[t=0.234029s, 431364 KB] Dead ends: 0 state(s).
[t=0.234029s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.234029s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.234029s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.234029s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.234029s, 431364 KB] Number of registered states: 651
[t=0.234029s, 431364 KB] Int hash set load factor: 651/1024 = 0.635742
[t=0.234029s, 431364 KB] Int hash set resizes: 10
[t=0.234029s, 431364 KB] Search time: 0.20767s
[t=0.234029s, 431364 KB] Total time: 0.234029s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p91.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5941e-05s, 424928 KB] reading input...
[t=0.00217043s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025868s, 427536 KB] Building successor generator...done!
[t=0.0261667s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261904s, 427536 KB] time for successor generation creation: 0.000165997s
[t=0.026219s, 427536 KB] Variables: 25
[t=0.0262418s, 427536 KB] FactPairs: 182
[t=0.0262639s, 427536 KB] Bytes per state: 8
[t=0.026459s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980668s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.0981193s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981453s, 430128 KB] f = 138, 1 evaluated, 0 expanded
[t=0.0981727s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.0981966s, 430128 KB] pruning method: none
[t=0.116801s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.116852s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117074s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.117105s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118952s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.118986s, 431100 KB] g=4, 16 evaluated, 5 expanded
[t=0.130191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.130229s, 431100 KB] g=11, 78 evaluated, 19 expanded
[t=0.131162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.131193s, 431100 KB] g=12, 83 evaluated, 20 expanded
[t=0.132309s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.132339s, 431100 KB] g=13, 89 evaluated, 21 expanded
[t=0.141028s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.141077s, 431100 KB] g=14, 137 evaluated, 30 expanded
[t=0.142391s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.142427s, 431100 KB] g=16, 144 evaluated, 32 expanded
[t=0.143728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.143761s, 431100 KB] g=18, 151 evaluated, 34 expanded
[t=0.151956s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.151992s, 431232 KB] g=20, 196 evaluated, 44 expanded
[t=0.154739s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.154772s, 431232 KB] g=19, 211 evaluated, 46 expanded
[t=0.186742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.18678s, 431232 KB] g=23, 387 evaluated, 90 expanded
[t=0.188076s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.188108s, 431232 KB] g=24, 394 evaluated, 92 expanded
[t=0.19086s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.190898s, 431232 KB] g=25, 409 evaluated, 96 expanded
[t=0.194008s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.194042s, 431232 KB] g=29, 426 evaluated, 100 expanded
[t=0.211292s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.211331s, 431364 KB] g=32, 521 evaluated, 121 expanded
[t=0.234375s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.234415s, 431364 KB] g=32, 648 evaluated, 151 expanded
[t=0.234807s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.234839s, 431364 KB] g=32, 650 evaluated, 151 expanded
[t=0.235049s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.235078s, 431364 KB] g=32, 651 evaluated, 151 expanded
[t=0.237449s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.237483s, 431364 KB] g=33, 664 evaluated, 153 expanded
[t=0.239886s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.239919s, 431364 KB] g=35, 677 evaluated, 155 expanded
[t=0.244121s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.244157s, 431496 KB] g=37, 700 evaluated, 160 expanded
[t=0.245998s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.246038s, 431496 KB] g=38, 710 evaluated, 161 expanded
[t=0.248793s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.248824s, 431496 KB] g=40, 725 evaluated, 163 expanded
[t=0.253394s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.253429s, 431496 KB] g=43, 750 evaluated, 167 expanded
[t=0.257444s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.25748s, 431496 KB] g=42, 772 evaluated, 171 expanded
[t=0.260219s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.260253s, 431496 KB] g=44, 787 evaluated, 173 expanded
[t=0.261009s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.261039s, 431496 KB] g=45, 791 evaluated, 174 expanded
[t=0.26253s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.262565s, 431496 KB] g=46, 799 evaluated, 175 expanded
[t=0.263136s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.263166s, 431496 KB] g=47, 802 evaluated, 176 expanded
[t=0.273249s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.273286s, 431496 KB] g=49, 858 evaluated, 187 expanded
[t=0.273873s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.273909s, 431496 KB] g=50, 861 evaluated, 188 expanded
[t=0.274299s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.274329s, 431496 KB] g=50, 863 evaluated, 188 expanded
[t=0.279948s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.279985s, 431496 KB] g=53, 894 evaluated, 195 expanded
[t=0.2811s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.281131s, 431496 KB] g=54, 900 evaluated, 196 expanded
[t=0.281346s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.281375s, 431496 KB] g=55, 901 evaluated, 197 expanded
[t=0.283934s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.283971s, 431496 KB] g=57, 915 evaluated, 201 expanded
[t=0.284547s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.284577s, 431496 KB] g=58, 918 evaluated, 202 expanded
[t=0.284971s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.285006s, 431496 KB] g=59, 920 evaluated, 203 expanded
[t=0.285403s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.285433s, 431496 KB] g=60, 922 evaluated, 204 expanded
[t=0.285848s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.285879s, 431496 KB] g=61, 924 evaluated, 205 expanded
[t=0.286092s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.286121s, 431496 KB] g=61, 925 evaluated, 205 expanded
[t=0.286519s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.286551s, 431496 KB] g=62, 927 evaluated, 206 expanded
[t=0.288945s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.288977s, 431496 KB] g=67, 941 evaluated, 215 expanded
[t=0.289004s, 431496 KB] Solution found!
[t=0.289031s, 431496 KB] Actual search time: 0.190831s
put-down e (1)
unstack a d (1)
stack a f (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c a (1)
unstack h k (1)
put-down h (1)
pick-up i (1)
stack i c (1)
unstack k g (1)
stack k d (1)
pick-up h (1)
stack h e (1)
unstack g l (1)
stack g h (1)
unstack k d (1)
stack k l (1)
unstack g h (1)
stack g k (1)
unstack i c (1)
put-down i (1)
unstack c a (1)
stack c d (1)
unstack g k (1)
put-down g (1)
unstack a f (1)
stack a k (1)
unstack f b (1)
put-down f (1)
unstack b j (1)
put-down b (1)
unstack h e (1)
stack h g (1)
unstack c d (1)
stack c b (1)
pick-up e (1)
stack e d (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
pick-up j (1)
stack j i (1)
unstack k l (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up l (1)
stack l i (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
unstack c b (1)
stack c i (1)
pick-up b (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.289055s, 431496 KB] Plan length: 67 step(s).
[t=0.289055s, 431496 KB] Plan cost: 67
[t=0.289055s, 431496 KB] Expanded 216 state(s).
[t=0.289055s, 431496 KB] Reopened 0 state(s).
[t=0.289055s, 431496 KB] Evaluated 941 state(s).
[t=0.289055s, 431496 KB] Evaluations: 941
[t=0.289055s, 431496 KB] Generated 1172 state(s).
[t=0.289055s, 431496 KB] Dead ends: 0 state(s).
[t=0.289055s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.289055s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.289055s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.289055s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.289055s, 431496 KB] Number of registered states: 941
[t=0.289055s, 431496 KB] Int hash set load factor: 941/1024 = 0.918945
[t=0.289055s, 431496 KB] Int hash set resizes: 10
[t=0.289055s, 431496 KB] Search time: 0.262597s
[t=0.289055s, 431496 KB] Total time: 0.289055s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p92.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6324e-05s, 424928 KB] reading input...
[t=0.0021272s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259268s, 427536 KB] Building successor generator...done!
[t=0.0262026s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262257s, 427536 KB] time for successor generation creation: 0.000165686s
[t=0.0262545s, 427536 KB] Variables: 25
[t=0.0262777s, 427536 KB] FactPairs: 182
[t=0.0262999s, 427536 KB] Bytes per state: 8
[t=0.0264955s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987188s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0987704s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987966s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0988245s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0988487s, 430128 KB] pruning method: none
[t=0.117498s, 431100 KB] f = 146, 5 evaluated, 1 expanded
[t=0.119578s, 431100 KB] f = 147, 16 evaluated, 4 expanded
[t=0.120712s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.120754s, 431100 KB] g=4, 22 evaluated, 6 expanded
[t=0.121334s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.121364s, 431100 KB] g=4, 25 evaluated, 6 expanded
[t=0.12359s, 431100 KB] f = 148, 37 evaluated, 9 expanded
[t=0.1249s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.124931s, 431100 KB] g=7, 44 evaluated, 11 expanded
[t=0.125324s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.125353s, 431100 KB] g=7, 46 evaluated, 11 expanded
[t=0.125749s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.125779s, 431100 KB] g=7, 48 evaluated, 11 expanded
[t=0.130009s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.130043s, 431100 KB] g=11, 71 evaluated, 15 expanded
[t=0.130988s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.131019s, 431100 KB] g=12, 76 evaluated, 16 expanded
[t=0.133242s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.133278s, 431100 KB] g=14, 88 evaluated, 18 expanded
[t=0.140233s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.140271s, 431100 KB] g=14, 126 evaluated, 25 expanded
[t=0.146881s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.146917s, 431232 KB] g=14, 162 evaluated, 32 expanded
[t=0.158255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.158293s, 431232 KB] g=19, 224 evaluated, 44 expanded
[t=0.158506s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.158535s, 431232 KB] g=19, 225 evaluated, 44 expanded
[t=0.160219s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.160252s, 431232 KB] g=21, 234 evaluated, 46 expanded
[t=0.166319s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.166356s, 431232 KB] g=25, 267 evaluated, 54 expanded
[t=0.169492s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.169528s, 431232 KB] g=27, 284 evaluated, 58 expanded
[t=0.170112s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.170142s, 431232 KB] g=28, 287 evaluated, 59 expanded
[t=0.194786s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.194831s, 431364 KB] g=29, 422 evaluated, 96 expanded, 7 reopened
[t=0.205082s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.205121s, 431364 KB] g=36, 478 evaluated, 109 expanded, 7 reopened
[t=0.207357s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.207391s, 431364 KB] g=39, 490 evaluated, 112 expanded, 7 reopened
[t=0.207612s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.207642s, 431364 KB] g=40, 491 evaluated, 113 expanded, 7 reopened
[t=0.212488s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.212525s, 431364 KB] g=44, 517 evaluated, 124 expanded, 7 reopened
[t=0.212746s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.212775s, 431364 KB] g=45, 518 evaluated, 125 expanded, 7 reopened
[t=0.214083s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.214114s, 431364 KB] g=46, 525 evaluated, 127 expanded, 7 reopened
[t=0.21451s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.21454s, 431364 KB] g=46, 527 evaluated, 127 expanded, 7 reopened
[t=0.215672s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.215707s, 431364 KB] g=48, 533 evaluated, 129 expanded, 7 reopened
[t=0.219213s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.219248s, 431364 KB] g=51, 552 evaluated, 136 expanded, 7 reopened
[t=0.219468s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.2195s, 431364 KB] g=51, 553 evaluated, 136 expanded, 7 reopened
[t=0.219715s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.219744s, 431364 KB] g=52, 554 evaluated, 137 expanded, 7 reopened
[t=0.22014s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.220169s, 431364 KB] g=52, 556 evaluated, 137 expanded, 7 reopened
[t=0.221295s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.221325s, 431364 KB] g=54, 562 evaluated, 140 expanded, 7 reopened
[t=0.226096s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.226133s, 431364 KB] g=56, 588 evaluated, 147 expanded, 7 reopened
[t=0.226716s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.226751s, 431364 KB] g=58, 591 evaluated, 149 expanded, 7 reopened
[t=0.232256s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.232294s, 431364 KB] g=60, 621 evaluated, 161 expanded, 7 reopened
[t=0.233976s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.23401s, 431364 KB] g=61, 630 evaluated, 166 expanded, 7 reopened
[t=0.234227s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.234256s, 431364 KB] g=62, 631 evaluated, 167 expanded, 7 reopened
[t=0.234835s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.234865s, 431364 KB] g=64, 634 evaluated, 169 expanded, 7 reopened
[t=0.235454s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.235486s, 431364 KB] g=66, 637 evaluated, 171 expanded, 7 reopened
[t=0.236621s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.236652s, 431364 KB] g=66, 643 evaluated, 175 expanded, 7 reopened
[t=0.237239s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.237268s, 431364 KB] g=68, 647 evaluated, 178 expanded, 7 reopened
[t=0.237295s, 431364 KB] Solution found!
[t=0.237322s, 431364 KB] Actual search time: 0.138469s
unstack j c (1)
put-down j (1)
unstack i d (1)
put-down i (1)
unstack d a (1)
stack d j (1)
unstack l k (1)
stack l c (1)
unstack k h (1)
put-down k (1)
unstack l c (1)
stack l d (1)
unstack a b (1)
stack a k (1)
pick-up c (1)
stack c f (1)
unstack b e (1)
stack b l (1)
pick-up h (1)
stack h a (1)
unstack e g (1)
put-down e (1)
unstack c f (1)
put-down c (1)
pick-up f (1)
stack f e (1)
pick-up c (1)
stack c b (1)
unstack h a (1)
stack h g (1)
unstack f e (1)
stack f i (1)
unstack a k (1)
stack a h (1)
pick-up e (1)
stack e c (1)
unstack f i (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e c (1)
stack e i (1)
unstack c b (1)
put-down c (1)
unstack e i (1)
stack e k (1)
pick-up i (1)
stack i c (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.237346s, 431364 KB] Plan length: 68 step(s).
[t=0.237346s, 431364 KB] Plan cost: 68
[t=0.237346s, 431364 KB] Expanded 179 state(s).
[t=0.237346s, 431364 KB] Reopened 7 state(s).
[t=0.237346s, 431364 KB] Evaluated 647 state(s).
[t=0.237346s, 431364 KB] Evaluations: 647
[t=0.237346s, 431364 KB] Generated 879 state(s).
[t=0.237346s, 431364 KB] Dead ends: 0 state(s).
[t=0.237346s, 431364 KB] Expanded until last jump: 9 state(s).
[t=0.237346s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.237346s, 431364 KB] Evaluated until last jump: 37 state(s).
[t=0.237346s, 431364 KB] Generated until last jump: 44 state(s).
[t=0.237346s, 431364 KB] Number of registered states: 647
[t=0.237346s, 431364 KB] Int hash set load factor: 647/1024 = 0.631836
[t=0.237346s, 431364 KB] Int hash set resizes: 10
[t=0.237346s, 431364 KB] Search time: 0.210851s
[t=0.237346s, 431364 KB] Total time: 0.237346s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p93.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6802e-05s, 424928 KB] reading input...
[t=0.00217731s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025844s, 427536 KB] Building successor generator...done!
[t=0.0261218s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261453s, 427536 KB] time for successor generation creation: 0.00016664s
[t=0.0261734s, 427536 KB] Variables: 25
[t=0.0261964s, 427536 KB] FactPairs: 182
[t=0.0262185s, 427536 KB] Bytes per state: 8
[t=0.0264149s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983262s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0983787s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984132s, 430128 KB] f = 149, 1 evaluated, 0 expanded
[t=0.0984407s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0984645s, 430128 KB] pruning method: none
[t=0.110262s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.110314s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117288s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.117333s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.1245s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.124535s, 431100 KB] g=8, 46 evaluated, 14 expanded
[t=0.126346s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.126376s, 431100 KB] g=10, 56 evaluated, 17 expanded
[t=0.130003s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.130036s, 431100 KB] g=13, 76 evaluated, 24 expanded
[t=0.130782s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.130814s, 431100 KB] g=14, 80 evaluated, 25 expanded
[t=0.131023s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.131051s, 431100 KB] g=14, 81 evaluated, 25 expanded
[t=0.13126s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.131288s, 431100 KB] g=14, 82 evaluated, 25 expanded
[t=0.13312s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.133156s, 431100 KB] g=16, 92 evaluated, 28 expanded
[t=0.134078s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.134111s, 431100 KB] g=17, 97 evaluated, 29 expanded
[t=0.136118s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.136153s, 431100 KB] g=18, 108 evaluated, 32 expanded
[t=0.136715s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.136744s, 431100 KB] g=18, 111 evaluated, 32 expanded
[t=0.139835s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.139868s, 431100 KB] g=21, 128 evaluated, 36 expanded
[t=0.140631s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.140661s, 431100 KB] g=22, 132 evaluated, 37 expanded
[t=0.144992s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.145035s, 431100 KB] g=26, 156 evaluated, 43 expanded
[t=0.175514s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.175554s, 431232 KB] g=34, 326 evaluated, 82 expanded
[t=0.176128s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.176158s, 431232 KB] g=35, 329 evaluated, 83 expanded
[t=0.177441s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.177471s, 431232 KB] g=37, 336 evaluated, 85 expanded
[t=0.202185s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.202224s, 431364 KB] g=39, 474 evaluated, 121 expanded, 2 reopened
[t=0.240146s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.240186s, 431364 KB] g=43, 686 evaluated, 170 expanded, 3 reopened
[t=0.257897s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.257939s, 431496 KB] g=43, 785 evaluated, 195 expanded, 3 reopened
[t=0.519144s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.519193s, 431892 KB] g=43, 2246 evaluated, 609 expanded, 42 reopened
[t=0.522206s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.522241s, 431892 KB] g=46, 2262 evaluated, 613 expanded, 42 reopened
[t=0.523174s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.523208s, 431892 KB] g=47, 2267 evaluated, 614 expanded, 42 reopened
[t=0.525203s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.525236s, 431892 KB] g=48, 2278 evaluated, 616 expanded, 42 reopened
[t=0.52843s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.52847s, 431892 KB] g=51, 2295 evaluated, 620 expanded, 42 reopened
[t=0.529238s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.529268s, 431892 KB] g=52, 2299 evaluated, 621 expanded, 42 reopened
[t=0.530547s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.530578s, 431892 KB] g=53, 2306 evaluated, 622 expanded, 42 reopened
[t=0.533294s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.533328s, 431892 KB] g=56, 2321 evaluated, 626 expanded, 42 reopened
[t=0.534072s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.534102s, 431892 KB] g=57, 2325 evaluated, 627 expanded, 42 reopened
[t=0.534501s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.534534s, 431892 KB] g=58, 2327 evaluated, 628 expanded, 42 reopened
[t=0.548095s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.548136s, 431892 KB] g=60, 2402 evaluated, 643 expanded, 42 reopened
[t=0.549418s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.549449s, 431892 KB] g=61, 2409 evaluated, 644 expanded, 42 reopened
[t=0.55306s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.553093s, 431892 KB] g=65, 2429 evaluated, 648 expanded, 42 reopened
[t=0.554914s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.554945s, 431892 KB] g=66, 2439 evaluated, 651 expanded, 42 reopened
[t=0.555154s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.555183s, 431892 KB] g=66, 2440 evaluated, 651 expanded, 42 reopened
[t=0.555397s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.555427s, 431892 KB] g=66, 2441 evaluated, 651 expanded, 42 reopened
[t=0.555815s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.555845s, 431892 KB] g=67, 2443 evaluated, 652 expanded, 42 reopened
[t=0.557308s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.557339s, 431892 KB] g=69, 2451 evaluated, 655 expanded, 42 reopened
[t=0.557732s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.557761s, 431892 KB] g=70, 2453 evaluated, 656 expanded, 42 reopened
[t=0.558149s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.558182s, 431892 KB] g=71, 2455 evaluated, 657 expanded, 42 reopened
[t=0.558213s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.558236s, 431892 KB] g=72, 2456 evaluated, 658 expanded, 42 reopened
[t=0.558261s, 431892 KB] Solution found!
[t=0.558288s, 431892 KB] Actual search time: 0.45982s
unstack a e (1)
put-down a (1)
unstack j c (1)
stack j e (1)
unstack c h (1)
put-down c (1)
pick-up h (1)
stack h a (1)
unstack j e (1)
stack j c (1)
unstack e d (1)
stack e k (1)
unstack d g (1)
put-down d (1)
unstack j c (1)
stack j e (1)
unstack g l (1)
stack g h (1)
pick-up c (1)
stack c d (1)
unstack l f (1)
put-down l (1)
unstack c d (1)
stack c g (1)
unstack j e (1)
stack j f (1)
unstack e k (1)
stack e j (1)
pick-up k (1)
stack k l (1)
unstack c g (1)
stack c d (1)
unstack e j (1)
stack e k (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack e k (1)
put-down e (1)
unstack j f (1)
stack j e (1)
unstack f i (1)
stack f a (1)
unstack i b (1)
stack i c (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e b (1)
unstack i c (1)
put-down i (1)
unstack k l (1)
stack k f (1)
unstack c d (1)
put-down c (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.558313s, 431892 KB] Plan length: 72 step(s).
[t=0.558313s, 431892 KB] Plan cost: 72
[t=0.558313s, 431892 KB] Expanded 659 state(s).
[t=0.558313s, 431892 KB] Reopened 42 state(s).
[t=0.558313s, 431892 KB] Evaluated 2456 state(s).
[t=0.558313s, 431892 KB] Evaluations: 2456
[t=0.558313s, 431892 KB] Generated 3439 state(s).
[t=0.558313s, 431892 KB] Dead ends: 0 state(s).
[t=0.558313s, 431892 KB] Expanded until last jump: 0 state(s).
[t=0.558313s, 431892 KB] Reopened until last jump: 0 state(s).
[t=0.558313s, 431892 KB] Evaluated until last jump: 1 state(s).
[t=0.558313s, 431892 KB] Generated until last jump: 0 state(s).
[t=0.558313s, 431892 KB] Number of registered states: 2456
[t=0.558313s, 431892 KB] Int hash set load factor: 2456/4096 = 0.599609
[t=0.558313s, 431892 KB] Int hash set resizes: 12
[t=0.558313s, 431892 KB] Search time: 0.531898s
[t=0.558313s, 431892 KB] Total time: 0.558313s
Solution found.
Peak memory: 431892 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p94.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9371e-05s, 424928 KB] reading input...
[t=0.00212626s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258935s, 427536 KB] Building successor generator...done!
[t=0.026178s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262009s, 427536 KB] time for successor generation creation: 0.000173137s
[t=0.0262293s, 427536 KB] Variables: 25
[t=0.0262519s, 427536 KB] FactPairs: 182
[t=0.0262735s, 427536 KB] Bytes per state: 8
[t=0.0264682s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107505s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.10756s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107586s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.107613s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.107637s, 430128 KB] pruning method: none
[t=0.125902s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.125953s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.127427s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.127462s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.127669s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.127699s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.129137s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.129168s, 431100 KB] g=6, 20 evaluated, 6 expanded
[t=0.12938s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.129409s, 431100 KB] g=7, 21 evaluated, 7 expanded
[t=0.129617s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.129646s, 431100 KB] g=7, 22 evaluated, 7 expanded
[t=0.131286s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.13132s, 431100 KB] g=9, 31 evaluated, 9 expanded
[t=0.135612s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.135645s, 431100 KB] g=11, 55 evaluated, 16 expanded
[t=0.136211s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.136242s, 431100 KB] g=12, 58 evaluated, 17 expanded
[t=0.136627s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.136668s, 431100 KB] g=12, 60 evaluated, 17 expanded
[t=0.137596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.137632s, 431100 KB] g=13, 65 evaluated, 19 expanded
[t=0.138549s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.138579s, 431100 KB] g=14, 70 evaluated, 20 expanded
[t=0.153583s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.15362s, 431100 KB] g=18, 154 evaluated, 46 expanded
[t=0.159746s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.159781s, 431232 KB] g=22, 188 evaluated, 55 expanded
[t=0.161246s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.161277s, 431232 KB] g=24, 196 evaluated, 57 expanded
[t=0.162746s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.162784s, 431232 KB] g=26, 204 evaluated, 59 expanded
[t=0.163176s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.163207s, 431232 KB] g=27, 206 evaluated, 60 expanded
[t=0.1636s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.163629s, 431232 KB] g=28, 208 evaluated, 61 expanded
[t=0.1642s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.164233s, 431232 KB] g=29, 211 evaluated, 62 expanded
[t=0.164983s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.165013s, 431232 KB] g=31, 215 evaluated, 64 expanded
[t=0.165763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.165794s, 431232 KB] g=32, 219 evaluated, 65 expanded
[t=0.16763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.167664s, 431232 KB] g=33, 229 evaluated, 69 expanded
[t=0.168057s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.168087s, 431232 KB] g=34, 231 evaluated, 70 expanded
[t=0.16972s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.169754s, 431232 KB] g=36, 240 evaluated, 73 expanded
[t=0.181571s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.181607s, 431232 KB] g=40, 306 evaluated, 98 expanded
[t=0.182003s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.182039s, 431232 KB] g=41, 308 evaluated, 99 expanded
[t=0.182429s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.18246s, 431232 KB] g=42, 310 evaluated, 100 expanded
[t=0.18267s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.1827s, 431232 KB] g=43, 311 evaluated, 101 expanded
[t=0.183115s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.183147s, 431232 KB] g=45, 314 evaluated, 103 expanded
[t=0.183174s, 431232 KB] Solution found!
[t=0.183199s, 431232 KB] Actual search time: 0.0755596s
stack a b (1)
unstack g e (1)
put-down g (1)
unstack e h (1)
stack e j (1)
unstack h l (1)
stack h g (1)
unstack l f (1)
put-down l (1)
pick-up f (1)
stack f e (1)
unstack a b (1)
stack a h (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d b (1)
unstack f e (1)
put-down f (1)
unstack e j (1)
stack e i (1)
unstack j k (1)
stack j d (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.183224s, 431232 KB] Plan length: 45 step(s).
[t=0.183224s, 431232 KB] Plan cost: 45
[t=0.183224s, 431232 KB] Expanded 104 state(s).
[t=0.183224s, 431232 KB] Reopened 0 state(s).
[t=0.183224s, 431232 KB] Evaluated 314 state(s).
[t=0.183224s, 431232 KB] Evaluations: 314
[t=0.183224s, 431232 KB] Generated 423 state(s).
[t=0.183224s, 431232 KB] Dead ends: 0 state(s).
[t=0.183224s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.183224s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.183224s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.183224s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.183224s, 431232 KB] Number of registered states: 314
[t=0.183224s, 431232 KB] Int hash set load factor: 314/512 = 0.613281
[t=0.183224s, 431232 KB] Int hash set resizes: 9
[t=0.183224s, 431232 KB] Search time: 0.156757s
[t=0.183224s, 431232 KB] Total time: 0.183224s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p95.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5968e-05s, 424928 KB] reading input...
[t=0.00237189s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262244s, 427536 KB] Building successor generator...done!
[t=0.0265054s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265291s, 427536 KB] time for successor generation creation: 0.000169668s
[t=0.0265579s, 427536 KB] Variables: 25
[t=0.0265808s, 427536 KB] FactPairs: 182
[t=0.0266035s, 427536 KB] Bytes per state: 8
[t=0.0267983s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987078s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.09876s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987859s, 430128 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0988144s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0988388s, 430128 KB] pruning method: none
[t=0.110707s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.110756s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117223s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.117265s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117667s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 126
[t=0.117698s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.11828s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.118311s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119788s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.11983s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.120232s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.120262s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.122294s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.122329s, 431100 KB] g=6, 29 evaluated, 8 expanded
[t=0.124357s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.12439s, 431100 KB] g=9, 40 evaluated, 11 expanded
[t=0.124789s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.12482s, 431100 KB] g=10, 42 evaluated, 12 expanded
[t=0.126294s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.126329s, 431100 KB] g=12, 50 evaluated, 14 expanded
[t=0.126544s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.126573s, 431100 KB] g=12, 51 evaluated, 14 expanded
[t=0.126785s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.126814s, 431100 KB] g=12, 52 evaluated, 14 expanded
[t=0.128485s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.128522s, 431100 KB] g=13, 61 evaluated, 17 expanded
[t=0.128919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.128949s, 431100 KB] g=14, 63 evaluated, 18 expanded
[t=0.14008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.140116s, 431100 KB] g=19, 124 evaluated, 44 expanded, 1 reopened
[t=0.14127s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.141304s, 431100 KB] g=21, 130 evaluated, 46 expanded, 1 reopened
[t=0.141885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.141915s, 431100 KB] g=22, 133 evaluated, 47 expanded, 1 reopened
[t=0.144124s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.144155s, 431100 KB] g=25, 145 evaluated, 52 expanded, 1 reopened
[t=0.145291s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.145324s, 431100 KB] g=26, 151 evaluated, 54 expanded, 1 reopened
[t=0.15439s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.154431s, 431232 KB] g=30, 201 evaluated, 70 expanded, 1 reopened
[t=0.157915s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.157955s, 431232 KB] g=30, 220 evaluated, 77 expanded, 1 reopened
[t=0.158355s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.158385s, 431232 KB] g=31, 222 evaluated, 78 expanded, 1 reopened
[t=0.15896s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.158994s, 431232 KB] g=32, 225 evaluated, 79 expanded, 1 reopened
[t=0.15976s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.15979s, 431232 KB] g=35, 229 evaluated, 82 expanded, 1 reopened
[t=0.161671s, 431232 KB] Solution found!
[t=0.161707s, 431232 KB] Actual search time: 0.0628667s
unstack k h (1)
stack k j (1)
unstack g a (1)
stack g h (1)
unstack e l (1)
stack e k (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack e k (1)
put-down e (1)
unstack k j (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j l (1)
unstack b d (1)
put-down b (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.161734s, 431232 KB] Plan length: 38 step(s).
[t=0.161734s, 431232 KB] Plan cost: 38
[t=0.161734s, 431232 KB] Expanded 90 state(s).
[t=0.161734s, 431232 KB] Reopened 1 state(s).
[t=0.161734s, 431232 KB] Evaluated 240 state(s).
[t=0.161734s, 431232 KB] Evaluations: 240
[t=0.161734s, 431232 KB] Generated 335 state(s).
[t=0.161734s, 431232 KB] Dead ends: 0 state(s).
[t=0.161734s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.161734s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.161734s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.161734s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.161734s, 431232 KB] Number of registered states: 240
[t=0.161734s, 431232 KB] Int hash set load factor: 240/256 = 0.9375
[t=0.161734s, 431232 KB] Int hash set resizes: 8
[t=0.161734s, 431232 KB] Search time: 0.134937s
[t=0.161734s, 431232 KB] Total time: 0.161734s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p96.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8765e-05s, 424928 KB] reading input...
[t=0.00213149s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256466s, 427536 KB] Building successor generator...done!
[t=0.0259373s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259607s, 427536 KB] time for successor generation creation: 0.000177742s
[t=0.0259889s, 427536 KB] Variables: 25
[t=0.0260113s, 427536 KB] FactPairs: 182
[t=0.0260327s, 427536 KB] Bytes per state: 8
[t=0.0262275s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0976379s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.0976908s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0977166s, 430128 KB] f = 109, 1 evaluated, 0 expanded
[t=0.0977442s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.0977683s, 430128 KB] pruning method: none
[t=0.116093s, 431100 KB] f = 146, 4 evaluated, 1 expanded
[t=0.116869s, 431100 KB] f = 150, 8 evaluated, 4 expanded
[t=0.118888s, 431100 KB] f = 151, 19 evaluated, 9 expanded
[t=0.120701s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.120731s, 431100 KB] g=11, 29 evaluated, 14 expanded
[t=0.12804s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.128073s, 431100 KB] g=21, 70 evaluated, 25 expanded
[t=0.128465s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.128495s, 431100 KB] g=22, 72 evaluated, 26 expanded
[t=0.130659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.130704s, 431100 KB] g=22, 84 evaluated, 28 expanded
[t=0.1446s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.144638s, 431100 KB] g=24, 162 evaluated, 45 expanded
[t=0.170449s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.170486s, 431232 KB] g=28, 307 evaluated, 74 expanded
[t=0.171056s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.171086s, 431232 KB] g=29, 310 evaluated, 75 expanded
[t=0.172365s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.172398s, 431232 KB] g=29, 317 evaluated, 77 expanded
[t=0.350344s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.350388s, 431496 KB] g=36, 1316 evaluated, 346 expanded, 11 reopened
[t=0.354883s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.35492s, 431496 KB] g=36, 1341 evaluated, 353 expanded, 11 reopened
[t=0.357089s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.35712s, 431496 KB] g=40, 1353 evaluated, 358 expanded, 11 reopened
[t=0.363217s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.363254s, 431628 KB] g=43, 1387 evaluated, 370 expanded, 12 reopened
[t=0.368265s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.368299s, 431628 KB] g=45, 1415 evaluated, 377 expanded, 12 reopened
[t=0.381329s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.381368s, 431628 KB] g=48, 1488 evaluated, 396 expanded, 12 reopened
[t=0.384411s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.384445s, 431628 KB] g=50, 1505 evaluated, 400 expanded, 12 reopened
[t=0.384835s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.384865s, 431628 KB] g=51, 1507 evaluated, 401 expanded, 12 reopened
[t=0.385969s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.386002s, 431628 KB] g=52, 1513 evaluated, 402 expanded, 12 reopened
[t=0.387092s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.387122s, 431628 KB] g=53, 1519 evaluated, 403 expanded, 12 reopened
[t=0.387864s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.387898s, 431628 KB] g=54, 1523 evaluated, 404 expanded, 12 reopened
[t=0.391848s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.391886s, 431628 KB] g=56, 1545 evaluated, 410 expanded, 12 reopened
[t=0.392446s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.392475s, 431628 KB] g=56, 1548 evaluated, 410 expanded, 12 reopened
[t=0.392686s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.392714s, 431628 KB] g=57, 1549 evaluated, 411 expanded, 12 reopened
[t=0.40001s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.400047s, 431628 KB] g=62, 1590 evaluated, 422 expanded, 12 reopened
[t=0.410422s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.410459s, 431760 KB] g=64, 1648 evaluated, 444 expanded, 12 reopened
[t=0.438958s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.438998s, 431760 KB] g=64, 1808 evaluated, 498 expanded, 15 reopened
[t=0.440989s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.441022s, 431760 KB] g=69, 1819 evaluated, 503 expanded, 15 reopened
[t=0.441602s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.441631s, 431760 KB] g=71, 1823 evaluated, 506 expanded, 15 reopened
[t=0.441666s, 431760 KB] Solution found!
[t=0.441695s, 431760 KB] Actual search time: 0.343923s
stack d i (1)
unstack c b (1)
put-down c (1)
unstack d i (1)
put-down d (1)
pick-up c (1)
stack c i (1)
unstack b k (1)
stack b d (1)
unstack k f (1)
stack k b (1)
unstack c i (1)
stack c f (1)
unstack i e (1)
put-down i (1)
unstack c f (1)
put-down c (1)
unstack f a (1)
put-down f (1)
unstack a g (1)
stack a k (1)
unstack g h (1)
put-down g (1)
pick-up c (1)
stack c f (1)
unstack h j (1)
stack h g (1)
pick-up j (1)
stack j e (1)
pick-up i (1)
stack i j (1)
unstack c f (1)
stack c i (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f k (1)
unstack c i (1)
put-down c (1)
unstack i j (1)
stack i c (1)
unstack j e (1)
put-down j (1)
unstack f k (1)
stack f a (1)
unstack i c (1)
stack i j (1)
unstack k b (1)
stack k f (1)
unstack e l (1)
stack e b (1)
unstack i j (1)
stack i l (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
stack b c (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.44172s, 431760 KB] Plan length: 71 step(s).
[t=0.44172s, 431760 KB] Plan cost: 71
[t=0.44172s, 431760 KB] Expanded 507 state(s).
[t=0.44172s, 431760 KB] Reopened 15 state(s).
[t=0.44172s, 431760 KB] Evaluated 1823 state(s).
[t=0.44172s, 431760 KB] Evaluations: 1823
[t=0.44172s, 431760 KB] Generated 2533 state(s).
[t=0.44172s, 431760 KB] Dead ends: 0 state(s).
[t=0.44172s, 431760 KB] Expanded until last jump: 9 state(s).
[t=0.44172s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.44172s, 431760 KB] Evaluated until last jump: 19 state(s).
[t=0.44172s, 431760 KB] Generated until last jump: 26 state(s).
[t=0.44172s, 431760 KB] Number of registered states: 1823
[t=0.44172s, 431760 KB] Int hash set load factor: 1823/2048 = 0.890137
[t=0.44172s, 431760 KB] Int hash set resizes: 11
[t=0.44172s, 431760 KB] Search time: 0.415493s
[t=0.44172s, 431760 KB] Total time: 0.44172s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p97.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.4956e-05s, 424928 KB] reading input...
[t=0.00216655s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259358s, 427536 KB] Building successor generator...done!
[t=0.0262195s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262427s, 427536 KB] time for successor generation creation: 0.000171914s
[t=0.0262706s, 427536 KB] Variables: 25
[t=0.0262931s, 427536 KB] FactPairs: 182
[t=0.0263151s, 427536 KB] Bytes per state: 8
[t=0.0265075s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984234s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0984746s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985007s, 430128 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0985281s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0985517s, 430128 KB] pruning method: none
[t=0.116794s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.116843s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.117811s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.11946s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.11951s, 431100 KB] g=5, 17 evaluated, 5 expanded
[t=0.119727s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.119756s, 431100 KB] g=6, 18 evaluated, 6 expanded
[t=0.120324s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.120353s, 431100 KB] g=7, 21 evaluated, 7 expanded
[t=0.124345s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.124378s, 431100 KB] g=7, 43 evaluated, 14 expanded
[t=0.127098s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.127128s, 431100 KB] g=12, 58 evaluated, 19 expanded
[t=0.131866s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.131903s, 431100 KB] g=13, 84 evaluated, 29 expanded
[t=0.133021s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.133054s, 431100 KB] g=15, 90 evaluated, 31 expanded
[t=0.135967s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.136002s, 431100 KB] g=18, 106 evaluated, 34 expanded
[t=0.140543s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.140576s, 431100 KB] g=22, 131 evaluated, 39 expanded
[t=0.146705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.146737s, 431100 KB] g=23, 165 evaluated, 46 expanded
[t=0.14713s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.147162s, 431100 KB] g=24, 167 evaluated, 47 expanded
[t=0.148097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.148142s, 431100 KB] g=25, 172 evaluated, 48 expanded
[t=0.148703s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.148732s, 431100 KB] g=25, 175 evaluated, 48 expanded
[t=0.149662s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.149697s, 431232 KB] g=26, 180 evaluated, 49 expanded
[t=0.149911s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.14994s, 431232 KB] g=27, 181 evaluated, 50 expanded
[t=0.150148s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.150176s, 431232 KB] g=27, 182 evaluated, 50 expanded
[t=0.152387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.152419s, 431232 KB] g=29, 194 evaluated, 53 expanded
[t=0.153709s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.153741s, 431232 KB] g=30, 201 evaluated, 54 expanded
[t=0.160281s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.160314s, 431232 KB] g=33, 237 evaluated, 64 expanded
[t=0.161427s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.161456s, 431232 KB] g=34, 243 evaluated, 66 expanded
[t=0.162209s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.16224s, 431232 KB] g=35, 247 evaluated, 67 expanded
[t=0.162635s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.162663s, 431232 KB] g=36, 249 evaluated, 68 expanded
[t=0.168683s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.168716s, 431232 KB] g=38, 282 evaluated, 79 expanded
[t=0.174879s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.174914s, 431232 KB] g=44, 316 evaluated, 92 expanded
[t=0.175492s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.175526s, 431232 KB] g=45, 319 evaluated, 93 expanded
[t=0.175925s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.175954s, 431232 KB] g=47, 321 evaluated, 95 expanded
[t=0.176345s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.176374s, 431232 KB] g=48, 323 evaluated, 96 expanded
[t=0.177494s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.177529s, 431232 KB] g=51, 330 evaluated, 102 expanded
[t=0.177556s, 431232 KB] Solution found!
[t=0.177582s, 431232 KB] Actual search time: 0.0790262s
stack i c (1)
pick-up e (1)
stack e i (1)
unstack g d (1)
stack g h (1)
unstack d b (1)
put-down d (1)
unstack b k (1)
stack b g (1)
unstack e i (1)
stack e k (1)
unstack b g (1)
stack b d (1)
unstack g h (1)
put-down g (1)
unstack h l (1)
stack h g (1)
unstack l a (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack e k (1)
stack e i (1)
pick-up a (1)
stack a h (1)
unstack k f (1)
stack k e (1)
unstack f j (1)
stack f a (1)
pick-up j (1)
stack j b (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.177607s, 431232 KB] Plan length: 51 step(s).
[t=0.177607s, 431232 KB] Plan cost: 51
[t=0.177607s, 431232 KB] Expanded 103 state(s).
[t=0.177607s, 431232 KB] Reopened 0 state(s).
[t=0.177607s, 431232 KB] Evaluated 330 state(s).
[t=0.177607s, 431232 KB] Evaluations: 330
[t=0.177607s, 431232 KB] Generated 435 state(s).
[t=0.177607s, 431232 KB] Dead ends: 0 state(s).
[t=0.177607s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.177607s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.177607s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.177607s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.177607s, 431232 KB] Number of registered states: 330
[t=0.177607s, 431232 KB] Int hash set load factor: 330/512 = 0.644531
[t=0.177607s, 431232 KB] Int hash set resizes: 9
[t=0.177607s, 431232 KB] Search time: 0.1511s
[t=0.177607s, 431232 KB] Total time: 0.177607s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p98.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7106e-05s, 424928 KB] reading input...
[t=0.00217143s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260328s, 427536 KB] Building successor generator...done!
[t=0.0263144s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263376s, 427536 KB] time for successor generation creation: 0.000169263s
[t=0.0263662s, 427536 KB] Variables: 25
[t=0.0263894s, 427536 KB] FactPairs: 182
[t=0.0264116s, 427536 KB] Bytes per state: 8
[t=0.0266098s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986523s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0987057s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987317s, 430128 KB] f = 124, 1 evaluated, 0 expanded
[t=0.0987592s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0987834s, 430128 KB] pruning method: none
[t=0.117271s, 431100 KB] f = 134, 5 evaluated, 1 expanded
[t=0.117514s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.117557s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117772s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.117801s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.119659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.11969s, 431100 KB] g=3, 17 evaluated, 5 expanded
[t=0.124648s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.124682s, 431100 KB] g=8, 44 evaluated, 11 expanded
[t=0.128743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.128781s, 431100 KB] g=11, 66 evaluated, 16 expanded
[t=0.133027s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.133061s, 431100 KB] g=16, 89 evaluated, 23 expanded
[t=0.133655s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.133689s, 431100 KB] g=17, 92 evaluated, 24 expanded
[t=0.135014s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.135047s, 431100 KB] g=19, 99 evaluated, 26 expanded
[t=0.154483s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.154523s, 431232 KB] g=22, 205 evaluated, 48 expanded
[t=0.190653s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.190692s, 431232 KB] g=28, 402 evaluated, 106 expanded, 3 reopened
[t=0.201874s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.201913s, 431232 KB] g=27, 463 evaluated, 121 expanded, 3 reopened
[t=0.204688s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.204723s, 431232 KB] g=30, 478 evaluated, 126 expanded, 3 reopened
[t=0.206047s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.206081s, 431232 KB] g=31, 485 evaluated, 129 expanded, 3 reopened
[t=0.207585s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.207619s, 431232 KB] g=34, 493 evaluated, 133 expanded, 3 reopened
[t=0.208391s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.208422s, 431232 KB] g=37, 497 evaluated, 136 expanded, 3 reopened
[t=0.208823s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.208853s, 431232 KB] g=38, 499 evaluated, 137 expanded, 3 reopened
[t=0.209068s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.209098s, 431232 KB] g=39, 500 evaluated, 138 expanded, 3 reopened
[t=0.210243s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.210276s, 431232 KB] g=41, 506 evaluated, 140 expanded, 3 reopened
[t=0.218815s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.218854s, 431364 KB] g=41, 552 evaluated, 163 expanded, 3 reopened
[t=0.219072s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.219102s, 431364 KB] g=42, 553 evaluated, 164 expanded, 3 reopened
[t=0.219684s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.219714s, 431364 KB] g=43, 556 evaluated, 165 expanded, 3 reopened
[t=0.244127s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.244164s, 431364 KB] g=48, 689 evaluated, 223 expanded, 5 reopened
[t=0.244933s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.244969s, 431364 KB] g=51, 693 evaluated, 226 expanded, 5 reopened
[t=0.535426s, 431632 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.535474s, 431632 KB] g=46, 2259 evaluated, 1631 expanded, 762 reopened
[t=0.535503s, 431632 KB] Solution found!
[t=0.53553s, 431632 KB] Actual search time: 0.436743s
unstack h l (1)
stack h j (1)
unstack g c (1)
put-down g (1)
unstack h j (1)
stack h g (1)
unstack c k (1)
stack c l (1)
unstack a f (1)
stack a h (1)
pick-up k (1)
stack k j (1)
unstack c l (1)
stack c a (1)
unstack f b (1)
stack f k (1)
unstack b i (1)
stack b l (1)
unstack c a (1)
stack c b (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack i d (1)
put-down i (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.535555s, 431632 KB] Plan length: 46 step(s).
[t=0.535555s, 431632 KB] Plan cost: 46
[t=0.535555s, 431632 KB] Expanded 1632 state(s).
[t=0.535555s, 431632 KB] Reopened 762 state(s).
[t=0.535555s, 431632 KB] Evaluated 2259 state(s).
[t=0.535555s, 431632 KB] Evaluations: 2259
[t=0.535555s, 431632 KB] Generated 6522 state(s).
[t=0.535555s, 431632 KB] Dead ends: 0 state(s).
[t=0.535555s, 431632 KB] Expanded until last jump: 1 state(s).
[t=0.535555s, 431632 KB] Reopened until last jump: 0 state(s).
[t=0.535555s, 431632 KB] Evaluated until last jump: 5 state(s).
[t=0.535555s, 431632 KB] Generated until last jump: 4 state(s).
[t=0.535555s, 431632 KB] Number of registered states: 2259
[t=0.535555s, 431632 KB] Int hash set load factor: 2259/4096 = 0.551514
[t=0.535555s, 431632 KB] Int hash set resizes: 12
[t=0.535555s, 431632 KB] Search time: 0.508946s
[t=0.535555s, 431632 KB] Total time: 0.535555s
Solution found.
Peak memory: 431632 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p99.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6695e-05s, 424928 KB] reading input...
[t=0.00215334s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260352s, 427536 KB] Building successor generator...done!
[t=0.0263123s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263357s, 427536 KB] time for successor generation creation: 0.000165195s
[t=0.0263645s, 427536 KB] Variables: 25
[t=0.0263877s, 427536 KB] FactPairs: 182
[t=0.0264102s, 427536 KB] Bytes per state: 8
[t=0.0266079s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.108838s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.108892s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.108918s, 430128 KB] f = 99, 1 evaluated, 0 expanded
[t=0.108946s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.10897s, 430128 KB] pruning method: none
[t=0.127728s, 431100 KB] f = 101, 5 evaluated, 1 expanded
[t=0.128147s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.128179s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.153946s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.153983s, 431100 KB] g=12, 150 evaluated, 39 expanded
[t=0.154379s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.154412s, 431100 KB] g=12, 152 evaluated, 39 expanded
[t=0.155726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.155759s, 431100 KB] g=13, 159 evaluated, 41 expanded
[t=0.16732s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.167356s, 431232 KB] g=19, 223 evaluated, 55 expanded
[t=0.17117s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.171216s, 431232 KB] g=21, 244 evaluated, 59 expanded
[t=0.174517s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.174549s, 431232 KB] g=24, 262 evaluated, 63 expanded
[t=0.175667s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.175702s, 431232 KB] g=25, 268 evaluated, 64 expanded
[t=0.177001s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.177031s, 431232 KB] g=27, 275 evaluated, 66 expanded
[t=0.177782s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.177811s, 431232 KB] g=28, 279 evaluated, 67 expanded
[t=0.179467s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.179502s, 431232 KB] g=30, 288 evaluated, 69 expanded
[t=0.180078s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.180108s, 431232 KB] g=31, 291 evaluated, 70 expanded
[t=0.181036s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.181069s, 431232 KB] g=32, 296 evaluated, 71 expanded
[t=0.181996s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.182026s, 431232 KB] g=33, 301 evaluated, 72 expanded
[t=0.183861s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.183897s, 431232 KB] g=36, 311 evaluated, 75 expanded
[t=0.185191s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.185221s, 431232 KB] g=38, 318 evaluated, 77 expanded
[t=0.189044s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.189079s, 431232 KB] g=40, 339 evaluated, 84 expanded
[t=0.189292s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.189321s, 431232 KB] g=40, 340 evaluated, 84 expanded
[t=0.189713s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.189742s, 431232 KB] g=41, 342 evaluated, 85 expanded
[t=0.190678s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.190711s, 431232 KB] g=43, 347 evaluated, 87 expanded
[t=0.190934s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.190966s, 431232 KB] g=44, 348 evaluated, 88 expanded
[t=0.191725s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.19176s, 431232 KB] g=46, 352 evaluated, 91 expanded
[t=0.227676s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.227716s, 431364 KB] g=49, 550 evaluated, 181 expanded, 3 reopened
[t=0.227934s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.227964s, 431364 KB] g=50, 551 evaluated, 182 expanded, 3 reopened
[t=0.227994s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.228018s, 431364 KB] g=51, 552 evaluated, 183 expanded, 3 reopened
[t=0.228043s, 431364 KB] Solution found!
[t=0.228069s, 431364 KB] Actual search time: 0.119095s
stack a k (1)
unstack l h (1)
put-down l (1)
unstack f j (1)
put-down f (1)
unstack j e (1)
stack j f (1)
unstack e b (1)
stack e j (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
unstack e j (1)
stack e i (1)
unstack j f (1)
stack j e (1)
unstack a k (1)
stack a b (1)
pick-up k (1)
stack k d (1)
unstack a b (1)
stack a h (1)
pick-up f (1)
stack f k (1)
unstack j e (1)
put-down j (1)
unstack f k (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c i (1)
pick-up b (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.228093s, 431364 KB] Plan length: 51 step(s).
[t=0.228093s, 431364 KB] Plan cost: 51
[t=0.228093s, 431364 KB] Expanded 184 state(s).
[t=0.228093s, 431364 KB] Reopened 3 state(s).
[t=0.228093s, 431364 KB] Evaluated 552 state(s).
[t=0.228093s, 431364 KB] Evaluations: 552
[t=0.228093s, 431364 KB] Generated 770 state(s).
[t=0.228093s, 431364 KB] Dead ends: 0 state(s).
[t=0.228093s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.228093s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.228093s, 431364 KB] Evaluated until last jump: 5 state(s).
[t=0.228093s, 431364 KB] Generated until last jump: 4 state(s).
[t=0.228093s, 431364 KB] Number of registered states: 552
[t=0.228093s, 431364 KB] Int hash set load factor: 552/1024 = 0.539062
[t=0.228093s, 431364 KB] Int hash set resizes: 10
[t=0.228093s, 431364 KB] Search time: 0.201486s
[t=0.228093s, 431364 KB] Total time: 0.228093s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p100.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6118e-05s, 424928 KB] reading input...
[t=0.00217476s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257206s, 427536 KB] Building successor generator...done!
[t=0.0260014s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260252s, 427536 KB] time for successor generation creation: 0.000168996s
[t=0.0260536s, 427536 KB] Variables: 25
[t=0.0260758s, 427536 KB] FactPairs: 182
[t=0.0260978s, 427536 KB] Bytes per state: 8
[t=0.0262928s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0975247s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0975752s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0976004s, 430128 KB] f = 131, 1 evaluated, 0 expanded
[t=0.0976271s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.097651s, 430128 KB] pruning method: none
[t=0.115844s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.115894s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116827s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.116858s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.117248s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.117278s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.119531s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.119578s, 431100 KB] g=6, 22 evaluated, 7 expanded
[t=0.121772s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.121802s, 431100 KB] g=8, 34 evaluated, 11 expanded
[t=0.123265s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.123298s, 431100 KB] g=10, 42 evaluated, 14 expanded
[t=0.123682s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.123712s, 431100 KB] g=10, 44 evaluated, 14 expanded
[t=0.131079s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.131115s, 431100 KB] g=15, 85 evaluated, 26 expanded
[t=0.133812s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.133846s, 431100 KB] g=16, 100 evaluated, 30 expanded
[t=0.134777s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.134809s, 431100 KB] g=17, 105 evaluated, 31 expanded
[t=0.136438s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.136471s, 431100 KB] g=20, 114 evaluated, 34 expanded
[t=0.137036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.137065s, 431100 KB] g=21, 117 evaluated, 35 expanded
[t=0.138167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.138198s, 431100 KB] g=22, 123 evaluated, 37 expanded
[t=0.138955s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.138988s, 431100 KB] g=24, 127 evaluated, 39 expanded
[t=0.147772s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.14781s, 431100 KB] g=26, 176 evaluated, 57 expanded, 1 reopened
[t=0.1677s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.167736s, 431232 KB] g=25, 287 evaluated, 97 expanded, 1 reopened
[t=0.173685s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.173722s, 431232 KB] g=30, 320 evaluated, 108 expanded, 1 reopened
[t=0.180945s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.180983s, 431232 KB] g=31, 360 evaluated, 121 expanded, 1 reopened
[t=0.181733s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.181764s, 431232 KB] g=32, 364 evaluated, 122 expanded, 1 reopened
[t=0.182736s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.18278s, 431232 KB] g=34, 369 evaluated, 124 expanded, 1 reopened
[t=0.184149s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.18418s, 431232 KB] g=36, 376 evaluated, 127 expanded, 1 reopened
[t=0.184394s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.184423s, 431232 KB] g=37, 377 evaluated, 128 expanded, 1 reopened
[t=0.184635s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.184664s, 431232 KB] g=38, 378 evaluated, 129 expanded, 1 reopened
[t=0.185416s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.185449s, 431232 KB] g=40, 382 evaluated, 131 expanded, 1 reopened
[t=0.18602s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.18605s, 431232 KB] g=42, 385 evaluated, 133 expanded, 1 reopened
[t=0.999232s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_4.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.999282s, 432288 KB] g=54, 4960 evaluated, 2091 expanded, 225 reopened
[t=0.99931s, 432288 KB] Solution found!
[t=0.999336s, 432288 KB] Actual search time: 0.901682s
unstack e g (1)
stack e k (1)
pick-up g (1)
stack g b (1)
unstack f d (1)
stack f e (1)
unstack d i (1)
put-down d (1)
unstack f e (1)
stack f d (1)
unstack e k (1)
stack e i (1)
unstack k h (1)
stack k f (1)
unstack h j (1)
stack h g (1)
unstack j a (1)
stack j e (1)
pick-up a (1)
stack a k (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k b (1)
unstack j e (1)
put-down j (1)
unstack f d (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.999361s, 432288 KB] Plan length: 54 step(s).
[t=0.999361s, 432288 KB] Plan cost: 54
[t=0.999361s, 432288 KB] Expanded 2092 state(s).
[t=0.999361s, 432288 KB] Reopened 225 state(s).
[t=0.999361s, 432288 KB] Evaluated 4960 state(s).
[t=0.999361s, 432288 KB] Evaluations: 4960
[t=0.999361s, 432288 KB] Generated 8581 state(s).
[t=0.999361s, 432288 KB] Dead ends: 0 state(s).
[t=0.999361s, 432288 KB] Expanded until last jump: 0 state(s).
[t=0.999361s, 432288 KB] Reopened until last jump: 0 state(s).
[t=0.999361s, 432288 KB] Evaluated until last jump: 1 state(s).
[t=0.999361s, 432288 KB] Generated until last jump: 0 state(s).
[t=0.999361s, 432288 KB] Number of registered states: 4960
[t=0.999361s, 432288 KB] Int hash set load factor: 4960/8192 = 0.605469
[t=0.999361s, 432288 KB] Int hash set resizes: 13
[t=0.999361s, 432288 KB] Search time: 0.973069s
[t=0.999361s, 432288 KB] Total time: 0.999361s
Solution found.
Peak memory: 432288 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023498
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 4 test success: 20 of 20 (100.0%)

---------- FOLD 6/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 173 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.08355796337127686 (0.3427113890647888 vs. 0.25915342569351196), which occurred at index 116.
  _module_class,
 | avg_train_loss=0.098988 | avg_val_loss=0.093232
Epoch 2 | avg_train_loss=0.068607 | avg_val_loss=0.047613
Epoch 3 | avg_train_loss=0.043217 | avg_val_loss=0.041159
Epoch 4 | avg_train_loss=0.039042 | avg_val_loss=0.039065
Epoch 5 | avg_train_loss=0.037049 | avg_val_loss=0.037954
Epoch 6 | avg_train_loss=0.036059 | avg_val_loss=0.036902
Epoch 7 | avg_train_loss=0.035208 | avg_val_loss=0.035808
Epoch 8 | avg_train_loss=0.034548 | avg_val_loss=0.035115
Epoch 9 | avg_train_loss=0.033957 | avg_val_loss=0.034573
Epoch 10 | avg_train_loss=0.033322 | avg_val_loss=0.034764
Epoch 11 | avg_train_loss=0.032814 | avg_val_loss=0.034033
Epoch 12 | avg_train_loss=0.032181 | avg_val_loss=0.033398
Epoch 13 | avg_train_loss=0.031962 | avg_val_loss=0.032781
Epoch 14 | avg_train_loss=0.031546 | avg_val_loss=0.032343
Epoch 15 | avg_train_loss=0.031207 | avg_val_loss=0.032206
Epoch 16 | avg_train_loss=0.030892 | avg_val_loss=0.031794
Epoch 17 | avg_train_loss=0.030572 | avg_val_loss=0.031029
Epoch 18 | avg_train_loss=0.030473 | avg_val_loss=0.031023
Epoch 19 | avg_train_loss=0.030018 | avg_val_loss=0.030968
Epoch 20 | avg_train_loss=0.029827 | avg_val_loss=0.030740
Epoch 21 | avg_train_loss=0.029580 | avg_val_loss=0.030651
Epoch 22 | avg_train_loss=0.029513 | avg_val_loss=0.030218
Epoch 23 | avg_train_loss=0.029126 | avg_val_loss=0.030469
Epoch 24 | avg_train_loss=0.028760 | avg_val_loss=0.029972
Epoch 25 | avg_train_loss=0.028663 | avg_val_loss=0.029883
Epoch 26 | avg_train_loss=0.028522 | avg_val_loss=0.029689
Epoch 27 | avg_train_loss=0.028160 | avg_val_loss=0.029258
Epoch 28 | avg_train_loss=0.028148 | avg_val_loss=0.029240
Epoch 29 | avg_train_loss=0.027918 | avg_val_loss=0.029141
Epoch 30 | avg_train_loss=0.027640 | avg_val_loss=0.028664
Epoch 31 | avg_train_loss=0.027551 | avg_val_loss=0.028911
Epoch 32 | avg_train_loss=0.027206 | avg_val_loss=0.028284
Epoch 33 | avg_train_loss=0.027059 | avg_val_loss=0.027998
Epoch 34 | avg_train_loss=0.026774 | avg_val_loss=0.027963
Epoch 35 | avg_train_loss=0.026598 | avg_val_loss=0.027883
Epoch 36 | avg_train_loss=0.026529 | avg_val_loss=0.027458
Epoch 37 | avg_train_loss=0.026156 | avg_val_loss=0.027784
Epoch 38 | avg_train_loss=0.026188 | avg_val_loss=0.027292
Epoch 39 | avg_train_loss=0.025993 | avg_val_loss=0.027519
Epoch 40 | avg_train_loss=0.025858 | avg_val_loss=0.027093
Epoch 41 | avg_train_loss=0.025665 | avg_val_loss=0.026975
Epoch 42 | avg_train_loss=0.025479 | avg_val_loss=0.027063
Epoch 43 | avg_train_loss=0.025411 | avg_val_loss=0.026790
Epoch 44 | avg_train_loss=0.025046 | avg_val_loss=0.026352
Epoch 45 | avg_train_loss=0.024956 | avg_val_loss=0.026851
Epoch 46 | avg_train_loss=0.024708 | avg_val_loss=0.026481
Epoch 47 | avg_train_loss=0.024552 | avg_val_loss=0.026002
Epoch 48 | avg_train_loss=0.024498 | avg_val_loss=0.026013
Epoch 49 | avg_train_loss=0.024411 | avg_val_loss=0.026004
Epoch 50 | avg_train_loss=0.024028 | avg_val_loss=0.025790
Epoch 51 | avg_train_loss=0.024062 | avg_val_loss=0.026280
Epoch 52 | avg_train_loss=0.024052 | avg_val_loss=0.025954
Epoch 53 | avg_train_loss=0.023798 | avg_val_loss=0.025646
Epoch 54 | avg_train_loss=0.023709 | avg_val_loss=0.025896
Epoch 55 | avg_train_loss=0.023663 | avg_val_loss=0.025036
Epoch 56 | avg_train_loss=0.023595 | avg_val_loss=0.025103
Epoch 57 | avg_train_loss=0.023355 | avg_val_loss=0.025336
Epoch 58 | avg_train_loss=0.023263 | avg_val_loss=0.025367
Epoch 59 | avg_train_loss=0.023286 | avg_val_loss=0.025203
Epoch 60 | avg_train_loss=0.023130 | avg_val_loss=0.024947
Epoch 61 | avg_train_loss=0.022980 | avg_val_loss=0.025156
Epoch 62 | avg_train_loss=0.022940 | avg_val_loss=0.024524
Epoch 63 | avg_train_loss=0.022681 | avg_val_loss=0.024967
Epoch 64 | avg_train_loss=0.022653 | avg_val_loss=0.024373
Epoch 65 | avg_train_loss=0.022601 | avg_val_loss=0.024591
Epoch 66 | avg_train_loss=0.022467 | avg_val_loss=0.025150
Epoch 67 | avg_train_loss=0.022365 | avg_val_loss=0.024676
Epoch 68 | avg_train_loss=0.022377 | avg_val_loss=0.024563
Epoch 69 | avg_train_loss=0.022113 | avg_val_loss=0.024394
Epoch 70 | avg_train_loss=0.022154 | avg_val_loss=0.024359
Epoch 71 | avg_train_loss=0.021784 | avg_val_loss=0.024197
Epoch 72 | avg_train_loss=0.022097 | avg_val_loss=0.024124
Epoch 73 | avg_train_loss=0.021831 | avg_val_loss=0.024495
Epoch 74 | avg_train_loss=0.021701 | avg_val_loss=0.024599
Epoch 75 | avg_train_loss=0.021779 | avg_val_loss=0.024110
Epoch 76 | avg_train_loss=0.021667 | avg_val_loss=0.024069
Epoch 77 | avg_train_loss=0.021549 | avg_val_loss=0.024278
Epoch 78 | avg_train_loss=0.021409 | avg_val_loss=0.023853
Epoch 79 | avg_train_loss=0.021385 | avg_val_loss=0.023834
Epoch 80 | avg_train_loss=0.021276 | avg_val_loss=0.024083
Epoch 81 | avg_train_loss=0.021389 | avg_val_loss=0.024406
Epoch 82 | avg_train_loss=0.021119 | avg_val_loss=0.023982
Epoch 83 | avg_train_loss=0.021006 | avg_val_loss=0.023632
Epoch 84 | avg_train_loss=0.020961 | avg_val_loss=0.024077
Epoch 85 | avg_train_loss=0.020888 | avg_val_loss=0.023871
Epoch 86 | avg_train_loss=0.020972 | avg_val_loss=0.023775
Epoch 87 | avg_train_loss=0.020747 | avg_val_loss=0.024069
Epoch 88 | avg_train_loss=0.020934 | avg_val_loss=0.023672
Epoch 89 | avg_train_loss=0.020676 | avg_val_loss=0.023407
Epoch 90 | avg_train_loss=0.020683 | avg_val_loss=0.023545
Epoch 91 | avg_train_loss=0.020419 | avg_val_loss=0.023815
Epoch 92 | avg_train_loss=0.020426 | avg_val_loss=0.024134
Epoch 93 | avg_train_loss=0.020194 | avg_val_loss=0.024022
Epoch 94 | avg_train_loss=0.020211 | avg_val_loss=0.023524
Epoch 95 | avg_train_loss=0.020179 | avg_val_loss=0.023985
Epoch 96 | avg_train_loss=0.020002 | avg_val_loss=0.024038
Epoch 97 | avg_train_loss=0.020039 | avg_val_loss=0.023523
Epoch 98 | avg_train_loss=0.019880 | avg_val_loss=0.023891
Epoch 99 | avg_train_loss=0.019956 | avg_val_loss=0.023579
Epoch 100 | avg_train_loss=0.019792 | avg_val_loss=0.023542
Epoch 101 | avg_train_loss=0.019666 | avg_val_loss=0.023834
Epoch 102 | avg_train_loss=0.019714INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p101.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5755e-05s, 424928 KB] reading input...
[t=0.00214749s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257773s, 427536 KB] Building successor generator...done!
[t=0.0260509s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260744s, 427536 KB] time for successor generation creation: 0.000161254s
[t=0.0261029s, 427536 KB] Variables: 25
[t=0.0261265s, 427536 KB] FactPairs: 182
[t=0.0261486s, 427536 KB] Bytes per state: 8
[t=0.0263434s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106721s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 153
[t=0.106777s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106803s, 430128 KB] f = 153, 1 evaluated, 0 expanded
[t=0.10683s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 153
[t=0.106854s, 430128 KB] pruning method: none
[t=0.118747s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.118798s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.125622s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.125666s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.126978s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.127011s, 431100 KB] g=3, 12 evaluated, 5 expanded
[t=0.12759s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.12762s, 431100 KB] g=4, 15 evaluated, 6 expanded
[t=0.131978s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.132012s, 431100 KB] g=7, 39 evaluated, 12 expanded
[t=0.134564s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.134608s, 431100 KB] g=10, 53 evaluated, 15 expanded
[t=0.134825s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.134854s, 431100 KB] g=10, 54 evaluated, 15 expanded
[t=0.135244s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.135273s, 431100 KB] g=10, 56 evaluated, 15 expanded
[t=0.135667s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.135697s, 431100 KB] g=11, 58 evaluated, 16 expanded
[t=0.137175s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.137206s, 431100 KB] g=12, 66 evaluated, 17 expanded
[t=0.138142s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.138178s, 431100 KB] g=14, 71 evaluated, 19 expanded
[t=0.1393s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.139333s, 431100 KB] g=15, 77 evaluated, 20 expanded
[t=0.155154s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.155197s, 431100 KB] g=19, 164 evaluated, 38 expanded
[t=0.158348s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.158382s, 431232 KB] g=22, 181 evaluated, 42 expanded
[t=0.162953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.162987s, 431232 KB] g=26, 206 evaluated, 48 expanded
[t=0.16338s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.16341s, 431232 KB] g=26, 208 evaluated, 48 expanded
[t=0.16543s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.165461s, 431232 KB] g=27, 219 evaluated, 50 expanded
[t=0.165857s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.165886s, 431232 KB] g=27, 221 evaluated, 50 expanded
[t=0.166281s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.166313s, 431232 KB] g=28, 223 evaluated, 51 expanded
[t=0.167252s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.167287s, 431232 KB] g=29, 228 evaluated, 52 expanded
[t=0.177987s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.178024s, 431232 KB] g=32, 287 evaluated, 63 expanded
[t=0.179175s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.179218s, 431232 KB] g=33, 293 evaluated, 64 expanded
[t=0.181594s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.181628s, 431232 KB] g=35, 306 evaluated, 66 expanded
[t=0.183122s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.183156s, 431232 KB] g=37, 314 evaluated, 68 expanded
[t=0.18517s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.185202s, 431232 KB] g=36, 325 evaluated, 70 expanded
[t=0.189702s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.189738s, 431232 KB] g=40, 349 evaluated, 76 expanded
[t=0.191058s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.191095s, 431232 KB] g=42, 356 evaluated, 78 expanded
[t=0.194024s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.194055s, 431232 KB] g=44, 372 evaluated, 82 expanded
[t=0.195004s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.195039s, 431232 KB] g=46, 377 evaluated, 84 expanded
[t=0.197049s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.197086s, 431364 KB] g=47, 388 evaluated, 87 expanded
[t=0.198029s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.198063s, 431364 KB] g=48, 393 evaluated, 88 expanded
[t=0.198646s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.198679s, 431364 KB] g=49, 396 evaluated, 89 expanded
[t=0.201242s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.201274s, 431364 KB] g=51, 410 evaluated, 94 expanded
[t=0.204759s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.204793s, 431364 KB] g=52, 429 evaluated, 99 expanded
[t=0.205733s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.205767s, 431364 KB] g=53, 434 evaluated, 100 expanded
[t=0.206538s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.20657s, 431364 KB] g=55, 438 evaluated, 102 expanded
[t=0.210413s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.210447s, 431364 KB] g=57, 459 evaluated, 112 expanded
[t=0.21487s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.21491s, 431364 KB] g=60, 484 evaluated, 129 expanded
[t=0.214939s, 431364 KB] Solution found!
[t=0.214966s, 431364 KB] Actual search time: 0.108108s
unstack b e (1)
put-down b (1)
unstack d k (1)
put-down d (1)
unstack e g (1)
stack e k (1)
unstack g i (1)
stack g e (1)
unstack l c (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack c a (1)
stack c i (1)
unstack a h (1)
stack a d (1)
unstack g e (1)
stack g h (1)
unstack c i (1)
stack c b (1)
unstack a d (1)
stack a e (1)
unstack g h (1)
put-down g (1)
unstack h j (1)
stack h g (1)
unstack j f (1)
put-down j (1)
pick-up f (1)
stack f d (1)
unstack a e (1)
stack a h (1)
unstack f d (1)
stack f a (1)
pick-up i (1)
stack i j (1)
unstack e k (1)
stack e c (1)
pick-up k (1)
stack k f (1)
unstack i j (1)
put-down i (1)
unstack e c (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.214991s, 431364 KB] Plan length: 60 step(s).
[t=0.214991s, 431364 KB] Plan cost: 60
[t=0.214991s, 431364 KB] Expanded 130 state(s).
[t=0.214991s, 431364 KB] Reopened 0 state(s).
[t=0.214991s, 431364 KB] Evaluated 484 state(s).
[t=0.214991s, 431364 KB] Evaluations: 484
[t=0.214991s, 431364 KB] Generated 618 state(s).
[t=0.214991s, 431364 KB] Dead ends: 0 state(s).
[t=0.214991s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.214991s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.214991s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.214991s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.214991s, 431364 KB] Number of registered states: 484
[t=0.214991s, 431364 KB] Int hash set load factor: 484/512 = 0.945312
[t=0.214991s, 431364 KB] Int hash set resizes: 9
[t=0.214991s, 431364 KB] Search time: 0.188648s
[t=0.214991s, 431364 KB] Total time: 0.214991s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p102.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6142e-05s, 424928 KB] reading input...
[t=0.00218724s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258376s, 427536 KB] Building successor generator...done!
[t=0.0261143s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261382s, 427536 KB] time for successor generation creation: 0.000166719s
[t=0.0261673s, 427536 KB] Variables: 25
[t=0.0261903s, 427536 KB] FactPairs: 182
[t=0.0262127s, 427536 KB] Bytes per state: 8
[t=0.0264051s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979421s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0979947s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980208s, 430128 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0980495s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0980736s, 430128 KB] pruning method: none
[t=0.116482s, 431100 KB] f = 146, 4 evaluated, 1 expanded
[t=0.117812s, 431100 KB] f = 147, 11 evaluated, 4 expanded
[t=0.119293s, 431100 KB] f = 148, 19 evaluated, 9 expanded
[t=0.121507s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.121541s, 431100 KB] g=5, 31 evaluated, 15 expanded
[t=0.122116s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.122146s, 431100 KB] g=6, 34 evaluated, 16 expanded
[t=0.122361s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.122391s, 431100 KB] g=7, 35 evaluated, 17 expanded
[t=0.123141s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.123171s, 431100 KB] g=8, 39 evaluated, 18 expanded
[t=0.125009s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.125041s, 431100 KB] g=11, 49 evaluated, 22 expanded
[t=0.129408s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.129457s, 431100 KB] g=14, 73 evaluated, 29 expanded
[t=0.140693s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.140731s, 431100 KB] g=19, 135 evaluated, 45 expanded
[t=0.144275s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.14431s, 431100 KB] g=22, 154 evaluated, 49 expanded
[t=0.147086s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.147117s, 431100 KB] g=25, 169 evaluated, 52 expanded
[t=0.14752s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.147556s, 431100 KB] g=26, 171 evaluated, 53 expanded
[t=0.147949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.147979s, 431100 KB] g=26, 173 evaluated, 53 expanded
[t=0.149992s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.150029s, 431232 KB] g=27, 184 evaluated, 55 expanded
[t=0.15078s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.15081s, 431232 KB] g=28, 188 evaluated, 56 expanded
[t=0.154116s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.154148s, 431232 KB] g=30, 206 evaluated, 60 expanded
[t=0.158871s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.158905s, 431232 KB] g=31, 232 evaluated, 65 expanded
[t=0.16074s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.160775s, 431232 KB] g=33, 242 evaluated, 67 expanded
[t=0.161172s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.161202s, 431232 KB] g=34, 244 evaluated, 68 expanded
[t=0.162498s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.162531s, 431232 KB] g=35, 251 evaluated, 70 expanded
[t=0.163477s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.163512s, 431232 KB] g=36, 256 evaluated, 71 expanded
[t=0.164474s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.164507s, 431232 KB] g=37, 261 evaluated, 72 expanded
[t=0.166168s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.166202s, 431232 KB] g=39, 270 evaluated, 74 expanded
[t=0.168239s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.16828s, 431232 KB] g=42, 281 evaluated, 77 expanded
[t=0.16904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.16907s, 431232 KB] g=43, 285 evaluated, 78 expanded
[t=0.170189s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.170222s, 431232 KB] g=44, 291 evaluated, 79 expanded
[t=0.180531s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.180569s, 431232 KB] g=42, 348 evaluated, 92 expanded
[t=0.181501s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.181531s, 431232 KB] g=43, 353 evaluated, 93 expanded
[t=0.182468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.182498s, 431232 KB] g=45, 358 evaluated, 95 expanded
[t=0.182707s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.182735s, 431232 KB] g=45, 359 evaluated, 95 expanded
[t=0.186401s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.186437s, 431232 KB] g=49, 379 evaluated, 101 expanded
[t=0.188301s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.188336s, 431232 KB] g=52, 389 evaluated, 104 expanded
[t=0.189817s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.189848s, 431232 KB] g=55, 397 evaluated, 107 expanded
[t=0.19153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.191566s, 431232 KB] g=57, 406 evaluated, 111 expanded
[t=0.198133s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.198167s, 431364 KB] g=59, 442 evaluated, 125 expanded
[t=0.19911s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.199143s, 431364 KB] g=61, 447 evaluated, 128 expanded
[t=0.199547s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.199578s, 431364 KB] g=62, 449 evaluated, 129 expanded
[t=0.201798s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.201828s, 431364 KB] g=62, 461 evaluated, 137 expanded
[t=0.201861s, 431364 KB] Solution found!
[t=0.201888s, 431364 KB] Actual search time: 0.103811s
put-down a (1)
unstack b f (1)
stack b e (1)
unstack f h (1)
stack f b (1)
unstack h l (1)
stack h a (1)
unstack l g (1)
put-down l (1)
unstack g j (1)
put-down g (1)
pick-up l (1)
stack l f (1)
unstack j d (1)
put-down j (1)
unstack d i (1)
stack d j (1)
unstack l f (1)
stack l d (1)
unstack h a (1)
stack h g (1)
unstack f b (1)
stack f a (1)
unstack b e (1)
stack b l (1)
unstack i c (1)
put-down i (1)
unstack f a (1)
stack f e (1)
pick-up c (1)
stack c b (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
put-down e (1)
unstack c b (1)
put-down c (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack b l (1)
stack b e (1)
unstack l d (1)
stack l c (1)
unstack b e (1)
stack b i (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.201913s, 431364 KB] Plan length: 63 step(s).
[t=0.201913s, 431364 KB] Plan cost: 63
[t=0.201913s, 431364 KB] Expanded 139 state(s).
[t=0.201913s, 431364 KB] Reopened 0 state(s).
[t=0.201913s, 431364 KB] Evaluated 462 state(s).
[t=0.201913s, 431364 KB] Evaluations: 462
[t=0.201913s, 431364 KB] Generated 602 state(s).
[t=0.201913s, 431364 KB] Dead ends: 0 state(s).
[t=0.201913s, 431364 KB] Expanded until last jump: 9 state(s).
[t=0.201913s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.201913s, 431364 KB] Evaluated until last jump: 19 state(s).
[t=0.201913s, 431364 KB] Generated until last jump: 26 state(s).
[t=0.201913s, 431364 KB] Number of registered states: 462
[t=0.201913s, 431364 KB] Int hash set load factor: 462/512 = 0.902344
[t=0.201913s, 431364 KB] Int hash set resizes: 9
[t=0.201913s, 431364 KB] Search time: 0.175509s
[t=0.201913s, 431364 KB] Total time: 0.201913s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p103.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5768e-05s, 424928 KB] reading input...
[t=0.00216985s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257438s, 427536 KB] Building successor generator...done!
[t=0.0260218s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260445s, 427536 KB] time for successor generation creation: 0.000166154s
[t=0.026072s, 427536 KB] Variables: 25
[t=0.0260946s, 427536 KB] FactPairs: 182
[t=0.0261163s, 427536 KB] Bytes per state: 8
[t=0.0263096s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977222s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0977753s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978009s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0978275s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0978511s, 430128 KB] pruning method: none
[t=0.10963s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.109681s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116301s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.116344s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117092s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.117122s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.1184s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.118433s, 431100 KB] g=3, 15 evaluated, 3 expanded
[t=0.119172s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.119201s, 431100 KB] g=4, 19 evaluated, 4 expanded
[t=0.12828s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.128315s, 431100 KB] g=10, 70 evaluated, 18 expanded
[t=0.130832s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.130867s, 431100 KB] g=13, 84 evaluated, 21 expanded
[t=0.131074s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.131103s, 431100 KB] g=13, 85 evaluated, 21 expanded
[t=0.132907s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.132949s, 431100 KB] g=14, 95 evaluated, 23 expanded
[t=0.13371s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.133741s, 431100 KB] g=15, 99 evaluated, 24 expanded
[t=0.134169s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.1342s, 431100 KB] g=15, 101 evaluated, 24 expanded
[t=0.135724s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.135754s, 431100 KB] g=17, 109 evaluated, 26 expanded
[t=0.137221s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.137256s, 431100 KB] g=17, 117 evaluated, 28 expanded
[t=0.138001s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.13803s, 431100 KB] g=18, 121 evaluated, 29 expanded
[t=0.140912s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.140943s, 431100 KB] g=20, 137 evaluated, 33 expanded
[t=0.147769s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.147805s, 431232 KB] g=27, 175 evaluated, 45 expanded
[t=0.150171s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.150204s, 431232 KB] g=30, 188 evaluated, 49 expanded
[t=0.153456s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.15349s, 431232 KB] g=36, 206 evaluated, 56 expanded
[t=0.156199s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.156233s, 431232 KB] g=40, 221 evaluated, 62 expanded
[t=0.15734s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.157375s, 431232 KB] g=41, 227 evaluated, 63 expanded
[t=0.157588s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.157617s, 431232 KB] g=42, 228 evaluated, 64 expanded
[t=0.15907s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.159099s, 431232 KB] g=43, 236 evaluated, 66 expanded
[t=0.159483s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.159512s, 431232 KB] g=44, 238 evaluated, 67 expanded
[t=0.159721s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.159749s, 431232 KB] g=44, 239 evaluated, 67 expanded
[t=0.163035s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.163075s, 431232 KB] g=46, 257 evaluated, 74 expanded
[t=0.163824s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.163854s, 431232 KB] g=47, 261 evaluated, 75 expanded
[t=0.1655s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.165536s, 431232 KB] g=50, 270 evaluated, 79 expanded
[t=0.170766s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.170802s, 431232 KB] g=51, 299 evaluated, 93 expanded
[t=0.171192s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.171221s, 431232 KB] g=52, 301 evaluated, 94 expanded
[t=0.171617s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.171647s, 431232 KB] g=54, 304 evaluated, 96 expanded
[t=0.171674s, 431232 KB] Solution found!
[t=0.171699s, 431232 KB] Actual search time: 0.0738441s
unstack e a (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack a l (1)
put-down a (1)
unstack e d (1)
stack e k (1)
unstack d i (1)
put-down d (1)
unstack l j (1)
stack l d (1)
unstack j h (1)
stack j e (1)
pick-up h (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack i c (1)
stack i l (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e j (1)
unstack k f (1)
stack k e (1)
unstack f b (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up b (1)
stack b c (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i l (1)
put-down i (1)
unstack b c (1)
stack b i (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack b i (1)
put-down b (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.171723s, 431232 KB] Plan length: 54 step(s).
[t=0.171723s, 431232 KB] Plan cost: 54
[t=0.171723s, 431232 KB] Expanded 97 state(s).
[t=0.171723s, 431232 KB] Reopened 0 state(s).
[t=0.171723s, 431232 KB] Evaluated 304 state(s).
[t=0.171723s, 431232 KB] Evaluations: 304
[t=0.171723s, 431232 KB] Generated 401 state(s).
[t=0.171723s, 431232 KB] Dead ends: 0 state(s).
[t=0.171723s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.171723s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.171723s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.171723s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.171723s, 431232 KB] Number of registered states: 304
[t=0.171723s, 431232 KB] Int hash set load factor: 304/512 = 0.59375
[t=0.171723s, 431232 KB] Int hash set resizes: 9
[t=0.171723s, 431232 KB] Search time: 0.145414s
[t=0.171723s, 431232 KB] Total time: 0.171723s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p104.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6529e-05s, 424928 KB] reading input...
[t=0.00211534s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258505s, 427536 KB] Building successor generator...done!
[t=0.0261292s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261525s, 427536 KB] time for successor generation creation: 0.000168831s
[t=0.0261809s, 427536 KB] Variables: 25
[t=0.0262039s, 427536 KB] FactPairs: 182
[t=0.0262259s, 427536 KB] Bytes per state: 8
[t=0.0264207s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981379s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0981894s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098215s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0982424s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0982658s, 430128 KB] pruning method: none
[t=0.116724s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.116774s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.11788s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.117922s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.121166s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.121199s, 431100 KB] g=3, 28 evaluated, 5 expanded
[t=0.132852s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.132886s, 431100 KB] g=7, 93 evaluated, 16 expanded
[t=0.133811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.133842s, 431100 KB] g=8, 98 evaluated, 17 expanded
[t=0.137463s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.137497s, 431100 KB] g=9, 118 evaluated, 20 expanded
[t=0.140058s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.14009s, 431100 KB] g=10, 132 evaluated, 22 expanded
[t=0.140479s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.140508s, 431100 KB] g=10, 134 evaluated, 22 expanded
[t=0.140898s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.14093s, 431100 KB] g=11, 136 evaluated, 23 expanded
[t=0.141317s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.141349s, 431100 KB] g=11, 138 evaluated, 23 expanded
[t=0.142091s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.14212s, 431100 KB] g=11, 142 evaluated, 23 expanded
[t=0.155582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.155616s, 431232 KB] g=15, 217 evaluated, 34 expanded
[t=0.159956s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.159991s, 431232 KB] g=18, 241 evaluated, 37 expanded
[t=0.161463s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.161493s, 431232 KB] g=19, 249 evaluated, 38 expanded
[t=0.162597s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.16263s, 431232 KB] g=20, 255 evaluated, 39 expanded
[t=0.171865s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.171901s, 431232 KB] g=22, 306 evaluated, 49 expanded
[t=0.177138s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.177174s, 431232 KB] g=24, 335 evaluated, 57 expanded
[t=0.201019s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.20106s, 431364 KB] g=30, 468 evaluated, 95 expanded
[t=0.251434s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.251473s, 431496 KB] g=30, 750 evaluated, 169 expanded, 8 reopened
[t=0.255091s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.255125s, 431496 KB] g=32, 770 evaluated, 175 expanded, 8 reopened
[t=0.333653s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.333696s, 431628 KB] g=30, 1210 evaluated, 303 expanded, 11 reopened
[t=0.334264s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.334294s, 431628 KB] g=31, 1213 evaluated, 304 expanded, 11 reopened
[t=0.338796s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.338832s, 431628 KB] g=33, 1238 evaluated, 310 expanded, 11 reopened
[t=0.348515s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.348551s, 431628 KB] g=42, 1292 evaluated, 323 expanded, 11 reopened
[t=0.350724s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.350755s, 431628 KB] g=45, 1304 evaluated, 326 expanded, 11 reopened
[t=0.351861s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.351895s, 431628 KB] g=44, 1310 evaluated, 328 expanded, 11 reopened
[t=0.358699s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.358736s, 431628 KB] g=45, 1348 evaluated, 336 expanded, 11 reopened
[t=0.373973s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.374011s, 431760 KB] g=51, 1433 evaluated, 358 expanded, 11 reopened
[t=0.375138s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.375174s, 431760 KB] g=53, 1439 evaluated, 360 expanded, 11 reopened
[t=0.375384s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.375412s, 431760 KB] g=53, 1440 evaluated, 360 expanded, 11 reopened
[t=0.377415s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.377446s, 431760 KB] g=56, 1451 evaluated, 363 expanded, 11 reopened
[t=0.377837s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.377865s, 431760 KB] g=57, 1453 evaluated, 364 expanded, 11 reopened
[t=0.378256s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.378292s, 431760 KB] g=58, 1455 evaluated, 365 expanded, 11 reopened
[t=0.378684s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.378716s, 431760 KB] g=59, 1457 evaluated, 366 expanded, 11 reopened
[t=0.378935s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.378965s, 431760 KB] g=59, 1458 evaluated, 366 expanded, 11 reopened
[t=0.379356s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.379385s, 431760 KB] g=60, 1460 evaluated, 367 expanded, 11 reopened
[t=0.380136s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.380165s, 431760 KB] g=63, 1464 evaluated, 370 expanded, 11 reopened
[t=0.383432s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.383464s, 431760 KB] g=67, 1482 evaluated, 380 expanded, 11 reopened
[t=0.385132s, 431760 KB] Solution found!
[t=0.38517s, 431760 KB] Actual search time: 0.286902s
unstack d k (1)
put-down d (1)
pick-up g (1)
stack g e (1)
unstack i h (1)
put-down i (1)
unstack l j (1)
put-down l (1)
unstack j a (1)
stack j l (1)
unstack b f (1)
stack b i (1)
unstack k c (1)
stack k j (1)
unstack g e (1)
stack g k (1)
pick-up c (1)
stack c b (1)
pick-up h (1)
stack h d (1)
unstack g k (1)
stack g h (1)
pick-up e (1)
stack e k (1)
unstack g h (1)
put-down g (1)
unstack h d (1)
stack h g (1)
pick-up f (1)
stack f d (1)
pick-up a (1)
stack a h (1)
unstack e k (1)
put-down e (1)
unstack k j (1)
stack k f (1)
unstack j l (1)
stack j e (1)
unstack k f (1)
stack k l (1)
unstack f d (1)
stack f a (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e c (1)
pick-up d (1)
stack d j (1)
unstack k l (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack c b (1)
put-down c (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.385196s, 431760 KB] Plan length: 68 step(s).
[t=0.385196s, 431760 KB] Plan cost: 68
[t=0.385196s, 431760 KB] Expanded 388 state(s).
[t=0.385196s, 431760 KB] Reopened 11 state(s).
[t=0.385196s, 431760 KB] Evaluated 1492 state(s).
[t=0.385196s, 431760 KB] Evaluations: 1492
[t=0.385196s, 431760 KB] Generated 1979 state(s).
[t=0.385196s, 431760 KB] Dead ends: 0 state(s).
[t=0.385196s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.385196s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.385196s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.385196s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.385196s, 431760 KB] Number of registered states: 1492
[t=0.385196s, 431760 KB] Int hash set load factor: 1492/2048 = 0.728516
[t=0.385196s, 431760 KB] Int hash set resizes: 11
[t=0.385196s, 431760 KB] Search time: 0.358776s
[t=0.385196s, 431760 KB] Total time: 0.385196s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p105.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6793e-05s, 424928 KB] reading input...
[t=0.00219109s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257552s, 427536 KB] Building successor generator...done!
[t=0.0260341s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026058s, 427536 KB] time for successor generation creation: 0.000167387s
[t=0.0260865s, 427536 KB] Variables: 25
[t=0.0261097s, 427536 KB] FactPairs: 182
[t=0.0261319s, 427536 KB] Bytes per state: 8
[t=0.0263295s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098278s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0983298s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983566s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0983846s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0984087s, 430128 KB] pruning method: none
[t=0.110288s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.11035s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117322s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.117366s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118472s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.118503s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.118711s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.118741s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.119852s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.119883s, 431100 KB] g=4, 19 evaluated, 5 expanded
[t=0.121349s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.121381s, 431100 KB] g=5, 27 evaluated, 7 expanded
[t=0.129103s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.12914s, 431100 KB] g=6, 70 evaluated, 18 expanded
[t=0.12971s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.12974s, 431100 KB] g=7, 73 evaluated, 19 expanded
[t=0.129948s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.129977s, 431100 KB] g=7, 74 evaluated, 19 expanded
[t=0.130899s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.130931s, 431100 KB] g=8, 79 evaluated, 20 expanded
[t=0.132212s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.132246s, 431100 KB] g=10, 86 evaluated, 22 expanded
[t=0.135327s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.135362s, 431100 KB] g=14, 103 evaluated, 27 expanded
[t=0.135749s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.135779s, 431100 KB] g=14, 105 evaluated, 27 expanded
[t=0.136896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.136928s, 431100 KB] g=15, 111 evaluated, 29 expanded
[t=0.13714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.137169s, 431100 KB] g=15, 112 evaluated, 29 expanded
[t=0.139714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.139747s, 431100 KB] g=17, 126 evaluated, 33 expanded
[t=0.140508s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.140542s, 431100 KB] g=18, 130 evaluated, 34 expanded
[t=0.142741s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.142776s, 431100 KB] g=19, 142 evaluated, 37 expanded
[t=0.145868s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.145903s, 431232 KB] g=22, 159 evaluated, 41 expanded
[t=0.14738s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.14741s, 431232 KB] g=24, 167 evaluated, 43 expanded
[t=0.151583s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.151616s, 431232 KB] g=25, 190 evaluated, 50 expanded
[t=0.153979s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.154014s, 431232 KB] g=28, 203 evaluated, 53 expanded
[t=0.154403s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.154432s, 431232 KB] g=28, 205 evaluated, 53 expanded
[t=0.165059s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.165096s, 431232 KB] g=29, 264 evaluated, 71 expanded, 1 reopened
[t=0.166375s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.166408s, 431232 KB] g=31, 271 evaluated, 73 expanded, 1 reopened
[t=0.167688s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.167719s, 431232 KB] g=31, 278 evaluated, 75 expanded, 1 reopened
[t=0.168643s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.168676s, 431232 KB] g=32, 283 evaluated, 76 expanded, 1 reopened
[t=0.170677s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.17071s, 431232 KB] g=33, 294 evaluated, 79 expanded, 1 reopened
[t=0.171635s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.171668s, 431232 KB] g=34, 299 evaluated, 80 expanded, 1 reopened
[t=0.177399s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.177432s, 431232 KB] g=36, 331 evaluated, 89 expanded, 1 reopened
[t=0.178173s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.178206s, 431232 KB] g=37, 335 evaluated, 90 expanded, 1 reopened
[t=0.17895s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.17898s, 431232 KB] g=38, 339 evaluated, 91 expanded, 1 reopened
[t=0.180256s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.180295s, 431232 KB] g=40, 346 evaluated, 93 expanded, 1 reopened
[t=0.183547s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.18358s, 431232 KB] g=44, 364 evaluated, 99 expanded, 1 reopened
[t=0.184325s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.184358s, 431232 KB] g=45, 368 evaluated, 100 expanded, 1 reopened
[t=0.185662s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.1857s, 431232 KB] g=45, 375 evaluated, 103 expanded, 1 reopened
[t=0.197201s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.197239s, 431364 KB] g=46, 439 evaluated, 128 expanded, 3 reopened
[t=0.201241s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.201275s, 431364 KB] g=50, 462 evaluated, 141 expanded, 3 reopened
[t=0.201303s, 431364 KB] Solution found!
[t=0.201329s, 431364 KB] Actual search time: 0.102916s
unstack g l (1)
put-down g (1)
unstack j c (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d f (1)
stack d j (1)
pick-up c (1)
stack c b (1)
unstack f k (1)
stack f g (1)
unstack k i (1)
stack k d (1)
unstack i a (1)
put-down i (1)
unstack f g (1)
stack f i (1)
unstack a h (1)
stack a f (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.201354s, 431364 KB] Plan length: 50 step(s).
[t=0.201354s, 431364 KB] Plan cost: 50
[t=0.201354s, 431364 KB] Expanded 142 state(s).
[t=0.201354s, 431364 KB] Reopened 3 state(s).
[t=0.201354s, 431364 KB] Evaluated 462 state(s).
[t=0.201354s, 431364 KB] Evaluations: 462
[t=0.201354s, 431364 KB] Generated 617 state(s).
[t=0.201354s, 431364 KB] Dead ends: 0 state(s).
[t=0.201354s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.201354s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.201354s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.201354s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.201354s, 431364 KB] Number of registered states: 462
[t=0.201354s, 431364 KB] Int hash set load factor: 462/512 = 0.902344
[t=0.201354s, 431364 KB] Int hash set resizes: 9
[t=0.201354s, 431364 KB] Search time: 0.175025s
[t=0.201354s, 431364 KB] Total time: 0.201354s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p106.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5444e-05s, 424928 KB] reading input...
[t=0.00214815s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258514s, 427536 KB] Building successor generator...done!
[t=0.0261314s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261549s, 427536 KB] time for successor generation creation: 0.000168946s
[t=0.0261839s, 427536 KB] Variables: 25
[t=0.0262065s, 427536 KB] FactPairs: 182
[t=0.0262284s, 427536 KB] Bytes per state: 8
[t=0.0264238s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982904s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.0983425s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983683s, 430128 KB] f = 128, 1 evaluated, 0 expanded
[t=0.0983961s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.0984203s, 430128 KB] pruning method: none
[t=0.110233s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.110286s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117253s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.117307s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.117705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.117736s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.117943s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.117972s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.119791s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.119822s, 431100 KB] g=5, 19 evaluated, 7 expanded
[t=0.125591s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.125624s, 431100 KB] g=11, 51 evaluated, 15 expanded
[t=0.143415s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.143449s, 431100 KB] g=13, 150 evaluated, 40 expanded
[t=0.156442s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.156479s, 431232 KB] g=16, 222 evaluated, 63 expanded
[t=0.181229s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.181265s, 431232 KB] g=21, 359 evaluated, 120 expanded, 3 reopened
[t=0.276229s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.27627s, 431364 KB] g=17, 888 evaluated, 336 expanded, 36 reopened
[t=0.276483s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.276512s, 431364 KB] g=17, 889 evaluated, 336 expanded, 36 reopened
[t=0.276916s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.276948s, 431364 KB] g=18, 891 evaluated, 337 expanded, 36 reopened
[t=0.282159s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.282193s, 431364 KB] g=21, 920 evaluated, 348 expanded, 36 reopened
[t=0.283297s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.28333s, 431364 KB] g=23, 926 evaluated, 350 expanded, 36 reopened
[t=0.288717s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.288754s, 431364 KB] g=27, 956 evaluated, 359 expanded, 36 reopened
[t=0.288964s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.288993s, 431364 KB] g=27, 957 evaluated, 359 expanded, 36 reopened
[t=0.28956s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.289593s, 431364 KB] g=28, 960 evaluated, 360 expanded, 36 reopened
[t=0.289799s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.289833s, 431364 KB] g=28, 961 evaluated, 360 expanded, 36 reopened
[t=0.29416s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.294198s, 431364 KB] g=32, 985 evaluated, 367 expanded, 36 reopened
[t=0.294407s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.294436s, 431364 KB] g=32, 986 evaluated, 367 expanded, 36 reopened
[t=0.297512s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.297551s, 431496 KB] g=34, 1003 evaluated, 373 expanded, 36 reopened
[t=0.297951s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.297981s, 431496 KB] g=35, 1005 evaluated, 374 expanded, 36 reopened
[t=0.298373s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.298402s, 431496 KB] g=36, 1007 evaluated, 375 expanded, 36 reopened
[t=0.299872s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.299902s, 431496 KB] g=38, 1015 evaluated, 378 expanded, 36 reopened
[t=0.30011s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.300141s, 431496 KB] g=38, 1016 evaluated, 378 expanded, 36 reopened
[t=0.318203s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.318243s, 431496 KB] g=43, 1114 evaluated, 419 expanded, 36 reopened
[t=0.318459s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.318488s, 431496 KB] g=44, 1115 evaluated, 420 expanded, 36 reopened
[t=0.318878s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.318907s, 431496 KB] g=45, 1117 evaluated, 421 expanded, 36 reopened
[t=0.319484s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.319514s, 431496 KB] g=47, 1121 evaluated, 424 expanded, 36 reopened
[t=0.319542s, 431496 KB] Solution found!
[t=0.319568s, 431496 KB] Actual search time: 0.221144s
stack k b (1)
unstack e g (1)
stack e k (1)
unstack l a (1)
put-down l (1)
unstack a h (1)
put-down a (1)
unstack h f (1)
put-down h (1)
unstack f j (1)
stack f e (1)
pick-up a (1)
stack a l (1)
pick-up h (1)
stack h g (1)
unstack a l (1)
stack a h (1)
unstack f e (1)
stack f j (1)
unstack e k (1)
put-down e (1)
unstack f j (1)
stack f a (1)
pick-up e (1)
stack e j (1)
unstack k b (1)
stack k f (1)
unstack b d (1)
stack b l (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.319593s, 431496 KB] Plan length: 47 step(s).
[t=0.319593s, 431496 KB] Plan cost: 47
[t=0.319593s, 431496 KB] Expanded 425 state(s).
[t=0.319593s, 431496 KB] Reopened 36 state(s).
[t=0.319593s, 431496 KB] Evaluated 1121 state(s).
[t=0.319593s, 431496 KB] Evaluations: 1121
[t=0.319593s, 431496 KB] Generated 1745 state(s).
[t=0.319593s, 431496 KB] Dead ends: 0 state(s).
[t=0.319593s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.319593s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.319593s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.319593s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.319593s, 431496 KB] Number of registered states: 1121
[t=0.319593s, 431496 KB] Int hash set load factor: 1121/2048 = 0.547363
[t=0.319593s, 431496 KB] Int hash set resizes: 11
[t=0.319593s, 431496 KB] Search time: 0.29317s
[t=0.319593s, 431496 KB] Total time: 0.319593s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p107.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6444e-05s, 424928 KB] reading input...
[t=0.00216015s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257869s, 427536 KB] Building successor generator...done!
[t=0.0260768s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261002s, 427536 KB] time for successor generation creation: 0.000164334s
[t=0.0261292s, 427536 KB] Variables: 25
[t=0.0261521s, 427536 KB] FactPairs: 182
[t=0.0261742s, 427536 KB] Bytes per state: 8
[t=0.0263696s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983012s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.0983527s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983788s, 430128 KB] f = 104, 1 evaluated, 0 expanded
[t=0.0984067s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.0984308s, 430128 KB] pruning method: none
[t=0.116848s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.116899s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117113s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.117143s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117541s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.11757s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.119963s, 431100 KB] f = 105, 20 evaluated, 5 expanded
[t=0.121263s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.121294s, 431100 KB] g=4, 27 evaluated, 7 expanded
[t=0.122786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.122818s, 431100 KB] g=6, 35 evaluated, 9 expanded
[t=0.123754s, 431100 KB] f = 107, 40 evaluated, 10 expanded
[t=0.125052s, 431100 KB] f = 109, 47 evaluated, 12 expanded
[t=0.125815s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.125848s, 431100 KB] g=4, 51 evaluated, 13 expanded
[t=0.126422s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.126451s, 431100 KB] g=5, 54 evaluated, 14 expanded
[t=0.12666s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.126689s, 431100 KB] g=5, 55 evaluated, 14 expanded
[t=0.129253s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.129288s, 431100 KB] g=6, 69 evaluated, 17 expanded
[t=0.134198s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.134237s, 431100 KB] g=9, 96 evaluated, 23 expanded
[t=0.140759s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.140806s, 431100 KB] g=11, 132 evaluated, 32 expanded
[t=0.141745s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.141778s, 431100 KB] g=12, 137 evaluated, 33 expanded
[t=0.152243s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.152279s, 431232 KB] g=14, 195 evaluated, 51 expanded
[t=0.169803s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.169843s, 431232 KB] g=26, 292 evaluated, 72 expanded
[t=0.184258s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.184295s, 431232 KB] g=29, 372 evaluated, 89 expanded
[t=0.186677s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.186713s, 431232 KB] g=31, 385 evaluated, 91 expanded
[t=0.188367s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.188398s, 431232 KB] g=33, 394 evaluated, 93 expanded
[t=0.188967s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.188999s, 431232 KB] g=33, 397 evaluated, 93 expanded
[t=0.195171s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.195209s, 431364 KB] g=37, 431 evaluated, 100 expanded
[t=0.195788s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.195821s, 431364 KB] g=38, 434 evaluated, 101 expanded
[t=0.200202s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.20024s, 431364 KB] g=38, 458 evaluated, 108 expanded
[t=0.201181s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.201211s, 431364 KB] g=39, 463 evaluated, 109 expanded
[t=0.203589s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.203622s, 431364 KB] g=42, 476 evaluated, 113 expanded
[t=0.204018s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.20405s, 431364 KB] g=43, 478 evaluated, 114 expanded
[t=0.204626s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.204656s, 431364 KB] g=44, 481 evaluated, 115 expanded
[t=0.20487s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.204902s, 431364 KB] g=45, 482 evaluated, 116 expanded
[t=0.205115s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.205149s, 431364 KB] g=46, 483 evaluated, 117 expanded
[t=0.205545s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.205575s, 431364 KB] g=47, 485 evaluated, 118 expanded
[t=0.206891s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.206924s, 431364 KB] g=48, 492 evaluated, 121 expanded
[t=0.209496s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.209528s, 431364 KB] g=51, 506 evaluated, 127 expanded
[t=0.21814s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.218177s, 431364 KB] g=56, 553 evaluated, 152 expanded
[t=0.222013s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.222048s, 431364 KB] g=60, 574 evaluated, 162 expanded
[t=0.22245s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.222483s, 431364 KB] g=62, 577 evaluated, 164 expanded
[t=0.222511s, 431364 KB] Solution found!
[t=0.222537s, 431364 KB] Actual search time: 0.124103s
unstack j l (1)
stack j a (1)
unstack l f (1)
put-down l (1)
unstack f h (1)
put-down f (1)
unstack j a (1)
stack j e (1)
pick-up h (1)
stack h g (1)
unstack j e (1)
put-down j (1)
pick-up f (1)
stack f a (1)
unstack e b (1)
stack e j (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
stack i d (1)
pick-up c (1)
stack c b (1)
unstack i d (1)
put-down i (1)
unstack f a (1)
stack f d (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
pick-up i (1)
stack i d (1)
pick-up k (1)
stack k f (1)
unstack i d (1)
stack i c (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b d (1)
pick-up l (1)
stack l c (1)
unstack b d (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.222563s, 431364 KB] Plan length: 62 step(s).
[t=0.222563s, 431364 KB] Plan cost: 62
[t=0.222563s, 431364 KB] Expanded 165 state(s).
[t=0.222563s, 431364 KB] Reopened 0 state(s).
[t=0.222563s, 431364 KB] Evaluated 577 state(s).
[t=0.222563s, 431364 KB] Evaluations: 577
[t=0.222563s, 431364 KB] Generated 750 state(s).
[t=0.222563s, 431364 KB] Dead ends: 0 state(s).
[t=0.222563s, 431364 KB] Expanded until last jump: 12 state(s).
[t=0.222563s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.222563s, 431364 KB] Evaluated until last jump: 47 state(s).
[t=0.222563s, 431364 KB] Generated until last jump: 57 state(s).
[t=0.222563s, 431364 KB] Number of registered states: 577
[t=0.222563s, 431364 KB] Int hash set load factor: 577/1024 = 0.563477
[t=0.222563s, 431364 KB] Int hash set resizes: 10
[t=0.222563s, 431364 KB] Search time: 0.196194s
[t=0.222563s, 431364 KB] Total time: 0.222563s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p108.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6429e-05s, 424928 KB] reading input...
[t=0.00221899s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262014s, 427536 KB] Building successor generator...done!
[t=0.0264969s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265231s, 427536 KB] time for successor generation creation: 0.000176352s
[t=0.0265536s, 427536 KB] Variables: 25
[t=0.0265786s, 427536 KB] FactPairs: 182
[t=0.0266024s, 427536 KB] Bytes per state: 8
[t=0.026809s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987825s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0988349s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098862s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0988899s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0989144s, 430128 KB] pruning method: none
[t=0.117487s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.117556s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117996s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.11803s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118452s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.118484s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.119805s, 431100 KB] f = 147, 16 evaluated, 4 expanded
[t=0.120567s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.120599s, 431100 KB] g=2, 20 evaluated, 6 expanded
[t=0.124519s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.124555s, 431100 KB] g=6, 41 evaluated, 12 expanded
[t=0.126574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.126608s, 431100 KB] g=4, 52 evaluated, 15 expanded
[t=0.1305s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.130538s, 431100 KB] g=7, 73 evaluated, 19 expanded
[t=0.135069s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.135104s, 431100 KB] g=8, 98 evaluated, 24 expanded
[t=0.139082s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.139119s, 431100 KB] g=10, 120 evaluated, 29 expanded
[t=0.141503s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.141543s, 431100 KB] g=12, 133 evaluated, 31 expanded
[t=0.141756s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.141785s, 431100 KB] g=12, 134 evaluated, 31 expanded
[t=0.141994s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.142023s, 431100 KB] g=12, 135 evaluated, 31 expanded
[t=0.143314s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.143346s, 431100 KB] g=14, 142 evaluated, 33 expanded
[t=0.170098s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.170138s, 431232 KB] g=20, 290 evaluated, 69 expanded
[t=0.170897s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.170932s, 431232 KB] g=21, 294 evaluated, 70 expanded
[t=0.172047s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.172081s, 431232 KB] g=22, 300 evaluated, 71 expanded
[t=0.185755s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.185794s, 431232 KB] g=25, 376 evaluated, 89 expanded
[t=0.186189s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.186225s, 431232 KB] g=26, 378 evaluated, 90 expanded
[t=0.207322s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.207361s, 431364 KB] g=30, 495 evaluated, 128 expanded
[t=0.215947s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.215986s, 431364 KB] g=32, 542 evaluated, 142 expanded, 3 reopened
[t=0.216745s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.216777s, 431364 KB] g=33, 546 evaluated, 143 expanded, 3 reopened
[t=0.217547s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.217581s, 431364 KB] g=34, 550 evaluated, 144 expanded, 3 reopened
[t=0.218511s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.218547s, 431364 KB] g=35, 555 evaluated, 145 expanded, 3 reopened
[t=0.230991s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.231032s, 431364 KB] g=40, 624 evaluated, 160 expanded, 3 reopened
[t=0.232869s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.232904s, 431364 KB] g=39, 634 evaluated, 163 expanded, 3 reopened
[t=0.234018s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.234052s, 431364 KB] g=40, 640 evaluated, 164 expanded, 3 reopened
[t=0.234985s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.235022s, 431496 KB] g=41, 645 evaluated, 165 expanded, 3 reopened
[t=0.235418s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.235449s, 431496 KB] g=42, 647 evaluated, 166 expanded, 3 reopened
[t=0.238007s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.238044s, 431496 KB] g=43, 661 evaluated, 169 expanded, 3 reopened
[t=0.259823s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.259862s, 431496 KB] g=45, 782 evaluated, 198 expanded, 3 reopened
[t=0.27407s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.274112s, 431496 KB] g=45, 861 evaluated, 218 expanded, 3 reopened
[t=0.274325s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.274361s, 431496 KB] g=45, 862 evaluated, 218 expanded, 3 reopened
[t=0.279413s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.27945s, 431496 KB] g=47, 890 evaluated, 226 expanded, 3 reopened
[t=0.279842s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.279873s, 431496 KB] g=47, 892 evaluated, 226 expanded, 3 reopened
[t=0.280088s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.280117s, 431496 KB] g=48, 893 evaluated, 227 expanded, 3 reopened
[t=0.280328s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.280357s, 431496 KB] g=48, 894 evaluated, 227 expanded, 3 reopened
[t=0.281832s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.281867s, 431496 KB] g=51, 902 evaluated, 230 expanded, 3 reopened
[t=0.282805s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.282836s, 431496 KB] g=51, 907 evaluated, 232 expanded, 3 reopened
[t=0.283584s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.283615s, 431496 KB] g=52, 911 evaluated, 233 expanded, 3 reopened
[t=0.284368s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.284399s, 431496 KB] g=54, 915 evaluated, 235 expanded, 3 reopened
[t=0.285506s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.285542s, 431496 KB] g=55, 921 evaluated, 236 expanded, 3 reopened
[t=0.285933s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.285964s, 431496 KB] g=56, 923 evaluated, 237 expanded, 3 reopened
[t=0.287609s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.28764s, 431496 KB] g=59, 932 evaluated, 241 expanded, 3 reopened
[t=0.288569s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.288599s, 431496 KB] g=61, 937 evaluated, 244 expanded, 3 reopened
[t=0.28863s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.288654s, 431496 KB] g=62, 938 evaluated, 245 expanded, 3 reopened
[t=0.28868s, 431496 KB] Solution found!
[t=0.288706s, 431496 KB] Actual search time: 0.189788s
unstack c l (1)
put-down c (1)
unstack h i (1)
put-down h (1)
unstack j a (1)
put-down j (1)
pick-up i (1)
stack i c (1)
unstack a b (1)
stack a d (1)
unstack b g (1)
stack b l (1)
pick-up h (1)
stack h g (1)
unstack a d (1)
put-down a (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up a (1)
stack a d (1)
pick-up j (1)
stack j c (1)
unstack h g (1)
stack h a (1)
unstack j c (1)
put-down j (1)
unstack g k (1)
put-down g (1)
unstack k e (1)
stack k j (1)
unstack e f (1)
stack e i (1)
pick-up f (1)
stack f e (1)
unstack h a (1)
stack h g (1)
unstack a d (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.288731s, 431496 KB] Plan length: 62 step(s).
[t=0.288731s, 431496 KB] Plan cost: 62
[t=0.288731s, 431496 KB] Expanded 246 state(s).
[t=0.288731s, 431496 KB] Reopened 3 state(s).
[t=0.288731s, 431496 KB] Evaluated 938 state(s).
[t=0.288731s, 431496 KB] Evaluations: 938
[t=0.288731s, 431496 KB] Generated 1225 state(s).
[t=0.288731s, 431496 KB] Dead ends: 0 state(s).
[t=0.288731s, 431496 KB] Expanded until last jump: 4 state(s).
[t=0.288731s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.288731s, 431496 KB] Evaluated until last jump: 16 state(s).
[t=0.288731s, 431496 KB] Generated until last jump: 18 state(s).
[t=0.288731s, 431496 KB] Number of registered states: 938
[t=0.288731s, 431496 KB] Int hash set load factor: 938/1024 = 0.916016
[t=0.288731s, 431496 KB] Int hash set resizes: 10
[t=0.288731s, 431496 KB] Search time: 0.261922s
[t=0.288731s, 431496 KB] Total time: 0.288731s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p109.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6491e-05s, 424928 KB] reading input...
[t=0.00216491s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259166s, 427536 KB] Building successor generator...done!
[t=0.0261964s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262196s, 427536 KB] time for successor generation creation: 0.000169876s
[t=0.0262479s, 427536 KB] Variables: 25
[t=0.0262706s, 427536 KB] FactPairs: 182
[t=0.0262929s, 427536 KB] Bytes per state: 8
[t=0.0264844s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988711s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 153
[t=0.0989244s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989502s, 430128 KB] f = 153, 1 evaluated, 0 expanded
[t=0.098989s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 153
[t=0.0990138s, 430128 KB] pruning method: none
[t=0.110852s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.110904s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.118004s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118419s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.11845s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.118862s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.118892s, 431100 KB] g=4, 10 evaluated, 4 expanded
[t=0.120374s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.120408s, 431100 KB] g=6, 17 evaluated, 6 expanded
[t=0.125757s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.12579s, 431100 KB] g=8, 45 evaluated, 16 expanded
[t=0.126203s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.126233s, 431100 KB] g=9, 47 evaluated, 17 expanded
[t=0.12872s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.128752s, 431100 KB] g=12, 60 evaluated, 21 expanded
[t=0.132783s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.13283s, 431100 KB] g=16, 81 evaluated, 27 expanded
[t=0.133625s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.133655s, 431100 KB] g=17, 85 evaluated, 28 expanded
[t=0.135215s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.13525s, 431100 KB] g=19, 93 evaluated, 30 expanded
[t=0.136039s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.136069s, 431100 KB] g=20, 97 evaluated, 31 expanded
[t=0.136484s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.136513s, 431100 KB] g=21, 99 evaluated, 32 expanded
[t=0.137684s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.137714s, 431100 KB] g=22, 105 evaluated, 33 expanded
[t=0.138321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.13835s, 431100 KB] g=23, 108 evaluated, 34 expanded
[t=0.138571s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.1386s, 431100 KB] g=24, 109 evaluated, 35 expanded
[t=0.141494s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.141529s, 431100 KB] g=22, 124 evaluated, 40 expanded
[t=0.143855s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.143887s, 431100 KB] g=24, 136 evaluated, 43 expanded
[t=0.152672s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.152707s, 431232 KB] g=28, 182 evaluated, 57 expanded
[t=0.178763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.1788s, 431232 KB] g=35, 319 evaluated, 102 expanded
[t=0.190984s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.191022s, 431232 KB] g=33, 383 evaluated, 122 expanded
[t=0.208049s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.208086s, 431232 KB] g=40, 472 evaluated, 166 expanded, 12 reopened
[t=0.219782s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.219822s, 431364 KB] g=42, 533 evaluated, 184 expanded, 14 reopened
[t=0.2227s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.222734s, 431364 KB] g=44, 548 evaluated, 189 expanded, 14 reopened
[t=0.225062s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.225104s, 431364 KB] g=46, 560 evaluated, 192 expanded, 14 reopened
[t=0.227052s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.227086s, 431364 KB] g=48, 570 evaluated, 195 expanded, 14 reopened
[t=0.228074s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.228104s, 431364 KB] g=49, 575 evaluated, 196 expanded, 14 reopened
[t=0.229284s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.229314s, 431364 KB] g=49, 581 evaluated, 198 expanded, 14 reopened
[t=0.231249s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.231282s, 431364 KB] g=51, 591 evaluated, 201 expanded, 14 reopened
[t=0.234918s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.234954s, 431364 KB] g=52, 610 evaluated, 206 expanded, 14 reopened
[t=0.235558s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.235588s, 431364 KB] g=53, 613 evaluated, 207 expanded, 14 reopened
[t=0.235807s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.235835s, 431364 KB] g=53, 614 evaluated, 207 expanded, 14 reopened
[t=0.236627s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.236659s, 431364 KB] g=54, 618 evaluated, 208 expanded, 14 reopened
[t=0.237455s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.237485s, 431364 KB] g=56, 622 evaluated, 210 expanded, 14 reopened
[t=0.246831s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.246868s, 431364 KB] g=60, 671 evaluated, 225 expanded, 14 reopened
[t=0.250326s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.250361s, 431364 KB] g=61, 689 evaluated, 232 expanded, 14 reopened
[t=0.252499s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.252532s, 431364 KB] g=64, 700 evaluated, 237 expanded, 14 reopened
[t=0.253895s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.253929s, 431364 KB] g=67, 707 evaluated, 240 expanded, 14 reopened
[t=0.264211s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.26425s, 431496 KB] g=68, 761 evaluated, 259 expanded, 14 reopened
[t=0.264475s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.26451s, 431496 KB] g=69, 762 evaluated, 260 expanded, 14 reopened
[t=0.264922s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.264954s, 431496 KB] g=70, 764 evaluated, 261 expanded, 14 reopened
[t=0.265363s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.265392s, 431496 KB] g=71, 766 evaluated, 262 expanded, 14 reopened
[t=0.265423s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.265446s, 431496 KB] g=72, 767 evaluated, 263 expanded, 14 reopened
[t=0.265472s, 431496 KB] Solution found!
[t=0.265498s, 431496 KB] Actual search time: 0.16648s
unstack d h (1)
stack d j (1)
unstack h k (1)
stack h d (1)
unstack k e (1)
put-down k (1)
unstack e l (1)
stack e k (1)
unstack h d (1)
stack h i (1)
unstack l a (1)
stack l d (1)
unstack h i (1)
stack h e (1)
unstack a b (1)
stack a h (1)
unstack b g (1)
stack b l (1)
unstack a h (1)
stack a i (1)
unstack h e (1)
stack h g (1)
unstack a i (1)
stack a e (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
unstack a e (1)
stack a c (1)
unstack h g (1)
stack h a (1)
unstack g f (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack e k (1)
stack e i (1)
pick-up f (1)
stack f e (1)
unstack a c (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack c b (1)
put-down c (1)
pick-up k (1)
stack k f (1)
unstack b l (1)
stack b c (1)
unstack e i (1)
stack e k (1)
unstack b c (1)
stack b i (1)
unstack l d (1)
stack l c (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b i (1)
put-down b (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.265523s, 431496 KB] Plan length: 72 step(s).
[t=0.265523s, 431496 KB] Plan cost: 72
[t=0.265523s, 431496 KB] Expanded 264 state(s).
[t=0.265523s, 431496 KB] Reopened 14 state(s).
[t=0.265523s, 431496 KB] Evaluated 767 state(s).
[t=0.265523s, 431496 KB] Evaluations: 767
[t=0.265523s, 431496 KB] Generated 1100 state(s).
[t=0.265523s, 431496 KB] Dead ends: 0 state(s).
[t=0.265523s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.265523s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.265523s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.265523s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.265523s, 431496 KB] Number of registered states: 767
[t=0.265523s, 431496 KB] Int hash set load factor: 767/1024 = 0.749023
[t=0.265523s, 431496 KB] Int hash set resizes: 10
[t=0.265523s, 431496 KB] Search time: 0.239039s
[t=0.265523s, 431496 KB] Total time: 0.265523s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p110.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5828e-05s, 424928 KB] reading input...
[t=0.00217258s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259598s, 427536 KB] Building successor generator...done!
[t=0.0262605s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262853s, 427536 KB] time for successor generation creation: 0.000187237s
[t=0.0263141s, 427536 KB] Variables: 25
[t=0.0263372s, 427536 KB] FactPairs: 182
[t=0.0263597s, 427536 KB] Bytes per state: 8
[t=0.0265551s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099013s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0990652s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990914s, 430128 KB] f = 118, 1 evaluated, 0 expanded
[t=0.0991192s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0991433s, 430128 KB] pruning method: none
[t=0.117657s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.117707s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.118884s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.120736s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.120779s, 431100 KB] g=2, 20 evaluated, 4 expanded
[t=0.124289s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.124323s, 431100 KB] g=4, 39 evaluated, 8 expanded
[t=0.12656s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.126594s, 431100 KB] g=6, 51 evaluated, 11 expanded
[t=0.132116s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.132152s, 431100 KB] g=10, 81 evaluated, 16 expanded
[t=0.157772s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.157811s, 431232 KB] g=18, 220 evaluated, 40 expanded
[t=0.172141s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.172181s, 431232 KB] g=24, 298 evaluated, 53 expanded
[t=0.212658s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.212698s, 431364 KB] g=26, 519 evaluated, 95 expanded
[t=0.216955s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.216991s, 431364 KB] g=29, 542 evaluated, 101 expanded
[t=0.223639s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.223676s, 431364 KB] g=30, 578 evaluated, 111 expanded
[t=0.22389s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.223919s, 431364 KB] g=30, 579 evaluated, 111 expanded
[t=0.224135s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.224165s, 431364 KB] g=31, 580 evaluated, 112 expanded
[t=0.22493s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.224961s, 431364 KB] g=32, 584 evaluated, 113 expanded
[t=0.2261s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.226134s, 431364 KB] g=33, 590 evaluated, 114 expanded
[t=0.226906s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.226939s, 431364 KB] g=34, 594 evaluated, 115 expanded
[t=0.228063s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.228097s, 431364 KB] g=35, 600 evaluated, 116 expanded
[t=0.230157s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.230192s, 431364 KB] g=34, 611 evaluated, 119 expanded
[t=0.231326s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.231365s, 431496 KB] g=35, 617 evaluated, 120 expanded
[t=0.23195s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.231981s, 431496 KB] g=36, 620 evaluated, 121 expanded
[t=0.23386s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.233892s, 431496 KB] g=37, 630 evaluated, 124 expanded
[t=0.238342s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.238378s, 431496 KB] g=42, 654 evaluated, 130 expanded
[t=0.239703s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.239737s, 431496 KB] g=44, 661 evaluated, 132 expanded
[t=0.253331s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.253368s, 431496 KB] g=48, 735 evaluated, 152 expanded
[t=0.253582s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.253614s, 431496 KB] g=48, 736 evaluated, 152 expanded
[t=0.254769s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.254803s, 431496 KB] g=51, 742 evaluated, 155 expanded
[t=0.258519s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.258556s, 431496 KB] g=53, 762 evaluated, 164 expanded
[t=0.259516s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.259547s, 431496 KB] g=56, 767 evaluated, 167 expanded
[t=0.260506s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.260538s, 431496 KB] g=58, 772 evaluated, 170 expanded
[t=0.261486s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.261519s, 431496 KB] g=59, 777 evaluated, 172 expanded
[t=0.263208s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.263242s, 431496 KB] g=61, 786 evaluated, 174 expanded
[t=0.265304s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.265339s, 431496 KB] g=65, 797 evaluated, 180 expanded
[t=0.269449s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.269487s, 431496 KB] g=66, 819 evaluated, 194 expanded, 4 reopened
[t=0.26989s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.26992s, 431496 KB] g=67, 821 evaluated, 195 expanded, 4 reopened
[t=0.269968s, 431496 KB] Solution found!
[t=0.269996s, 431496 KB] Actual search time: 0.17085s
unstack j a (1)
stack j e (1)
pick-up l (1)
stack l j (1)
unstack g d (1)
put-down g (1)
unstack i c (1)
stack i b (1)
unstack l j (1)
put-down l (1)
unstack d f (1)
put-down d (1)
pick-up g (1)
stack g f (1)
unstack i b (1)
put-down i (1)
pick-up d (1)
stack d j (1)
pick-up c (1)
stack c d (1)
pick-up b (1)
stack b l (1)
unstack c d (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack a k (1)
stack a d (1)
unstack k h (1)
put-down k (1)
unstack g f (1)
put-down g (1)
pick-up h (1)
stack h g (1)
pick-up f (1)
stack f k (1)
unstack a d (1)
stack a h (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e j (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.270028s, 431496 KB] Plan length: 68 step(s).
[t=0.270028s, 431496 KB] Plan cost: 68
[t=0.270028s, 431496 KB] Expanded 197 state(s).
[t=0.270028s, 431496 KB] Reopened 4 state(s).
[t=0.270028s, 431496 KB] Evaluated 822 state(s).
[t=0.270028s, 431496 KB] Evaluations: 822
[t=0.270028s, 431496 KB] Generated 1037 state(s).
[t=0.270028s, 431496 KB] Dead ends: 0 state(s).
[t=0.270028s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.270028s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.270028s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.270028s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.270028s, 431496 KB] Number of registered states: 822
[t=0.270028s, 431496 KB] Int hash set load factor: 822/1024 = 0.802734
[t=0.270028s, 431496 KB] Int hash set resizes: 10
[t=0.270028s, 431496 KB] Search time: 0.243473s
[t=0.270028s, 431496 KB] Total time: 0.270028s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p111.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6543e-05s, 424928 KB] reading input...
[t=0.00217102s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025717s, 427536 KB] Building successor generator...done!
[t=0.0259937s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260166s, 427536 KB] time for successor generation creation: 0.00016531s
[t=0.0260594s, 427536 KB] Variables: 25
[t=0.0260822s, 427536 KB] FactPairs: 182
[t=0.0261037s, 427536 KB] Bytes per state: 8
[t=0.0262985s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0975064s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 157
[t=0.097574s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0975996s, 430128 KB] f = 157, 1 evaluated, 0 expanded
[t=0.097627s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 157
[t=0.0976563s, 430128 KB] pruning method: none
[t=0.109563s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.109615s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116124s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.116167s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117269s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.1173s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.117689s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117719s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.117924s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.11796s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.118168s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118197s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.118584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.118624s, 431100 KB] g=4, 15 evaluated, 4 expanded
[t=0.118833s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.118861s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.124369s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.124408s, 431100 KB] g=8, 47 evaluated, 10 expanded
[t=0.125499s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.125529s, 431100 KB] g=9, 53 evaluated, 11 expanded
[t=0.13s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.130033s, 431100 KB] g=12, 78 evaluated, 16 expanded
[t=0.132006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.132037s, 431100 KB] g=13, 89 evaluated, 17 expanded
[t=0.132959s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.132989s, 431100 KB] g=14, 94 evaluated, 18 expanded
[t=0.13462s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.134655s, 431100 KB] g=15, 103 evaluated, 19 expanded
[t=0.147663s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.1477s, 431232 KB] g=24, 176 evaluated, 34 expanded
[t=0.155721s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.155755s, 431232 KB] g=21, 221 evaluated, 44 expanded
[t=0.156143s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.156175s, 431232 KB] g=21, 223 evaluated, 44 expanded
[t=0.156563s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.156592s, 431232 KB] g=22, 225 evaluated, 45 expanded
[t=0.157157s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.157189s, 431232 KB] g=23, 228 evaluated, 46 expanded
[t=0.158464s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.158499s, 431232 KB] g=24, 235 evaluated, 47 expanded
[t=0.16245s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.162485s, 431232 KB] g=26, 257 evaluated, 53 expanded
[t=0.165185s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.165216s, 431232 KB] g=27, 272 evaluated, 57 expanded
[t=0.173257s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.1733s, 431232 KB] g=28, 317 evaluated, 73 expanded
[t=0.173509s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.173538s, 431232 KB] g=28, 318 evaluated, 73 expanded
[t=0.174291s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.174322s, 431232 KB] g=29, 322 evaluated, 74 expanded
[t=0.175601s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.175632s, 431232 KB] g=30, 329 evaluated, 76 expanded
[t=0.17637s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.176403s, 431232 KB] g=31, 333 evaluated, 77 expanded
[t=0.178578s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.17861s, 431232 KB] g=33, 345 evaluated, 82 expanded
[t=0.178816s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.178845s, 431232 KB] g=33, 346 evaluated, 82 expanded
[t=0.179054s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.179083s, 431232 KB] g=34, 347 evaluated, 83 expanded
[t=0.180181s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.180213s, 431232 KB] g=36, 353 evaluated, 85 expanded
[t=0.183091s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.183127s, 431232 KB] g=38, 369 evaluated, 91 expanded
[t=0.183691s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.183726s, 431364 KB] g=39, 372 evaluated, 92 expanded
[t=0.184294s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.184324s, 431364 KB] g=40, 375 evaluated, 93 expanded
[t=0.184713s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.184742s, 431364 KB] g=41, 377 evaluated, 94 expanded
[t=0.186029s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.186063s, 431364 KB] g=43, 384 evaluated, 96 expanded
[t=0.20211s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.202148s, 431364 KB] g=47, 474 evaluated, 131 expanded
[t=0.202536s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.202565s, 431364 KB] g=48, 476 evaluated, 132 expanded
[t=0.202957s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.202992s, 431364 KB] g=50, 478 evaluated, 134 expanded
[t=0.203561s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.20359s, 431364 KB] g=52, 481 evaluated, 136 expanded
[t=0.203978s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.204007s, 431364 KB] g=53, 483 evaluated, 137 expanded
[t=0.204218s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.204246s, 431364 KB] g=54, 484 evaluated, 138 expanded
[t=0.20536s, 431364 KB] Solution found!
[t=0.205393s, 431364 KB] Actual search time: 0.107733s
unstack j h (1)
put-down j (1)
unstack l g (1)
stack l j (1)
unstack k d (1)
put-down k (1)
unstack l j (1)
put-down l (1)
unstack d f (1)
stack d j (1)
unstack g a (1)
put-down g (1)
pick-up h (1)
stack h d (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack h d (1)
stack h g (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up a (1)
stack a h (1)
unstack e k (1)
stack e b (1)
unstack k f (1)
stack k e (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.205418s, 431364 KB] Plan length: 56 step(s).
[t=0.205418s, 431364 KB] Plan cost: 56
[t=0.205418s, 431364 KB] Expanded 145 state(s).
[t=0.205418s, 431364 KB] Reopened 0 state(s).
[t=0.205418s, 431364 KB] Evaluated 491 state(s).
[t=0.205418s, 431364 KB] Evaluations: 491
[t=0.205418s, 431364 KB] Generated 644 state(s).
[t=0.205418s, 431364 KB] Dead ends: 0 state(s).
[t=0.205418s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.205418s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.205418s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.205418s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.205418s, 431364 KB] Number of registered states: 491
[t=0.205418s, 431364 KB] Int hash set load factor: 491/512 = 0.958984
[t=0.205418s, 431364 KB] Int hash set resizes: 9
[t=0.205418s, 431364 KB] Search time: 0.17912s
[t=0.205418s, 431364 KB] Total time: 0.205418s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p112.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5976e-05s, 424928 KB] reading input...
[t=0.00214427s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260502s, 427536 KB] Building successor generator...done!
[t=0.0263303s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263535s, 427536 KB] time for successor generation creation: 0.000169924s
[t=0.0263825s, 427536 KB] Variables: 25
[t=0.0264051s, 427536 KB] FactPairs: 182
[t=0.0264272s, 427536 KB] Bytes per state: 8
[t=0.0266221s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.09886s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.0989121s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989383s, 430128 KB] f = 120, 1 evaluated, 0 expanded
[t=0.0989661s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.09899s, 430128 KB] pruning method: none
[t=0.117616s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.117667s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118063s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.118095s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118303s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.118333s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.120687s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.120721s, 431100 KB] g=6, 21 evaluated, 6 expanded
[t=0.123772s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.123806s, 431100 KB] g=10, 38 evaluated, 11 expanded
[t=0.126663s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.126694s, 431100 KB] g=14, 54 evaluated, 15 expanded
[t=0.133317s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.133353s, 431100 KB] g=17, 91 evaluated, 24 expanded
[t=0.134104s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.134138s, 431100 KB] g=18, 95 evaluated, 25 expanded
[t=0.135433s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.135468s, 431100 KB] g=20, 102 evaluated, 27 expanded
[t=0.135684s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.135714s, 431100 KB] g=21, 103 evaluated, 28 expanded
[t=0.136817s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.136848s, 431100 KB] g=22, 109 evaluated, 30 expanded
[t=0.144415s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.144451s, 431100 KB] g=25, 151 evaluated, 44 expanded
[t=0.144665s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.144696s, 431100 KB] g=26, 152 evaluated, 45 expanded
[t=0.145805s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.145836s, 431100 KB] g=28, 158 evaluated, 47 expanded
[t=0.146224s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.146255s, 431100 KB] g=28, 160 evaluated, 47 expanded
[t=0.14682s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.146851s, 431100 KB] g=29, 163 evaluated, 48 expanded
[t=0.148322s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.148358s, 431232 KB] g=31, 171 evaluated, 50 expanded
[t=0.150181s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.150215s, 431232 KB] g=34, 181 evaluated, 53 expanded
[t=0.150784s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.150814s, 431232 KB] g=35, 184 evaluated, 54 expanded
[t=0.152115s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.152147s, 431232 KB] g=36, 191 evaluated, 56 expanded
[t=0.156842s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.156876s, 431232 KB] g=40, 217 evaluated, 66 expanded
[t=0.157267s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.1573s, 431232 KB] g=41, 219 evaluated, 67 expanded
[t=0.158943s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.158974s, 431232 KB] g=43, 228 evaluated, 69 expanded
[t=0.166041s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.166078s, 431232 KB] g=47, 267 evaluated, 87 expanded
[t=0.166838s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.166869s, 431232 KB] g=50, 272 evaluated, 90 expanded
[t=0.166896s, 431232 KB] Solution found!
[t=0.166923s, 431232 KB] Actual search time: 0.0679291s
unstack e a (1)
stack e d (1)
unstack a h (1)
stack a e (1)
unstack h j (1)
stack h a (1)
unstack j l (1)
stack j b (1)
unstack h a (1)
stack h g (1)
unstack l f (1)
put-down l (1)
unstack a e (1)
stack a h (1)
unstack j b (1)
stack j e (1)
pick-up f (1)
stack f j (1)
pick-up b (1)
stack b l (1)
unstack f j (1)
put-down f (1)
unstack j e (1)
put-down j (1)
pick-up f (1)
stack f a (1)
unstack e d (1)
stack e j (1)
unstack d k (1)
stack d b (1)
unstack k i (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.166948s, 431232 KB] Plan length: 50 step(s).
[t=0.166948s, 431232 KB] Plan cost: 50
[t=0.166948s, 431232 KB] Expanded 91 state(s).
[t=0.166948s, 431232 KB] Reopened 0 state(s).
[t=0.166948s, 431232 KB] Evaluated 272 state(s).
[t=0.166948s, 431232 KB] Evaluations: 272
[t=0.166948s, 431232 KB] Generated 365 state(s).
[t=0.166948s, 431232 KB] Dead ends: 0 state(s).
[t=0.166948s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.166948s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.166948s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.166948s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.166948s, 431232 KB] Number of registered states: 272
[t=0.166948s, 431232 KB] Int hash set load factor: 272/512 = 0.53125
[t=0.166948s, 431232 KB] Int hash set resizes: 9
[t=0.166948s, 431232 KB] Search time: 0.140327s
[t=0.166948s, 431232 KB] Total time: 0.166948s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p113.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6249e-05s, 424928 KB] reading input...
[t=0.002195s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259533s, 427536 KB] Building successor generator...done!
[t=0.0262375s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262613s, 427536 KB] time for successor generation creation: 0.000169013s
[t=0.02629s, 427536 KB] Variables: 25
[t=0.026313s, 427536 KB] FactPairs: 182
[t=0.0263361s, 427536 KB] Bytes per state: 8
[t=0.0265308s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986088s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0986619s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098689s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0987165s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0987407s, 430128 KB] pruning method: none
[t=0.116941s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.11699s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117561s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117592s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118335s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.118376s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.11912s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.11915s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.121139s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 126
[t=0.121172s, 431100 KB] g=4, 25 evaluated, 6 expanded
[t=0.127211s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.127246s, 431100 KB] g=7, 59 evaluated, 12 expanded
[t=0.128888s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.12892s, 431100 KB] g=8, 68 evaluated, 14 expanded
[t=0.131796s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.131832s, 431100 KB] g=9, 84 evaluated, 18 expanded
[t=0.13222s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.132251s, 431100 KB] g=9, 86 evaluated, 18 expanded
[t=0.133339s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.13337s, 431100 KB] g=10, 92 evaluated, 19 expanded
[t=0.133578s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.133607s, 431100 KB] g=10, 93 evaluated, 19 expanded
[t=0.134531s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.134565s, 431100 KB] g=11, 98 evaluated, 20 expanded
[t=0.136738s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.136772s, 431100 KB] g=12, 110 evaluated, 23 expanded
[t=0.137516s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.13755s, 431100 KB] g=13, 114 evaluated, 24 expanded
[t=0.137936s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.137966s, 431100 KB] g=13, 116 evaluated, 24 expanded
[t=0.138706s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.138739s, 431100 KB] g=14, 120 evaluated, 25 expanded
[t=0.146942s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.14698s, 431232 KB] g=18, 166 evaluated, 35 expanded
[t=0.147373s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.147405s, 431232 KB] g=19, 168 evaluated, 36 expanded
[t=0.161016s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.161058s, 431232 KB] g=25, 245 evaluated, 53 expanded
[t=0.162153s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.162186s, 431232 KB] g=26, 251 evaluated, 54 expanded
[t=0.162395s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.162424s, 431232 KB] g=26, 252 evaluated, 54 expanded
[t=0.164075s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.164108s, 431232 KB] g=27, 261 evaluated, 55 expanded
[t=0.164673s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.164703s, 431232 KB] g=28, 264 evaluated, 56 expanded
[t=0.165447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.165477s, 431232 KB] g=29, 268 evaluated, 57 expanded
[t=0.166574s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.166605s, 431232 KB] g=30, 274 evaluated, 58 expanded
[t=0.167165s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.167198s, 431232 KB] g=30, 277 evaluated, 58 expanded
[t=0.20597s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.206013s, 431364 KB] g=31, 495 evaluated, 116 expanded, 4 reopened
[t=0.208925s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.208962s, 431364 KB] g=33, 511 evaluated, 119 expanded, 4 reopened
[t=0.209933s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.209966s, 431364 KB] g=34, 516 evaluated, 120 expanded, 4 reopened
[t=0.238306s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.238344s, 431496 KB] g=38, 676 evaluated, 159 expanded, 4 reopened
[t=0.239091s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.239122s, 431496 KB] g=39, 680 evaluated, 160 expanded, 4 reopened
[t=0.241647s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.241681s, 431496 KB] g=42, 694 evaluated, 163 expanded, 4 reopened
[t=0.245448s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.245481s, 431496 KB] g=44, 715 evaluated, 168 expanded, 4 reopened
[t=0.247284s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.247315s, 431496 KB] g=45, 725 evaluated, 170 expanded, 4 reopened
[t=0.247721s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.247758s, 431496 KB] g=46, 727 evaluated, 171 expanded, 4 reopened
[t=0.252609s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.252646s, 431496 KB] g=47, 754 evaluated, 182 expanded, 5 reopened
[t=0.253926s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.253957s, 431496 KB] g=49, 761 evaluated, 184 expanded, 5 reopened
[t=0.254524s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.254557s, 431496 KB] g=50, 764 evaluated, 185 expanded, 5 reopened
[t=0.255679s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.255712s, 431496 KB] g=52, 770 evaluated, 187 expanded, 5 reopened
[t=0.256994s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.257024s, 431496 KB] g=53, 777 evaluated, 189 expanded, 5 reopened
[t=0.257415s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.257448s, 431496 KB] g=54, 779 evaluated, 190 expanded, 5 reopened
[t=0.258014s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.258048s, 431496 KB] g=55, 782 evaluated, 191 expanded, 5 reopened
[t=0.258444s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.258473s, 431496 KB] g=57, 784 evaluated, 193 expanded, 5 reopened
[t=0.258865s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.258894s, 431496 KB] g=58, 786 evaluated, 194 expanded, 5 reopened
[t=0.26001s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.260043s, 431496 KB] g=60, 792 evaluated, 199 expanded, 5 reopened
[t=0.260075s, 431496 KB] Solution found!
[t=0.260103s, 431496 KB] Actual search time: 0.161359s
put-down j (1)
unstack e a (1)
put-down e (1)
unstack a l (1)
stack a g (1)
unstack d i (1)
stack d j (1)
unstack l f (1)
stack l d (1)
pick-up f (1)
stack f e (1)
unstack b k (1)
stack b l (1)
unstack f e (1)
put-down f (1)
unstack k h (1)
stack k e (1)
pick-up h (1)
stack h f (1)
unstack i c (1)
put-down i (1)
unstack a g (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack b l (1)
put-down b (1)
pick-up f (1)
stack f b (1)
unstack a k (1)
stack a h (1)
unstack f b (1)
stack f a (1)
unstack l d (1)
stack l b (1)
pick-up i (1)
stack i c (1)
unstack d j (1)
stack d i (1)
unstack l b (1)
stack l d (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack l d (1)
put-down l (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.260128s, 431496 KB] Plan length: 61 step(s).
[t=0.260128s, 431496 KB] Plan cost: 61
[t=0.260128s, 431496 KB] Expanded 201 state(s).
[t=0.260128s, 431496 KB] Reopened 5 state(s).
[t=0.260128s, 431496 KB] Evaluated 793 state(s).
[t=0.260128s, 431496 KB] Evaluations: 793
[t=0.260128s, 431496 KB] Generated 1041 state(s).
[t=0.260128s, 431496 KB] Dead ends: 0 state(s).
[t=0.260128s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.260128s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.260128s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.260128s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.260128s, 431496 KB] Number of registered states: 793
[t=0.260128s, 431496 KB] Int hash set load factor: 793/1024 = 0.774414
[t=0.260128s, 431496 KB] Int hash set resizes: 10
[t=0.260128s, 431496 KB] Search time: 0.233598s
[t=0.260128s, 431496 KB] Total time: 0.260128s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p114.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6294e-05s, 424928 KB] reading input...
[t=0.00211023s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260391s, 427536 KB] Building successor generator...done!
[t=0.0263401s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263638s, 427536 KB] time for successor generation creation: 0.00018686s
[t=0.0263923s, 427536 KB] Variables: 25
[t=0.0264153s, 427536 KB] FactPairs: 182
[t=0.0264369s, 427536 KB] Bytes per state: 8
[t=0.0266365s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0996218s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0996737s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0996997s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0997269s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0997504s, 430128 KB] pruning method: none
[t=0.118146s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.118196s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119947s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.119979s, 431100 KB] g=2, 12 evaluated, 3 expanded
[t=0.120391s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.120422s, 431100 KB] g=3, 14 evaluated, 4 expanded
[t=0.12064s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.120669s, 431100 KB] g=3, 15 evaluated, 4 expanded
[t=0.123178s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.123211s, 431100 KB] g=5, 28 evaluated, 7 expanded
[t=0.124941s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.124972s, 431100 KB] g=6, 37 evaluated, 9 expanded
[t=0.126517s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.12655s, 431100 KB] g=7, 45 evaluated, 10 expanded
[t=0.126769s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.126799s, 431100 KB] g=7, 46 evaluated, 10 expanded
[t=0.128528s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.128558s, 431100 KB] g=8, 55 evaluated, 12 expanded
[t=0.128966s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.128995s, 431100 KB] g=8, 57 evaluated, 12 expanded
[t=0.129217s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.129245s, 431100 KB] g=9, 58 evaluated, 13 expanded
[t=0.131553s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.1316s, 431100 KB] g=11, 70 evaluated, 15 expanded
[t=0.132395s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.132425s, 431100 KB] g=12, 74 evaluated, 16 expanded
[t=0.133586s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.133619s, 431100 KB] g=13, 80 evaluated, 17 expanded
[t=0.134229s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.134264s, 431100 KB] g=14, 83 evaluated, 18 expanded
[t=0.136s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.136031s, 431100 KB] g=17, 92 evaluated, 21 expanded
[t=0.138732s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.138767s, 431100 KB] g=18, 106 evaluated, 25 expanded
[t=0.142787s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.142821s, 431100 KB] g=21, 127 evaluated, 31 expanded
[t=0.145705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.145736s, 431100 KB] g=22, 142 evaluated, 35 expanded
[t=0.156418s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.156453s, 431100 KB] g=25, 198 evaluated, 56 expanded
[t=0.158003s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.158034s, 431232 KB] g=27, 206 evaluated, 58 expanded
[t=0.158643s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.158673s, 431232 KB] g=28, 209 evaluated, 59 expanded
[t=0.160989s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.161022s, 431232 KB] g=31, 221 evaluated, 63 expanded
[t=0.16278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.162814s, 431232 KB] g=33, 230 evaluated, 66 expanded
[t=0.163034s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.163062s, 431232 KB] g=33, 231 evaluated, 66 expanded
[t=0.164043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.164076s, 431232 KB] g=34, 236 evaluated, 68 expanded
[t=0.167731s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.167765s, 431232 KB] g=35, 255 evaluated, 78 expanded
[t=0.1682s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.168236s, 431232 KB] g=36, 257 evaluated, 79 expanded
[t=0.169604s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.169635s, 431232 KB] g=36, 264 evaluated, 83 expanded
[t=0.170832s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.170865s, 431232 KB] g=39, 271 evaluated, 88 expanded
[t=0.170892s, 431232 KB] Solution found!
[t=0.170919s, 431232 KB] Actual search time: 0.0711651s
put-down l (1)
unstack f g (1)
stack f i (1)
unstack c h (1)
put-down c (1)
unstack b a (1)
stack b l (1)
unstack h k (1)
stack h g (1)
pick-up c (1)
stack c b (1)
pick-up a (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
put-down j (1)
unstack e d (1)
stack e k (1)
pick-up d (1)
stack d i (1)
unstack c b (1)
put-down c (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.170944s, 431232 KB] Plan length: 39 step(s).
[t=0.170944s, 431232 KB] Plan cost: 39
[t=0.170944s, 431232 KB] Expanded 89 state(s).
[t=0.170944s, 431232 KB] Reopened 0 state(s).
[t=0.170944s, 431232 KB] Evaluated 271 state(s).
[t=0.170944s, 431232 KB] Evaluations: 271
[t=0.170944s, 431232 KB] Generated 363 state(s).
[t=0.170944s, 431232 KB] Dead ends: 0 state(s).
[t=0.170944s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.170944s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.170944s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.170944s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.170944s, 431232 KB] Number of registered states: 271
[t=0.170944s, 431232 KB] Int hash set load factor: 271/512 = 0.529297
[t=0.170944s, 431232 KB] Int hash set resizes: 9
[t=0.170944s, 431232 KB] Search time: 0.144308s
[t=0.170944s, 431232 KB] Total time: 0.170944s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p115.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5137e-05s, 424928 KB] reading input...
[t=0.0021293s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256753s, 427536 KB] Building successor generator...done!
[t=0.0259543s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259777s, 427536 KB] time for successor generation creation: 0.000168915s
[t=0.0260062s, 427536 KB] Variables: 25
[t=0.0260291s, 427536 KB] FactPairs: 182
[t=0.0260509s, 427536 KB] Bytes per state: 8
[t=0.0262491s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981615s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.098212s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982383s, 430128 KB] f = 112, 1 evaluated, 0 expanded
[t=0.098266s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.0982904s, 430128 KB] pruning method: none
[t=0.117204s, 431104 KB] f = 130, 7 evaluated, 1 expanded
[t=0.119288s, 431104 KB] f = 133, 18 evaluated, 3 expanded
[t=0.123704s, 431104 KB] f = 136, 42 evaluated, 8 expanded
[t=0.125374s, 431104 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.125406s, 431104 KB] g=4, 51 evaluated, 10 expanded
[t=0.126349s, 431104 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.126379s, 431104 KB] g=5, 56 evaluated, 11 expanded
[t=0.130248s, 431104 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.130285s, 431104 KB] g=8, 77 evaluated, 16 expanded
[t=0.132327s, 431104 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.13236s, 431104 KB] g=9, 88 evaluated, 18 expanded
[t=0.139149s, 431104 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.139183s, 431104 KB] g=13, 125 evaluated, 27 expanded
[t=0.139778s, 431104 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.139811s, 431104 KB] g=14, 128 evaluated, 28 expanded
[t=0.154s, 431236 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.154037s, 431236 KB] g=25, 205 evaluated, 60 expanded
[t=0.157204s, 431236 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.157237s, 431236 KB] g=27, 222 evaluated, 67 expanded, 1 reopened
[t=0.158558s, 431236 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.158591s, 431236 KB] g=28, 229 evaluated, 69 expanded, 1 reopened
[t=0.15918s, 431236 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.159211s, 431236 KB] g=28, 232 evaluated, 69 expanded, 1 reopened
[t=0.161077s, 431236 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.161107s, 431236 KB] g=30, 242 evaluated, 72 expanded, 1 reopened
[t=0.162421s, 431236 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.16245s, 431236 KB] g=31, 249 evaluated, 74 expanded, 1 reopened
[t=0.175742s, 431236 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.175779s, 431236 KB] g=32, 321 evaluated, 99 expanded, 3 reopened
[t=0.200343s, 431236 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.200379s, 431236 KB] g=37, 455 evaluated, 154 expanded, 5 reopened
[t=0.223767s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.223806s, 431368 KB] g=41, 583 evaluated, 195 expanded, 5 reopened
[t=0.244219s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.244254s, 431368 KB] g=45, 695 evaluated, 231 expanded, 9 reopened
[t=0.244653s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.244683s, 431368 KB] g=46, 697 evaluated, 232 expanded, 9 reopened
[t=0.245812s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.245844s, 431368 KB] g=47, 703 evaluated, 233 expanded, 9 reopened
[t=0.24606s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.24609s, 431368 KB] g=48, 704 evaluated, 234 expanded, 9 reopened
[t=0.247596s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.247628s, 431368 KB] g=50, 712 evaluated, 236 expanded, 9 reopened
[t=0.249486s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.249525s, 431368 KB] g=51, 722 evaluated, 239 expanded, 9 reopened
[t=0.251196s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.251233s, 431368 KB] g=52, 731 evaluated, 241 expanded, 9 reopened
[t=0.251812s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.251842s, 431368 KB] g=53, 734 evaluated, 242 expanded, 9 reopened
[t=0.252599s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.252632s, 431368 KB] g=54, 738 evaluated, 243 expanded, 9 reopened
[t=0.254488s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.254519s, 431368 KB] g=56, 748 evaluated, 246 expanded, 9 reopened
[t=0.260953s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.260988s, 431368 KB] g=58, 783 evaluated, 256 expanded, 9 reopened
[t=0.26304s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.263075s, 431368 KB] g=61, 794 evaluated, 260 expanded, 9 reopened
[t=0.264569s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.264602s, 431368 KB] g=63, 802 evaluated, 263 expanded, 9 reopened
[t=0.265555s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.265584s, 431368 KB] g=65, 807 evaluated, 266 expanded, 9 reopened
[t=0.265799s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.265829s, 431368 KB] g=66, 808 evaluated, 267 expanded, 9 reopened
[t=0.266226s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.266255s, 431368 KB] g=67, 810 evaluated, 268 expanded, 9 reopened
[t=0.26703s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.267063s, 431368 KB] g=70, 814 evaluated, 271 expanded, 9 reopened
[t=0.267461s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.26749s, 431368 KB] g=71, 816 evaluated, 272 expanded, 9 reopened
[t=0.269359s, 431368 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.269392s, 431368 KB] g=74, 827 evaluated, 280 expanded, 9 reopened
[t=0.26942s, 431368 KB] Solution found!
[t=0.269446s, 431368 KB] Actual search time: 0.171151s
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up c (1)
stack c k (1)
unstack e g (1)
stack e i (1)
unstack c k (1)
stack c e (1)
pick-up b (1)
stack b l (1)
unstack c e (1)
stack c b (1)
pick-up k (1)
stack k c (1)
unstack e i (1)
stack e k (1)
unstack g a (1)
stack g e (1)
unstack a j (1)
stack a g (1)
unstack j f (1)
put-down j (1)
unstack a g (1)
stack a j (1)
unstack f h (1)
stack f i (1)
pick-up h (1)
stack h g (1)
unstack a j (1)
put-down a (1)
unstack h g (1)
stack h a (1)
unstack g e (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a f (1)
unstack e k (1)
stack e j (1)
unstack a f (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack k c (1)
stack k e (1)
unstack c b (1)
put-down c (1)
pick-up i (1)
stack i c (1)
unstack k e (1)
stack k f (1)
unstack b l (1)
stack b i (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.269471s, 431368 KB] Plan length: 74 step(s).
[t=0.269471s, 431368 KB] Plan cost: 74
[t=0.269471s, 431368 KB] Expanded 281 state(s).
[t=0.269471s, 431368 KB] Reopened 9 state(s).
[t=0.269471s, 431368 KB] Evaluated 827 state(s).
[t=0.269471s, 431368 KB] Evaluations: 827
[t=0.269471s, 431368 KB] Generated 1157 state(s).
[t=0.269471s, 431368 KB] Dead ends: 0 state(s).
[t=0.269471s, 431368 KB] Expanded until last jump: 8 state(s).
[t=0.269471s, 431368 KB] Reopened until last jump: 0 state(s).
[t=0.269471s, 431368 KB] Evaluated until last jump: 42 state(s).
[t=0.269471s, 431368 KB] Generated until last jump: 48 state(s).
[t=0.269471s, 431368 KB] Number of registered states: 827
[t=0.269471s, 431368 KB] Int hash set load factor: 827/1024 = 0.807617
[t=0.269471s, 431368 KB] Int hash set resizes: 10
[t=0.269471s, 431368 KB] Search time: 0.243222s
[t=0.269471s, 431368 KB] Total time: 0.269471s
Solution found.
Peak memory: 431368 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p116.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6688e-05s, 424928 KB] reading input...
[t=0.00220906s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257401s, 427536 KB] Building successor generator...done!
[t=0.0260187s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260427s, 427536 KB] time for successor generation creation: 0.000168686s
[t=0.0260717s, 427536 KB] Variables: 25
[t=0.026095s, 427536 KB] FactPairs: 182
[t=0.0261171s, 427536 KB] Bytes per state: 8
[t=0.026312s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977914s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0978442s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978701s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0978972s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0979216s, 430128 KB] pruning method: none
[t=0.11611s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.116161s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117287s, 431100 KB] f = 147, 9 evaluated, 3 expanded
[t=0.11823s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.118264s, 431100 KB] g=2, 14 evaluated, 5 expanded
[t=0.125298s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.125337s, 431100 KB] g=4, 53 evaluated, 18 expanded
[t=0.12555s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.125579s, 431100 KB] g=4, 54 evaluated, 18 expanded
[t=0.131191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.131229s, 431100 KB] g=7, 85 evaluated, 26 expanded
[t=0.13994s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.139975s, 431100 KB] g=15, 133 evaluated, 36 expanded
[t=0.153904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.153943s, 431232 KB] g=23, 210 evaluated, 48 expanded
[t=0.166023s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.166068s, 431232 KB] g=29, 277 evaluated, 59 expanded
[t=0.16664s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.16667s, 431232 KB] g=29, 280 evaluated, 59 expanded
[t=0.166889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.166918s, 431232 KB] g=30, 281 evaluated, 60 expanded
[t=0.168387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.168421s, 431232 KB] g=31, 289 evaluated, 61 expanded
[t=0.183872s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.183911s, 431232 KB] g=35, 375 evaluated, 78 expanded
[t=0.185939s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.185974s, 431232 KB] g=37, 386 evaluated, 80 expanded
[t=0.186367s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.186396s, 431232 KB] g=37, 388 evaluated, 80 expanded
[t=0.200082s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.200122s, 431364 KB] g=43, 464 evaluated, 94 expanded
[t=0.200337s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.200366s, 431364 KB] g=43, 465 evaluated, 94 expanded
[t=0.204557s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.204593s, 431364 KB] g=45, 488 evaluated, 98 expanded
[t=0.206794s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.206827s, 431364 KB] g=47, 500 evaluated, 101 expanded
[t=0.207225s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.207255s, 431364 KB] g=48, 502 evaluated, 102 expanded
[t=0.210055s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.210089s, 431364 KB] g=49, 517 evaluated, 105 expanded
[t=0.210486s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.210519s, 431364 KB] g=50, 519 evaluated, 106 expanded
[t=0.211805s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.211836s, 431364 KB] g=52, 526 evaluated, 108 expanded
[t=0.217986s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.218023s, 431364 KB] g=55, 560 evaluated, 119 expanded
[t=0.229551s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.229596s, 431364 KB] g=58, 624 evaluated, 138 expanded
[t=0.23396s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.233995s, 431496 KB] g=60, 648 evaluated, 149 expanded
[t=0.234385s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.234418s, 431496 KB] g=61, 650 evaluated, 150 expanded
[t=0.234817s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.234847s, 431496 KB] g=63, 653 evaluated, 152 expanded
[t=0.234874s, 431496 KB] Solution found!
[t=0.234901s, 431496 KB] Actual search time: 0.136975s
put-down i (1)
unstack d e (1)
put-down d (1)
pick-up c (1)
stack c i (1)
unstack a j (1)
put-down a (1)
unstack j h (1)
put-down j (1)
unstack c i (1)
stack c d (1)
unstack e g (1)
put-down e (1)
unstack c d (1)
stack c i (1)
unstack g k (1)
stack g e (1)
unstack h l (1)
stack h j (1)
unstack k b (1)
stack k l (1)
unstack b f (1)
put-down b (1)
pick-up a (1)
stack a k (1)
unstack c i (1)
stack c b (1)
pick-up f (1)
stack f d (1)
unstack g e (1)
put-down g (1)
pick-up e (1)
stack e c (1)
unstack h j (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack e c (1)
stack e j (1)
unstack f d (1)
stack f a (1)
unstack k l (1)
stack k f (1)
pick-up i (1)
stack i l (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.234925s, 431496 KB] Plan length: 63 step(s).
[t=0.234925s, 431496 KB] Plan cost: 63
[t=0.234925s, 431496 KB] Expanded 153 state(s).
[t=0.234925s, 431496 KB] Reopened 0 state(s).
[t=0.234925s, 431496 KB] Evaluated 653 state(s).
[t=0.234925s, 431496 KB] Evaluations: 653
[t=0.234925s, 431496 KB] Generated 807 state(s).
[t=0.234925s, 431496 KB] Dead ends: 0 state(s).
[t=0.234925s, 431496 KB] Expanded until last jump: 3 state(s).
[t=0.234925s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.234925s, 431496 KB] Evaluated until last jump: 9 state(s).
[t=0.234925s, 431496 KB] Generated until last jump: 10 state(s).
[t=0.234925s, 431496 KB] Number of registered states: 653
[t=0.234925s, 431496 KB] Int hash set load factor: 653/1024 = 0.637695
[t=0.234925s, 431496 KB] Int hash set resizes: 10
[t=0.234925s, 431496 KB] Search time: 0.208614s
[t=0.234925s, 431496 KB] Total time: 0.234925s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p117.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.616e-05s, 424928 KB] reading input...
[t=0.00219048s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025834s, 427536 KB] Building successor generator...done!
[t=0.0261145s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261386s, 427536 KB] time for successor generation creation: 0.000168992s
[t=0.0261675s, 427536 KB] Variables: 25
[t=0.0261911s, 427536 KB] FactPairs: 182
[t=0.0262138s, 427536 KB] Bytes per state: 8
[t=0.0264098s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980456s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0980969s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981231s, 430128 KB] f = 140, 1 evaluated, 0 expanded
[t=0.0981513s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.0981756s, 430128 KB] pruning method: none
[t=0.109963s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.110015s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.116686s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.116899s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.116928s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118428s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.118459s, 431100 KB] g=3, 13 evaluated, 5 expanded
[t=0.119034s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.119064s, 431100 KB] g=4, 16 evaluated, 6 expanded
[t=0.11965s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.119682s, 431100 KB] g=5, 19 evaluated, 7 expanded
[t=0.121523s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.121553s, 431100 KB] g=7, 29 evaluated, 11 expanded
[t=0.139743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.139779s, 431100 KB] g=22, 129 evaluated, 36 expanded
[t=0.140718s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.140751s, 431100 KB] g=23, 134 evaluated, 37 expanded
[t=0.141868s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.1419s, 431100 KB] g=24, 140 evaluated, 38 expanded
[t=0.142657s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.142691s, 431100 KB] g=25, 144 evaluated, 39 expanded
[t=0.143263s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.143292s, 431100 KB] g=26, 147 evaluated, 40 expanded
[t=0.143883s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.143915s, 431100 KB] g=26, 150 evaluated, 40 expanded
[t=0.144677s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.144707s, 431100 KB] g=27, 154 evaluated, 42 expanded
[t=0.145826s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.145856s, 431232 KB] g=28, 160 evaluated, 43 expanded
[t=0.148427s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.148459s, 431232 KB] g=29, 174 evaluated, 47 expanded
[t=0.15302s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.153054s, 431232 KB] g=30, 199 evaluated, 54 expanded
[t=0.153265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.153294s, 431232 KB] g=30, 200 evaluated, 54 expanded
[t=0.153874s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.153906s, 431232 KB] g=32, 203 evaluated, 56 expanded
[t=0.155019s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.155055s, 431232 KB] g=32, 209 evaluated, 58 expanded
[t=0.156178s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.15621s, 431232 KB] g=34, 215 evaluated, 60 expanded
[t=0.15805s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.158084s, 431232 KB] g=37, 225 evaluated, 63 expanded
[t=0.159393s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.159425s, 431232 KB] g=39, 232 evaluated, 65 expanded
[t=0.161632s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.161663s, 431232 KB] g=43, 244 evaluated, 69 expanded
[t=0.16278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.162812s, 431232 KB] g=46, 250 evaluated, 72 expanded
[t=0.168815s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.168849s, 431232 KB] g=48, 282 evaluated, 90 expanded, 5 reopened
[t=0.169964s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.169995s, 431232 KB] g=51, 288 evaluated, 93 expanded, 5 reopened
[t=0.170029s, 431232 KB] Solution found!
[t=0.170056s, 431232 KB] Actual search time: 0.0718764s
pick-up k (1)
stack k e (1)
unstack a l (1)
stack a k (1)
unstack j f (1)
stack j l (1)
unstack f h (1)
put-down f (1)
unstack h g (1)
stack h f (1)
unstack g d (1)
put-down g (1)
unstack d i (1)
put-down d (1)
unstack j l (1)
stack j i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
stack b j (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d l (1)
unstack b j (1)
stack b i (1)
unstack d l (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.170081s, 431232 KB] Plan length: 52 step(s).
[t=0.170081s, 431232 KB] Plan cost: 52
[t=0.170081s, 431232 KB] Expanded 95 state(s).
[t=0.170081s, 431232 KB] Reopened 5 state(s).
[t=0.170081s, 431232 KB] Evaluated 289 state(s).
[t=0.170081s, 431232 KB] Evaluations: 289
[t=0.170081s, 431232 KB] Generated 395 state(s).
[t=0.170081s, 431232 KB] Dead ends: 0 state(s).
[t=0.170081s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.170081s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.170081s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.170081s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.170081s, 431232 KB] Number of registered states: 289
[t=0.170081s, 431232 KB] Int hash set load factor: 289/512 = 0.564453
[t=0.170081s, 431232 KB] Int hash set resizes: 9
[t=0.170081s, 431232 KB] Search time: 0.143672s
[t=0.170081s, 431232 KB] Total time: 0.170081s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p118.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7706e-05s, 424928 KB] reading input...
[t=0.00228304s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026112s, 427536 KB] Building successor generator...done!
[t=0.0263918s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264152s, 427536 KB] time for successor generation creation: 0.000168711s
[t=0.0264433s, 427536 KB] Variables: 25
[t=0.0264659s, 427536 KB] FactPairs: 182
[t=0.0264882s, 427536 KB] Bytes per state: 8
[t=0.026685s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0995386s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0995912s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0996176s, 430128 KB] f = 154, 1 evaluated, 0 expanded
[t=0.0996453s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0996792s, 430128 KB] pruning method: none
[t=0.111644s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.111697s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118171s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.118214s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11989s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.119922s, 431100 KB] g=2, 12 evaluated, 4 expanded
[t=0.120678s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.120708s, 431100 KB] g=3, 16 evaluated, 5 expanded
[t=0.122751s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.122784s, 431100 KB] g=6, 27 evaluated, 8 expanded
[t=0.123726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.123756s, 431100 KB] g=7, 32 evaluated, 9 expanded
[t=0.125062s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.125092s, 431100 KB] g=7, 39 evaluated, 11 expanded
[t=0.125306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.125334s, 431100 KB] g=7, 40 evaluated, 11 expanded
[t=0.128468s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.128503s, 431100 KB] g=11, 57 evaluated, 16 expanded
[t=0.128896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.128925s, 431100 KB] g=11, 59 evaluated, 16 expanded
[t=0.130241s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.130275s, 431100 KB] g=12, 66 evaluated, 18 expanded
[t=0.131216s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.131246s, 431100 KB] g=13, 71 evaluated, 19 expanded
[t=0.132545s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.132578s, 431100 KB] g=15, 78 evaluated, 21 expanded
[t=0.134621s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.134654s, 431100 KB] g=17, 89 evaluated, 23 expanded
[t=0.150588s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.150626s, 431232 KB] g=15, 176 evaluated, 44 expanded
[t=0.158163s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.158203s, 431232 KB] g=16, 217 evaluated, 54 expanded
[t=0.161897s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.161933s, 431232 KB] g=19, 237 evaluated, 59 expanded
[t=0.163233s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.163266s, 431232 KB] g=20, 244 evaluated, 60 expanded
[t=0.165111s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.165141s, 431232 KB] g=21, 254 evaluated, 62 expanded
[t=0.167582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.167614s, 431232 KB] g=24, 267 evaluated, 65 expanded
[t=0.1691s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.16913s, 431232 KB] g=26, 275 evaluated, 67 expanded
[t=0.170999s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.171033s, 431232 KB] g=27, 285 evaluated, 69 expanded
[t=0.179454s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.179488s, 431232 KB] g=31, 331 evaluated, 81 expanded
[t=0.180423s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.180457s, 431232 KB] g=32, 336 evaluated, 82 expanded
[t=0.180672s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.180701s, 431232 KB] g=33, 337 evaluated, 83 expanded
[t=0.180913s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.180942s, 431232 KB] g=33, 338 evaluated, 83 expanded
[t=0.182795s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.18283s, 431232 KB] g=34, 348 evaluated, 86 expanded
[t=0.183587s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.183617s, 431232 KB] g=35, 352 evaluated, 87 expanded
[t=0.184917s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.184947s, 431232 KB] g=37, 359 evaluated, 89 expanded
[t=0.185711s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.185746s, 431232 KB] g=38, 363 evaluated, 90 expanded
[t=0.191259s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.191293s, 431232 KB] g=40, 393 evaluated, 101 expanded
[t=0.191505s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.191541s, 431232 KB] g=40, 394 evaluated, 101 expanded
[t=0.195056s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.195092s, 431364 KB] g=41, 413 evaluated, 106 expanded
[t=0.195673s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.195703s, 431364 KB] g=42, 416 evaluated, 107 expanded
[t=0.19921s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.199246s, 431364 KB] g=44, 435 evaluated, 114 expanded
[t=0.199824s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.199853s, 431364 KB] g=45, 438 evaluated, 115 expanded
[t=0.200254s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.200283s, 431364 KB] g=47, 440 evaluated, 117 expanded
[t=0.204894s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.204932s, 431364 KB] g=51, 466 evaluated, 130 expanded
[t=0.204961s, 431364 KB] Solution found!
[t=0.204987s, 431364 KB] Actual search time: 0.105304s
put-down b (1)
unstack e l (1)
put-down e (1)
unstack l f (1)
stack l a (1)
unstack f g (1)
stack f e (1)
pick-up d (1)
stack d b (1)
unstack g k (1)
put-down g (1)
unstack k h (1)
stack k d (1)
unstack h j (1)
stack h f (1)
unstack l a (1)
put-down l (1)
unstack h f (1)
stack h g (1)
pick-up l (1)
stack l j (1)
unstack a i (1)
stack a h (1)
unstack k d (1)
stack k i (1)
unstack f e (1)
stack f d (1)
pick-up e (1)
stack e l (1)
unstack f d (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.205013s, 431364 KB] Plan length: 51 step(s).
[t=0.205013s, 431364 KB] Plan cost: 51
[t=0.205013s, 431364 KB] Expanded 131 state(s).
[t=0.205013s, 431364 KB] Reopened 0 state(s).
[t=0.205013s, 431364 KB] Evaluated 466 state(s).
[t=0.205013s, 431364 KB] Evaluations: 466
[t=0.205013s, 431364 KB] Generated 603 state(s).
[t=0.205013s, 431364 KB] Dead ends: 0 state(s).
[t=0.205013s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.205013s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.205013s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.205013s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.205013s, 431364 KB] Number of registered states: 466
[t=0.205013s, 431364 KB] Int hash set load factor: 466/512 = 0.910156
[t=0.205013s, 431364 KB] Int hash set resizes: 9
[t=0.205013s, 431364 KB] Search time: 0.178328s
[t=0.205013s, 431364 KB] Total time: 0.205013s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p119.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.104s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0865e-05s, 424928 KB] reading input...
[t=0.00218442s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259938s, 427536 KB] Building successor generator...done!
[t=0.0262773s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263006s, 427536 KB] time for successor generation creation: 0.000169924s
[t=0.02633s, 427536 KB] Variables: 25
[t=0.0263526s, 427536 KB] FactPairs: 182
[t=0.0263751s, 427536 KB] Bytes per state: 8
[t=0.0265726s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991975s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0992506s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.099277s, 430128 KB] f = 118, 1 evaluated, 0 expanded
[t=0.0993048s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.099329s, 430128 KB] pruning method: none
[t=0.11125s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.111313s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118179s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.118223s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.12007s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.120103s, 431100 KB] g=3, 15 evaluated, 3 expanded
[t=0.128398s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.128438s, 431100 KB] g=3, 61 evaluated, 13 expanded
[t=0.146862s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.146899s, 431100 KB] g=7, 163 evaluated, 38 expanded
[t=0.147838s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.147873s, 431100 KB] g=8, 168 evaluated, 39 expanded
[t=0.150438s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.15047s, 431100 KB] g=10, 182 evaluated, 42 expanded
[t=0.150682s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.150716s, 431232 KB] g=10, 183 evaluated, 42 expanded
[t=0.15201s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.15204s, 431232 KB] g=11, 190 evaluated, 44 expanded
[t=0.15696s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.156994s, 431232 KB] g=11, 217 evaluated, 50 expanded
[t=0.179966s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.180005s, 431232 KB] g=16, 344 evaluated, 79 expanded
[t=0.180234s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.180265s, 431232 KB] g=17, 345 evaluated, 80 expanded
[t=0.181914s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.181947s, 431232 KB] g=19, 354 evaluated, 82 expanded
[t=0.185584s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.18562s, 431232 KB] g=23, 374 evaluated, 87 expanded
[t=0.187454s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.187486s, 431232 KB] g=25, 384 evaluated, 90 expanded
[t=0.189679s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.189715s, 431232 KB] g=26, 396 evaluated, 92 expanded
[t=0.191188s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.191228s, 431232 KB] g=28, 404 evaluated, 94 expanded
[t=0.191806s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.191839s, 431232 KB] g=29, 407 evaluated, 95 expanded
[t=0.193693s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.193727s, 431232 KB] g=31, 417 evaluated, 97 expanded
[t=0.19394s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.193968s, 431232 KB] g=31, 418 evaluated, 97 expanded
[t=0.194544s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.194574s, 431232 KB] g=32, 421 evaluated, 98 expanded
[t=0.200227s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.200261s, 431364 KB] g=36, 452 evaluated, 104 expanded
[t=0.20175s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.20178s, 431364 KB] g=38, 460 evaluated, 107 expanded
[t=0.202717s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.202748s, 431364 KB] g=39, 465 evaluated, 108 expanded
[t=0.204247s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.204282s, 431364 KB] g=39, 473 evaluated, 111 expanded
[t=0.206662s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.206695s, 431364 KB] g=41, 486 evaluated, 116 expanded
[t=0.20727s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.207299s, 431364 KB] g=42, 489 evaluated, 117 expanded
[t=0.209703s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.209738s, 431364 KB] g=45, 502 evaluated, 123 expanded
[t=0.216018s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.216058s, 431364 KB] g=52, 536 evaluated, 141 expanded
[t=0.216457s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.216487s, 431364 KB] g=54, 538 evaluated, 143 expanded
[t=0.216885s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.216917s, 431364 KB] g=55, 540 evaluated, 144 expanded
[t=0.218586s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.218617s, 431364 KB] g=58, 550 evaluated, 150 expanded
[t=0.218644s, 431364 KB] Solution found!
[t=0.218671s, 431364 KB] Actual search time: 0.119338s
unstack d k (1)
put-down d (1)
pick-up k (1)
stack k b (1)
unstack l a (1)
stack l d (1)
unstack j f (1)
stack j l (1)
unstack k b (1)
stack k f (1)
pick-up b (1)
stack b a (1)
unstack j l (1)
stack j k (1)
unstack b a (1)
stack b l (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h b (1)
unstack j k (1)
put-down j (1)
unstack h b (1)
stack h g (1)
unstack k f (1)
stack k j (1)
unstack a e (1)
stack a h (1)
unstack b l (1)
put-down b (1)
unstack f i (1)
stack f a (1)
pick-up b (1)
stack b i (1)
pick-up e (1)
stack e b (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d j (1)
unstack b i (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.218696s, 431364 KB] Plan length: 58 step(s).
[t=0.218696s, 431364 KB] Plan cost: 58
[t=0.218696s, 431364 KB] Expanded 151 state(s).
[t=0.218696s, 431364 KB] Reopened 0 state(s).
[t=0.218696s, 431364 KB] Evaluated 550 state(s).
[t=0.218696s, 431364 KB] Evaluations: 550
[t=0.218696s, 431364 KB] Generated 707 state(s).
[t=0.218696s, 431364 KB] Dead ends: 0 state(s).
[t=0.218696s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.218696s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.218696s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.218696s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.218696s, 431364 KB] Number of registered states: 550
[t=0.218696s, 431364 KB] Int hash set load factor: 550/1024 = 0.537109
[t=0.218696s, 431364 KB] Int hash set resizes: 10
[t=0.218696s, 431364 KB] Search time: 0.192124s
[t=0.218696s, 431364 KB] Total time: 0.218696s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p120.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6371e-05s, 424928 KB] reading input...
[t=0.00216297s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257498s, 427536 KB] Building successor generator...done!
[t=0.0260333s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260564s, 427536 KB] time for successor generation creation: 0.000171355s
[t=0.0260847s, 427536 KB] Variables: 25
[t=0.0261066s, 427536 KB] FactPairs: 182
[t=0.026128s, 427536 KB] Bytes per state: 8
[t=0.0263222s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0977636s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0978164s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0978422s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0978692s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0978923s, 430128 KB] pruning method: none
[t=0.10966s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.109712s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11755s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.117595s, 431100 KB] g=2, 11 evaluated, 4 expanded
[t=0.128964s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.129002s, 431100 KB] g=11, 75 evaluated, 20 expanded
[t=0.160123s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.160161s, 431232 KB] g=18, 250 evaluated, 62 expanded
[t=0.163603s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.16364s, 431232 KB] g=21, 269 evaluated, 66 expanded
[t=0.163853s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.163883s, 431232 KB] g=22, 270 evaluated, 67 expanded
[t=0.164807s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.164841s, 431232 KB] g=23, 275 evaluated, 68 expanded
[t=0.165585s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.165625s, 431232 KB] g=23, 279 evaluated, 68 expanded
[t=0.168312s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.168344s, 431232 KB] g=25, 294 evaluated, 71 expanded
[t=0.168728s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.168758s, 431232 KB] g=25, 296 evaluated, 71 expanded
[t=0.172341s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.172374s, 431232 KB] g=28, 316 evaluated, 75 expanded
[t=0.173309s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.173341s, 431232 KB] g=29, 321 evaluated, 76 expanded
[t=0.173901s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.173934s, 431232 KB] g=29, 324 evaluated, 76 expanded
[t=0.176098s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.176128s, 431232 KB] g=31, 336 evaluated, 79 expanded
[t=0.177595s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.177631s, 431232 KB] g=32, 344 evaluated, 80 expanded
[t=0.205026s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.205064s, 431364 KB] g=37, 498 evaluated, 110 expanded
[t=0.212593s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.21263s, 431364 KB] g=39, 540 evaluated, 118 expanded
[t=0.213382s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.213414s, 431364 KB] g=39, 544 evaluated, 118 expanded
[t=0.215392s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.215423s, 431364 KB] g=40, 555 evaluated, 120 expanded
[t=0.216698s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.216732s, 431364 KB] g=42, 562 evaluated, 122 expanded
[t=0.216943s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.216985s, 431364 KB] g=42, 563 evaluated, 122 expanded
[t=0.217375s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.217405s, 431364 KB] g=42, 565 evaluated, 122 expanded
[t=0.224891s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.224926s, 431364 KB] g=46, 607 evaluated, 131 expanded
[t=0.22604s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.22608s, 431364 KB] g=48, 613 evaluated, 133 expanded
[t=0.22718s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.227212s, 431364 KB] g=49, 619 evaluated, 134 expanded
[t=0.253225s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.253264s, 431496 KB] g=49, 765 evaluated, 182 expanded, 7 reopened
[t=0.254181s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.254215s, 431496 KB] g=50, 770 evaluated, 183 expanded, 7 reopened
[t=0.254426s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.254455s, 431496 KB] g=51, 771 evaluated, 184 expanded, 7 reopened
[t=0.258031s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.258068s, 431496 KB] g=49, 791 evaluated, 189 expanded, 7 reopened
[t=0.262701s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.262735s, 431496 KB] g=54, 817 evaluated, 196 expanded, 7 reopened
[t=0.264532s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.264563s, 431496 KB] g=56, 827 evaluated, 199 expanded, 7 reopened
[t=0.265139s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.265171s, 431496 KB] g=57, 830 evaluated, 200 expanded, 7 reopened
[t=0.268918s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.268951s, 431496 KB] g=61, 851 evaluated, 208 expanded, 7 reopened
[t=0.269342s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.269374s, 431496 KB] g=62, 853 evaluated, 209 expanded, 7 reopened
[t=0.270117s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_5.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.270146s, 431496 KB] g=64, 857 evaluated, 211 expanded, 7 reopened
[t=0.270178s, 431496 KB] Solution found!
[t=0.270205s, 431496 KB] Actual search time: 0.172309s
stack a e (1)
unstack g b (1)
put-down g (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
put-down d (1)
pick-up g (1)
stack g i (1)
unstack j k (1)
stack j a (1)
unstack k l (1)
stack k j (1)
unstack l f (1)
stack l d (1)
unstack f h (1)
stack f b (1)
unstack k j (1)
stack k l (1)
unstack j a (1)
put-down j (1)
unstack g i (1)
put-down g (1)
pick-up h (1)
stack h j (1)
unstack a e (1)
stack a k (1)
unstack f b (1)
stack f e (1)
unstack h j (1)
stack h g (1)
unstack i c (1)
put-down i (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e b (1)
unstack k l (1)
stack k e (1)
pick-up i (1)
stack i c (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
pick-up b (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.270229s, 431496 KB] Plan length: 65 step(s).
[t=0.270229s, 431496 KB] Plan cost: 65
[t=0.270229s, 431496 KB] Expanded 213 state(s).
[t=0.270229s, 431496 KB] Reopened 7 state(s).
[t=0.270229s, 431496 KB] Evaluated 858 state(s).
[t=0.270229s, 431496 KB] Evaluations: 858
[t=0.270229s, 431496 KB] Generated 1119 state(s).
[t=0.270229s, 431496 KB] Dead ends: 0 state(s).
[t=0.270229s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.270229s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.270229s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.270229s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.270229s, 431496 KB] Number of registered states: 858
[t=0.270229s, 431496 KB] Int hash set load factor: 858/1024 = 0.837891
[t=0.270229s, 431496 KB] Int hash set resizes: 10
[t=0.270229s, 431496 KB] Search time: 0.243908s
[t=0.270229s, 431496 KB] Total time: 0.270229s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.024007
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 5 test success: 20 of 20 (100.0%)

---------- FOLD 7/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 133 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.22851544618606567 (0.43340909481048584 vs. 0.20489364862442017), which occurred at index 105.
  _module_class,
 | avg_train_loss=0.099340 | avg_val_loss=0.092750
Epoch 2 | avg_train_loss=0.069466 | avg_val_loss=0.047606
Epoch 3 | avg_train_loss=0.043686 | avg_val_loss=0.040710
Epoch 4 | avg_train_loss=0.039365 | avg_val_loss=0.038680
Epoch 5 | avg_train_loss=0.037644 | avg_val_loss=0.037158
Epoch 6 | avg_train_loss=0.036540 | avg_val_loss=0.036969
Epoch 7 | avg_train_loss=0.035492 | avg_val_loss=0.035786
Epoch 8 | avg_train_loss=0.034604 | avg_val_loss=0.034710
Epoch 9 | avg_train_loss=0.033924 | avg_val_loss=0.033913
Epoch 10 | avg_train_loss=0.033392 | avg_val_loss=0.033840
Epoch 11 | avg_train_loss=0.032707 | avg_val_loss=0.032854
Epoch 12 | avg_train_loss=0.032350 | avg_val_loss=0.032817
Epoch 13 | avg_train_loss=0.031897 | avg_val_loss=0.032422
Epoch 14 | avg_train_loss=0.031576 | avg_val_loss=0.031979
Epoch 15 | avg_train_loss=0.031208 | avg_val_loss=0.031879
Epoch 16 | avg_train_loss=0.030934 | avg_val_loss=0.031109
Epoch 17 | avg_train_loss=0.030734 | avg_val_loss=0.031110
Epoch 18 | avg_train_loss=0.030409 | avg_val_loss=0.030464
Epoch 19 | avg_train_loss=0.030092 | avg_val_loss=0.030801
Epoch 20 | avg_train_loss=0.029787 | avg_val_loss=0.030333
Epoch 21 | avg_train_loss=0.029659 | avg_val_loss=0.030010
Epoch 22 | avg_train_loss=0.029291 | avg_val_loss=0.030101
Epoch 23 | avg_train_loss=0.029243 | avg_val_loss=0.029743
Epoch 24 | avg_train_loss=0.029009 | avg_val_loss=0.029960
Epoch 25 | avg_train_loss=0.028730 | avg_val_loss=0.029114
Epoch 26 | avg_train_loss=0.028578 | avg_val_loss=0.028815
Epoch 27 | avg_train_loss=0.028365 | avg_val_loss=0.029140
Epoch 28 | avg_train_loss=0.027864 | avg_val_loss=0.029010
Epoch 29 | avg_train_loss=0.027852 | avg_val_loss=0.028724
Epoch 30 | avg_train_loss=0.027547 | avg_val_loss=0.028893
Epoch 31 | avg_train_loss=0.027421 | avg_val_loss=0.028287
Epoch 32 | avg_train_loss=0.027210 | avg_val_loss=0.027988
Epoch 33 | avg_train_loss=0.026996 | avg_val_loss=0.027716
Epoch 34 | avg_train_loss=0.026874 | avg_val_loss=0.027633
Epoch 35 | avg_train_loss=0.026664 | avg_val_loss=0.026962
Epoch 36 | avg_train_loss=0.026483 | avg_val_loss=0.026956
Epoch 37 | avg_train_loss=0.026239 | avg_val_loss=0.027255
Epoch 38 | avg_train_loss=0.026088 | avg_val_loss=0.027376
Epoch 39 | avg_train_loss=0.025826 | avg_val_loss=0.027083
Epoch 40 | avg_train_loss=0.025659 | avg_val_loss=0.026426
Epoch 41 | avg_train_loss=0.025394 | avg_val_loss=0.026470
Epoch 42 | avg_train_loss=0.025342 | avg_val_loss=0.026602
Epoch 43 | avg_train_loss=0.025164 | avg_val_loss=0.026241
Epoch 44 | avg_train_loss=0.024900 | avg_val_loss=0.025912
Epoch 45 | avg_train_loss=0.025007 | avg_val_loss=0.026000
Epoch 46 | avg_train_loss=0.024762 | avg_val_loss=0.025563
Epoch 47 | avg_train_loss=0.024653 | avg_val_loss=0.025573
Epoch 48 | avg_train_loss=0.024467 | avg_val_loss=0.025569
Epoch 49 | avg_train_loss=0.024378 | avg_val_loss=0.025210
Epoch 50 | avg_train_loss=0.024150 | avg_val_loss=0.024994
Epoch 51 | avg_train_loss=0.023998 | avg_val_loss=0.025680
Epoch 52 | avg_train_loss=0.023859 | avg_val_loss=0.025040
Epoch 53 | avg_train_loss=0.023727 | avg_val_loss=0.025444
Epoch 54 | avg_train_loss=0.023770 | avg_val_loss=0.024905
Epoch 55 | avg_train_loss=0.023743 | avg_val_loss=0.025354
Epoch 56 | avg_train_loss=0.023486 | avg_val_loss=0.025123
Epoch 57 | avg_train_loss=0.023489 | avg_val_loss=0.024726
Epoch 58 | avg_train_loss=0.023167 | avg_val_loss=0.025375
Epoch 59 | avg_train_loss=0.023207 | avg_val_loss=0.024982
Epoch 60 | avg_train_loss=0.023108 | avg_val_loss=0.024850
Epoch 61 | avg_train_loss=0.022930 | avg_val_loss=0.024326
Epoch 62 | avg_train_loss=0.022831 | avg_val_loss=0.024946
Epoch 63 | avg_train_loss=0.022804 | avg_val_loss=0.024533
Epoch 64 | avg_train_loss=0.022589 | avg_val_loss=0.024640
Epoch 65 | avg_train_loss=0.022567 | avg_val_loss=0.024339
Epoch 66 | avg_train_loss=0.022391 | avg_val_loss=0.024703
Epoch 67 | avg_train_loss=0.022438 | avg_val_loss=0.024385
Epoch 68 | avg_train_loss=0.022429 | avg_val_loss=0.024255
Epoch 69 | avg_train_loss=0.022234 | avg_val_loss=0.023890
Epoch 70 | avg_train_loss=0.022142 | avg_val_loss=0.024372
Epoch 71 | avg_train_loss=0.022161 | avg_val_loss=0.024117
Epoch 72 | avg_train_loss=0.022033 | avg_val_loss=0.024461
Epoch 73 | avg_train_loss=0.021998 | avg_val_loss=0.024024
Epoch 74 | avg_train_loss=0.021662 | avg_val_loss=0.024409
Epoch 75 | avg_train_loss=0.021623 | avg_val_loss=0.023918
Epoch 76 | avg_train_loss=0.021624 | avg_val_loss=0.024005
Epoch 77 | avg_train_loss=0.021581 | avg_val_loss=0.024290
Epoch 78 | avg_train_loss=0.021443 | avg_val_loss=0.023846
Epoch 79 | avg_train_loss=0.021506 | avg_val_loss=0.023934
Epoch 80 | avg_train_loss=0.021279 | avg_val_loss=0.023642
Epoch 81 | avg_train_loss=0.021274 | avg_val_loss=0.024039
Epoch 82 | avg_train_loss=0.021198 | avg_val_loss=0.023932
Epoch 83 | avg_train_loss=0.021132 | avg_val_loss=0.023884
Epoch 84 | avg_train_loss=0.021205 | avg_val_loss=0.024018
Epoch 85 | avg_train_loss=0.021073 | avg_val_loss=0.023490
Epoch 86 | avg_train_loss=0.020956 | avg_val_loss=0.024120
Epoch 87 | avg_train_loss=0.020923 | avg_val_loss=0.023850
Epoch 88 | avg_train_loss=0.020766 | avg_val_loss=0.023480
Epoch 89 | avg_train_loss=0.020731 | avg_val_loss=0.023711
Epoch 90 | avg_train_loss=0.020584 | avg_val_loss=0.023322
Epoch 91 | avg_train_loss=0.020590 | avg_val_loss=0.023844
Epoch 92 | avg_train_loss=0.020520 | avg_val_loss=0.023515
Epoch 93 | avg_train_loss=0.020450 | avg_val_loss=0.023347
Epoch 94 | avg_train_loss=0.020403 | avg_val_loss=0.023746
Epoch 95 | avg_train_loss=0.020313 | avg_val_loss=0.023250
Epoch 96 | avg_train_loss=0.020152 | avg_val_loss=0.023456
Epoch 97 | avg_train_loss=0.020148 | avg_val_loss=0.023336
Epoch 98 | avg_train_loss=0.020038 | avg_val_loss=0.023399
Epoch 99 | avg_train_loss=0.020022 | avg_val_loss=0.023507
Epoch 100 | avg_train_loss=0.019867 | avg_val_loss=0.023893
Epoch 101 | avg_train_loss=0.019976 | avg_val_loss=0.023636
Epoch 102 | avg_train_loss=0.019912INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p121.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7344e-05s, 424928 KB] reading input...
[t=0.00212381s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260693s, 427536 KB] Building successor generator...done!
[t=0.0263508s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263743s, 427536 KB] time for successor generation creation: 0.000168329s
[t=0.0264032s, 427536 KB] Variables: 25
[t=0.0264261s, 427536 KB] FactPairs: 182
[t=0.0264482s, 427536 KB] Bytes per state: 8
[t=0.0266427s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.10637s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.106423s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106449s, 430128 KB] f = 118, 1 evaluated, 0 expanded
[t=0.106477s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.106511s, 430128 KB] pruning method: none
[t=0.124902s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.124953s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.126778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.126809s, 431100 KB] g=2, 14 evaluated, 3 expanded
[t=0.12811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.128143s, 431100 KB] g=3, 21 evaluated, 4 expanded
[t=0.133883s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.13392s, 431100 KB] g=6, 53 evaluated, 10 expanded
[t=0.134676s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.134706s, 431100 KB] g=7, 57 evaluated, 11 expanded
[t=0.135994s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.136026s, 431100 KB] g=8, 64 evaluated, 12 expanded
[t=0.13804s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.138071s, 431100 KB] g=10, 75 evaluated, 15 expanded
[t=0.139551s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.139584s, 431100 KB] g=12, 83 evaluated, 17 expanded
[t=0.142854s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.142889s, 431100 KB] g=16, 101 evaluated, 22 expanded
[t=0.147788s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.147822s, 431100 KB] g=16, 128 evaluated, 34 expanded
[t=0.150031s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.150064s, 431100 KB] g=18, 140 evaluated, 39 expanded
[t=0.150637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.150667s, 431100 KB] g=19, 143 evaluated, 40 expanded
[t=0.150885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.150919s, 431100 KB] g=19, 144 evaluated, 40 expanded
[t=0.151136s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.151165s, 431100 KB] g=20, 145 evaluated, 41 expanded
[t=0.152094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.152124s, 431100 KB] g=22, 150 evaluated, 43 expanded
[t=0.152699s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.152735s, 431100 KB] g=23, 153 evaluated, 45 expanded
[t=0.152949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.152978s, 431100 KB] g=24, 154 evaluated, 46 expanded
[t=0.154092s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.154123s, 431100 KB] g=27, 160 evaluated, 49 expanded
[t=0.154877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.154908s, 431100 KB] g=29, 164 evaluated, 51 expanded
[t=0.156381s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.156412s, 431232 KB] g=31, 172 evaluated, 54 expanded
[t=0.156625s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.156654s, 431232 KB] g=32, 173 evaluated, 55 expanded
[t=0.157225s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.157254s, 431232 KB] g=33, 176 evaluated, 56 expanded
[t=0.158726s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.158756s, 431232 KB] g=35, 184 evaluated, 60 expanded
[t=0.15898s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.159011s, 431232 KB] g=36, 185 evaluated, 61 expanded
[t=0.15922s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.159249s, 431232 KB] g=36, 186 evaluated, 61 expanded
[t=0.159824s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.159854s, 431232 KB] g=38, 189 evaluated, 63 expanded
[t=0.160608s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.16064s, 431232 KB] g=38, 193 evaluated, 66 expanded
[t=0.161228s, 431232 KB] Solution found!
[t=0.16126s, 431232 KB] Actual search time: 0.0547463s
unstack h j (1)
stack h g (1)
unstack l e (1)
stack l d (1)
pick-up j (1)
stack j e (1)
unstack b k (1)
stack b l (1)
pick-up k (1)
stack k b (1)
unstack f a (1)
stack f j (1)
pick-up a (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack j e (1)
stack j b (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.161287s, 431232 KB] Plan length: 40 step(s).
[t=0.161287s, 431232 KB] Plan cost: 40
[t=0.161287s, 431232 KB] Expanded 71 state(s).
[t=0.161287s, 431232 KB] Reopened 0 state(s).
[t=0.161287s, 431232 KB] Evaluated 197 state(s).
[t=0.161287s, 431232 KB] Evaluations: 197
[t=0.161287s, 431232 KB] Generated 267 state(s).
[t=0.161287s, 431232 KB] Dead ends: 0 state(s).
[t=0.161287s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.161287s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.161287s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.161287s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.161287s, 431232 KB] Number of registered states: 197
[t=0.161287s, 431232 KB] Int hash set load factor: 197/256 = 0.769531
[t=0.161287s, 431232 KB] Int hash set resizes: 8
[t=0.161287s, 431232 KB] Search time: 0.134645s
[t=0.161287s, 431232 KB] Total time: 0.161287s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p122.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.671e-05s, 424928 KB] reading input...
[t=0.00214904s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260126s, 427536 KB] Building successor generator...done!
[t=0.0263005s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263239s, 427536 KB] time for successor generation creation: 0.000173449s
[t=0.0263624s, 427536 KB] Variables: 25
[t=0.0263853s, 427536 KB] FactPairs: 182
[t=0.0264077s, 427536 KB] Bytes per state: 8
[t=0.0266021s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982914s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0983451s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983718s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0983998s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0984237s, 430128 KB] pruning method: none
[t=0.116618s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.116667s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117794s, 431100 KB] f = 147, 9 evaluated, 2 expanded
[t=0.118741s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.118774s, 431100 KB] g=2, 14 evaluated, 4 expanded
[t=0.120959s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.12099s, 431100 KB] g=3, 26 evaluated, 7 expanded
[t=0.121206s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.121236s, 431100 KB] g=4, 27 evaluated, 8 expanded
[t=0.125396s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.12543s, 431100 KB] g=5, 50 evaluated, 13 expanded
[t=0.12922s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.129254s, 431100 KB] g=7, 71 evaluated, 18 expanded
[t=0.130736s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.130773s, 431100 KB] g=9, 79 evaluated, 20 expanded
[t=0.131886s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.13192s, 431100 KB] g=10, 85 evaluated, 21 expanded
[t=0.133197s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.133228s, 431100 KB] g=11, 92 evaluated, 22 expanded
[t=0.135237s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.135271s, 431100 KB] g=11, 103 evaluated, 25 expanded
[t=0.136019s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.136053s, 431100 KB] g=12, 107 evaluated, 26 expanded
[t=0.141466s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.1415s, 431100 KB] g=15, 137 evaluated, 32 expanded
[t=0.146749s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.146797s, 431100 KB] g=16, 166 evaluated, 40 expanded
[t=0.153664s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.153701s, 431232 KB] g=19, 204 evaluated, 49 expanded
[t=0.225423s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.225463s, 431364 KB] g=29, 603 evaluated, 144 expanded, 7 reopened
[t=0.225861s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.225891s, 431364 KB] g=30, 605 evaluated, 145 expanded, 7 reopened
[t=0.227555s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.22759s, 431364 KB] g=31, 614 evaluated, 147 expanded, 7 reopened
[t=0.235846s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.235882s, 431364 KB] g=32, 660 evaluated, 155 expanded, 7 reopened
[t=0.242195s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.242234s, 431364 KB] g=35, 695 evaluated, 162 expanded, 7 reopened
[t=0.249806s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.249845s, 431496 KB] g=38, 737 evaluated, 170 expanded, 7 reopened
[t=0.253292s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.253327s, 431496 KB] g=40, 756 evaluated, 174 expanded, 7 reopened
[t=0.253716s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.253746s, 431496 KB] g=40, 758 evaluated, 174 expanded, 7 reopened
[t=0.254864s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.254899s, 431496 KB] g=41, 764 evaluated, 175 expanded, 7 reopened
[t=0.257268s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.257301s, 431496 KB] g=44, 777 evaluated, 178 expanded, 7 reopened
[t=0.258964s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.259s, 431496 KB] g=45, 786 evaluated, 181 expanded, 7 reopened
[t=0.259566s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.259597s, 431496 KB] g=45, 789 evaluated, 181 expanded, 7 reopened
[t=0.263401s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.263436s, 431496 KB] g=47, 810 evaluated, 186 expanded, 7 reopened
[t=0.265262s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.265293s, 431496 KB] g=49, 820 evaluated, 188 expanded, 7 reopened
[t=0.265874s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.265908s, 431496 KB] g=50, 823 evaluated, 189 expanded, 7 reopened
[t=0.266305s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.266337s, 431496 KB] g=50, 825 evaluated, 189 expanded, 7 reopened
[t=0.267809s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.26784s, 431496 KB] g=52, 833 evaluated, 192 expanded, 7 reopened
[t=0.268408s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.268438s, 431496 KB] g=53, 836 evaluated, 193 expanded, 7 reopened
[t=0.270448s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.270485s, 431496 KB] g=54, 847 evaluated, 196 expanded, 7 reopened
[t=0.271235s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.271265s, 431496 KB] g=55, 851 evaluated, 197 expanded, 7 reopened
[t=0.27274s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.272771s, 431496 KB] g=58, 859 evaluated, 200 expanded, 7 reopened
[t=0.27409s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.274124s, 431496 KB] g=59, 866 evaluated, 205 expanded, 7 reopened
[t=0.275423s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.275457s, 431496 KB] g=62, 873 evaluated, 209 expanded, 7 reopened
[t=0.27567s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.2757s, 431496 KB] g=63, 874 evaluated, 210 expanded, 7 reopened
[t=0.276643s, 431496 KB] Solution found!
[t=0.276677s, 431496 KB] Actual search time: 0.178252s
stack d e (1)
unstack b f (1)
put-down b (1)
unstack d e (1)
stack d b (1)
unstack e l (1)
put-down e (1)
unstack l h (1)
stack l d (1)
unstack h j (1)
stack h l (1)
pick-up j (1)
stack j e (1)
unstack f c (1)
stack f j (1)
unstack c i (1)
put-down c (1)
pick-up i (1)
stack i c (1)
unstack f j (1)
stack f i (1)
unstack h l (1)
stack h a (1)
unstack l d (1)
put-down l (1)
unstack d b (1)
put-down d (1)
pick-up b (1)
stack b l (1)
unstack h a (1)
stack h g (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e b (1)
pick-up j (1)
stack j e (1)
unstack a k (1)
stack a h (1)
unstack j e (1)
put-down j (1)
pick-up k (1)
stack k j (1)
unstack f i (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
stack b i (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.276703s, 431496 KB] Plan length: 65 step(s).
[t=0.276703s, 431496 KB] Plan cost: 65
[t=0.276703s, 431496 KB] Expanded 216 state(s).
[t=0.276703s, 431496 KB] Reopened 7 state(s).
[t=0.276703s, 431496 KB] Evaluated 880 state(s).
[t=0.276703s, 431496 KB] Evaluations: 880
[t=0.276703s, 431496 KB] Generated 1159 state(s).
[t=0.276703s, 431496 KB] Dead ends: 0 state(s).
[t=0.276703s, 431496 KB] Expanded until last jump: 2 state(s).
[t=0.276703s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.276703s, 431496 KB] Evaluated until last jump: 9 state(s).
[t=0.276703s, 431496 KB] Generated until last jump: 9 state(s).
[t=0.276703s, 431496 KB] Number of registered states: 880
[t=0.276703s, 431496 KB] Int hash set load factor: 880/1024 = 0.859375
[t=0.276703s, 431496 KB] Int hash set resizes: 10
[t=0.276703s, 431496 KB] Search time: 0.250102s
[t=0.276703s, 431496 KB] Total time: 0.276703s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p123.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.103s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0203e-05s, 424928 KB] reading input...
[t=0.00218079s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258113s, 427536 KB] Building successor generator...done!
[t=0.0260902s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261135s, 427536 KB] time for successor generation creation: 0.000168303s
[t=0.0261421s, 427536 KB] Variables: 25
[t=0.0261652s, 427536 KB] FactPairs: 182
[t=0.0261874s, 427536 KB] Bytes per state: 8
[t=0.0263836s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979033s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.0979556s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979817s, 430128 KB] f = 96, 1 evaluated, 0 expanded
[t=0.0980089s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.0980328s, 430128 KB] pruning method: none
[t=0.116592s, 431100 KB] f = 103, 5 evaluated, 1 expanded
[t=0.11683s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.116861s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.119941s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119975s, 431100 KB] g=6, 23 evaluated, 8 expanded
[t=0.120364s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.120394s, 431100 KB] g=7, 25 evaluated, 9 expanded
[t=0.120962s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.120993s, 431100 KB] g=8, 28 evaluated, 10 expanded
[t=0.12587s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.125907s, 431100 KB] g=10, 55 evaluated, 17 expanded
[t=0.126118s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.126148s, 431100 KB] g=10, 56 evaluated, 17 expanded
[t=0.129086s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.12912s, 431100 KB] g=13, 72 evaluated, 22 expanded
[t=0.158496s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.158533s, 431232 KB] g=16, 234 evaluated, 92 expanded, 9 reopened
[t=0.199716s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.199756s, 431232 KB] g=23, 462 evaluated, 157 expanded, 9 reopened
[t=0.201257s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.20129s, 431232 KB] g=24, 470 evaluated, 159 expanded, 9 reopened
[t=0.244201s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.24424s, 431364 KB] g=27, 708 evaluated, 217 expanded, 9 reopened
[t=0.248777s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.248822s, 431364 KB] g=33, 733 evaluated, 225 expanded, 9 reopened
[t=0.250316s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.250351s, 431496 KB] g=36, 741 evaluated, 228 expanded, 9 reopened
[t=0.251104s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.251135s, 431496 KB] g=38, 745 evaluated, 230 expanded, 9 reopened
[t=0.25171s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.251744s, 431496 KB] g=39, 748 evaluated, 231 expanded, 9 reopened
[t=0.252498s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.252528s, 431496 KB] g=40, 752 evaluated, 232 expanded, 9 reopened
[t=0.252742s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.252773s, 431496 KB] g=41, 753 evaluated, 233 expanded, 9 reopened
[t=0.283741s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.283781s, 431496 KB] g=48, 924 evaluated, 296 expanded, 13 reopened
[t=0.335314s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.335357s, 431628 KB] g=50, 1209 evaluated, 422 expanded, 37 reopened
[t=0.33755s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.337584s, 431628 KB] g=51, 1221 evaluated, 426 expanded, 37 reopened
[t=0.363105s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.363142s, 431628 KB] g=51, 1363 evaluated, 479 expanded, 39 reopened
[t=0.363539s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.363569s, 431628 KB] g=52, 1365 evaluated, 480 expanded, 39 reopened
[t=0.365049s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.365083s, 431628 KB] g=54, 1373 evaluated, 483 expanded, 39 reopened
[t=0.366924s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.366958s, 431628 KB] g=55, 1383 evaluated, 487 expanded, 39 reopened
[t=0.368428s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.368461s, 431628 KB] g=59, 1391 evaluated, 491 expanded, 39 reopened
[t=0.37372s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.373757s, 431628 KB] g=58, 1420 evaluated, 503 expanded, 39 reopened
[t=0.376671s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.376706s, 431628 KB] g=63, 1436 evaluated, 511 expanded, 39 reopened
[t=0.376744s, 431628 KB] Solution found!
[t=0.376772s, 431628 KB] Actual search time: 0.278736s
pick-up g (1)
stack g a (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
unstack g a (1)
put-down g (1)
pick-up b (1)
stack b d (1)
unstack i c (1)
put-down i (1)
unstack a k (1)
put-down a (1)
pick-up c (1)
stack c b (1)
unstack k f (1)
stack k i (1)
unstack f h (1)
put-down f (1)
pick-up a (1)
stack a f (1)
unstack h l (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k i (1)
stack k f (1)
pick-up i (1)
stack i l (1)
unstack c b (1)
stack c i (1)
unstack b d (1)
stack b k (1)
unstack d j (1)
put-down d (1)
unstack c i (1)
put-down c (1)
unstack b k (1)
stack b c (1)
unstack j e (1)
stack j b (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b c (1)
stack b d (1)
unstack i l (1)
put-down i (1)
unstack b d (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.376798s, 431628 KB] Plan length: 64 step(s).
[t=0.376798s, 431628 KB] Plan cost: 64
[t=0.376798s, 431628 KB] Expanded 513 state(s).
[t=0.376798s, 431628 KB] Reopened 39 state(s).
[t=0.376798s, 431628 KB] Evaluated 1437 state(s).
[t=0.376798s, 431628 KB] Evaluations: 1437
[t=0.376798s, 431628 KB] Generated 2205 state(s).
[t=0.376798s, 431628 KB] Dead ends: 0 state(s).
[t=0.376798s, 431628 KB] Expanded until last jump: 1 state(s).
[t=0.376798s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.376798s, 431628 KB] Evaluated until last jump: 5 state(s).
[t=0.376798s, 431628 KB] Generated until last jump: 4 state(s).
[t=0.376798s, 431628 KB] Number of registered states: 1437
[t=0.376798s, 431628 KB] Int hash set load factor: 1437/2048 = 0.70166
[t=0.376798s, 431628 KB] Int hash set resizes: 11
[t=0.376798s, 431628 KB] Search time: 0.350415s
[t=0.376798s, 431628 KB] Total time: 0.376798s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p124.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6518e-05s, 424928 KB] reading input...
[t=0.00220648s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261359s, 427536 KB] Building successor generator...done!
[t=0.0264158s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264392s, 427536 KB] time for successor generation creation: 0.000168671s
[t=0.0264677s, 427536 KB] Variables: 25
[t=0.0264903s, 427536 KB] FactPairs: 182
[t=0.026512s, 427536 KB] Bytes per state: 8
[t=0.0267094s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.100332s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.100384s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.100409s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.100436s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.10046s, 430128 KB] pruning method: none
[t=0.112425s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.112475s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.12935s, 431100 KB] f = 151, 58 evaluated, 19 expanded
[t=0.132979s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.133012s, 431100 KB] g=5, 77 evaluated, 25 expanded
[t=0.135687s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.13572s, 431100 KB] g=6, 91 evaluated, 28 expanded
[t=0.137436s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.137467s, 431100 KB] g=8, 100 evaluated, 30 expanded
[t=0.139567s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.139604s, 431100 KB] g=10, 111 evaluated, 32 expanded
[t=0.140009s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.140038s, 431100 KB] g=10, 113 evaluated, 32 expanded
[t=0.140257s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.140296s, 431100 KB] g=10, 114 evaluated, 32 expanded
[t=0.141456s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.141486s, 431100 KB] g=11, 120 evaluated, 33 expanded
[t=0.143992s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.144028s, 431100 KB] g=13, 133 evaluated, 35 expanded
[t=0.148015s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.14805s, 431100 KB] g=16, 154 evaluated, 39 expanded
[t=0.148455s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.148484s, 431100 KB] g=16, 156 evaluated, 39 expanded
[t=0.149268s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.1493s, 431100 KB] g=17, 160 evaluated, 40 expanded
[t=0.151605s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.151638s, 431100 KB] g=17, 172 evaluated, 42 expanded
[t=0.151857s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.151885s, 431100 KB] g=17, 173 evaluated, 42 expanded
[t=0.159273s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.15931s, 431232 KB] g=19, 212 evaluated, 48 expanded
[t=0.163309s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.163345s, 431232 KB] g=19, 233 evaluated, 52 expanded
[t=0.16906s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.169096s, 431232 KB] g=23, 263 evaluated, 58 expanded
[t=0.169501s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.169532s, 431232 KB] g=23, 265 evaluated, 58 expanded
[t=0.172028s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.172061s, 431232 KB] g=24, 278 evaluated, 61 expanded
[t=0.185123s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.185161s, 431232 KB] g=25, 347 evaluated, 74 expanded
[t=0.187273s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.187305s, 431232 KB] g=27, 358 evaluated, 77 expanded
[t=0.193396s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.19343s, 431232 KB] g=33, 390 evaluated, 87 expanded
[t=0.251964s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.252017s, 431364 KB] g=30, 696 evaluated, 192 expanded, 17 reopened
[t=0.268467s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.268508s, 431496 KB] g=36, 783 evaluated, 212 expanded, 17 reopened
[t=0.269113s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.269143s, 431496 KB] g=37, 786 evaluated, 213 expanded, 17 reopened
[t=0.274437s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.274474s, 431496 KB] g=40, 814 evaluated, 218 expanded, 17 reopened
[t=0.275253s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.275285s, 431496 KB] g=41, 818 evaluated, 219 expanded, 17 reopened
[t=0.27718s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.277213s, 431496 KB] g=42, 828 evaluated, 220 expanded, 17 reopened
[t=0.277807s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.277836s, 431496 KB] g=43, 831 evaluated, 221 expanded, 17 reopened
[t=0.281064s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.281101s, 431496 KB] g=46, 848 evaluated, 225 expanded, 17 reopened
[t=0.283019s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.283052s, 431496 KB] g=45, 858 evaluated, 228 expanded, 17 reopened
[t=0.287215s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.287247s, 431496 KB] g=49, 880 evaluated, 235 expanded, 17 reopened
[t=0.287655s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.287684s, 431496 KB] g=50, 882 evaluated, 236 expanded, 17 reopened
[t=0.297456s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.297491s, 431496 KB] g=50, 934 evaluated, 252 expanded, 17 reopened
[t=0.299773s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.299806s, 431496 KB] g=53, 946 evaluated, 256 expanded, 17 reopened
[t=0.301143s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.301176s, 431496 KB] g=55, 953 evaluated, 258 expanded, 17 reopened
[t=0.302148s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.302183s, 431496 KB] g=56, 958 evaluated, 259 expanded, 17 reopened
[t=0.302399s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.302436s, 431496 KB] g=56, 959 evaluated, 259 expanded, 17 reopened
[t=0.303031s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.303061s, 431496 KB] g=57, 962 evaluated, 260 expanded, 17 reopened
[t=0.304594s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.304628s, 431496 KB] g=60, 970 evaluated, 263 expanded, 17 reopened
[t=0.305594s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.305624s, 431496 KB] g=63, 975 evaluated, 266 expanded, 17 reopened
[t=0.306423s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.306458s, 431496 KB] g=63, 979 evaluated, 269 expanded, 17 reopened
[t=0.314703s, 431496 KB] Solution found!
[t=0.314759s, 431496 KB] Actual search time: 0.214298s
stack a i (1)
unstack e d (1)
put-down e (1)
unstack f l (1)
stack f c (1)
unstack d b (1)
put-down d (1)
unstack b h (1)
stack b d (1)
unstack l k (1)
put-down l (1)
unstack f c (1)
put-down f (1)
pick-up e (1)
stack e k (1)
pick-up c (1)
stack c a (1)
unstack b d (1)
stack b l (1)
unstack c a (1)
stack c b (1)
pick-up f (1)
stack f d (1)
pick-up h (1)
stack h a (1)
unstack e k (1)
stack e c (1)
unstack k j (1)
put-down k (1)
unstack j g (1)
put-down j (1)
unstack e c (1)
put-down e (1)
unstack h a (1)
stack h g (1)
pick-up j (1)
stack j c (1)
unstack a i (1)
stack a h (1)
unstack f d (1)
stack f a (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up d (1)
stack d i (1)
unstack j c (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.314786s, 431496 KB] Plan length: 63 step(s).
[t=0.314786s, 431496 KB] Plan cost: 63
[t=0.314786s, 431496 KB] Expanded 294 state(s).
[t=0.314786s, 431496 KB] Reopened 18 state(s).
[t=0.314786s, 431496 KB] Evaluated 1023 state(s).
[t=0.314786s, 431496 KB] Evaluations: 1023
[t=0.314786s, 431496 KB] Generated 1411 state(s).
[t=0.314786s, 431496 KB] Dead ends: 0 state(s).
[t=0.314786s, 431496 KB] Expanded until last jump: 19 state(s).
[t=0.314786s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.314786s, 431496 KB] Evaluated until last jump: 58 state(s).
[t=0.314786s, 431496 KB] Generated until last jump: 76 state(s).
[t=0.314786s, 431496 KB] Number of registered states: 1023
[t=0.314786s, 431496 KB] Int hash set load factor: 1023/2048 = 0.499512
[t=0.314786s, 431496 KB] Int hash set resizes: 11
[t=0.314786s, 431496 KB] Search time: 0.288077s
[t=0.314786s, 431496 KB] Total time: 0.314786s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p125.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5976e-05s, 424928 KB] reading input...
[t=0.00213816s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258586s, 427536 KB] Building successor generator...done!
[t=0.0261364s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.02616s, 427536 KB] time for successor generation creation: 0.000165194s
[t=0.0261889s, 427536 KB] Variables: 25
[t=0.0262113s, 427536 KB] FactPairs: 182
[t=0.0262333s, 427536 KB] Bytes per state: 8
[t=0.0264242s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982198s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.0982709s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982958s, 430128 KB] f = 99, 1 evaluated, 0 expanded
[t=0.0983236s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.0983473s, 430128 KB] pruning method: none
[t=0.11672s, 431100 KB] f = 106, 4 evaluated, 1 expanded
[t=0.117327s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.11736s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117756s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.117797s, 431100 KB] g=3, 9 evaluated, 3 expanded
[t=0.118723s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.118753s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.120032s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.120063s, 431100 KB] g=5, 21 evaluated, 6 expanded
[t=0.122618s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.122651s, 431100 KB] g=10, 35 evaluated, 12 expanded
[t=0.128937s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.128973s, 431100 KB] g=9, 70 evaluated, 23 expanded
[t=0.129377s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.129408s, 431100 KB] g=10, 72 evaluated, 24 expanded
[t=0.130502s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.130535s, 431100 KB] g=11, 78 evaluated, 25 expanded
[t=0.131281s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.131313s, 431100 KB] g=12, 82 evaluated, 26 expanded
[t=0.139769s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.139807s, 431100 KB] g=16, 129 evaluated, 39 expanded
[t=0.147751s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.147786s, 431232 KB] g=17, 173 evaluated, 52 expanded
[t=0.155353s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.155387s, 431232 KB] g=19, 215 evaluated, 62 expanded
[t=0.189856s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.189895s, 431232 KB] g=24, 408 evaluated, 107 expanded
[t=0.208098s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.208135s, 431364 KB] g=26, 510 evaluated, 134 expanded
[t=0.210014s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.210049s, 431364 KB] g=28, 520 evaluated, 137 expanded
[t=0.213845s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.213879s, 431364 KB] g=33, 541 evaluated, 143 expanded
[t=0.216585s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.216616s, 431364 KB] g=35, 556 evaluated, 146 expanded
[t=0.216831s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.216866s, 431364 KB] g=36, 557 evaluated, 147 expanded
[t=0.217263s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.217297s, 431364 KB] g=36, 559 evaluated, 147 expanded
[t=0.217507s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.217534s, 431364 KB] g=36, 560 evaluated, 147 expanded
[t=0.218641s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.218673s, 431364 KB] g=38, 566 evaluated, 149 expanded
[t=0.226559s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.226594s, 431364 KB] g=41, 610 evaluated, 165 expanded
[t=0.227699s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.22773s, 431364 KB] g=42, 616 evaluated, 167 expanded
[t=0.228126s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.228155s, 431364 KB] g=43, 618 evaluated, 168 expanded
[t=0.229087s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.229119s, 431364 KB] g=45, 623 evaluated, 170 expanded
[t=0.229687s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.229717s, 431364 KB] g=46, 626 evaluated, 171 expanded
[t=0.229924s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.229956s, 431364 KB] g=46, 627 evaluated, 171 expanded
[t=0.230879s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.230912s, 431364 KB] g=47, 632 evaluated, 173 expanded
[t=0.231302s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.231331s, 431364 KB] g=48, 634 evaluated, 174 expanded
[t=0.231727s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.231756s, 431364 KB] g=50, 636 evaluated, 176 expanded
[t=0.232324s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.232354s, 431364 KB] g=52, 639 evaluated, 178 expanded
[t=0.232744s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.232773s, 431364 KB] g=53, 641 evaluated, 179 expanded
[t=0.233967s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.234005s, 431364 KB] g=56, 648 evaluated, 185 expanded
[t=0.234035s, 431364 KB] Solution found!
[t=0.234064s, 431364 KB] Actual search time: 0.135714s
unstack k e (1)
put-down k (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack g h (1)
put-down g (1)
unstack h l (1)
stack h g (1)
unstack l a (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack a f (1)
stack a b (1)
unstack d i (1)
put-down d (1)
unstack j e (1)
stack j d (1)
pick-up f (1)
stack f e (1)
unstack j d (1)
stack j i (1)
pick-up d (1)
stack d j (1)
unstack a b (1)
stack a h (1)
unstack d j (1)
put-down d (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e j (1)
pick-up k (1)
stack k f (1)
pick-up d (1)
stack d b (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.234091s, 431364 KB] Plan length: 56 step(s).
[t=0.234091s, 431364 KB] Plan cost: 56
[t=0.234091s, 431364 KB] Expanded 186 state(s).
[t=0.234091s, 431364 KB] Reopened 0 state(s).
[t=0.234091s, 431364 KB] Evaluated 648 state(s).
[t=0.234091s, 431364 KB] Evaluations: 648
[t=0.234091s, 431364 KB] Generated 850 state(s).
[t=0.234091s, 431364 KB] Dead ends: 0 state(s).
[t=0.234091s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.234091s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.234091s, 431364 KB] Evaluated until last jump: 4 state(s).
[t=0.234091s, 431364 KB] Generated until last jump: 3 state(s).
[t=0.234091s, 431364 KB] Number of registered states: 648
[t=0.234091s, 431364 KB] Int hash set load factor: 648/1024 = 0.632812
[t=0.234091s, 431364 KB] Int hash set resizes: 10
[t=0.234091s, 431364 KB] Search time: 0.207667s
[t=0.234091s, 431364 KB] Total time: 0.234091s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p126.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.025s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8325e-05s, 424928 KB] reading input...
[t=0.00215899s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259777s, 427536 KB] Building successor generator...done!
[t=0.0262676s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262914s, 427536 KB] time for successor generation creation: 0.00017676s
[t=0.0263207s, 427536 KB] Variables: 25
[t=0.0263442s, 427536 KB] FactPairs: 182
[t=0.0263664s, 427536 KB] Bytes per state: 8
[t=0.0265608s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983345s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.0983855s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098411s, 430128 KB] f = 135, 1 evaluated, 0 expanded
[t=0.0984382s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.0984621s, 430128 KB] pruning method: none
[t=0.116698s, 431100 KB] f = 147, 3 evaluated, 1 expanded
[t=0.117121s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.117152s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.117728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.117758s, 431100 KB] g=4, 8 evaluated, 4 expanded
[t=0.118157s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.118189s, 431100 KB] g=4, 10 evaluated, 4 expanded
[t=0.120722s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.120752s, 431100 KB] g=6, 24 evaluated, 9 expanded
[t=0.12241s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.122443s, 431100 KB] g=8, 33 evaluated, 12 expanded
[t=0.123368s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.123398s, 431100 KB] g=9, 38 evaluated, 13 expanded
[t=0.125585s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.125616s, 431100 KB] g=11, 50 evaluated, 16 expanded
[t=0.137157s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.137204s, 431100 KB] g=18, 114 evaluated, 31 expanded
[t=0.139423s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.139458s, 431100 KB] g=19, 126 evaluated, 34 expanded
[t=0.168618s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.168654s, 431232 KB] g=26, 288 evaluated, 70 expanded
[t=0.169411s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.169441s, 431232 KB] g=27, 292 evaluated, 71 expanded
[t=0.188025s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.188064s, 431232 KB] g=29, 395 evaluated, 96 expanded, 1 reopened
[t=0.192234s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.19227s, 431364 KB] g=32, 418 evaluated, 101 expanded, 1 reopened
[t=0.193379s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.193409s, 431364 KB] g=33, 424 evaluated, 102 expanded, 1 reopened
[t=0.198479s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.198512s, 431364 KB] g=38, 452 evaluated, 110 expanded, 1 reopened
[t=0.201584s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.201614s, 431364 KB] g=41, 469 evaluated, 113 expanded, 1 reopened
[t=0.204539s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.204575s, 431364 KB] g=45, 485 evaluated, 118 expanded, 1 reopened
[t=0.216328s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.216366s, 431364 KB] g=47, 550 evaluated, 133 expanded, 1 reopened
[t=0.240383s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.240423s, 431496 KB] g=39, 683 evaluated, 175 expanded, 5 reopened
[t=0.258802s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.258839s, 431496 KB] g=43, 785 evaluated, 202 expanded, 6 reopened
[t=0.263533s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.263568s, 431496 KB] g=43, 811 evaluated, 208 expanded, 6 reopened
[t=0.263774s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.263803s, 431496 KB] g=43, 812 evaluated, 208 expanded, 6 reopened
[t=0.264908s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.264938s, 431496 KB] g=44, 818 evaluated, 210 expanded, 6 reopened
[t=0.265331s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.26536s, 431496 KB] g=44, 820 evaluated, 210 expanded, 6 reopened
[t=0.266647s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.266682s, 431496 KB] g=45, 827 evaluated, 212 expanded, 6 reopened
[t=0.274448s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.274483s, 431496 KB] g=51, 870 evaluated, 224 expanded, 6 reopened
[t=0.275057s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.275086s, 431496 KB] g=52, 873 evaluated, 225 expanded, 6 reopened
[t=0.276025s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.276055s, 431496 KB] g=54, 878 evaluated, 227 expanded, 6 reopened
[t=0.276446s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.276475s, 431496 KB] g=55, 880 evaluated, 228 expanded, 6 reopened
[t=0.277223s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.277256s, 431496 KB] g=56, 884 evaluated, 229 expanded, 6 reopened
[t=0.27747s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.277499s, 431496 KB] g=57, 885 evaluated, 230 expanded, 6 reopened
[t=0.278263s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.278301s, 431628 KB] g=58, 889 evaluated, 231 expanded, 6 reopened
[t=0.280124s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.280157s, 431628 KB] g=59, 899 evaluated, 234 expanded, 6 reopened
[t=0.287713s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.287747s, 431628 KB] g=63, 941 evaluated, 246 expanded, 6 reopened
[t=0.287958s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.287987s, 431628 KB] g=63, 942 evaluated, 246 expanded, 6 reopened
[t=0.312244s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.312285s, 431628 KB] g=67, 1076 evaluated, 297 expanded, 8 reopened
[t=0.313222s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.313255s, 431628 KB] g=69, 1081 evaluated, 299 expanded, 8 reopened
[t=0.31691s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.316948s, 431628 KB] g=73, 1101 evaluated, 309 expanded, 8 reopened
[t=0.31735s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.31738s, 431628 KB] g=74, 1103 evaluated, 310 expanded, 8 reopened
[t=0.317777s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.317807s, 431628 KB] g=76, 1106 evaluated, 312 expanded, 8 reopened
[t=0.317834s, 431628 KB] Solution found!
[t=0.317861s, 431628 KB] Actual search time: 0.219395s
unstack b d (1)
put-down b (1)
unstack e f (1)
put-down e (1)
unstack d i (1)
stack d e (1)
unstack f j (1)
stack f d (1)
unstack j a (1)
put-down j (1)
unstack i c (1)
put-down i (1)
pick-up j (1)
stack j i (1)
unstack f d (1)
stack f b (1)
unstack j i (1)
put-down j (1)
unstack d e (1)
stack d j (1)
unstack f b (1)
stack f e (1)
unstack a k (1)
stack a i (1)
pick-up b (1)
stack b d (1)
unstack k l (1)
stack k f (1)
unstack l g (1)
put-down l (1)
unstack a i (1)
stack a l (1)
pick-up c (1)
stack c b (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack k f (1)
stack k i (1)
unstack a l (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e l (1)
unstack k i (1)
stack k f (1)
pick-up i (1)
stack i c (1)
unstack e l (1)
stack e k (1)
unstack i c (1)
stack i l (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b c (1)
unstack d j (1)
stack d i (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i l (1)
stack i b (1)
pick-up l (1)
stack l d (1)
unstack i b (1)
put-down i (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.317886s, 431628 KB] Plan length: 76 step(s).
[t=0.317886s, 431628 KB] Plan cost: 76
[t=0.317886s, 431628 KB] Expanded 313 state(s).
[t=0.317886s, 431628 KB] Reopened 8 state(s).
[t=0.317886s, 431628 KB] Evaluated 1106 state(s).
[t=0.317886s, 431628 KB] Evaluations: 1106
[t=0.317886s, 431628 KB] Generated 1492 state(s).
[t=0.317886s, 431628 KB] Dead ends: 0 state(s).
[t=0.317886s, 431628 KB] Expanded until last jump: 1 state(s).
[t=0.317886s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.317886s, 431628 KB] Evaluated until last jump: 3 state(s).
[t=0.317886s, 431628 KB] Generated until last jump: 2 state(s).
[t=0.317886s, 431628 KB] Number of registered states: 1106
[t=0.317886s, 431628 KB] Int hash set load factor: 1106/2048 = 0.540039
[t=0.317886s, 431628 KB] Int hash set resizes: 11
[t=0.317886s, 431628 KB] Search time: 0.291326s
[t=0.317886s, 431628 KB] Total time: 0.317886s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p127.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9143e-05s, 424928 KB] reading input...
[t=0.00219109s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260577s, 427536 KB] Building successor generator...done!
[t=0.0263365s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263602s, 427536 KB] time for successor generation creation: 0.000166235s
[t=0.0263897s, 427536 KB] Variables: 25
[t=0.0264132s, 427536 KB] FactPairs: 182
[t=0.0264354s, 427536 KB] Bytes per state: 8
[t=0.0266299s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990451s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.099097s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991228s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0991501s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0991855s, 430128 KB] pruning method: none
[t=0.117519s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117569s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117975s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.118007s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.11822s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118249s, 431100 KB] g=3, 6 evaluated, 3 expanded
[t=0.118458s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.118498s, 431100 KB] g=3, 7 evaluated, 3 expanded
[t=0.119264s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.119296s, 431100 KB] g=5, 11 evaluated, 5 expanded
[t=0.119868s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.119897s, 431100 KB] g=6, 14 evaluated, 6 expanded
[t=0.12101s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.12104s, 431100 KB] g=7, 20 evaluated, 7 expanded
[t=0.165798s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.165839s, 431232 KB] g=31, 268 evaluated, 73 expanded
[t=0.174848s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.174886s, 431232 KB] g=26, 318 evaluated, 85 expanded
[t=0.179416s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.179451s, 431232 KB] g=30, 343 evaluated, 90 expanded
[t=0.179663s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.179692s, 431232 KB] g=30, 344 evaluated, 90 expanded
[t=0.180798s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.180829s, 431232 KB] g=32, 350 evaluated, 92 expanded
[t=0.181578s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.181611s, 431232 KB] g=33, 354 evaluated, 93 expanded
[t=0.182542s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.182571s, 431232 KB] g=34, 359 evaluated, 94 expanded
[t=0.188369s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.188403s, 431364 KB] g=34, 391 evaluated, 103 expanded
[t=0.189693s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.189726s, 431364 KB] g=35, 398 evaluated, 105 expanded
[t=0.190653s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.190686s, 431364 KB] g=36, 403 evaluated, 106 expanded
[t=0.201478s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.201515s, 431364 KB] g=36, 463 evaluated, 128 expanded
[t=0.224734s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.224771s, 431364 KB] g=44, 592 evaluated, 168 expanded, 4 reopened
[t=0.225161s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.225196s, 431364 KB] g=44, 594 evaluated, 168 expanded, 4 reopened
[t=0.227574s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.227607s, 431364 KB] g=46, 607 evaluated, 171 expanded, 4 reopened
[t=0.227998s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.228031s, 431364 KB] g=47, 609 evaluated, 172 expanded, 4 reopened
[t=0.230752s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.230787s, 431496 KB] g=49, 624 evaluated, 176 expanded, 4 reopened
[t=0.231728s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.231763s, 431496 KB] g=51, 629 evaluated, 178 expanded, 4 reopened
[t=0.232157s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.232187s, 431496 KB] g=52, 631 evaluated, 179 expanded, 4 reopened
[t=0.232937s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.23297s, 431496 KB] g=53, 635 evaluated, 180 expanded, 4 reopened
[t=0.233542s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.233572s, 431496 KB] g=55, 638 evaluated, 182 expanded, 4 reopened
[t=0.233965s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.233994s, 431496 KB] g=56, 640 evaluated, 183 expanded, 4 reopened
[t=0.234746s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.234775s, 431496 KB] g=58, 644 evaluated, 185 expanded, 4 reopened
[t=0.239871s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.239907s, 431496 KB] g=62, 673 evaluated, 202 expanded, 4 reopened
[t=0.239935s, 431496 KB] Solution found!
[t=0.239962s, 431496 KB] Actual search time: 0.140773s
unstack l c (1)
put-down l (1)
unstack f j (1)
put-down f (1)
unstack c a (1)
stack c f (1)
pick-up l (1)
stack l c (1)
unstack a g (1)
put-down a (1)
unstack l c (1)
stack l j (1)
unstack c f (1)
put-down c (1)
unstack l j (1)
stack l a (1)
unstack g h (1)
put-down g (1)
unstack h i (1)
stack h f (1)
unstack l a (1)
stack l j (1)
unstack i b (1)
stack i c (1)
unstack h f (1)
stack h g (1)
pick-up f (1)
stack f b (1)
pick-up a (1)
stack a h (1)
unstack f b (1)
stack f a (1)
unstack l j (1)
put-down l (1)
unstack b k (1)
stack b l (1)
unstack i c (1)
stack i j (1)
unstack k e (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack i j (1)
stack i d (1)
pick-up j (1)
stack j e (1)
unstack i d (1)
stack i c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.239988s, 431496 KB] Plan length: 62 step(s).
[t=0.239988s, 431496 KB] Plan cost: 62
[t=0.239988s, 431496 KB] Expanded 203 state(s).
[t=0.239988s, 431496 KB] Reopened 4 state(s).
[t=0.239988s, 431496 KB] Evaluated 673 state(s).
[t=0.239988s, 431496 KB] Evaluations: 673
[t=0.239988s, 431496 KB] Generated 911 state(s).
[t=0.239988s, 431496 KB] Dead ends: 0 state(s).
[t=0.239988s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.239988s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.239988s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.239988s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.239988s, 431496 KB] Number of registered states: 673
[t=0.239988s, 431496 KB] Int hash set load factor: 673/1024 = 0.657227
[t=0.239988s, 431496 KB] Int hash set resizes: 10
[t=0.239988s, 431496 KB] Search time: 0.213359s
[t=0.239988s, 431496 KB] Total time: 0.239988s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p128.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6189e-05s, 424928 KB] reading input...
[t=0.00215334s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258104s, 427536 KB] Building successor generator...done!
[t=0.0260887s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261268s, 427536 KB] time for successor generation creation: 0.000169382s
[t=0.0261549s, 427536 KB] Variables: 25
[t=0.0261778s, 427536 KB] FactPairs: 182
[t=0.0261993s, 427536 KB] Bytes per state: 8
[t=0.0263935s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986874s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0987397s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987653s, 430128 KB] f = 149, 1 evaluated, 0 expanded
[t=0.098792s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0988155s, 430128 KB] pruning method: none
[t=0.110679s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.110729s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117772s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.117815s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118035s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.118075s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118481s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.11851s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.119105s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.119134s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.122899s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.122931s, 431100 KB] g=6, 32 evaluated, 8 expanded
[t=0.123151s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.12318s, 431100 KB] g=6, 33 evaluated, 8 expanded
[t=0.124885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.124915s, 431100 KB] g=8, 42 evaluated, 10 expanded
[t=0.125694s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.125723s, 431100 KB] g=9, 46 evaluated, 11 expanded
[t=0.126879s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.126911s, 431100 KB] g=10, 52 evaluated, 12 expanded
[t=0.128996s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.129031s, 431100 KB] g=12, 63 evaluated, 15 expanded
[t=0.132065s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.132103s, 431100 KB] g=12, 79 evaluated, 17 expanded
[t=0.147018s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.147059s, 431232 KB] g=20, 158 evaluated, 34 expanded
[t=0.147844s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.147876s, 431232 KB] g=21, 162 evaluated, 35 expanded
[t=0.14884s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.148872s, 431232 KB] g=22, 167 evaluated, 36 expanded
[t=0.153231s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.153266s, 431232 KB] g=26, 190 evaluated, 42 expanded
[t=0.154059s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.15409s, 431232 KB] g=27, 194 evaluated, 43 expanded
[t=0.177387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.177423s, 431232 KB] g=32, 317 evaluated, 78 expanded, 4 reopened
[t=0.179159s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.179193s, 431232 KB] g=33, 326 evaluated, 79 expanded, 4 reopened
[t=0.182984s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.183022s, 431232 KB] g=35, 346 evaluated, 83 expanded, 4 reopened
[t=0.189435s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.189471s, 431232 KB] g=39, 380 evaluated, 91 expanded, 4 reopened
[t=0.19026s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.190295s, 431232 KB] g=40, 384 evaluated, 92 expanded, 4 reopened
[t=0.191829s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.191864s, 431364 KB] g=40, 392 evaluated, 94 expanded, 4 reopened
[t=0.193211s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.193244s, 431364 KB] g=41, 399 evaluated, 96 expanded, 4 reopened
[t=0.195343s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.195375s, 431364 KB] g=43, 410 evaluated, 99 expanded, 4 reopened
[t=0.195784s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.195812s, 431364 KB] g=44, 412 evaluated, 100 expanded, 4 reopened
[t=0.196594s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.196623s, 431364 KB] g=45, 416 evaluated, 101 expanded, 4 reopened
[t=0.198544s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.198586s, 431364 KB] g=48, 426 evaluated, 105 expanded, 4 reopened
[t=0.198998s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.199028s, 431364 KB] g=49, 428 evaluated, 106 expanded, 4 reopened
[t=0.199243s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.199271s, 431364 KB] g=49, 429 evaluated, 106 expanded, 4 reopened
[t=0.201568s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.201602s, 431364 KB] g=52, 441 evaluated, 111 expanded, 4 reopened
[t=0.202025s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.202055s, 431364 KB] g=54, 443 evaluated, 113 expanded, 4 reopened
[t=0.202464s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.202493s, 431364 KB] g=54, 445 evaluated, 113 expanded, 4 reopened
[t=0.206471s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.206505s, 431364 KB] g=57, 466 evaluated, 120 expanded, 4 reopened
[t=0.208618s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.208651s, 431364 KB] g=58, 477 evaluated, 125 expanded, 4 reopened
[t=0.210013s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.210046s, 431364 KB] g=61, 484 evaluated, 128 expanded, 4 reopened
[t=0.210461s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.21049s, 431364 KB] g=62, 486 evaluated, 129 expanded, 4 reopened
[t=0.210906s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.210936s, 431364 KB] g=64, 489 evaluated, 131 expanded, 4 reopened
[t=0.210962s, 431364 KB] Solution found!
[t=0.210988s, 431364 KB] Actual search time: 0.112169s
unstack c g (1)
put-down c (1)
unstack k a (1)
stack k c (1)
unstack g j (1)
stack g h (1)
unstack a b (1)
stack a k (1)
unstack b e (1)
stack b l (1)
unstack e i (1)
put-down e (1)
unstack a k (1)
stack a e (1)
unstack k c (1)
stack k i (1)
pick-up j (1)
stack j a (1)
pick-up c (1)
stack c b (1)
unstack j a (1)
put-down j (1)
unstack k i (1)
put-down k (1)
unstack i d (1)
stack i c (1)
pick-up k (1)
stack k j (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack k j (1)
stack k d (1)
pick-up f (1)
stack f k (1)
unstack a e (1)
stack a h (1)
pick-up j (1)
stack j i (1)
unstack f k (1)
stack f a (1)
unstack k d (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i c (1)
put-down i (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.211012s, 431364 KB] Plan length: 64 step(s).
[t=0.211012s, 431364 KB] Plan cost: 64
[t=0.211012s, 431364 KB] Expanded 132 state(s).
[t=0.211012s, 431364 KB] Reopened 4 state(s).
[t=0.211012s, 431364 KB] Evaluated 489 state(s).
[t=0.211012s, 431364 KB] Evaluations: 489
[t=0.211012s, 431364 KB] Generated 649 state(s).
[t=0.211012s, 431364 KB] Dead ends: 0 state(s).
[t=0.211012s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.211012s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.211012s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.211012s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.211012s, 431364 KB] Number of registered states: 489
[t=0.211012s, 431364 KB] Int hash set load factor: 489/512 = 0.955078
[t=0.211012s, 431364 KB] Int hash set resizes: 9
[t=0.211012s, 431364 KB] Search time: 0.184619s
[t=0.211012s, 431364 KB] Total time: 0.211012s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p129.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6723e-05s, 424928 KB] reading input...
[t=0.00215463s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258103s, 427536 KB] Building successor generator...done!
[t=0.0260863s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261099s, 427536 KB] time for successor generation creation: 0.000164537s
[t=0.0261386s, 427536 KB] Variables: 25
[t=0.0261618s, 427536 KB] FactPairs: 182
[t=0.026184s, 427536 KB] Bytes per state: 8
[t=0.026377s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983013s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0983522s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983782s, 430128 KB] f = 131, 1 evaluated, 0 expanded
[t=0.0984059s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0984292s, 430128 KB] pruning method: none
[t=0.110235s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.110287s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116713s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.116755s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117155s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.117185s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117945s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.117975s, 431100 KB] g=2, 9 evaluated, 3 expanded
[t=0.118371s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.1184s, 431100 KB] g=3, 11 evaluated, 4 expanded
[t=0.124073s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.124107s, 431100 KB] g=10, 42 evaluated, 16 expanded
[t=0.132514s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.132551s, 431100 KB] g=10, 88 evaluated, 35 expanded, 1 reopened
[t=0.140982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.141018s, 431100 KB] g=13, 134 evaluated, 56 expanded, 1 reopened
[t=0.159642s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.159681s, 431100 KB] g=12, 236 evaluated, 120 expanded, 2 reopened
[t=0.160255s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.160284s, 431100 KB] g=13, 239 evaluated, 121 expanded, 2 reopened
[t=0.161216s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.161245s, 431100 KB] g=15, 244 evaluated, 123 expanded, 2 reopened
[t=0.161817s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.161861s, 431232 KB] g=16, 247 evaluated, 124 expanded, 2 reopened
[t=0.163172s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.163204s, 431232 KB] g=18, 254 evaluated, 127 expanded, 2 reopened
[t=0.165421s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.165454s, 431232 KB] g=20, 266 evaluated, 131 expanded, 2 reopened
[t=0.168018s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.168053s, 431232 KB] g=23, 280 evaluated, 135 expanded, 2 reopened
[t=0.168986s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.169015s, 431232 KB] g=24, 285 evaluated, 137 expanded, 2 reopened
[t=0.16941s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.169439s, 431232 KB] g=25, 287 evaluated, 138 expanded, 2 reopened
[t=0.16983s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.169859s, 431232 KB] g=26, 289 evaluated, 139 expanded, 2 reopened
[t=0.17025s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.170279s, 431232 KB] g=27, 291 evaluated, 140 expanded, 2 reopened
[t=0.171039s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.17107s, 431232 KB] g=28, 295 evaluated, 141 expanded, 2 reopened
[t=0.176362s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.176395s, 431232 KB] g=32, 324 evaluated, 155 expanded, 2 reopened
[t=0.176969s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.176998s, 431232 KB] g=33, 327 evaluated, 156 expanded, 2 reopened
[t=0.194807s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.194842s, 431232 KB] g=33, 425 evaluated, 205 expanded, 5 reopened
[t=0.195976s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.196006s, 431232 KB] g=35, 432 evaluated, 211 expanded, 5 reopened
[t=0.196034s, 431232 KB] Solution found!
[t=0.19606s, 431232 KB] Actual search time: 0.0976278s
stack g h (1)
unstack k a (1)
stack k j (1)
unstack a f (1)
stack a k (1)
unstack g h (1)
put-down g (1)
unstack h l (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
put-down j (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.196085s, 431232 KB] Plan length: 35 step(s).
[t=0.196085s, 431232 KB] Plan cost: 35
[t=0.196085s, 431232 KB] Expanded 212 state(s).
[t=0.196085s, 431232 KB] Reopened 5 state(s).
[t=0.196085s, 431232 KB] Evaluated 432 state(s).
[t=0.196085s, 431232 KB] Evaluations: 432
[t=0.196085s, 431232 KB] Generated 701 state(s).
[t=0.196085s, 431232 KB] Dead ends: 0 state(s).
[t=0.196085s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.196085s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.196085s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.196085s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.196085s, 431232 KB] Number of registered states: 432
[t=0.196085s, 431232 KB] Int hash set load factor: 432/512 = 0.84375
[t=0.196085s, 431232 KB] Int hash set resizes: 9
[t=0.196085s, 431232 KB] Search time: 0.169709s
[t=0.196085s, 431232 KB] Total time: 0.196085s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p130.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6047e-05s, 424928 KB] reading input...
[t=0.00214713s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261642s, 427536 KB] Building successor generator...done!
[t=0.0264415s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264659s, 427536 KB] time for successor generation creation: 0.000166065s
[t=0.0264953s, 427536 KB] Variables: 25
[t=0.0265191s, 427536 KB] FactPairs: 182
[t=0.0265417s, 427536 KB] Bytes per state: 8
[t=0.026737s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0996478s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0997015s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0997274s, 430128 KB] f = 141, 1 evaluated, 0 expanded
[t=0.0997552s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0997794s, 430128 KB] pruning method: none
[t=0.111742s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.111794s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118848s, 431100 KB] f = 142, 6 evaluated, 2 expanded
[t=0.119681s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.119716s, 431100 KB] g=4, 10 evaluated, 4 expanded
[t=0.119938s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.119967s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.120758s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.120789s, 431100 KB] g=6, 15 evaluated, 6 expanded
[t=0.121955s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.121985s, 431100 KB] g=7, 21 evaluated, 8 expanded
[t=0.122771s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.122802s, 431100 KB] g=8, 25 evaluated, 9 expanded
[t=0.123416s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.123448s, 431100 KB] g=9, 28 evaluated, 10 expanded
[t=0.123669s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.123697s, 431100 KB] g=9, 29 evaluated, 10 expanded
[t=0.128815s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.128854s, 431100 KB] g=13, 56 evaluated, 18 expanded
[t=0.129456s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.129487s, 431100 KB] g=14, 59 evaluated, 19 expanded
[t=0.131425s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.131459s, 431100 KB] g=16, 69 evaluated, 22 expanded
[t=0.131695s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.131726s, 431100 KB] g=16, 70 evaluated, 22 expanded
[t=0.133093s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.133126s, 431100 KB] g=19, 77 evaluated, 25 expanded
[t=0.133728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.133758s, 431100 KB] g=20, 80 evaluated, 26 expanded
[t=0.134172s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.134205s, 431100 KB] g=21, 82 evaluated, 27 expanded
[t=0.135574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.135611s, 431100 KB] g=23, 89 evaluated, 30 expanded
[t=0.141933s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.141972s, 431100 KB] g=25, 122 evaluated, 45 expanded, 1 reopened
[t=0.14258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.14261s, 431100 KB] g=27, 125 evaluated, 47 expanded, 1 reopened
[t=0.142829s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.142857s, 431100 KB] g=27, 126 evaluated, 47 expanded, 1 reopened
[t=0.152957s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.152994s, 431100 KB] g=30, 179 evaluated, 69 expanded, 1 reopened
[t=0.153026s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.15305s, 431100 KB] g=31, 180 evaluated, 70 expanded, 1 reopened
[t=0.153076s, 431100 KB] Solution found!
[t=0.153102s, 431100 KB] Actual search time: 0.053319s
put-down g (1)
unstack a l (1)
stack a f (1)
unstack l h (1)
put-down l (1)
unstack h e (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.153127s, 431100 KB] Plan length: 31 step(s).
[t=0.153127s, 431100 KB] Plan cost: 31
[t=0.153127s, 431100 KB] Expanded 71 state(s).
[t=0.153127s, 431100 KB] Reopened 1 state(s).
[t=0.153127s, 431100 KB] Evaluated 180 state(s).
[t=0.153127s, 431100 KB] Evaluations: 180
[t=0.153127s, 431100 KB] Generated 257 state(s).
[t=0.153127s, 431100 KB] Dead ends: 0 state(s).
[t=0.153127s, 431100 KB] Expanded until last jump: 2 state(s).
[t=0.153127s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.153127s, 431100 KB] Evaluated until last jump: 6 state(s).
[t=0.153127s, 431100 KB] Generated until last jump: 6 state(s).
[t=0.153127s, 431100 KB] Number of registered states: 180
[t=0.153127s, 431100 KB] Int hash set load factor: 180/256 = 0.703125
[t=0.153127s, 431100 KB] Int hash set resizes: 8
[t=0.153127s, 431100 KB] Search time: 0.126391s
[t=0.153127s, 431100 KB] Total time: 0.153127s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p131.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.944e-05s, 424928 KB] reading input...
[t=0.00230876s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0263611s, 427536 KB] Building successor generator...done!
[t=0.026641s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266643s, 427536 KB] time for successor generation creation: 0.00017051s
[t=0.0266927s, 427536 KB] Variables: 25
[t=0.0267157s, 427536 KB] FactPairs: 182
[t=0.0267383s, 427536 KB] Bytes per state: 8
[t=0.0269338s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993246s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.099385s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994114s, 430128 KB] f = 111, 1 evaluated, 0 expanded
[t=0.0994387s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0994629s, 430128 KB] pruning method: none
[t=0.111347s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.111398s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11827s, 431100 KB] f = 118, 5 evaluated, 2 expanded
[t=0.119571s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.119603s, 431100 KB] g=5, 12 evaluated, 5 expanded
[t=0.120707s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.120738s, 431100 KB] g=7, 18 evaluated, 7 expanded
[t=0.124187s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.12422s, 431100 KB] g=8, 37 evaluated, 17 expanded
[t=0.12642s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.126453s, 431100 KB] g=10, 49 evaluated, 23 expanded
[t=0.132626s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.132661s, 431100 KB] g=12, 83 evaluated, 43 expanded
[t=0.133966s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.134001s, 431100 KB] g=14, 90 evaluated, 45 expanded
[t=0.136006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.136037s, 431100 KB] g=17, 101 evaluated, 48 expanded
[t=0.136251s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.136283s, 431100 KB] g=18, 102 evaluated, 49 expanded
[t=0.136862s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.136898s, 431100 KB] g=19, 105 evaluated, 50 expanded
[t=0.137291s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.13732s, 431100 KB] g=20, 107 evaluated, 51 expanded
[t=0.138248s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.138281s, 431100 KB] g=21, 112 evaluated, 53 expanded
[t=0.13849s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.138519s, 431100 KB] g=21, 113 evaluated, 53 expanded
[t=0.14986s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.149895s, 431100 KB] g=27, 176 evaluated, 72 expanded
[t=0.159817s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.159858s, 431232 KB] g=27, 231 evaluated, 93 expanded, 1 reopened
[t=0.160795s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.160834s, 431232 KB] g=29, 236 evaluated, 95 expanded, 1 reopened
[t=0.162855s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.162889s, 431232 KB] g=31, 247 evaluated, 101 expanded, 1 reopened
[t=0.163104s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.163133s, 431232 KB] g=32, 248 evaluated, 102 expanded, 1 reopened
[t=0.163526s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.163556s, 431232 KB] g=33, 250 evaluated, 103 expanded, 1 reopened
[t=0.164705s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.164737s, 431232 KB] g=36, 257 evaluated, 109 expanded, 1 reopened
[t=0.164764s, 431232 KB] Solution found!
[t=0.16479s, 431232 KB] Actual search time: 0.0653338s
unstack h l (1)
put-down h (1)
unstack l g (1)
put-down l (1)
pick-up h (1)
stack h l (1)
unstack g a (1)
put-down g (1)
unstack h l (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
pick-up j (1)
stack j l (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.164827s, 431232 KB] Plan length: 36 step(s).
[t=0.164827s, 431232 KB] Plan cost: 36
[t=0.164827s, 431232 KB] Expanded 110 state(s).
[t=0.164827s, 431232 KB] Reopened 1 state(s).
[t=0.164827s, 431232 KB] Evaluated 257 state(s).
[t=0.164827s, 431232 KB] Evaluations: 257
[t=0.164827s, 431232 KB] Generated 376 state(s).
[t=0.164827s, 431232 KB] Dead ends: 0 state(s).
[t=0.164827s, 431232 KB] Expanded until last jump: 2 state(s).
[t=0.164827s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.164827s, 431232 KB] Evaluated until last jump: 5 state(s).
[t=0.164827s, 431232 KB] Generated until last jump: 5 state(s).
[t=0.164827s, 431232 KB] Number of registered states: 257
[t=0.164827s, 431232 KB] Int hash set load factor: 257/512 = 0.501953
[t=0.164827s, 431232 KB] Int hash set resizes: 9
[t=0.164827s, 431232 KB] Search time: 0.137894s
[t=0.164827s, 431232 KB] Total time: 0.164827s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p132.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9021e-05s, 424928 KB] reading input...
[t=0.00220763s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261223s, 427536 KB] Building successor generator...done!
[t=0.0263996s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264232s, 427536 KB] time for successor generation creation: 0.000165417s
[t=0.0264511s, 427536 KB] Variables: 25
[t=0.0264744s, 427536 KB] FactPairs: 182
[t=0.0264962s, 427536 KB] Bytes per state: 8
[t=0.0266925s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981122s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0981644s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981909s, 430128 KB] f = 133, 1 evaluated, 0 expanded
[t=0.0982177s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0982411s, 430128 KB] pruning method: none
[t=0.116525s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.116575s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.116786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.116816s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.11793s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.117974s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.118184s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.118213s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.120377s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.120408s, 431100 KB] g=5, 24 evaluated, 7 expanded
[t=0.124185s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.12422s, 431100 KB] g=6, 45 evaluated, 13 expanded
[t=0.12604s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.126073s, 431100 KB] g=8, 55 evaluated, 16 expanded
[t=0.127177s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.127212s, 431100 KB] g=9, 61 evaluated, 17 expanded
[t=0.127426s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.127455s, 431100 KB] g=10, 62 evaluated, 18 expanded
[t=0.128565s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.128596s, 431100 KB] g=11, 68 evaluated, 19 expanded
[t=0.12881s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.128839s, 431100 KB] g=12, 69 evaluated, 20 expanded
[t=0.130321s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.130355s, 431100 KB] g=15, 77 evaluated, 23 expanded
[t=0.140641s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.140678s, 431100 KB] g=30, 134 evaluated, 43 expanded
[t=0.142513s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.142549s, 431100 KB] g=31, 144 evaluated, 45 expanded
[t=0.143119s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.143149s, 431100 KB] g=32, 147 evaluated, 46 expanded
[t=0.15226s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.152298s, 431232 KB] g=35, 197 evaluated, 61 expanded
[t=0.154218s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.154254s, 431232 KB] g=38, 207 evaluated, 64 expanded
[t=0.158077s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.15811s, 431232 KB] g=35, 228 evaluated, 70 expanded
[t=0.158675s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.158711s, 431232 KB] g=36, 231 evaluated, 71 expanded
[t=0.160162s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.160195s, 431232 KB] g=38, 239 evaluated, 73 expanded
[t=0.163822s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.163858s, 431232 KB] g=40, 259 evaluated, 79 expanded
[t=0.16496s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.16499s, 431232 KB] g=41, 265 evaluated, 81 expanded
[t=0.165565s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.1656s, 431232 KB] g=42, 268 evaluated, 82 expanded
[t=0.165991s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.16602s, 431232 KB] g=43, 270 evaluated, 83 expanded
[t=0.166948s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.166978s, 431232 KB] g=45, 275 evaluated, 85 expanded
[t=0.167728s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.167758s, 431232 KB] g=47, 279 evaluated, 87 expanded
[t=0.169042s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.169076s, 431232 KB] g=51, 286 evaluated, 91 expanded
[t=0.211334s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.211374s, 431364 KB] g=54, 524 evaluated, 198 expanded, 11 reopened
[t=0.211402s, 431364 KB] Solution found!
[t=0.211428s, 431364 KB] Actual search time: 0.113184s
unstack l e (1)
stack l d (1)
unstack e h (1)
stack e i (1)
unstack b f (1)
stack b l (1)
unstack f k (1)
stack f b (1)
unstack k a (1)
stack k e (1)
pick-up h (1)
stack h a (1)
unstack f b (1)
stack f k (1)
unstack h a (1)
stack h b (1)
unstack f k (1)
put-down f (1)
unstack a g (1)
stack a k (1)
pick-up f (1)
stack f a (1)
unstack h b (1)
stack h g (1)
unstack f a (1)
put-down f (1)
unstack b l (1)
put-down b (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d i (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.211453s, 431364 KB] Plan length: 54 step(s).
[t=0.211453s, 431364 KB] Plan cost: 54
[t=0.211453s, 431364 KB] Expanded 199 state(s).
[t=0.211453s, 431364 KB] Reopened 11 state(s).
[t=0.211453s, 431364 KB] Evaluated 524 state(s).
[t=0.211453s, 431364 KB] Evaluations: 524
[t=0.211453s, 431364 KB] Generated 785 state(s).
[t=0.211453s, 431364 KB] Dead ends: 0 state(s).
[t=0.211453s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.211453s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.211453s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.211453s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.211453s, 431364 KB] Number of registered states: 524
[t=0.211453s, 431364 KB] Int hash set load factor: 524/1024 = 0.511719
[t=0.211453s, 431364 KB] Int hash set resizes: 10
[t=0.211453s, 431364 KB] Search time: 0.184761s
[t=0.211453s, 431364 KB] Total time: 0.211453s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p133.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5827e-05s, 424928 KB] reading input...
[t=0.00211527s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257423s, 427536 KB] Building successor generator...done!
[t=0.0260171s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260404s, 427536 KB] time for successor generation creation: 0.000162995s
[t=0.0260692s, 427536 KB] Variables: 25
[t=0.0260929s, 427536 KB] FactPairs: 182
[t=0.0261156s, 427536 KB] Bytes per state: 8
[t=0.0263204s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980485s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0981009s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981274s, 430128 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0981553s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0981791s, 430128 KB] pruning method: none
[t=0.110092s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.110146s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11672s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.116764s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118426s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.118458s, 431100 KB] g=2, 13 evaluated, 3 expanded
[t=0.118848s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118878s, 431100 KB] g=2, 15 evaluated, 3 expanded
[t=0.119448s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.119478s, 431100 KB] g=2, 18 evaluated, 3 expanded
[t=0.119701s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.119733s, 431100 KB] g=3, 19 evaluated, 4 expanded
[t=0.120476s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.120506s, 431100 KB] g=3, 23 evaluated, 4 expanded
[t=0.121438s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.121468s, 431100 KB] g=4, 28 evaluated, 5 expanded
[t=0.121678s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.121706s, 431100 KB] g=4, 29 evaluated, 5 expanded
[t=0.143029s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.143065s, 431100 KB] g=8, 147 evaluated, 26 expanded
[t=0.143282s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.143312s, 431100 KB] g=9, 148 evaluated, 27 expanded
[t=0.144434s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.144469s, 431100 KB] g=10, 154 evaluated, 28 expanded
[t=0.145948s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.145983s, 431100 KB] g=12, 162 evaluated, 30 expanded
[t=0.146372s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.146411s, 431100 KB] g=12, 164 evaluated, 30 expanded
[t=0.149889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.149922s, 431232 KB] g=14, 183 evaluated, 35 expanded
[t=0.162337s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.162373s, 431232 KB] g=15, 251 evaluated, 51 expanded
[t=0.170436s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.170473s, 431232 KB] g=21, 295 evaluated, 60 expanded
[t=0.178507s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.178544s, 431232 KB] g=25, 339 evaluated, 70 expanded
[t=0.194916s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.194952s, 431364 KB] g=22, 429 evaluated, 94 expanded, 3 reopened
[t=0.196444s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.196479s, 431364 KB] g=23, 437 evaluated, 96 expanded, 3 reopened
[t=0.199598s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.199632s, 431364 KB] g=25, 454 evaluated, 101 expanded, 3 reopened
[t=0.23194s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.23198s, 431364 KB] g=28, 632 evaluated, 161 expanded, 3 reopened
[t=0.248299s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.248338s, 431496 KB] g=32, 722 evaluated, 183 expanded, 3 reopened
[t=0.321777s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.321821s, 431628 KB] g=35, 1127 evaluated, 322 expanded, 23 reopened
[t=0.323314s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.323348s, 431628 KB] g=37, 1135 evaluated, 324 expanded, 23 reopened
[t=0.326118s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.326151s, 431628 KB] g=38, 1150 evaluated, 328 expanded, 23 reopened
[t=0.328177s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.328213s, 431628 KB] g=41, 1161 evaluated, 331 expanded, 23 reopened
[t=0.328967s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.328997s, 431628 KB] g=42, 1165 evaluated, 332 expanded, 23 reopened
[t=0.329394s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.329423s, 431628 KB] g=43, 1167 evaluated, 333 expanded, 23 reopened
[t=0.330363s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.330395s, 431628 KB] g=44, 1172 evaluated, 334 expanded, 23 reopened
[t=0.332068s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.332103s, 431628 KB] g=46, 1181 evaluated, 337 expanded, 23 reopened
[t=0.332862s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.332893s, 431628 KB] g=48, 1185 evaluated, 339 expanded, 23 reopened
[t=0.33383s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.333863s, 431628 KB] g=50, 1190 evaluated, 341 expanded, 23 reopened
[t=0.349839s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.349877s, 431760 KB] g=52, 1277 evaluated, 390 expanded, 37 reopened
[t=0.35301s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.353045s, 431760 KB] g=54, 1294 evaluated, 398 expanded, 37 reopened
[t=0.368005s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.368041s, 431760 KB] g=55, 1376 evaluated, 436 expanded, 37 reopened
[t=0.368075s, 431760 KB] Solution found!
[t=0.368103s, 431760 KB] Actual search time: 0.269921s
unstack l g (1)
put-down l (1)
unstack j h (1)
stack j e (1)
pick-up g (1)
stack g a (1)
pick-up k (1)
stack k l (1)
unstack g a (1)
stack g h (1)
unstack a c (1)
stack a k (1)
unstack g h (1)
put-down g (1)
pick-up c (1)
stack c a (1)
unstack h d (1)
stack h g (1)
unstack c a (1)
stack c d (1)
pick-up f (1)
stack f j (1)
unstack c d (1)
put-down c (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f k (1)
pick-up c (1)
stack c d (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack c d (1)
put-down c (1)
pick-up l (1)
stack l c (1)
unstack j e (1)
stack j l (1)
unstack e i (1)
stack e k (1)
unstack i b (1)
put-down i (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.368129s, 431760 KB] Plan length: 56 step(s).
[t=0.368129s, 431760 KB] Plan cost: 56
[t=0.368129s, 431760 KB] Expanded 438 state(s).
[t=0.368129s, 431760 KB] Reopened 37 state(s).
[t=0.368129s, 431760 KB] Evaluated 1377 state(s).
[t=0.368129s, 431760 KB] Evaluations: 1377
[t=0.368129s, 431760 KB] Generated 2036 state(s).
[t=0.368129s, 431760 KB] Dead ends: 0 state(s).
[t=0.368129s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.368129s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.368129s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.368129s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.368129s, 431760 KB] Number of registered states: 1377
[t=0.368129s, 431760 KB] Int hash set load factor: 1377/2048 = 0.672363
[t=0.368129s, 431760 KB] Int hash set resizes: 11
[t=0.368129s, 431760 KB] Search time: 0.341809s
[t=0.368129s, 431760 KB] Total time: 0.368129s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p134.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7465e-05s, 424928 KB] reading input...
[t=0.00219703s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260291s, 427536 KB] Building successor generator...done!
[t=0.0263129s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026337s, 427536 KB] time for successor generation creation: 0.00016909s
[t=0.0263655s, 427536 KB] Variables: 25
[t=0.026389s, 427536 KB] FactPairs: 182
[t=0.0264113s, 427536 KB] Bytes per state: 8
[t=0.02661s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988417s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0988933s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989202s, 430128 KB] f = 142, 1 evaluated, 0 expanded
[t=0.0989479s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0989825s, 430128 KB] pruning method: none
[t=0.110895s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.110946s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118876s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.118921s, 431100 KB] g=4, 11 evaluated, 5 expanded
[t=0.11968s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.119711s, 431100 KB] g=5, 15 evaluated, 6 expanded
[t=0.119926s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.119956s, 431100 KB] g=6, 16 evaluated, 7 expanded
[t=0.120349s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.120378s, 431100 KB] g=6, 18 evaluated, 7 expanded
[t=0.123141s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.123174s, 431100 KB] g=11, 33 evaluated, 14 expanded
[t=0.137396s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.137433s, 431100 KB] g=18, 111 evaluated, 39 expanded
[t=0.138929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.138961s, 431100 KB] g=20, 119 evaluated, 41 expanded
[t=0.139362s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.139392s, 431100 KB] g=21, 121 evaluated, 42 expanded
[t=0.139786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.139816s, 431100 KB] g=21, 123 evaluated, 42 expanded
[t=0.146579s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.146613s, 431100 KB] g=27, 160 evaluated, 50 expanded
[t=0.161071s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.161111s, 431232 KB] g=31, 239 evaluated, 69 expanded
[t=0.166278s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.166314s, 431232 KB] g=34, 267 evaluated, 74 expanded
[t=0.167621s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.167652s, 431232 KB] g=35, 274 evaluated, 75 expanded
[t=0.176229s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.176267s, 431232 KB] g=39, 321 evaluated, 84 expanded
[t=0.202408s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.202451s, 431364 KB] g=43, 465 evaluated, 113 expanded
[t=0.203581s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.203614s, 431364 KB] g=44, 471 evaluated, 115 expanded
[t=0.204561s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.204591s, 431364 KB] g=46, 476 evaluated, 117 expanded
[t=0.207734s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.207769s, 431364 KB] g=50, 493 evaluated, 122 expanded
[t=0.207987s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.208016s, 431364 KB] g=51, 494 evaluated, 123 expanded
[t=0.211732s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.211769s, 431364 KB] g=52, 514 evaluated, 130 expanded
[t=0.212348s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.212381s, 431364 KB] g=53, 517 evaluated, 131 expanded
[t=0.213323s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.213354s, 431364 KB] g=55, 522 evaluated, 133 expanded
[t=0.214492s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.214524s, 431364 KB] g=57, 528 evaluated, 137 expanded
[t=0.215652s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.215683s, 431364 KB] g=60, 534 evaluated, 140 expanded
[t=0.216077s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.21611s, 431364 KB] g=61, 536 evaluated, 141 expanded
[t=0.218711s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.218745s, 431364 KB] g=65, 551 evaluated, 150 expanded
[t=0.218773s, 431364 KB] Solution found!
[t=0.2188s, 431364 KB] Actual search time: 0.119813s
put-down c (1)
unstack f b (1)
stack f i (1)
unstack b e (1)
put-down b (1)
unstack f i (1)
stack f e (1)
pick-up c (1)
stack c f (1)
unstack i j (1)
put-down i (1)
unstack c f (1)
stack c b (1)
unstack f e (1)
stack f i (1)
unstack j l (1)
stack j e (1)
unstack l k (1)
put-down l (1)
unstack k h (1)
stack k l (1)
unstack h g (1)
stack h j (1)
unstack g a (1)
stack g h (1)
unstack a d (1)
stack a k (1)
unstack g h (1)
put-down g (1)
unstack h j (1)
stack h g (1)
unstack f i (1)
stack f d (1)
unstack a k (1)
stack a h (1)
pick-up i (1)
stack i c (1)
unstack f d (1)
stack f a (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e d (1)
unstack k l (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up d (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
stack c i (1)
pick-up b (1)
stack b l (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.218825s, 431364 KB] Plan length: 65 step(s).
[t=0.218825s, 431364 KB] Plan cost: 65
[t=0.218825s, 431364 KB] Expanded 151 state(s).
[t=0.218825s, 431364 KB] Reopened 0 state(s).
[t=0.218825s, 431364 KB] Evaluated 551 state(s).
[t=0.218825s, 431364 KB] Evaluations: 551
[t=0.218825s, 431364 KB] Generated 706 state(s).
[t=0.218825s, 431364 KB] Dead ends: 0 state(s).
[t=0.218825s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.218825s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.218825s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.218825s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.218825s, 431364 KB] Number of registered states: 551
[t=0.218825s, 431364 KB] Int hash set load factor: 551/1024 = 0.538086
[t=0.218825s, 431364 KB] Int hash set resizes: 10
[t=0.218825s, 431364 KB] Search time: 0.192216s
[t=0.218825s, 431364 KB] Total time: 0.218825s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p135.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6497e-05s, 424928 KB] reading input...
[t=0.00216126s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258347s, 427536 KB] Building successor generator...done!
[t=0.0261132s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261373s, 427536 KB] time for successor generation creation: 0.000167422s
[t=0.0261649s, 427536 KB] Variables: 25
[t=0.0261874s, 427536 KB] FactPairs: 182
[t=0.0262091s, 427536 KB] Bytes per state: 8
[t=0.0264044s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979099s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0979615s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979873s, 430128 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0980145s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0980383s, 430128 KB] pruning method: none
[t=0.109916s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.109966s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116371s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.116414s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116991s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.117022s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.117239s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.117268s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117476s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.117504s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119874s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119906s, 431100 KB] g=5, 21 evaluated, 5 expanded
[t=0.121191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.121221s, 431100 KB] g=6, 28 evaluated, 6 expanded
[t=0.124499s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.124535s, 431100 KB] g=8, 46 evaluated, 10 expanded
[t=0.125107s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.125137s, 431100 KB] g=9, 49 evaluated, 11 expanded
[t=0.169674s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.169715s, 431232 KB] g=19, 296 evaluated, 68 expanded
[t=0.175337s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.17537s, 431232 KB] g=23, 327 evaluated, 74 expanded
[t=0.178823s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.178869s, 431232 KB] g=24, 346 evaluated, 79 expanded
[t=0.183033s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.183069s, 431232 KB] g=27, 369 evaluated, 86 expanded
[t=0.198216s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.198255s, 431364 KB] g=34, 453 evaluated, 112 expanded
[t=0.201171s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.201207s, 431364 KB] g=33, 469 evaluated, 117 expanded
[t=0.256134s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.256176s, 431496 KB] g=39, 770 evaluated, 273 expanded, 66 reopened
[t=0.257469s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.2575s, 431496 KB] g=40, 777 evaluated, 275 expanded, 66 reopened
[t=0.2595s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.259534s, 431496 KB] g=41, 788 evaluated, 278 expanded, 66 reopened
[t=0.260838s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.26087s, 431496 KB] g=44, 795 evaluated, 281 expanded, 66 reopened
[t=0.261079s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.261108s, 431496 KB] g=44, 796 evaluated, 281 expanded, 66 reopened
[t=0.263135s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.263169s, 431628 KB] g=46, 807 evaluated, 284 expanded, 66 reopened
[t=0.268444s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.268479s, 431628 KB] g=53, 836 evaluated, 294 expanded, 66 reopened
[t=0.268689s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.268717s, 431628 KB] g=53, 837 evaluated, 294 expanded, 66 reopened
[t=0.272191s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.272225s, 431628 KB] g=52, 856 evaluated, 301 expanded, 66 reopened
[t=0.30433s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.30437s, 431628 KB] g=53, 1033 evaluated, 368 expanded, 73 reopened
[t=0.327627s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.327665s, 431760 KB] g=56, 1161 evaluated, 427 expanded, 85 reopened
[t=0.328067s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.328103s, 431760 KB] g=57, 1163 evaluated, 428 expanded, 85 reopened
[t=0.329044s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.329076s, 431760 KB] g=58, 1168 evaluated, 430 expanded, 85 reopened
[t=0.330375s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.330405s, 431760 KB] g=61, 1175 evaluated, 433 expanded, 85 reopened
[t=0.331156s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.331186s, 431760 KB] g=62, 1179 evaluated, 434 expanded, 85 reopened
[t=0.337052s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.337088s, 431760 KB] g=66, 1211 evaluated, 450 expanded, 85 reopened
[t=0.33785s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.337883s, 431760 KB] g=68, 1215 evaluated, 452 expanded, 85 reopened
[t=0.337915s, 431760 KB] Solution found!
[t=0.337943s, 431760 KB] Actual search time: 0.239901s
put-down f (1)
unstack d g (1)
stack d e (1)
unstack b a (1)
stack b d (1)
unstack a j (1)
stack a f (1)
unstack i c (1)
put-down i (1)
pick-up j (1)
stack j c (1)
unstack g h (1)
put-down g (1)
unstack h k (1)
stack h a (1)
unstack j c (1)
put-down j (1)
pick-up c (1)
stack c b (1)
pick-up g (1)
stack g k (1)
pick-up i (1)
stack i c (1)
unstack g k (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up j (1)
stack j i (1)
pick-up f (1)
stack f a (1)
unstack j i (1)
put-down j (1)
unstack k l (1)
stack k f (1)
unstack i c (1)
stack i l (1)
pick-up j (1)
stack j i (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b k (1)
unstack d e (1)
put-down d (1)
pick-up e (1)
stack e j (1)
unstack b k (1)
stack b c (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
stack i b (1)
pick-up l (1)
stack l d (1)
unstack i b (1)
put-down i (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.337967s, 431760 KB] Plan length: 69 step(s).
[t=0.337967s, 431760 KB] Plan cost: 69
[t=0.337967s, 431760 KB] Expanded 454 state(s).
[t=0.337967s, 431760 KB] Reopened 85 state(s).
[t=0.337967s, 431760 KB] Evaluated 1216 state(s).
[t=0.337967s, 431760 KB] Evaluations: 1216
[t=0.337967s, 431760 KB] Generated 2042 state(s).
[t=0.337967s, 431760 KB] Dead ends: 0 state(s).
[t=0.337967s, 431760 KB] Expanded until last jump: 0 state(s).
[t=0.337967s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.337967s, 431760 KB] Evaluated until last jump: 1 state(s).
[t=0.337967s, 431760 KB] Generated until last jump: 0 state(s).
[t=0.337967s, 431760 KB] Number of registered states: 1216
[t=0.337967s, 431760 KB] Int hash set load factor: 1216/2048 = 0.59375
[t=0.337967s, 431760 KB] Int hash set resizes: 11
[t=0.337967s, 431760 KB] Search time: 0.311563s
[t=0.337967s, 431760 KB] Total time: 0.337967s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p136.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.722e-05s, 424928 KB] reading input...
[t=0.0021107s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258432s, 427536 KB] Building successor generator...done!
[t=0.0261245s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261478s, 427536 KB] time for successor generation creation: 0.000167897s
[t=0.0261803s, 427536 KB] Variables: 25
[t=0.0262249s, 427536 KB] FactPairs: 182
[t=0.0262482s, 427536 KB] Bytes per state: 8
[t=0.0264445s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980011s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0980533s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.09808s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0981079s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.098132s, 430128 KB] pruning method: none
[t=0.109934s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.109995s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116416s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.116459s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.116859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.116889s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118197s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.118229s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.118438s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.118467s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.118681s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.11871s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.119465s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.119495s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.122223s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.122257s, 431100 KB] g=7, 33 evaluated, 9 expanded
[t=0.123006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.123036s, 431100 KB] g=8, 37 evaluated, 10 expanded
[t=0.124141s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.124171s, 431100 KB] g=10, 43 evaluated, 12 expanded
[t=0.131777s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.13181s, 431100 KB] g=14, 85 evaluated, 24 expanded
[t=0.133112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.133142s, 431100 KB] g=14, 92 evaluated, 27 expanded
[t=0.136264s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.136297s, 431100 KB] g=13, 109 evaluated, 34 expanded, 1 reopened
[t=0.22076s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.220802s, 431364 KB] g=21, 574 evaluated, 237 expanded, 34 reopened
[t=0.268533s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.268572s, 431496 KB] g=37, 837 evaluated, 309 expanded, 34 reopened
[t=0.269884s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.269914s, 431496 KB] g=36, 844 evaluated, 311 expanded, 34 reopened
[t=0.270691s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.270729s, 431496 KB] g=37, 848 evaluated, 312 expanded, 34 reopened
[t=0.296291s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.296328s, 431496 KB] g=41, 989 evaluated, 355 expanded, 35 reopened
[t=0.299357s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.299391s, 431496 KB] g=44, 1005 evaluated, 359 expanded, 35 reopened
[t=0.301779s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.301814s, 431496 KB] g=46, 1018 evaluated, 363 expanded, 35 reopened
[t=0.302938s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.302973s, 431496 KB] g=48, 1024 evaluated, 365 expanded, 35 reopened
[t=0.303194s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.303226s, 431628 KB] g=48, 1025 evaluated, 365 expanded, 35 reopened
[t=0.304347s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.30438s, 431628 KB] g=50, 1031 evaluated, 367 expanded, 35 reopened
[t=0.305683s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.305713s, 431628 KB] g=52, 1038 evaluated, 370 expanded, 35 reopened
[t=0.305925s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.305957s, 431628 KB] g=52, 1039 evaluated, 370 expanded, 35 reopened
[t=0.306913s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.306947s, 431628 KB] g=54, 1044 evaluated, 372 expanded, 35 reopened
[t=0.310247s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.310283s, 431628 KB] g=58, 1062 evaluated, 378 expanded, 35 reopened
[t=0.316263s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.316299s, 431628 KB] g=63, 1095 evaluated, 389 expanded, 35 reopened
[t=0.346729s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.346769s, 431628 KB] g=66, 1263 evaluated, 451 expanded, 35 reopened
[t=0.350811s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.350848s, 431628 KB] g=70, 1285 evaluated, 461 expanded, 35 reopened
[t=0.357094s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.357129s, 431628 KB] g=70, 1319 evaluated, 480 expanded, 35 reopened
[t=0.357527s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.357565s, 431628 KB] g=71, 1321 evaluated, 481 expanded, 35 reopened
[t=0.357596s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.35762s, 431628 KB] g=72, 1322 evaluated, 482 expanded, 35 reopened
[t=0.357646s, 431628 KB] Solution found!
[t=0.357672s, 431628 KB] Actual search time: 0.259528s
unstack l e (1)
put-down l (1)
pick-up k (1)
stack k b (1)
unstack e g (1)
stack e k (1)
unstack j h (1)
put-down j (1)
pick-up g (1)
stack g h (1)
unstack e k (1)
stack e g (1)
pick-up j (1)
stack j l (1)
unstack e g (1)
put-down e (1)
unstack j l (1)
stack j e (1)
unstack k b (1)
stack k l (1)
unstack b d (1)
stack b j (1)
unstack d i (1)
put-down d (1)
unstack b j (1)
stack b d (1)
unstack i c (1)
stack i k (1)
pick-up c (1)
stack c b (1)
unstack i k (1)
stack i c (1)
unstack j e (1)
put-down j (1)
unstack g h (1)
put-down g (1)
pick-up e (1)
stack e i (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
stack i l (1)
unstack c b (1)
put-down c (1)
unstack i l (1)
put-down i (1)
unstack b d (1)
stack b i (1)
pick-up d (1)
stack d b (1)
pick-up l (1)
stack l c (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.357697s, 431628 KB] Plan length: 72 step(s).
[t=0.357697s, 431628 KB] Plan cost: 72
[t=0.357697s, 431628 KB] Expanded 483 state(s).
[t=0.357697s, 431628 KB] Reopened 35 state(s).
[t=0.357697s, 431628 KB] Evaluated 1322 state(s).
[t=0.357697s, 431628 KB] Evaluations: 1322
[t=0.357697s, 431628 KB] Generated 1987 state(s).
[t=0.357697s, 431628 KB] Dead ends: 0 state(s).
[t=0.357697s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.357697s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.357697s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.357697s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.357697s, 431628 KB] Number of registered states: 1322
[t=0.357697s, 431628 KB] Int hash set load factor: 1322/2048 = 0.645508
[t=0.357697s, 431628 KB] Int hash set resizes: 11
[t=0.357697s, 431628 KB] Search time: 0.331253s
[t=0.357697s, 431628 KB] Total time: 0.357697s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p137.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8538e-05s, 424928 KB] reading input...
[t=0.00225707s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261082s, 427536 KB] Building successor generator...done!
[t=0.0263961s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264193s, 427536 KB] time for successor generation creation: 0.000171708s
[t=0.0264475s, 427536 KB] Variables: 25
[t=0.0264702s, 427536 KB] FactPairs: 182
[t=0.0264921s, 427536 KB] Bytes per state: 8
[t=0.0266843s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984189s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0984703s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984961s, 430128 KB] f = 108, 1 evaluated, 0 expanded
[t=0.0985227s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0985462s, 430128 KB] pruning method: none
[t=0.117556s, 431100 KB] f = 130, 5 evaluated, 1 expanded
[t=0.118s, 431100 KB] f = 134, 7 evaluated, 2 expanded
[t=0.118411s, 431100 KB] f = 142, 9 evaluated, 3 expanded
[t=0.118981s, 431100 KB] f = 143, 12 evaluated, 4 expanded
[t=0.119193s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.119223s, 431100 KB] g=4, 13 evaluated, 5 expanded
[t=0.119785s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.119815s, 431100 KB] g=5, 16 evaluated, 6 expanded
[t=0.121877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.121913s, 431100 KB] g=8, 27 evaluated, 9 expanded
[t=0.122851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.122893s, 431100 KB] g=9, 32 evaluated, 10 expanded
[t=0.126386s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.126418s, 431100 KB] g=13, 51 evaluated, 16 expanded
[t=0.126802s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.126832s, 431100 KB] g=13, 53 evaluated, 16 expanded
[t=0.137213s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.13725s, 431100 KB] g=16, 110 evaluated, 33 expanded
[t=0.164901s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.164947s, 431232 KB] g=20, 264 evaluated, 74 expanded, 1 reopened
[t=0.177027s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.177063s, 431232 KB] g=27, 332 evaluated, 87 expanded, 1 reopened
[t=0.223952s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.223991s, 431364 KB] g=24, 597 evaluated, 149 expanded, 1 reopened
[t=0.224926s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.224962s, 431364 KB] g=25, 602 evaluated, 150 expanded, 1 reopened
[t=0.250092s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.250131s, 431496 KB] g=40, 744 evaluated, 182 expanded, 1 reopened
[t=0.260905s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.260943s, 431496 KB] g=33, 805 evaluated, 195 expanded, 1 reopened
[t=0.279345s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.279381s, 431496 KB] g=37, 910 evaluated, 215 expanded, 1 reopened
[t=0.285373s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.285412s, 431496 KB] g=36, 944 evaluated, 221 expanded, 1 reopened
[t=0.286144s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.286177s, 431496 KB] g=37, 948 evaluated, 222 expanded, 1 reopened
[t=0.288307s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.288337s, 431496 KB] g=38, 960 evaluated, 225 expanded, 1 reopened
[t=0.290486s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.29052s, 431628 KB] g=40, 972 evaluated, 227 expanded, 1 reopened
[t=0.292311s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.292344s, 431628 KB] g=41, 982 evaluated, 229 expanded, 1 reopened
[t=0.303824s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.30387s, 431628 KB] g=44, 1046 evaluated, 247 expanded, 1 reopened
[t=0.380717s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.380762s, 431760 KB] g=48, 1484 evaluated, 351 expanded, 4 reopened
[t=0.38185s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.381881s, 431760 KB] g=49, 1490 evaluated, 352 expanded, 4 reopened
[t=0.382971s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.383002s, 431760 KB] g=50, 1496 evaluated, 354 expanded, 4 reopened
[t=0.383213s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.383243s, 431760 KB] g=51, 1497 evaluated, 355 expanded, 4 reopened
[t=0.384678s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.384728s, 431760 KB] g=52, 1505 evaluated, 357 expanded, 4 reopened
[t=0.38512s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.38515s, 431760 KB] g=53, 1507 evaluated, 358 expanded, 4 reopened
[t=0.38553s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.38556s, 431760 KB] g=53, 1509 evaluated, 358 expanded, 4 reopened
[t=0.395308s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.395347s, 431760 KB] g=60, 1564 evaluated, 376 expanded, 4 reopened
[t=0.395555s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.395585s, 431760 KB] g=60, 1565 evaluated, 376 expanded, 4 reopened
[t=0.402871s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.402907s, 431892 KB] g=62, 1606 evaluated, 388 expanded, 4 reopened
[t=0.403642s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.403675s, 431892 KB] g=63, 1610 evaluated, 389 expanded, 4 reopened
[t=0.404591s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.404621s, 431892 KB] g=64, 1615 evaluated, 390 expanded, 4 reopened
[t=0.405373s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.405408s, 431892 KB] g=66, 1619 evaluated, 392 expanded, 4 reopened
[t=0.41573s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.415768s, 431892 KB] g=69, 1677 evaluated, 420 expanded, 5 reopened
[t=0.416171s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.416206s, 431892 KB] g=71, 1680 evaluated, 423 expanded, 5 reopened
[t=0.416234s, 431892 KB] Solution found!
[t=0.416261s, 431892 KB] Actual search time: 0.317711s
stack a i (1)
unstack l b (1)
put-down l (1)
unstack a i (1)
stack a b (1)
unstack i c (1)
stack i l (1)
unstack c e (1)
put-down c (1)
unstack i l (1)
stack i c (1)
unstack e j (1)
stack e i (1)
unstack j g (1)
put-down j (1)
unstack e i (1)
stack e j (1)
unstack a b (1)
stack a i (1)
pick-up b (1)
stack b l (1)
unstack a i (1)
stack a e (1)
unstack d k (1)
put-down d (1)
unstack g h (1)
stack g k (1)
unstack i c (1)
stack i b (1)
unstack h f (1)
stack h g (1)
unstack i b (1)
put-down i (1)
pick-up c (1)
stack c b (1)
unstack h g (1)
stack h a (1)
unstack g k (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up i (1)
stack i c (1)
pick-up k (1)
stack k d (1)
unstack a e (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack i c (1)
put-down i (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.416285s, 431892 KB] Plan length: 71 step(s).
[t=0.416285s, 431892 KB] Plan cost: 71
[t=0.416285s, 431892 KB] Expanded 424 state(s).
[t=0.416285s, 431892 KB] Reopened 5 state(s).
[t=0.416285s, 431892 KB] Evaluated 1680 state(s).
[t=0.416285s, 431892 KB] Evaluations: 1680
[t=0.416285s, 431892 KB] Generated 2174 state(s).
[t=0.416285s, 431892 KB] Dead ends: 0 state(s).
[t=0.416285s, 431892 KB] Expanded until last jump: 4 state(s).
[t=0.416285s, 431892 KB] Reopened until last jump: 0 state(s).
[t=0.416285s, 431892 KB] Evaluated until last jump: 12 state(s).
[t=0.416285s, 431892 KB] Generated until last jump: 14 state(s).
[t=0.416285s, 431892 KB] Number of registered states: 1680
[t=0.416285s, 431892 KB] Int hash set load factor: 1680/2048 = 0.820312
[t=0.416285s, 431892 KB] Int hash set resizes: 11
[t=0.416285s, 431892 KB] Search time: 0.389601s
[t=0.416285s, 431892 KB] Total time: 0.416285s
Solution found.
Peak memory: 431892 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p138.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.016s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.104s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9558e-05s, 424928 KB] reading input...
[t=0.00217963s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260472s, 427536 KB] Building successor generator...done!
[t=0.0263272s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263503s, 427536 KB] time for successor generation creation: 0.000166669s
[t=0.0263791s, 427536 KB] Variables: 25
[t=0.0264021s, 427536 KB] FactPairs: 182
[t=0.0264244s, 427536 KB] Bytes per state: 8
[t=0.0266187s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099053s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.0991047s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991305s, 430128 KB] f = 156, 1 evaluated, 0 expanded
[t=0.0991577s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.0991817s, 430128 KB] pruning method: none
[t=0.111058s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.11111s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117748s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.117791s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.11838s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.11841s, 431100 KB] g=2, 7 evaluated, 3 expanded
[t=0.12046s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.120491s, 431100 KB] g=5, 18 evaluated, 8 expanded
[t=0.121439s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.121471s, 431100 KB] g=6, 23 evaluated, 9 expanded
[t=0.122049s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.122089s, 431100 KB] g=7, 26 evaluated, 10 expanded
[t=0.128133s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.128167s, 431100 KB] g=11, 59 evaluated, 20 expanded
[t=0.131134s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.131172s, 431100 KB] g=15, 75 evaluated, 25 expanded
[t=0.152448s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.152483s, 431100 KB] g=19, 191 evaluated, 64 expanded
[t=0.156357s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.156391s, 431232 KB] g=22, 212 evaluated, 69 expanded
[t=0.156604s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.156635s, 431232 KB] g=22, 213 evaluated, 69 expanded
[t=0.157224s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.157255s, 431232 KB] g=23, 216 evaluated, 70 expanded
[t=0.167727s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.167764s, 431232 KB] g=27, 273 evaluated, 83 expanded
[t=0.172372s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.172406s, 431232 KB] g=27, 298 evaluated, 89 expanded
[t=0.178822s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.178855s, 431232 KB] g=31, 333 evaluated, 99 expanded
[t=0.180528s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.180562s, 431232 KB] g=33, 342 evaluated, 102 expanded
[t=0.193051s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.193086s, 431232 KB] g=37, 410 evaluated, 121 expanded
[t=0.196043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.196074s, 431232 KB] g=39, 426 evaluated, 126 expanded
[t=0.206192s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.206227s, 431364 KB] g=41, 481 evaluated, 143 expanded
[t=0.217384s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.217422s, 431364 KB] g=47, 541 evaluated, 167 expanded, 3 reopened
[t=0.218921s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.218955s, 431364 KB] g=49, 549 evaluated, 169 expanded, 3 reopened
[t=0.24198s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.242024s, 431364 KB] g=49, 674 evaluated, 235 expanded, 27 reopened
[t=0.243344s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.243378s, 431364 KB] g=51, 681 evaluated, 237 expanded, 27 reopened
[t=0.255317s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.255356s, 431496 KB] g=42, 746 evaluated, 262 expanded, 28 reopened
[t=0.256299s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.25633s, 431496 KB] g=43, 751 evaluated, 263 expanded, 28 reopened
[t=0.267884s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.267919s, 431496 KB] g=48, 814 evaluated, 283 expanded, 28 reopened
[t=0.269973s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.270007s, 431496 KB] g=49, 825 evaluated, 286 expanded, 28 reopened
[t=0.270588s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.270618s, 431496 KB] g=49, 828 evaluated, 286 expanded, 28 reopened
[t=0.271386s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.271417s, 431496 KB] g=50, 832 evaluated, 287 expanded, 28 reopened
[t=0.274191s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.274224s, 431496 KB] g=53, 847 evaluated, 290 expanded, 28 reopened
[t=0.274438s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.274466s, 431496 KB] g=53, 848 evaluated, 290 expanded, 28 reopened
[t=0.274681s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.274709s, 431496 KB] g=54, 849 evaluated, 291 expanded, 28 reopened
[t=0.275285s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.275318s, 431496 KB] g=54, 852 evaluated, 291 expanded, 28 reopened
[t=0.283007s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.283043s, 431496 KB] g=57, 894 evaluated, 303 expanded, 28 reopened
[t=0.289853s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.289888s, 431496 KB] g=60, 931 evaluated, 317 expanded, 28 reopened
[t=0.290475s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.290505s, 431496 KB] g=61, 934 evaluated, 318 expanded, 28 reopened
[t=0.291268s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.291304s, 431496 KB] g=62, 938 evaluated, 319 expanded, 28 reopened
[t=0.291888s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.291918s, 431496 KB] g=63, 941 evaluated, 320 expanded, 28 reopened
[t=0.293611s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.293644s, 431496 KB] g=63, 950 evaluated, 325 expanded, 28 reopened
[t=0.294959s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.294992s, 431496 KB] g=65, 957 evaluated, 328 expanded, 28 reopened
[t=0.296114s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.296144s, 431496 KB] g=67, 963 evaluated, 330 expanded, 28 reopened
[t=0.3675s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.367544s, 431628 KB] g=71, 1353 evaluated, 484 expanded, 33 reopened
[t=0.368692s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.368725s, 431628 KB] g=73, 1360 evaluated, 491 expanded, 33 reopened
[t=0.368752s, 431628 KB] Solution found!
[t=0.368779s, 431628 KB] Actual search time: 0.269601s
put-down c (1)
unstack g i (1)
put-down g (1)
unstack f j (1)
stack f c (1)
unstack j h (1)
stack j i (1)
unstack h e (1)
stack h g (1)
unstack f c (1)
stack f j (1)
unstack e l (1)
put-down e (1)
unstack f j (1)
stack f c (1)
unstack j i (1)
stack j e (1)
unstack f c (1)
stack f h (1)
unstack l d (1)
stack l c (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up i (1)
stack i c (1)
unstack b k (1)
stack b l (1)
unstack f h (1)
stack f i (1)
unstack k a (1)
put-down k (1)
pick-up a (1)
stack a h (1)
unstack f i (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack b l (1)
put-down b (1)
unstack i c (1)
stack i k (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d b (1)
unstack i k (1)
stack i l (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l c (1)
unstack d b (1)
stack d j (1)
pick-up i (1)
stack i b (1)
unstack l c (1)
stack l d (1)
unstack i b (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.368812s, 431628 KB] Plan length: 73 step(s).
[t=0.368812s, 431628 KB] Plan cost: 73
[t=0.368812s, 431628 KB] Expanded 492 state(s).
[t=0.368812s, 431628 KB] Reopened 33 state(s).
[t=0.368812s, 431628 KB] Evaluated 1360 state(s).
[t=0.368812s, 431628 KB] Evaluations: 1360
[t=0.368812s, 431628 KB] Generated 2026 state(s).
[t=0.368812s, 431628 KB] Dead ends: 0 state(s).
[t=0.368812s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.368812s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.368812s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.368812s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.368812s, 431628 KB] Number of registered states: 1360
[t=0.368812s, 431628 KB] Int hash set load factor: 1360/2048 = 0.664062
[t=0.368812s, 431628 KB] Int hash set resizes: 11
[t=0.368812s, 431628 KB] Search time: 0.342194s
[t=0.368812s, 431628 KB] Total time: 0.368812s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p139.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.699e-05s, 424928 KB] reading input...
[t=0.00219033s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025964s, 427536 KB] Building successor generator...done!
[t=0.0262484s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262729s, 427536 KB] time for successor generation creation: 0.000169001s
[t=0.0263024s, 427536 KB] Variables: 25
[t=0.0263253s, 427536 KB] FactPairs: 182
[t=0.0263478s, 427536 KB] Bytes per state: 8
[t=0.0265457s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098995s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0990469s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990729s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0991003s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0991341s, 430128 KB] pruning method: none
[t=0.110994s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.111045s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118034s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.118079s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.119903s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.119934s, 431100 KB] g=2, 16 evaluated, 3 expanded
[t=0.120859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.12089s, 431100 KB] g=3, 21 evaluated, 4 expanded
[t=0.121646s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.121678s, 431100 KB] g=4, 25 evaluated, 5 expanded
[t=0.128152s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.128187s, 431100 KB] g=5, 61 evaluated, 12 expanded
[t=0.130199s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.130231s, 431100 KB] g=7, 72 evaluated, 14 expanded
[t=0.136196s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.136233s, 431100 KB] g=9, 105 evaluated, 22 expanded
[t=0.138616s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.138649s, 431100 KB] g=12, 118 evaluated, 25 expanded
[t=0.140294s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.140325s, 431100 KB] g=14, 127 evaluated, 27 expanded
[t=0.143258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.143292s, 431100 KB] g=16, 143 evaluated, 31 expanded
[t=0.144045s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.144077s, 431100 KB] g=17, 147 evaluated, 32 expanded
[t=0.170199s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.170239s, 431232 KB] g=20, 292 evaluated, 65 expanded
[t=0.173325s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.17336s, 431232 KB] g=23, 309 evaluated, 68 expanded
[t=0.183267s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.183306s, 431232 KB] g=28, 364 evaluated, 78 expanded
[t=0.197922s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.197971s, 431364 KB] g=32, 445 evaluated, 95 expanded
[t=0.200173s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.200204s, 431364 KB] g=35, 457 evaluated, 98 expanded
[t=0.209644s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.209684s, 431364 KB] g=38, 509 evaluated, 110 expanded
[t=0.210847s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.21088s, 431364 KB] g=39, 515 evaluated, 111 expanded
[t=0.211271s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.211305s, 431364 KB] g=39, 517 evaluated, 111 expanded
[t=0.2117s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.21173s, 431364 KB] g=40, 519 evaluated, 112 expanded
[t=0.214482s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.214518s, 431364 KB] g=42, 534 evaluated, 115 expanded
[t=0.216709s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.216741s, 431364 KB] g=45, 546 evaluated, 118 expanded
[t=0.220911s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.220945s, 431364 KB] g=46, 569 evaluated, 124 expanded
[t=0.222485s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.222528s, 431364 KB] g=47, 577 evaluated, 125 expanded
[t=0.232017s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.232125s, 431364 KB] g=50, 619 evaluated, 135 expanded
[t=0.233321s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.233419s, 431364 KB] g=50, 621 evaluated, 135 expanded
[t=0.233889s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.233919s, 431364 KB] g=51, 623 evaluated, 136 expanded
[t=0.234316s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.234346s, 431364 KB] g=51, 625 evaluated, 136 expanded
[t=0.235292s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.235323s, 431364 KB] g=53, 630 evaluated, 138 expanded
[t=0.236093s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.236124s, 431496 KB] g=54, 634 evaluated, 140 expanded
[t=0.236336s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.236374s, 431496 KB] g=54, 635 evaluated, 140 expanded
[t=0.236594s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.236622s, 431496 KB] g=55, 636 evaluated, 141 expanded
[t=0.237018s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.237048s, 431496 KB] g=56, 638 evaluated, 142 expanded
[t=0.237647s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.237681s, 431496 KB] g=57, 641 evaluated, 144 expanded
[t=0.239008s, 431496 KB] Solution found!
[t=0.239043s, 431496 KB] Actual search time: 0.139906s
unstack b a (1)
put-down b (1)
unstack a g (1)
stack a k (1)
pick-up g (1)
stack g c (1)
unstack e j (1)
stack e i (1)
unstack j h (1)
stack j b (1)
unstack h l (1)
stack h j (1)
unstack g c (1)
put-down g (1)
unstack l f (1)
stack l c (1)
unstack h j (1)
stack h l (1)
unstack j b (1)
stack j e (1)
unstack h l (1)
stack h g (1)
unstack l c (1)
put-down l (1)
pick-up c (1)
stack c b (1)
unstack j e (1)
stack j l (1)
pick-up f (1)
stack f a (1)
unstack e i (1)
stack e j (1)
unstack f a (1)
stack f i (1)
unstack a k (1)
stack a h (1)
unstack f i (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack c b (1)
put-down c (1)
pick-up i (1)
stack i c (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.23907s, 431496 KB] Plan length: 60 step(s).
[t=0.23907s, 431496 KB] Plan cost: 60
[t=0.23907s, 431496 KB] Expanded 152 state(s).
[t=0.23907s, 431496 KB] Reopened 0 state(s).
[t=0.23907s, 431496 KB] Evaluated 649 state(s).
[t=0.23907s, 431496 KB] Evaluations: 649
[t=0.23907s, 431496 KB] Generated 802 state(s).
[t=0.23907s, 431496 KB] Dead ends: 0 state(s).
[t=0.23907s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.23907s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.23907s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.23907s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.23907s, 431496 KB] Number of registered states: 649
[t=0.23907s, 431496 KB] Int hash set load factor: 649/1024 = 0.633789
[t=0.23907s, 431496 KB] Int hash set resizes: 10
[t=0.23907s, 431496 KB] Search time: 0.212525s
[t=0.23907s, 431496 KB] Total time: 0.23907s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p140.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.020s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.653e-05s, 424928 KB] reading input...
[t=0.00218655s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258448s, 427536 KB] Building successor generator...done!
[t=0.0261162s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.02614s, 427536 KB] time for successor generation creation: 0.000160873s
[t=0.0261691s, 427536 KB] Variables: 25
[t=0.026192s, 427536 KB] FactPairs: 182
[t=0.0262144s, 427536 KB] Bytes per state: 8
[t=0.02641s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982064s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0982579s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982832s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0983107s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0983345s, 430128 KB] pruning method: none
[t=0.116471s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.116521s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117289s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.11732s, 431100 KB] g=3, 7 evaluated, 3 expanded
[t=0.117731s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.117763s, 431100 KB] g=4, 9 evaluated, 4 expanded
[t=0.117977s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.118017s, 431100 KB] g=5, 10 evaluated, 5 expanded
[t=0.118953s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.118983s, 431100 KB] g=7, 15 evaluated, 7 expanded
[t=0.12608s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.126113s, 431100 KB] g=10, 54 evaluated, 23 expanded
[t=0.126865s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.126896s, 431100 KB] g=11, 58 evaluated, 24 expanded
[t=0.128201s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.128236s, 431100 KB] g=11, 65 evaluated, 27 expanded
[t=0.144191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.144229s, 431100 KB] g=20, 152 evaluated, 53 expanded
[t=0.1533s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.153338s, 431232 KB] g=26, 202 evaluated, 65 expanded
[t=0.156092s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.156124s, 431232 KB] g=26, 217 evaluated, 69 expanded
[t=0.165595s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.165632s, 431232 KB] g=29, 269 evaluated, 83 expanded
[t=0.168206s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.168241s, 431232 KB] g=32, 283 evaluated, 86 expanded
[t=0.170638s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.170674s, 431232 KB] g=34, 296 evaluated, 89 expanded
[t=0.193763s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.193804s, 431364 KB] g=29, 423 evaluated, 124 expanded, 2 reopened
[t=0.19442s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.194452s, 431364 KB] g=30, 426 evaluated, 125 expanded, 2 reopened
[t=0.195591s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.195625s, 431364 KB] g=32, 432 evaluated, 127 expanded, 2 reopened
[t=0.197651s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.197684s, 431364 KB] g=35, 443 evaluated, 130 expanded, 2 reopened
[t=0.199705s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.199737s, 431364 KB] g=37, 454 evaluated, 133 expanded, 2 reopened
[t=0.2014s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.201434s, 431364 KB] g=39, 463 evaluated, 135 expanded, 2 reopened
[t=0.202925s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.20296s, 431364 KB] g=41, 471 evaluated, 137 expanded, 2 reopened
[t=0.20354s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.20357s, 431364 KB] g=42, 474 evaluated, 138 expanded, 2 reopened
[t=0.204864s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.204895s, 431364 KB] g=44, 481 evaluated, 140 expanded, 2 reopened
[t=0.205288s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.205318s, 431364 KB] g=45, 483 evaluated, 141 expanded, 2 reopened
[t=0.205729s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.205763s, 431364 KB] g=45, 485 evaluated, 141 expanded, 2 reopened
[t=0.206159s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.206188s, 431364 KB] g=46, 487 evaluated, 142 expanded, 2 reopened
[t=0.207123s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.207153s, 431364 KB] g=48, 492 evaluated, 144 expanded, 2 reopened
[t=0.207547s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.207578s, 431364 KB] g=49, 494 evaluated, 145 expanded, 2 reopened
[t=0.208879s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.208911s, 431364 KB] g=51, 501 evaluated, 148 expanded, 2 reopened
[t=0.21154s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_6.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.211576s, 431364 KB] g=53, 515 evaluated, 158 expanded, 2 reopened
[t=0.211609s, 431364 KB] Solution found!
[t=0.211637s, 431364 KB] Actual search time: 0.1133s
pick-up f (1)
stack f i (1)
unstack b e (1)
put-down b (1)
unstack e c (1)
put-down e (1)
unstack c d (1)
stack c b (1)
unstack f i (1)
stack f e (1)
unstack d k (1)
stack d c (1)
unstack k j (1)
put-down k (1)
unstack f e (1)
stack f d (1)
unstack j a (1)
stack j i (1)
unstack a g (1)
stack a k (1)
pick-up e (1)
stack e j (1)
unstack g h (1)
put-down g (1)
unstack h l (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k e (1)
unstack f d (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack d c (1)
put-down d (1)
unstack e j (1)
stack e k (1)
pick-up d (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.211663s, 431364 KB] Plan length: 54 step(s).
[t=0.211663s, 431364 KB] Plan cost: 54
[t=0.211663s, 431364 KB] Expanded 160 state(s).
[t=0.211663s, 431364 KB] Reopened 2 state(s).
[t=0.211663s, 431364 KB] Evaluated 516 state(s).
[t=0.211663s, 431364 KB] Evaluations: 516
[t=0.211663s, 431364 KB] Generated 693 state(s).
[t=0.211663s, 431364 KB] Dead ends: 0 state(s).
[t=0.211663s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.211663s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.211663s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.211663s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.211663s, 431364 KB] Number of registered states: 516
[t=0.211663s, 431364 KB] Int hash set load factor: 516/1024 = 0.503906
[t=0.211663s, 431364 KB] Int hash set resizes: 10
[t=0.211663s, 431364 KB] Search time: 0.185253s
[t=0.211663s, 431364 KB] Total time: 0.211663s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023679
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 6 test success: 20 of 20 (100.0%)

---------- FOLD 8/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 171 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.3521496057510376 (0.42499691247940063 vs. 0.7771465182304382), which occurred at index 83.
  _module_class,
 | avg_train_loss=0.099390 | avg_val_loss=0.092755
Epoch 2 | avg_train_loss=0.066719 | avg_val_loss=0.047782
Epoch 3 | avg_train_loss=0.042817 | avg_val_loss=0.041097
Epoch 4 | avg_train_loss=0.038902 | avg_val_loss=0.039576
Epoch 5 | avg_train_loss=0.037346 | avg_val_loss=0.038175
Epoch 6 | avg_train_loss=0.035854 | avg_val_loss=0.037234
Epoch 7 | avg_train_loss=0.034980 | avg_val_loss=0.036220
Epoch 8 | avg_train_loss=0.034447 | avg_val_loss=0.035604
Epoch 9 | avg_train_loss=0.033917 | avg_val_loss=0.034742
Epoch 10 | avg_train_loss=0.033201 | avg_val_loss=0.034263
Epoch 11 | avg_train_loss=0.032723 | avg_val_loss=0.033686
Epoch 12 | avg_train_loss=0.032219 | avg_val_loss=0.033524
Epoch 13 | avg_train_loss=0.031902 | avg_val_loss=0.033174
Epoch 14 | avg_train_loss=0.031482 | avg_val_loss=0.032888
Epoch 15 | avg_train_loss=0.031190 | avg_val_loss=0.032456
Epoch 16 | avg_train_loss=0.030682 | avg_val_loss=0.032349
Epoch 17 | avg_train_loss=0.030505 | avg_val_loss=0.031496
Epoch 18 | avg_train_loss=0.030334 | avg_val_loss=0.032121
Epoch 19 | avg_train_loss=0.029838 | avg_val_loss=0.031661
Epoch 20 | avg_train_loss=0.029778 | avg_val_loss=0.031396
Epoch 21 | avg_train_loss=0.029557 | avg_val_loss=0.031144
Epoch 22 | avg_train_loss=0.029275 | avg_val_loss=0.030604
Epoch 23 | avg_train_loss=0.029015 | avg_val_loss=0.030702
Epoch 24 | avg_train_loss=0.028796 | avg_val_loss=0.030357
Epoch 25 | avg_train_loss=0.028619 | avg_val_loss=0.030448
Epoch 26 | avg_train_loss=0.028445 | avg_val_loss=0.030505
Epoch 27 | avg_train_loss=0.028140 | avg_val_loss=0.030286
Epoch 28 | avg_train_loss=0.027962 | avg_val_loss=0.029809
Epoch 29 | avg_train_loss=0.027759 | avg_val_loss=0.029820
Epoch 30 | avg_train_loss=0.027541 | avg_val_loss=0.029531
Epoch 31 | avg_train_loss=0.027347 | avg_val_loss=0.029251
Epoch 32 | avg_train_loss=0.027070 | avg_val_loss=0.029182
Epoch 33 | avg_train_loss=0.026861 | avg_val_loss=0.028734
Epoch 34 | avg_train_loss=0.026799 | avg_val_loss=0.029110
Epoch 35 | avg_train_loss=0.026619 | avg_val_loss=0.028923
Epoch 36 | avg_train_loss=0.026244 | avg_val_loss=0.028535
Epoch 37 | avg_train_loss=0.026270 | avg_val_loss=0.028801
Epoch 38 | avg_train_loss=0.025943 | avg_val_loss=0.028056
Epoch 39 | avg_train_loss=0.025789 | avg_val_loss=0.028122
Epoch 40 | avg_train_loss=0.025838 | avg_val_loss=0.027994
Epoch 41 | avg_train_loss=0.025596 | avg_val_loss=0.027803
Epoch 42 | avg_train_loss=0.025447 | avg_val_loss=0.027660
Epoch 43 | avg_train_loss=0.025227 | avg_val_loss=0.027505
Epoch 44 | avg_train_loss=0.025084 | avg_val_loss=0.027293
Epoch 45 | avg_train_loss=0.024860 | avg_val_loss=0.027402
Epoch 46 | avg_train_loss=0.024768 | avg_val_loss=0.026976
Epoch 47 | avg_train_loss=0.024509 | avg_val_loss=0.026996
Epoch 48 | avg_train_loss=0.024478 | avg_val_loss=0.027094
Epoch 49 | avg_train_loss=0.024307 | avg_val_loss=0.026891
Epoch 50 | avg_train_loss=0.024196 | avg_val_loss=0.026713
Epoch 51 | avg_train_loss=0.024096 | avg_val_loss=0.026531
Epoch 52 | avg_train_loss=0.023941 | avg_val_loss=0.026876
Epoch 53 | avg_train_loss=0.023888 | avg_val_loss=0.026402
Epoch 54 | avg_train_loss=0.023577 | avg_val_loss=0.026636
Epoch 55 | avg_train_loss=0.023588 | avg_val_loss=0.026509
Epoch 56 | avg_train_loss=0.023414 | avg_val_loss=0.026133
Epoch 57 | avg_train_loss=0.023437 | avg_val_loss=0.025762
Epoch 58 | avg_train_loss=0.023217 | avg_val_loss=0.026195
Epoch 59 | avg_train_loss=0.023209 | avg_val_loss=0.026273
Epoch 60 | avg_train_loss=0.023247 | avg_val_loss=0.025832
Epoch 61 | avg_train_loss=0.022978 | avg_val_loss=0.025746
Epoch 62 | avg_train_loss=0.023030 | avg_val_loss=0.026190
Epoch 63 | avg_train_loss=0.022796 | avg_val_loss=0.025546
Epoch 64 | avg_train_loss=0.022749 | avg_val_loss=0.025657
Epoch 65 | avg_train_loss=0.022538 | avg_val_loss=0.025304
Epoch 66 | avg_train_loss=0.022564 | avg_val_loss=0.025378
Epoch 67 | avg_train_loss=0.022475 | avg_val_loss=0.025289
Epoch 68 | avg_train_loss=0.022268 | avg_val_loss=0.025525
Epoch 69 | avg_train_loss=0.022200 | avg_val_loss=0.025211
Epoch 70 | avg_train_loss=0.022167 | avg_val_loss=0.025619
Epoch 71 | avg_train_loss=0.022050 | avg_val_loss=0.025436
Epoch 72 | avg_train_loss=0.021974 | avg_val_loss=0.024925
Epoch 73 | avg_train_loss=0.022042 | avg_val_loss=0.025724
Epoch 74 | avg_train_loss=0.021952 | avg_val_loss=0.025079
Epoch 75 | avg_train_loss=0.021828 | avg_val_loss=0.025177
Epoch 76 | avg_train_loss=0.021704 | avg_val_loss=0.025172
Epoch 77 | avg_train_loss=0.021679 | avg_val_loss=0.025360
Epoch 78 | avg_train_loss=0.021592 | avg_val_loss=0.025164
Epoch 79 | avg_train_loss=0.021438 | avg_val_loss=0.024839
Epoch 80 | avg_train_loss=0.021332 | avg_val_loss=0.024861
Epoch 81 | avg_train_loss=0.021167 | avg_val_loss=0.024820
Epoch 82 | avg_train_loss=0.021229 | avg_val_loss=0.024957
Epoch 83 | avg_train_loss=0.021014 | avg_val_loss=0.024724
Epoch 84 | avg_train_loss=0.021052 | avg_val_loss=0.025253
Epoch 85 | avg_train_loss=0.021048 | avg_val_loss=0.025062
Epoch 86 | avg_train_loss=0.020934 | avg_val_loss=0.024989
Epoch 87 | avg_train_loss=0.020755 | avg_val_loss=0.024423
Epoch 88 | avg_train_loss=0.020762 | avg_val_loss=0.024644
Epoch 89 | avg_train_loss=0.020721 | avg_val_loss=0.024746
Epoch 90 | avg_train_loss=0.020766 | avg_val_loss=0.024856
Epoch 91 | avg_train_loss=0.020611 | avg_val_loss=0.024449
Epoch 92 | avg_train_loss=0.020561 | avg_val_loss=0.024385
Epoch 93 | avg_train_loss=0.020487 | avg_val_loss=0.024931
Epoch 94 | avg_train_loss=0.020322 | avg_val_loss=0.024673
Epoch 95 | avg_train_loss=0.020230 | avg_val_loss=0.025513
Epoch 96 | avg_train_loss=0.020451 | avg_val_loss=0.024787
Epoch 97 | avg_train_loss=0.020083 | avg_val_loss=0.024685
Epoch 98 | avg_train_loss=0.019994 | avg_val_loss=0.024584
Epoch 99 | avg_train_loss=0.020191 | avg_val_loss=0.024231
Epoch 100 | avg_train_loss=0.019842 | avg_val_loss=0.024188
Epoch 101 | avg_train_loss=0.019878 | avg_val_loss=0.024482
Epoch 102 | avg_train_loss=0.019808INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p141.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6381e-05s, 424928 KB] reading input...
[t=0.00219219s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257391s, 427536 KB] Building successor generator...done!
[t=0.0260179s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260411s, 427536 KB] time for successor generation creation: 0.000165895s
[t=0.0260698s, 427536 KB] Variables: 25
[t=0.026093s, 427536 KB] FactPairs: 182
[t=0.0261152s, 427536 KB] Bytes per state: 8
[t=0.0263103s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107304s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.107358s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107384s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.107411s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.107435s, 430128 KB] pruning method: none
[t=0.125631s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.125693s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.126097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.126128s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.12653s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.12656s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.127891s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.127923s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.128316s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.128346s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.128926s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.128955s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.129347s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.129376s, 431100 KB] g=5, 21 evaluated, 5 expanded
[t=0.129587s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.129616s, 431100 KB] g=5, 22 evaluated, 5 expanded
[t=0.130191s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.130221s, 431100 KB] g=6, 25 evaluated, 6 expanded
[t=0.134609s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.134646s, 431100 KB] g=10, 49 evaluated, 10 expanded
[t=0.139429s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.139463s, 431100 KB] g=13, 75 evaluated, 16 expanded
[t=0.143891s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.143924s, 431100 KB] g=17, 99 evaluated, 21 expanded
[t=0.145235s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.145267s, 431100 KB] g=19, 106 evaluated, 23 expanded
[t=0.14914s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.149175s, 431100 KB] g=20, 127 evaluated, 29 expanded
[t=0.149766s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.149796s, 431100 KB] g=20, 130 evaluated, 29 expanded
[t=0.15112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.151151s, 431100 KB] g=21, 137 evaluated, 31 expanded
[t=0.152829s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.152867s, 431100 KB] g=21, 146 evaluated, 34 expanded
[t=0.153633s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.153664s, 431100 KB] g=22, 150 evaluated, 35 expanded
[t=0.154243s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.154272s, 431100 KB] g=22, 153 evaluated, 35 expanded
[t=0.157051s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.15709s, 431232 KB] g=24, 168 evaluated, 39 expanded
[t=0.163734s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.163768s, 431232 KB] g=24, 204 evaluated, 50 expanded
[t=0.166739s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.166771s, 431232 KB] g=27, 220 evaluated, 54 expanded
[t=0.167536s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.167566s, 431232 KB] g=28, 224 evaluated, 55 expanded
[t=0.171088s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.171121s, 431232 KB] g=31, 243 evaluated, 61 expanded
[t=0.172622s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.172655s, 431232 KB] g=33, 251 evaluated, 63 expanded
[t=0.173995s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.174025s, 431232 KB] g=36, 258 evaluated, 66 expanded
[t=0.174426s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.174456s, 431232 KB] g=37, 260 evaluated, 67 expanded
[t=0.175783s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.175819s, 431232 KB] g=39, 267 evaluated, 70 expanded
[t=0.178233s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.178267s, 431232 KB] g=41, 280 evaluated, 74 expanded
[t=0.182144s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.182178s, 431232 KB] g=45, 301 evaluated, 82 expanded
[t=0.190834s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.190871s, 431232 KB] g=49, 348 evaluated, 100 expanded
[t=0.192557s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.19259s, 431232 KB] g=52, 357 evaluated, 103 expanded
[t=0.194449s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.194488s, 431232 KB] g=53, 367 evaluated, 106 expanded
[t=0.194715s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.194746s, 431232 KB] g=54, 368 evaluated, 107 expanded
[t=0.196069s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.196102s, 431232 KB] g=57, 376 evaluated, 112 expanded
[t=0.19613s, 431232 KB] Solution found!
[t=0.196156s, 431232 KB] Actual search time: 0.0887173s
stack k i (1)
unstack g b (1)
put-down g (1)
unstack f a (1)
put-down f (1)
unstack b e (1)
stack b d (1)
unstack e l (1)
stack e k (1)
pick-up g (1)
stack g b (1)
unstack a h (1)
stack a l (1)
unstack g b (1)
put-down g (1)
pick-up f (1)
stack f e (1)
unstack a l (1)
stack a f (1)
unstack h j (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up l (1)
stack l b (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e l (1)
unstack k i (1)
stack k e (1)
pick-up j (1)
stack j i (1)
unstack k e (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack l b (1)
stack l j (1)
unstack i c (1)
put-down i (1)
unstack l j (1)
stack l c (1)
unstack b d (1)
put-down b (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.196181s, 431232 KB] Plan length: 57 step(s).
[t=0.196181s, 431232 KB] Plan cost: 57
[t=0.196181s, 431232 KB] Expanded 113 state(s).
[t=0.196181s, 431232 KB] Reopened 0 state(s).
[t=0.196181s, 431232 KB] Evaluated 376 state(s).
[t=0.196181s, 431232 KB] Evaluations: 376
[t=0.196181s, 431232 KB] Generated 495 state(s).
[t=0.196181s, 431232 KB] Dead ends: 0 state(s).
[t=0.196181s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.196181s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.196181s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.196181s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.196181s, 431232 KB] Number of registered states: 376
[t=0.196181s, 431232 KB] Int hash set load factor: 376/512 = 0.734375
[t=0.196181s, 431232 KB] Int hash set resizes: 9
[t=0.196181s, 431232 KB] Search time: 0.169871s
[t=0.196181s, 431232 KB] Total time: 0.196181s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p142.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8286e-05s, 424928 KB] reading input...
[t=0.00209556s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260182s, 427536 KB] Building successor generator...done!
[t=0.0262947s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263178s, 427536 KB] time for successor generation creation: 0.000164453s
[t=0.0263459s, 427536 KB] Variables: 25
[t=0.0263682s, 427536 KB] FactPairs: 182
[t=0.02639s, 427536 KB] Bytes per state: 8
[t=0.0265863s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994977s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0995496s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995754s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0996022s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0996255s, 430128 KB] pruning method: none
[t=0.118227s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.118277s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118503s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.118533s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.119136s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.119172s, 431100 KB] g=3, 8 evaluated, 3 expanded
[t=0.119967s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.119996s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.120407s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.120446s, 431100 KB] g=5, 14 evaluated, 5 expanded
[t=0.121049s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.121079s, 431100 KB] g=6, 17 evaluated, 6 expanded
[t=0.126608s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.126642s, 431100 KB] g=10, 46 evaluated, 12 expanded
[t=0.128567s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.128604s, 431100 KB] g=12, 56 evaluated, 14 expanded
[t=0.13167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.131702s, 431100 KB] g=16, 72 evaluated, 18 expanded
[t=0.140094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.140131s, 431100 KB] g=19, 116 evaluated, 30 expanded
[t=0.160075s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.160114s, 431232 KB] g=18, 221 evaluated, 55 expanded
[t=0.161852s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.161887s, 431232 KB] g=20, 230 evaluated, 57 expanded
[t=0.169342s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.169376s, 431232 KB] g=21, 269 evaluated, 66 expanded
[t=0.182705s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.182742s, 431232 KB] g=24, 339 evaluated, 81 expanded
[t=0.186197s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.186233s, 431232 KB] g=25, 357 evaluated, 85 expanded
[t=0.190256s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.19029s, 431232 KB] g=28, 378 evaluated, 90 expanded
[t=0.198886s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.198921s, 431364 KB] g=26, 423 evaluated, 102 expanded
[t=0.228465s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.228506s, 431364 KB] g=31, 578 evaluated, 139 expanded
[t=0.229306s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.229336s, 431364 KB] g=32, 582 evaluated, 140 expanded
[t=0.229931s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.229959s, 431364 KB] g=32, 585 evaluated, 140 expanded
[t=0.23419s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.234231s, 431364 KB] g=36, 607 evaluated, 145 expanded
[t=0.252923s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.252962s, 431496 KB] g=39, 705 evaluated, 163 expanded
[t=0.253568s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.253598s, 431496 KB] g=40, 708 evaluated, 164 expanded
[t=0.25535s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.255382s, 431496 KB] g=41, 717 evaluated, 165 expanded
[t=0.25979s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.259823s, 431496 KB] g=42, 740 evaluated, 169 expanded
[t=0.261573s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.261604s, 431496 KB] g=43, 749 evaluated, 171 expanded
[t=0.262205s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.262238s, 431496 KB] g=44, 752 evaluated, 172 expanded
[t=0.267803s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.26784s, 431496 KB] g=47, 781 evaluated, 178 expanded
[t=0.268441s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.268474s, 431496 KB] g=48, 784 evaluated, 179 expanded
[t=0.271182s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.271217s, 431496 KB] g=51, 798 evaluated, 183 expanded
[t=0.271629s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.271659s, 431496 KB] g=51, 800 evaluated, 183 expanded
[t=0.273977s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.274007s, 431496 KB] g=53, 812 evaluated, 187 expanded
[t=0.274797s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.274829s, 431496 KB] g=54, 816 evaluated, 188 expanded
[t=0.278483s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.278516s, 431496 KB] g=57, 835 evaluated, 192 expanded
[t=0.280663s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.280696s, 431496 KB] g=60, 846 evaluated, 195 expanded
[t=0.283967s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.284s, 431496 KB] g=57, 863 evaluated, 200 expanded
[t=0.285364s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.285399s, 431496 KB] g=59, 870 evaluated, 202 expanded
[t=0.285811s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.28584s, 431496 KB] g=59, 872 evaluated, 202 expanded
[t=0.287615s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.287648s, 431628 KB] g=63, 881 evaluated, 206 expanded
[t=0.288062s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.288091s, 431628 KB] g=64, 883 evaluated, 207 expanded
[t=0.288505s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.288536s, 431628 KB] g=65, 885 evaluated, 208 expanded
[t=0.288568s, 431628 KB] Solution found!
[t=0.288595s, 431628 KB] Actual search time: 0.188967s
unstack l e (1)
stack l b (1)
unstack e a (1)
put-down e (1)
unstack j g (1)
put-down j (1)
unstack g f (1)
put-down g (1)
unstack l b (1)
put-down l (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
pick-up f (1)
stack f g (1)
unstack i c (1)
stack i a (1)
pick-up c (1)
stack c d (1)
unstack i a (1)
put-down i (1)
unstack a k (1)
stack a i (1)
unstack k h (1)
stack k b (1)
pick-up h (1)
stack h a (1)
unstack f g (1)
put-down f (1)
unstack k b (1)
put-down k (1)
unstack c d (1)
stack c b (1)
unstack h a (1)
stack h g (1)
pick-up k (1)
stack k j (1)
unstack a i (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.28862s, 431628 KB] Plan length: 66 step(s).
[t=0.28862s, 431628 KB] Plan cost: 66
[t=0.28862s, 431628 KB] Expanded 210 state(s).
[t=0.28862s, 431628 KB] Reopened 0 state(s).
[t=0.28862s, 431628 KB] Evaluated 886 state(s).
[t=0.28862s, 431628 KB] Evaluations: 886
[t=0.28862s, 431628 KB] Generated 1108 state(s).
[t=0.28862s, 431628 KB] Dead ends: 0 state(s).
[t=0.28862s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.28862s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.28862s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.28862s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.28862s, 431628 KB] Number of registered states: 886
[t=0.28862s, 431628 KB] Int hash set load factor: 886/1024 = 0.865234
[t=0.28862s, 431628 KB] Int hash set resizes: 10
[t=0.28862s, 431628 KB] Search time: 0.262034s
[t=0.28862s, 431628 KB] Total time: 0.28862s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p143.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5775e-05s, 424928 KB] reading input...
[t=0.00215516s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261024s, 427536 KB] Building successor generator...done!
[t=0.0263839s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026408s, 427536 KB] time for successor generation creation: 0.000169103s
[t=0.026437s, 427536 KB] Variables: 25
[t=0.0264607s, 427536 KB] FactPairs: 182
[t=0.0264832s, 427536 KB] Bytes per state: 8
[t=0.0266821s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.101854s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.101907s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.101933s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.10196s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.101984s, 430128 KB] pruning method: none
[t=0.113798s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.113849s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.120288s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.120331s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.121451s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.121493s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.12567s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.125703s, 431100 KB] g=6, 32 evaluated, 8 expanded
[t=0.126275s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.126305s, 431100 KB] g=7, 35 evaluated, 9 expanded
[t=0.127051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.127081s, 431100 KB] g=8, 39 evaluated, 10 expanded
[t=0.128738s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.128772s, 431100 KB] g=10, 48 evaluated, 12 expanded
[t=0.132212s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.132249s, 431100 KB] g=11, 67 evaluated, 16 expanded
[t=0.13859s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.138628s, 431100 KB] g=13, 102 evaluated, 24 expanded
[t=0.139927s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.139959s, 431100 KB] g=15, 109 evaluated, 26 expanded
[t=0.144023s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.144065s, 431100 KB] g=19, 131 evaluated, 32 expanded
[t=0.146652s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.146686s, 431100 KB] g=22, 145 evaluated, 36 expanded
[t=0.148723s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.14876s, 431100 KB] g=23, 156 evaluated, 39 expanded
[t=0.161638s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.161677s, 431232 KB] g=21, 211 evaluated, 54 expanded
[t=0.162078s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.162108s, 431232 KB] g=22, 213 evaluated, 55 expanded
[t=0.169416s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.169453s, 431232 KB] g=26, 253 evaluated, 63 expanded
[t=0.170236s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.170267s, 431232 KB] g=27, 257 evaluated, 64 expanded
[t=0.173762s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.173797s, 431232 KB] g=29, 276 evaluated, 68 expanded
[t=0.174199s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.174235s, 431232 KB] g=30, 278 evaluated, 69 expanded
[t=0.176123s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.176166s, 431232 KB] g=31, 288 evaluated, 71 expanded
[t=0.180754s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.180788s, 431232 KB] g=33, 313 evaluated, 78 expanded
[t=0.18137s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.181401s, 431232 KB] g=34, 316 evaluated, 79 expanded
[t=0.183248s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.183279s, 431232 KB] g=36, 326 evaluated, 82 expanded
[t=0.183495s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.183524s, 431232 KB] g=37, 327 evaluated, 83 expanded
[t=0.186726s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.186826s, 431232 KB] g=39, 333 evaluated, 85 expanded
[t=0.190477s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.190513s, 431232 KB] g=44, 349 evaluated, 95 expanded
[t=0.190907s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.190939s, 431232 KB] g=45, 351 evaluated, 96 expanded
[t=0.191154s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.191183s, 431232 KB] g=46, 352 evaluated, 97 expanded
[t=0.193247s, 431232 KB] Solution found!
[t=0.193284s, 431232 KB] Actual search time: 0.0912978s
unstack d b (1)
put-down d (1)
pick-up e (1)
stack e d (1)
unstack b f (1)
put-down b (1)
unstack f l (1)
stack f e (1)
unstack l j (1)
put-down l (1)
pick-up b (1)
stack b l (1)
pick-up j (1)
stack j f (1)
unstack h g (1)
put-down h (1)
unstack g i (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack j f (1)
put-down j (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k i (1)
unstack f e (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.193311s, 431232 KB] Plan length: 48 step(s).
[t=0.193311s, 431232 KB] Plan cost: 48
[t=0.193311s, 431232 KB] Expanded 106 state(s).
[t=0.193311s, 431232 KB] Reopened 0 state(s).
[t=0.193311s, 431232 KB] Evaluated 364 state(s).
[t=0.193311s, 431232 KB] Evaluations: 364
[t=0.193311s, 431232 KB] Generated 473 state(s).
[t=0.193311s, 431232 KB] Dead ends: 0 state(s).
[t=0.193311s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.193311s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.193311s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.193311s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.193311s, 431232 KB] Number of registered states: 364
[t=0.193311s, 431232 KB] Int hash set load factor: 364/512 = 0.710938
[t=0.193311s, 431232 KB] Int hash set resizes: 9
[t=0.193311s, 431232 KB] Search time: 0.16663s
[t=0.193311s, 431232 KB] Total time: 0.193311s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p144.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6646e-05s, 424928 KB] reading input...
[t=0.00214897s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259807s, 427536 KB] Building successor generator...done!
[t=0.0262633s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262873s, 427536 KB] time for successor generation creation: 0.000167293s
[t=0.0263163s, 427536 KB] Variables: 25
[t=0.0263396s, 427536 KB] FactPairs: 182
[t=0.0263619s, 427536 KB] Bytes per state: 8
[t=0.0265698s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0993575s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.09941s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994359s, 430128 KB] f = 141, 1 evaluated, 0 expanded
[t=0.0994633s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.099488s, 430128 KB] pruning method: none
[t=0.117961s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.118013s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118812s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.118845s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.11979s, 431100 KB] f = 142, 12 evaluated, 3 expanded
[t=0.120554s, 431100 KB] f = 143, 16 evaluated, 4 expanded
[t=0.121871s, 431100 KB] f = 145, 23 evaluated, 6 expanded
[t=0.123378s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.12341s, 431100 KB] g=7, 31 evaluated, 9 expanded
[t=0.126553s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.126587s, 431100 KB] g=10, 48 evaluated, 13 expanded
[t=0.127719s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.127754s, 431100 KB] g=12, 54 evaluated, 15 expanded
[t=0.127969s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.127998s, 431100 KB] g=12, 55 evaluated, 15 expanded
[t=0.128949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.128979s, 431100 KB] g=13, 60 evaluated, 16 expanded
[t=0.131024s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.131058s, 431100 KB] g=15, 71 evaluated, 19 expanded
[t=0.134011s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.134042s, 431100 KB] g=16, 87 evaluated, 22 expanded
[t=0.140482s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.140518s, 431100 KB] g=18, 122 evaluated, 30 expanded
[t=0.156333s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.15637s, 431232 KB] g=22, 208 evaluated, 49 expanded
[t=0.199522s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.19956s, 431364 KB] g=32, 444 evaluated, 108 expanded
[t=0.206567s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.206605s, 431364 KB] g=29, 482 evaluated, 119 expanded
[t=0.218178s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.218222s, 431364 KB] g=30, 545 evaluated, 135 expanded
[t=0.303232s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.303276s, 431496 KB] g=34, 1011 evaluated, 270 expanded, 6 reopened
[t=0.376278s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.376318s, 431496 KB] g=30, 1411 evaluated, 377 expanded, 6 reopened
[t=0.381462s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.381497s, 431496 KB] g=32, 1439 evaluated, 385 expanded, 6 reopened
[t=0.421536s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.421578s, 431628 KB] g=34, 1658 evaluated, 448 expanded, 6 reopened
[t=0.537867s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.537913s, 431760 KB] g=26, 2296 evaluated, 644 expanded, 25 reopened
[t=0.539779s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.539812s, 431760 KB] g=28, 2306 evaluated, 646 expanded, 25 reopened
[t=0.550575s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.550614s, 431760 KB] g=32, 2365 evaluated, 663 expanded, 25 reopened
[t=0.554484s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.55452s, 431760 KB] g=35, 2386 evaluated, 667 expanded, 25 reopened
[t=0.555286s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.555316s, 431760 KB] g=36, 2390 evaluated, 668 expanded, 25 reopened
[t=0.556999s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.557033s, 431760 KB] g=38, 2399 evaluated, 670 expanded, 25 reopened
[t=0.558902s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.558935s, 431760 KB] g=41, 2409 evaluated, 673 expanded, 25 reopened
[t=0.566484s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.566524s, 431760 KB] g=43, 2450 evaluated, 683 expanded, 25 reopened
[t=0.568207s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.568238s, 431760 KB] g=45, 2459 evaluated, 685 expanded, 25 reopened
[t=0.568452s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.568481s, 431760 KB] g=45, 2460 evaluated, 685 expanded, 25 reopened
[t=0.569613s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.569651s, 431760 KB] g=47, 2466 evaluated, 687 expanded, 25 reopened
[t=0.569865s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.569894s, 431760 KB] g=47, 2467 evaluated, 687 expanded, 25 reopened
[t=0.570851s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.570882s, 431760 KB] g=48, 2472 evaluated, 688 expanded, 25 reopened
[t=0.571284s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.571317s, 431760 KB] g=49, 2474 evaluated, 689 expanded, 25 reopened
[t=0.571712s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.571741s, 431760 KB] g=49, 2476 evaluated, 689 expanded, 25 reopened
[t=0.573434s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.573466s, 431760 KB] g=51, 2485 evaluated, 692 expanded, 25 reopened
[t=0.574426s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.574458s, 431760 KB] g=51, 2490 evaluated, 694 expanded, 25 reopened
[t=0.581289s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.581324s, 431760 KB] g=54, 2527 evaluated, 710 expanded, 26 reopened
[t=0.583976s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.584014s, 431760 KB] g=56, 2542 evaluated, 721 expanded, 26 reopened
[t=0.584042s, 431760 KB] Solution found!
[t=0.584069s, 431760 KB] Actual search time: 0.484578s
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c d (1)
unstack j a (1)
stack j k (1)
unstack a l (1)
stack a i (1)
unstack l e (1)
put-down l (1)
unstack e h (1)
stack e j (1)
unstack h f (1)
stack h a (1)
unstack e j (1)
stack e l (1)
unstack j k (1)
stack j h (1)
unstack f g (1)
stack f e (1)
unstack j h (1)
stack j c (1)
unstack h a (1)
stack h g (1)
unstack a i (1)
stack a h (1)
unstack j c (1)
stack j i (1)
unstack k b (1)
stack k j (1)
unstack c d (1)
stack c b (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e l (1)
stack e k (1)
pick-up l (1)
stack l d (1)
unstack c b (1)
put-down c (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.584094s, 431760 KB] Plan length: 56 step(s).
[t=0.584094s, 431760 KB] Plan cost: 56
[t=0.584094s, 431760 KB] Expanded 722 state(s).
[t=0.584094s, 431760 KB] Reopened 26 state(s).
[t=0.584094s, 431760 KB] Evaluated 2542 state(s).
[t=0.584094s, 431760 KB] Evaluations: 2542
[t=0.584094s, 431760 KB] Generated 3479 state(s).
[t=0.584094s, 431760 KB] Dead ends: 0 state(s).
[t=0.584094s, 431760 KB] Expanded until last jump: 6 state(s).
[t=0.584094s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.584094s, 431760 KB] Evaluated until last jump: 23 state(s).
[t=0.584094s, 431760 KB] Generated until last jump: 27 state(s).
[t=0.584094s, 431760 KB] Number of registered states: 2542
[t=0.584094s, 431760 KB] Int hash set load factor: 2542/4096 = 0.620605
[t=0.584094s, 431760 KB] Int hash set resizes: 12
[t=0.584094s, 431760 KB] Search time: 0.557525s
[t=0.584094s, 431760 KB] Total time: 0.584094s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p145.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6073e-05s, 424928 KB] reading input...
[t=0.0021499s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259883s, 427536 KB] Building successor generator...done!
[t=0.0262672s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026291s, 427536 KB] time for successor generation creation: 0.000168253s
[t=0.02632s, 427536 KB] Variables: 25
[t=0.0263431s, 427536 KB] FactPairs: 182
[t=0.0263652s, 427536 KB] Bytes per state: 8
[t=0.0265625s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107951s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.108013s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.108039s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.108067s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.108091s, 430128 KB] pruning method: none
[t=0.126285s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.126334s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.126742s, 431100 KB] f = 147, 5 evaluated, 2 expanded
[t=0.126969s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.127s, 431100 KB] g=3, 6 evaluated, 3 expanded
[t=0.128113s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.128143s, 431100 KB] g=5, 12 evaluated, 6 expanded
[t=0.128899s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.128928s, 431100 KB] g=6, 16 evaluated, 8 expanded
[t=0.129498s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.129528s, 431100 KB] g=7, 19 evaluated, 9 expanded
[t=0.132267s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.1323s, 431100 KB] g=11, 34 evaluated, 13 expanded
[t=0.133413s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.133443s, 431100 KB] g=13, 40 evaluated, 15 expanded
[t=0.142051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.142088s, 431100 KB] g=17, 87 evaluated, 28 expanded
[t=0.151445s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.151481s, 431100 KB] g=23, 138 evaluated, 45 expanded
[t=0.30614s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.306183s, 431496 KB] g=24, 992 evaluated, 411 expanded, 88 reopened
[t=0.307678s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.307711s, 431496 KB] g=26, 1000 evaluated, 413 expanded, 88 reopened
[t=0.307923s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.307954s, 431496 KB] g=26, 1001 evaluated, 413 expanded, 88 reopened
[t=0.309248s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.309281s, 431496 KB] g=28, 1008 evaluated, 415 expanded, 88 reopened
[t=0.312639s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.312684s, 431496 KB] g=33, 1026 evaluated, 420 expanded, 88 reopened
[t=0.31379s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.313823s, 431496 KB] g=34, 1032 evaluated, 421 expanded, 88 reopened
[t=0.314395s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.314424s, 431496 KB] g=35, 1035 evaluated, 422 expanded, 88 reopened
[t=0.324173s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.324211s, 431496 KB] g=41, 1089 evaluated, 439 expanded, 88 reopened
[t=0.325683s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.325714s, 431496 KB] g=44, 1097 evaluated, 442 expanded, 88 reopened
[t=0.326831s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.326866s, 431496 KB] g=47, 1103 evaluated, 445 expanded, 88 reopened
[t=0.327264s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.327296s, 431496 KB] g=48, 1105 evaluated, 446 expanded, 88 reopened
[t=0.329844s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.329874s, 431496 KB] g=51, 1119 evaluated, 453 expanded, 88 reopened
[t=0.330631s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.330664s, 431496 KB] g=53, 1123 evaluated, 455 expanded, 88 reopened
[t=0.331067s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.331099s, 431496 KB] g=54, 1125 evaluated, 456 expanded, 88 reopened
[t=0.334382s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.334413s, 431496 KB] g=62, 1143 evaluated, 468 expanded, 88 reopened
[t=0.334447s, 431496 KB] Solution found!
[t=0.334475s, 431496 KB] Actual search time: 0.22638s
stack c e (1)
unstack d b (1)
put-down d (1)
unstack b i (1)
put-down b (1)
unstack c e (1)
stack c b (1)
unstack e f (1)
put-down e (1)
unstack i a (1)
stack i c (1)
pick-up f (1)
stack f d (1)
pick-up e (1)
stack e i (1)
unstack a h (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g k (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack k l (1)
stack k f (1)
unstack l j (1)
put-down l (1)
unstack k f (1)
stack k e (1)
unstack f d (1)
stack f a (1)
pick-up l (1)
stack l d (1)
pick-up j (1)
stack j l (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
stack l i (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
stack c l (1)
pick-up b (1)
stack b i (1)
unstack c l (1)
put-down c (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.3345s, 431496 KB] Plan length: 63 step(s).
[t=0.3345s, 431496 KB] Plan cost: 63
[t=0.3345s, 431496 KB] Expanded 470 state(s).
[t=0.3345s, 431496 KB] Reopened 88 state(s).
[t=0.3345s, 431496 KB] Evaluated 1144 state(s).
[t=0.3345s, 431496 KB] Evaluations: 1144
[t=0.3345s, 431496 KB] Generated 1992 state(s).
[t=0.3345s, 431496 KB] Dead ends: 0 state(s).
[t=0.3345s, 431496 KB] Expanded until last jump: 2 state(s).
[t=0.3345s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.3345s, 431496 KB] Evaluated until last jump: 5 state(s).
[t=0.3345s, 431496 KB] Generated until last jump: 5 state(s).
[t=0.3345s, 431496 KB] Number of registered states: 1144
[t=0.3345s, 431496 KB] Int hash set load factor: 1144/2048 = 0.558594
[t=0.3345s, 431496 KB] Int hash set resizes: 11
[t=0.3345s, 431496 KB] Search time: 0.307939s
[t=0.3345s, 431496 KB] Total time: 0.3345s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p146.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6763e-05s, 424928 KB] reading input...
[t=0.00220126s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260167s, 427536 KB] Building successor generator...done!
[t=0.0262915s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263154s, 427536 KB] time for successor generation creation: 0.000163358s
[t=0.0263443s, 427536 KB] Variables: 25
[t=0.0263679s, 427536 KB] FactPairs: 182
[t=0.0263909s, 427536 KB] Bytes per state: 8
[t=0.0265985s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990259s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0990767s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991031s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0991313s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0991557s, 430128 KB] pruning method: none
[t=0.111092s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.111144s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.118483s, 431100 KB] f = 145, 7 evaluated, 2 expanded
[t=0.118896s, 431100 KB] f = 146, 9 evaluated, 3 expanded
[t=0.119112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.119142s, 431100 KB] g=2, 10 evaluated, 4 expanded
[t=0.119894s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.119924s, 431100 KB] g=3, 14 evaluated, 5 expanded
[t=0.121219s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.121249s, 431100 KB] g=5, 21 evaluated, 7 expanded
[t=0.122367s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.122413s, 431100 KB] g=5, 27 evaluated, 9 expanded
[t=0.122811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.122841s, 431100 KB] g=6, 29 evaluated, 10 expanded
[t=0.123049s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.123078s, 431100 KB] g=6, 30 evaluated, 10 expanded
[t=0.125461s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.125492s, 431100 KB] g=9, 43 evaluated, 14 expanded
[t=0.126791s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.126824s, 431100 KB] g=9, 50 evaluated, 16 expanded
[t=0.127033s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.127062s, 431100 KB] g=9, 51 evaluated, 16 expanded
[t=0.130149s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.13018s, 431100 KB] g=12, 68 evaluated, 20 expanded
[t=0.13167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.131717s, 431100 KB] g=13, 76 evaluated, 22 expanded
[t=0.13302s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.133051s, 431100 KB] g=14, 83 evaluated, 25 expanded
[t=0.14396s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.143997s, 431100 KB] g=20, 143 evaluated, 40 expanded
[t=0.15455s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.154586s, 431232 KB] g=19, 201 evaluated, 58 expanded
[t=0.187899s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.187937s, 431232 KB] g=28, 384 evaluated, 107 expanded
[t=0.196674s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.196709s, 431232 KB] g=32, 432 evaluated, 117 expanded
[t=0.197833s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.197868s, 431364 KB] g=33, 438 evaluated, 119 expanded
[t=0.200997s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.201033s, 431364 KB] g=35, 455 evaluated, 124 expanded
[t=0.205617s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.205653s, 431364 KB] g=39, 480 evaluated, 133 expanded
[t=0.218852s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.218889s, 431364 KB] g=43, 552 evaluated, 154 expanded
[t=0.219649s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.21968s, 431364 KB] g=44, 556 evaluated, 155 expanded
[t=0.220982s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.221016s, 431364 KB] g=46, 563 evaluated, 157 expanded
[t=0.223789s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.223825s, 431364 KB] g=47, 578 evaluated, 162 expanded
[t=0.226775s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.226811s, 431364 KB] g=49, 594 evaluated, 167 expanded
[t=0.231039s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.231074s, 431364 KB] g=51, 617 evaluated, 176 expanded
[t=0.275012s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.27505s, 431496 KB] g=53, 859 evaluated, 247 expanded, 4 reopened
[t=0.275999s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.276039s, 431496 KB] g=55, 864 evaluated, 249 expanded, 4 reopened
[t=0.27698s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.277011s, 431496 KB] g=56, 869 evaluated, 250 expanded, 4 reopened
[t=0.277768s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.277801s, 431496 KB] g=57, 873 evaluated, 251 expanded, 4 reopened
[t=0.282377s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.282417s, 431496 KB] g=62, 898 evaluated, 258 expanded, 4 reopened
[t=0.290635s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.290672s, 431496 KB] g=62, 943 evaluated, 272 expanded, 4 reopened
[t=0.29107s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.2911s, 431496 KB] g=63, 945 evaluated, 273 expanded, 4 reopened
[t=0.29331s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.293341s, 431496 KB] g=66, 957 evaluated, 278 expanded, 4 reopened
[t=0.295384s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.295419s, 431496 KB] g=69, 968 evaluated, 282 expanded, 4 reopened
[t=0.295635s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.295668s, 431496 KB] g=70, 969 evaluated, 283 expanded, 4 reopened
[t=0.299699s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.299737s, 431628 KB] g=73, 991 evaluated, 289 expanded, 4 reopened
[t=0.299951s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.299981s, 431628 KB] g=73, 992 evaluated, 289 expanded, 4 reopened
[t=0.300374s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.300407s, 431628 KB] g=73, 994 evaluated, 289 expanded, 4 reopened
[t=0.302067s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.302101s, 431628 KB] g=75, 1003 evaluated, 291 expanded, 4 reopened
[t=0.303764s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.303796s, 431628 KB] g=77, 1012 evaluated, 293 expanded, 4 reopened
[t=0.304367s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.3044s, 431628 KB] g=77, 1015 evaluated, 293 expanded, 4 reopened
[t=0.305157s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.305193s, 431628 KB] g=78, 1019 evaluated, 294 expanded, 4 reopened
[t=0.30622s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.306253s, 431628 KB] g=80, 1024 evaluated, 296 expanded, 4 reopened
[t=0.307018s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.307052s, 431628 KB] g=81, 1028 evaluated, 297 expanded, 4 reopened
[t=0.312874s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.31291s, 431628 KB] g=78, 1060 evaluated, 308 expanded, 4 reopened
[t=0.316546s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.316583s, 431628 KB] g=80, 1080 evaluated, 314 expanded, 5 reopened
[t=0.318234s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.318276s, 431628 KB] g=82, 1089 evaluated, 316 expanded, 5 reopened
[t=0.321009s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.32104s, 431628 KB] g=84, 1104 evaluated, 321 expanded, 5 reopened
[t=0.321965s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.321995s, 431628 KB] g=85, 1109 evaluated, 322 expanded, 5 reopened
[t=0.322211s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.32224s, 431628 KB] g=86, 1110 evaluated, 323 expanded, 5 reopened
[t=0.323002s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.323032s, 431628 KB] g=88, 1114 evaluated, 325 expanded, 5 reopened
[t=0.323063s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.323087s, 431628 KB] g=89, 1115 evaluated, 326 expanded, 5 reopened
[t=0.323113s, 431628 KB] Solution found!
[t=0.323141s, 431628 KB] Actual search time: 0.223981s
put-down j (1)
unstack a c (1)
stack a j (1)
unstack l i (1)
stack l d (1)
unstack a j (1)
put-down a (1)
unstack i g (1)
stack i c (1)
pick-up a (1)
stack a i (1)
unstack g b (1)
put-down g (1)
pick-up j (1)
stack j a (1)
unstack b e (1)
stack b l (1)
unstack j a (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack a i (1)
stack a g (1)
unstack i c (1)
put-down i (1)
unstack a g (1)
stack a i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack a i (1)
stack a g (1)
pick-up i (1)
stack i a (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e i (1)
unstack k h (1)
stack k j (1)
unstack h f (1)
put-down h (1)
unstack k j (1)
stack k f (1)
unstack e i (1)
stack e j (1)
unstack i a (1)
stack i c (1)
pick-up h (1)
stack h e (1)
unstack a g (1)
stack a k (1)
unstack h e (1)
stack h g (1)
unstack e j (1)
stack e i (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k e (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
put-down b (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.323165s, 431628 KB] Plan length: 89 step(s).
[t=0.323165s, 431628 KB] Plan cost: 89
[t=0.323165s, 431628 KB] Expanded 327 state(s).
[t=0.323165s, 431628 KB] Reopened 5 state(s).
[t=0.323165s, 431628 KB] Evaluated 1115 state(s).
[t=0.323165s, 431628 KB] Evaluations: 1115
[t=0.323165s, 431628 KB] Generated 1491 state(s).
[t=0.323165s, 431628 KB] Dead ends: 0 state(s).
[t=0.323165s, 431628 KB] Expanded until last jump: 3 state(s).
[t=0.323165s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.323165s, 431628 KB] Evaluated until last jump: 9 state(s).
[t=0.323165s, 431628 KB] Generated until last jump: 10 state(s).
[t=0.323165s, 431628 KB] Number of registered states: 1115
[t=0.323165s, 431628 KB] Int hash set load factor: 1115/2048 = 0.544434
[t=0.323165s, 431628 KB] Int hash set resizes: 11
[t=0.323165s, 431628 KB] Search time: 0.296567s
[t=0.323165s, 431628 KB] Total time: 0.323165s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p147.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9528e-05s, 424928 KB] reading input...
[t=0.00213002s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260251s, 427536 KB] Building successor generator...done!
[t=0.0263102s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263337s, 427536 KB] time for successor generation creation: 0.000171284s
[t=0.0263618s, 427536 KB] Variables: 25
[t=0.0263847s, 427536 KB] FactPairs: 182
[t=0.0264065s, 427536 KB] Bytes per state: 8
[t=0.0266044s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992406s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.099294s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993194s, 430128 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0993464s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0993697s, 430128 KB] pruning method: none
[t=0.117888s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.11794s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.118773s, 431100 KB] g=2, 8 evaluated, 3 expanded
[t=0.119182s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.11921s, 431100 KB] g=2, 10 evaluated, 3 expanded
[t=0.119809s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.119838s, 431100 KB] g=3, 13 evaluated, 4 expanded
[t=0.122726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.122761s, 431100 KB] g=6, 28 evaluated, 9 expanded
[t=0.126206s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.126239s, 431100 KB] g=9, 46 evaluated, 14 expanded
[t=0.141919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.141963s, 431100 KB] g=15, 128 evaluated, 41 expanded
[t=0.146265s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.146338s, 431100 KB] g=18, 148 evaluated, 47 expanded
[t=0.15024s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.150273s, 431100 KB] g=20, 160 evaluated, 50 expanded
[t=0.151063s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.151098s, 431232 KB] g=21, 164 evaluated, 51 expanded
[t=0.161032s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.161081s, 431232 KB] g=21, 216 evaluated, 65 expanded
[t=0.161306s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.16134s, 431232 KB] g=22, 217 evaluated, 66 expanded
[t=0.16233s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.162363s, 431232 KB] g=23, 222 evaluated, 67 expanded
[t=0.163719s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.163748s, 431232 KB] g=24, 229 evaluated, 68 expanded
[t=0.224924s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.224968s, 431364 KB] g=27, 536 evaluated, 144 expanded
[t=0.26831s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.268353s, 431364 KB] g=37, 764 evaluated, 203 expanded
[t=0.285766s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.285807s, 431364 KB] g=36, 856 evaluated, 226 expanded
[t=0.287724s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.287754s, 431364 KB] g=39, 866 evaluated, 229 expanded
[t=0.288167s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.288196s, 431364 KB] g=40, 868 evaluated, 230 expanded
[t=0.288979s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.289011s, 431364 KB] g=41, 872 evaluated, 231 expanded
[t=0.289998s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.290031s, 431364 KB] g=42, 877 evaluated, 232 expanded
[t=0.29044s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.290475s, 431496 KB] g=43, 879 evaluated, 233 expanded
[t=0.291263s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.291292s, 431496 KB] g=44, 883 evaluated, 234 expanded
[t=0.291702s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.291734s, 431496 KB] g=45, 885 evaluated, 235 expanded
[t=0.292709s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.292742s, 431496 KB] g=47, 890 evaluated, 237 expanded
[t=0.293912s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.293944s, 431496 KB] g=49, 896 evaluated, 239 expanded
[t=0.301805s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.301847s, 431496 KB] g=55, 937 evaluated, 252 expanded
[t=0.30226s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.302293s, 431496 KB] g=55, 939 evaluated, 252 expanded
[t=0.311782s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.311818s, 431496 KB] g=58, 974 evaluated, 262 expanded
[t=0.313568s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.313602s, 431496 KB] g=60, 983 evaluated, 265 expanded
[t=0.317812s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.317845s, 431496 KB] g=65, 1005 evaluated, 274 expanded
[t=0.319867s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.3199s, 431496 KB] g=65, 1015 evaluated, 280 expanded
[t=0.320313s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.320342s, 431496 KB] g=67, 1017 evaluated, 282 expanded
[t=0.320752s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.320781s, 431496 KB] g=68, 1019 evaluated, 283 expanded
[t=0.321984s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.322022s, 431496 KB] g=70, 1025 evaluated, 288 expanded
[t=0.322052s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.322076s, 431496 KB] g=71, 1026 evaluated, 289 expanded
[t=0.322102s, 431496 KB] Solution found!
[t=0.322127s, 431496 KB] Actual search time: 0.222754s
put-down j (1)
unstack l h (1)
stack l a (1)
unstack g k (1)
stack g h (1)
unstack l a (1)
put-down l (1)
pick-up j (1)
stack j k (1)
unstack a e (1)
stack a g (1)
unstack j k (1)
stack j a (1)
unstack e b (1)
stack e k (1)
unstack j a (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
unstack a g (1)
stack a d (1)
unstack i c (1)
stack i j (1)
pick-up c (1)
stack c b (1)
unstack i j (1)
stack i c (1)
unstack a d (1)
stack a i (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack j e (1)
stack j d (1)
unstack e k (1)
stack e j (1)
unstack a i (1)
stack a h (1)
unstack k f (1)
stack k e (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up i (1)
stack i c (1)
unstack e j (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack b l (1)
stack b i (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.322151s, 431496 KB] Plan length: 71 step(s).
[t=0.322151s, 431496 KB] Plan cost: 71
[t=0.322151s, 431496 KB] Expanded 290 state(s).
[t=0.322151s, 431496 KB] Reopened 0 state(s).
[t=0.322151s, 431496 KB] Evaluated 1026 state(s).
[t=0.322151s, 431496 KB] Evaluations: 1026
[t=0.322151s, 431496 KB] Generated 1337 state(s).
[t=0.322151s, 431496 KB] Dead ends: 0 state(s).
[t=0.322151s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.322151s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.322151s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.322151s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.322151s, 431496 KB] Number of registered states: 1026
[t=0.322151s, 431496 KB] Int hash set load factor: 1026/2048 = 0.500977
[t=0.322151s, 431496 KB] Int hash set resizes: 11
[t=0.322151s, 431496 KB] Search time: 0.295547s
[t=0.322151s, 431496 KB] Total time: 0.322151s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p148.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6512e-05s, 424928 KB] reading input...
[t=0.00222698s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261032s, 427536 KB] Building successor generator...done!
[t=0.0263896s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264132s, 427536 KB] time for successor generation creation: 0.000163376s
[t=0.0264416s, 427536 KB] Variables: 25
[t=0.0264647s, 427536 KB] FactPairs: 182
[t=0.0264876s, 427536 KB] Bytes per state: 8
[t=0.026685s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991382s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0991914s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992171s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0992451s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0992694s, 430128 KB] pruning method: none
[t=0.11786s, 431100 KB] f = 146, 4 evaluated, 1 expanded
[t=0.118458s, 431100 KB] f = 147, 7 evaluated, 2 expanded
[t=0.119032s, 431100 KB] f = 148, 10 evaluated, 3 expanded
[t=0.119427s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.119457s, 431100 KB] g=2, 12 evaluated, 4 expanded
[t=0.120404s, 431100 KB] f = 149, 17 evaluated, 6 expanded
[t=0.12169s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.12172s, 431100 KB] g=4, 24 evaluated, 8 expanded
[t=0.125152s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.125184s, 431100 KB] g=7, 43 evaluated, 14 expanded
[t=0.131293s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.131329s, 431100 KB] g=9, 77 evaluated, 25 expanded
[t=0.135808s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.135842s, 431100 KB] g=11, 102 evaluated, 30 expanded
[t=0.136957s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.136991s, 431100 KB] g=12, 108 evaluated, 31 expanded
[t=0.137732s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.137765s, 431100 KB] g=13, 112 evaluated, 32 expanded
[t=0.142989s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.143022s, 431100 KB] g=17, 141 evaluated, 38 expanded
[t=0.144322s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.144353s, 431100 KB] g=18, 148 evaluated, 39 expanded
[t=0.144562s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.144593s, 431100 KB] g=18, 149 evaluated, 39 expanded
[t=0.14587s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.145901s, 431100 KB] g=20, 156 evaluated, 41 expanded
[t=0.147004s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.147045s, 431100 KB] g=21, 162 evaluated, 42 expanded
[t=0.148151s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.148187s, 431100 KB] g=22, 168 evaluated, 43 expanded
[t=0.150544s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.150576s, 431232 KB] g=24, 181 evaluated, 46 expanded
[t=0.150786s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.150815s, 431232 KB] g=24, 182 evaluated, 46 expanded
[t=0.152823s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.152854s, 431232 KB] g=26, 193 evaluated, 49 expanded
[t=0.157013s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.157045s, 431232 KB] g=27, 216 evaluated, 55 expanded
[t=0.15851s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.158542s, 431232 KB] g=29, 224 evaluated, 57 expanded
[t=0.159471s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.159501s, 431232 KB] g=30, 229 evaluated, 58 expanded
[t=0.160075s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.160104s, 431232 KB] g=31, 232 evaluated, 59 expanded
[t=0.160327s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.160356s, 431232 KB] g=31, 233 evaluated, 59 expanded
[t=0.163265s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163295s, 431232 KB] g=33, 249 evaluated, 63 expanded
[t=0.163865s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.163897s, 431232 KB] g=34, 252 evaluated, 64 expanded
[t=0.168277s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.16831s, 431232 KB] g=37, 276 evaluated, 71 expanded
[t=0.169778s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.16981s, 431232 KB] g=38, 284 evaluated, 73 expanded
[t=0.170382s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.170411s, 431232 KB] g=39, 287 evaluated, 74 expanded
[t=0.171339s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.171369s, 431232 KB] g=40, 292 evaluated, 75 expanded
[t=0.172853s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.17289s, 431232 KB] g=40, 300 evaluated, 78 expanded
[t=0.173108s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.173137s, 431232 KB] g=41, 301 evaluated, 79 expanded
[t=0.173528s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.173557s, 431232 KB] g=42, 303 evaluated, 80 expanded
[t=0.17395s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.173983s, 431232 KB] g=43, 305 evaluated, 81 expanded
[t=0.174016s, 431232 KB] Solution found!
[t=0.174042s, 431232 KB] Actual search time: 0.0747695s
unstack e j (1)
put-down e (1)
unstack g b (1)
stack g j (1)
unstack b k (1)
stack b e (1)
unstack k h (1)
put-down k (1)
unstack g j (1)
put-down g (1)
unstack j a (1)
stack j k (1)
unstack h l (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack b e (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack j k (1)
put-down j (1)
pick-up k (1)
stack k j (1)
unstack f d (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.174068s, 431232 KB] Plan length: 44 step(s).
[t=0.174068s, 431232 KB] Plan cost: 44
[t=0.174068s, 431232 KB] Expanded 83 state(s).
[t=0.174068s, 431232 KB] Reopened 0 state(s).
[t=0.174068s, 431232 KB] Evaluated 306 state(s).
[t=0.174068s, 431232 KB] Evaluations: 306
[t=0.174068s, 431232 KB] Generated 386 state(s).
[t=0.174068s, 431232 KB] Dead ends: 0 state(s).
[t=0.174068s, 431232 KB] Expanded until last jump: 6 state(s).
[t=0.174068s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.174068s, 431232 KB] Evaluated until last jump: 17 state(s).
[t=0.174068s, 431232 KB] Generated until last jump: 21 state(s).
[t=0.174068s, 431232 KB] Number of registered states: 306
[t=0.174068s, 431232 KB] Int hash set load factor: 306/512 = 0.597656
[t=0.174068s, 431232 KB] Int hash set resizes: 9
[t=0.174068s, 431232 KB] Search time: 0.147383s
[t=0.174068s, 431232 KB] Total time: 0.174068s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p149.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.7129e-05s, 424928 KB] reading input...
[t=0.00214564s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259672s, 427536 KB] Building successor generator...done!
[t=0.0262477s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262717s, 427536 KB] time for successor generation creation: 0.000166584s
[t=0.0263007s, 427536 KB] Variables: 25
[t=0.0263236s, 427536 KB] FactPairs: 182
[t=0.0263458s, 427536 KB] Bytes per state: 8
[t=0.0265423s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0994382s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0994904s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995167s, 430128 KB] f = 141, 1 evaluated, 0 expanded
[t=0.0995442s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0995691s, 430128 KB] pruning method: none
[t=0.11835s, 431100 KB] f = 145, 5 evaluated, 1 expanded
[t=0.118775s, 431100 KB] f = 146, 7 evaluated, 2 expanded
[t=0.119177s, 431100 KB] f = 147, 9 evaluated, 3 expanded
[t=0.120508s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.12054s, 431100 KB] g=5, 16 evaluated, 6 expanded
[t=0.122388s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.122419s, 431100 KB] g=7, 26 evaluated, 8 expanded
[t=0.122997s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.123026s, 431100 KB] g=8, 29 evaluated, 9 expanded
[t=0.123236s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.123274s, 431100 KB] g=8, 30 evaluated, 9 expanded
[t=0.123671s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.1237s, 431100 KB] g=9, 32 evaluated, 10 expanded
[t=0.127001s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.127039s, 431100 KB] g=11, 50 evaluated, 14 expanded
[t=0.133091s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.133123s, 431100 KB] g=14, 83 evaluated, 24 expanded
[t=0.138601s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.138636s, 431100 KB] g=18, 113 evaluated, 31 expanded
[t=0.141391s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.141426s, 431100 KB] g=21, 128 evaluated, 34 expanded
[t=0.144385s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.144419s, 431100 KB] g=23, 144 evaluated, 37 expanded
[t=0.145174s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.14521s, 431232 KB] g=24, 148 evaluated, 38 expanded
[t=0.15158s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.151613s, 431232 KB] g=29, 183 evaluated, 47 expanded
[t=0.152931s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.152966s, 431232 KB] g=31, 190 evaluated, 49 expanded
[t=0.187136s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.187173s, 431232 KB] g=33, 378 evaluated, 90 expanded
[t=0.189386s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.189419s, 431232 KB] g=36, 390 evaluated, 93 expanded
[t=0.191432s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.191468s, 431364 KB] g=38, 401 evaluated, 95 expanded
[t=0.192962s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.192994s, 431364 KB] g=40, 409 evaluated, 97 expanded
[t=0.198297s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.198334s, 431364 KB] g=43, 438 evaluated, 103 expanded
[t=0.199096s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.199126s, 431364 KB] g=44, 442 evaluated, 104 expanded
[t=0.202613s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.202651s, 431364 KB] g=47, 461 evaluated, 109 expanded
[t=0.227061s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.227098s, 431364 KB] g=47, 595 evaluated, 145 expanded
[t=0.255991s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.256028s, 431496 KB] g=54, 754 evaluated, 192 expanded
[t=0.256243s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.256271s, 431496 KB] g=54, 755 evaluated, 192 expanded
[t=0.260855s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.260891s, 431496 KB] g=58, 780 evaluated, 199 expanded
[t=0.261108s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.261137s, 431496 KB] g=59, 781 evaluated, 200 expanded
[t=0.264436s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.264472s, 431496 KB] g=62, 799 evaluated, 205 expanded
[t=0.266316s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.266347s, 431496 KB] g=63, 809 evaluated, 209 expanded
[t=0.268563s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.268598s, 431496 KB] g=64, 821 evaluated, 212 expanded
[t=0.269174s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.269203s, 431496 KB] g=65, 824 evaluated, 213 expanded
[t=0.269594s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.269623s, 431496 KB] g=65, 826 evaluated, 213 expanded
[t=0.27399s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.274024s, 431496 KB] g=68, 850 evaluated, 219 expanded
[t=0.274596s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.274627s, 431496 KB] g=68, 853 evaluated, 219 expanded
[t=0.275746s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.275779s, 431496 KB] g=69, 859 evaluated, 221 expanded
[t=0.277619s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.277654s, 431496 KB] g=71, 869 evaluated, 223 expanded
[t=0.277864s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.277892s, 431496 KB] g=71, 870 evaluated, 223 expanded
[t=0.280283s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.280326s, 431496 KB] g=73, 883 evaluated, 227 expanded
[t=0.284872s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.284906s, 431496 KB] g=77, 908 evaluated, 234 expanded
[t=0.285303s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.285335s, 431496 KB] g=78, 910 evaluated, 235 expanded
[t=0.286268s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.286298s, 431496 KB] g=79, 915 evaluated, 236 expanded
[t=0.286512s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.286546s, 431628 KB] g=80, 916 evaluated, 237 expanded
[t=0.287496s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.287526s, 431628 KB] g=83, 922 evaluated, 241 expanded
[t=0.287553s, 431628 KB] Solution found!
[t=0.28758s, 431628 KB] Actual search time: 0.188008s
stack l f (1)
unstack g k (1)
put-down g (1)
unstack k b (1)
stack k g (1)
unstack l f (1)
put-down l (1)
unstack k g (1)
stack k f (1)
unstack j a (1)
stack j k (1)
unstack b e (1)
stack b l (1)
unstack e d (1)
stack e b (1)
unstack d i (1)
put-down d (1)
pick-up g (1)
stack g i (1)
unstack j k (1)
stack j a (1)
unstack g i (1)
stack g k (1)
unstack i c (1)
put-down i (1)
unstack e b (1)
stack e j (1)
pick-up c (1)
stack c d (1)
unstack e j (1)
stack e i (1)
unstack j a (1)
stack j e (1)
unstack c d (1)
stack c b (1)
unstack a h (1)
put-down a (1)
pick-up h (1)
stack h g (1)
pick-up a (1)
stack a c (1)
unstack h g (1)
stack h a (1)
unstack g k (1)
stack g h (1)
unstack k f (1)
stack k j (1)
unstack g h (1)
put-down g (1)
pick-up f (1)
stack f d (1)
unstack h a (1)
stack h g (1)
unstack f d (1)
stack f k (1)
unstack a c (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
put-down j (1)
unstack e i (1)
stack e k (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.287606s, 431628 KB] Plan length: 83 step(s).
[t=0.287606s, 431628 KB] Plan cost: 83
[t=0.287606s, 431628 KB] Expanded 242 state(s).
[t=0.287606s, 431628 KB] Reopened 0 state(s).
[t=0.287606s, 431628 KB] Evaluated 922 state(s).
[t=0.287606s, 431628 KB] Evaluations: 922
[t=0.287606s, 431628 KB] Generated 1186 state(s).
[t=0.287606s, 431628 KB] Dead ends: 0 state(s).
[t=0.287606s, 431628 KB] Expanded until last jump: 3 state(s).
[t=0.287606s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.287606s, 431628 KB] Evaluated until last jump: 9 state(s).
[t=0.287606s, 431628 KB] Generated until last jump: 10 state(s).
[t=0.287606s, 431628 KB] Number of registered states: 922
[t=0.287606s, 431628 KB] Int hash set load factor: 922/1024 = 0.900391
[t=0.287606s, 431628 KB] Int hash set resizes: 10
[t=0.287606s, 431628 KB] Search time: 0.261064s
[t=0.287606s, 431628 KB] Total time: 0.287606s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p150.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6601e-05s, 424928 KB] reading input...
[t=0.00211745s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025876s, 427536 KB] Building successor generator...done!
[t=0.0261738s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261986s, 427536 KB] time for successor generation creation: 0.000182038s
[t=0.0262289s, 427536 KB] Variables: 25
[t=0.0262526s, 427536 KB] FactPairs: 182
[t=0.0262757s, 427536 KB] Bytes per state: 8
[t=0.026478s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990748s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0991275s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.099153s, 430128 KB] f = 116, 1 evaluated, 0 expanded
[t=0.0991799s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.0992127s, 430128 KB] pruning method: none
[t=0.118083s, 431100 KB] f = 117, 6 evaluated, 1 expanded
[t=0.118343s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.118375s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.118604s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.118635s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.12181s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.121844s, 431100 KB] g=4, 25 evaluated, 6 expanded
[t=0.122611s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.12264s, 431100 KB] g=5, 29 evaluated, 7 expanded
[t=0.124138s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.124169s, 431100 KB] g=6, 37 evaluated, 8 expanded
[t=0.125688s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.12572s, 431100 KB] g=8, 45 evaluated, 10 expanded
[t=0.126115s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.126147s, 431100 KB] g=8, 47 evaluated, 10 expanded
[t=0.128567s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.128598s, 431100 KB] g=9, 60 evaluated, 13 expanded
[t=0.13558s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.135618s, 431100 KB] g=13, 97 evaluated, 22 expanded
[t=0.136928s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.136958s, 431100 KB] g=14, 104 evaluated, 23 expanded
[t=0.139689s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.139724s, 431100 KB] g=15, 118 evaluated, 27 expanded
[t=0.14142s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.141453s, 431100 KB] g=17, 127 evaluated, 29 expanded
[t=0.14187s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.141902s, 431100 KB] g=18, 129 evaluated, 30 expanded
[t=0.142853s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.142885s, 431100 KB] g=19, 134 evaluated, 31 expanded
[t=0.143104s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.143133s, 431100 KB] g=20, 135 evaluated, 32 expanded
[t=0.144639s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.144676s, 431100 KB] g=22, 143 evaluated, 35 expanded
[t=0.145642s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.145677s, 431100 KB] g=23, 148 evaluated, 37 expanded
[t=0.149783s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.149817s, 431232 KB] g=25, 170 evaluated, 45 expanded
[t=0.155401s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.155434s, 431232 KB] g=29, 200 evaluated, 54 expanded
[t=0.156018s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.156051s, 431232 KB] g=29, 203 evaluated, 54 expanded
[t=0.157572s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.157604s, 431232 KB] g=31, 211 evaluated, 57 expanded
[t=0.158188s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.158219s, 431232 KB] g=31, 214 evaluated, 57 expanded
[t=0.158622s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.158651s, 431232 KB] g=32, 216 evaluated, 58 expanded
[t=0.160706s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.160738s, 431232 KB] g=34, 227 evaluated, 60 expanded
[t=0.163194s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163232s, 431232 KB] g=37, 240 evaluated, 64 expanded
[t=0.163819s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.163853s, 431232 KB] g=38, 243 evaluated, 65 expanded
[t=0.170589s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.170624s, 431232 KB] g=39, 279 evaluated, 81 expanded
[t=0.17159s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.171622s, 431232 KB] g=40, 284 evaluated, 82 expanded
[t=0.173331s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.173366s, 431232 KB] g=44, 293 evaluated, 86 expanded
[t=0.177868s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.177901s, 431232 KB] g=42, 317 evaluated, 96 expanded
[t=0.178491s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.178524s, 431232 KB] g=43, 320 evaluated, 97 expanded
[t=0.179294s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.17933s, 431232 KB] g=45, 324 evaluated, 99 expanded
[t=0.17973s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.179759s, 431232 KB] g=46, 326 evaluated, 100 expanded
[t=0.179788s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.179811s, 431232 KB] g=47, 327 evaluated, 101 expanded
[t=0.179836s, 431232 KB] Solution found!
[t=0.179861s, 431232 KB] Actual search time: 0.0806439s
put-down k (1)
unstack b g (1)
stack b l (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack e i (1)
put-down e (1)
unstack i f (1)
stack i c (1)
pick-up e (1)
stack e i (1)
pick-up k (1)
stack k b (1)
unstack f a (1)
stack f k (1)
pick-up a (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack e i (1)
put-down e (1)
unstack k b (1)
stack k f (1)
unstack i c (1)
put-down i (1)
pick-up e (1)
stack e k (1)
unstack c d (1)
put-down c (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.179885s, 431232 KB] Plan length: 47 step(s).
[t=0.179885s, 431232 KB] Plan cost: 47
[t=0.179885s, 431232 KB] Expanded 102 state(s).
[t=0.179885s, 431232 KB] Reopened 0 state(s).
[t=0.179885s, 431232 KB] Evaluated 327 state(s).
[t=0.179885s, 431232 KB] Evaluations: 327
[t=0.179885s, 431232 KB] Generated 437 state(s).
[t=0.179885s, 431232 KB] Dead ends: 0 state(s).
[t=0.179885s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.179885s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.179885s, 431232 KB] Evaluated until last jump: 6 state(s).
[t=0.179885s, 431232 KB] Generated until last jump: 5 state(s).
[t=0.179885s, 431232 KB] Number of registered states: 327
[t=0.179885s, 431232 KB] Int hash set load factor: 327/512 = 0.638672
[t=0.179885s, 431232 KB] Int hash set resizes: 9
[t=0.179885s, 431232 KB] Search time: 0.153408s
[t=0.179885s, 431232 KB] Total time: 0.179885s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p151.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8104e-05s, 424928 KB] reading input...
[t=0.00213671s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259293s, 427536 KB] Building successor generator...done!
[t=0.0262097s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262334s, 427536 KB] time for successor generation creation: 0.000166252s
[t=0.0262617s, 427536 KB] Variables: 25
[t=0.0262845s, 427536 KB] FactPairs: 182
[t=0.0263069s, 427536 KB] Bytes per state: 8
[t=0.0265022s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098205s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0982575s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982834s, 430128 KB] f = 125, 1 evaluated, 0 expanded
[t=0.0983112s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0983352s, 430128 KB] pruning method: none
[t=0.116897s, 431100 KB] f = 132, 5 evaluated, 1 expanded
[t=0.117511s, 431100 KB] f = 139, 8 evaluated, 2 expanded
[t=0.119161s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.119192s, 431100 KB] g=2, 17 evaluated, 5 expanded
[t=0.121898s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.121931s, 431100 KB] g=5, 32 evaluated, 9 expanded
[t=0.125918s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.12595s, 431100 KB] g=6, 54 evaluated, 15 expanded
[t=0.136557s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.136593s, 431100 KB] g=13, 113 evaluated, 33 expanded
[t=0.14768s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.147716s, 431100 KB] g=22, 174 evaluated, 50 expanded
[t=0.148843s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.148878s, 431100 KB] g=24, 180 evaluated, 54 expanded
[t=0.151087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.15112s, 431232 KB] g=25, 192 evaluated, 58 expanded
[t=0.151695s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.151725s, 431232 KB] g=26, 195 evaluated, 59 expanded
[t=0.156446s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.15648s, 431232 KB] g=28, 221 evaluated, 67 expanded
[t=0.157239s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.15727s, 431232 KB] g=29, 225 evaluated, 68 expanded
[t=0.158927s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.158959s, 431232 KB] g=30, 234 evaluated, 71 expanded
[t=0.15935s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.159383s, 431232 KB] g=30, 236 evaluated, 71 expanded
[t=0.161215s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.161249s, 431232 KB] g=32, 246 evaluated, 74 expanded
[t=0.16289s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.162923s, 431232 KB] g=34, 255 evaluated, 76 expanded
[t=0.164237s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.164268s, 431232 KB] g=36, 262 evaluated, 78 expanded
[t=0.164481s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.16451s, 431232 KB] g=37, 263 evaluated, 79 expanded
[t=0.16959s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.169626s, 431232 KB] g=34, 291 evaluated, 87 expanded
[t=0.170015s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.170044s, 431232 KB] g=34, 293 evaluated, 87 expanded
[t=0.179871s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.179909s, 431232 KB] g=41, 348 evaluated, 102 expanded
[t=0.185841s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.185878s, 431232 KB] g=45, 381 evaluated, 110 expanded
[t=0.19936s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.199398s, 431364 KB] g=50, 456 evaluated, 129 expanded
[t=0.200875s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.200906s, 431364 KB] g=52, 464 evaluated, 131 expanded
[t=0.213264s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.213301s, 431364 KB] g=57, 532 evaluated, 151 expanded, 3 reopened
[t=0.214586s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.214619s, 431364 KB] g=59, 539 evaluated, 153 expanded, 3 reopened
[t=0.215188s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.215218s, 431364 KB] g=60, 542 evaluated, 154 expanded, 3 reopened
[t=0.216143s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.216173s, 431364 KB] g=61, 547 evaluated, 155 expanded, 3 reopened
[t=0.217119s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.217153s, 431364 KB] g=63, 552 evaluated, 157 expanded, 3 reopened
[t=0.221146s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.221179s, 431364 KB] g=63, 574 evaluated, 166 expanded, 3 reopened
[t=0.222475s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.222506s, 431364 KB] g=66, 581 evaluated, 169 expanded, 3 reopened
[t=0.223792s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.223823s, 431364 KB] g=69, 588 evaluated, 172 expanded, 3 reopened
[t=0.22476s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.22479s, 431364 KB] g=69, 593 evaluated, 174 expanded, 3 reopened
[t=0.231673s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.231708s, 431364 KB] g=71, 631 evaluated, 188 expanded, 3 reopened
[t=0.238418s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.238456s, 431496 KB] g=75, 668 evaluated, 205 expanded, 3 reopened
[t=0.240293s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.240326s, 431496 KB] g=77, 678 evaluated, 209 expanded, 3 reopened
[t=0.240719s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.240751s, 431496 KB] g=78, 680 evaluated, 210 expanded, 3 reopened
[t=0.240972s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.241002s, 431496 KB] g=79, 681 evaluated, 211 expanded, 3 reopened
[t=0.24339s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.243429s, 431496 KB] g=81, 694 evaluated, 218 expanded, 3 reopened
[t=0.24346s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.243484s, 431496 KB] g=82, 695 evaluated, 219 expanded, 3 reopened
[t=0.24351s, 431496 KB] Solution found!
[t=0.243536s, 431496 KB] Actual search time: 0.145196s
unstack j a (1)
put-down j (1)
unstack h k (1)
stack h a (1)
pick-up l (1)
stack l k (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b d (1)
unstack l k (1)
stack l b (1)
unstack i c (1)
stack i h (1)
unstack l b (1)
put-down l (1)
pick-up c (1)
stack c b (1)
pick-up k (1)
stack k l (1)
unstack i h (1)
put-down i (1)
unstack h a (1)
stack h i (1)
unstack a g (1)
stack a k (1)
unstack h i (1)
stack h a (1)
unstack g e (1)
stack g h (1)
unstack e f (1)
stack e i (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up f (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
put-down b (1)
pick-up c (1)
stack c b (1)
unstack f e (1)
stack f a (1)
unstack e i (1)
stack e d (1)
pick-up i (1)
stack i c (1)
unstack k l (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack d j (1)
stack d i (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
stack i d (1)
unstack c b (1)
put-down c (1)
pick-up l (1)
stack l c (1)
unstack i d (1)
put-down i (1)
pick-up b (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.24356s, 431496 KB] Plan length: 82 step(s).
[t=0.24356s, 431496 KB] Plan cost: 82
[t=0.24356s, 431496 KB] Expanded 220 state(s).
[t=0.24356s, 431496 KB] Reopened 3 state(s).
[t=0.24356s, 431496 KB] Evaluated 695 state(s).
[t=0.24356s, 431496 KB] Evaluations: 695
[t=0.24356s, 431496 KB] Generated 940 state(s).
[t=0.24356s, 431496 KB] Dead ends: 0 state(s).
[t=0.24356s, 431496 KB] Expanded until last jump: 2 state(s).
[t=0.24356s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.24356s, 431496 KB] Evaluated until last jump: 8 state(s).
[t=0.24356s, 431496 KB] Generated until last jump: 8 state(s).
[t=0.24356s, 431496 KB] Number of registered states: 695
[t=0.24356s, 431496 KB] Int hash set load factor: 695/1024 = 0.678711
[t=0.24356s, 431496 KB] Int hash set resizes: 10
[t=0.24356s, 431496 KB] Search time: 0.217058s
[t=0.24356s, 431496 KB] Total time: 0.24356s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p152.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6426e-05s, 424928 KB] reading input...
[t=0.00214813s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025872s, 427536 KB] Building successor generator...done!
[t=0.0261534s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261772s, 427536 KB] time for successor generation creation: 0.000170761s
[t=0.0262066s, 427536 KB] Variables: 25
[t=0.0262297s, 427536 KB] FactPairs: 182
[t=0.026252s, 427536 KB] Bytes per state: 8
[t=0.0264468s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0989088s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.0989612s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989873s, 430128 KB] f = 99, 1 evaluated, 0 expanded
[t=0.0990144s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.0990388s, 430128 KB] pruning method: none
[t=0.11729s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.117341s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117937s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.117968s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.121529s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.121563s, 431100 KB] g=8, 25 evaluated, 10 expanded
[t=0.121778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.121819s, 431100 KB] g=8, 26 evaluated, 10 expanded
[t=0.12333s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.12336s, 431100 KB] g=11, 34 evaluated, 13 expanded
[t=0.123579s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.123608s, 431100 KB] g=12, 35 evaluated, 14 expanded
[t=0.124755s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.124787s, 431100 KB] g=13, 41 evaluated, 16 expanded
[t=0.12666s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.126691s, 431100 KB] g=14, 51 evaluated, 19 expanded
[t=0.127824s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.127854s, 431100 KB] g=15, 57 evaluated, 20 expanded
[t=0.128257s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.128301s, 431100 KB] g=16, 59 evaluated, 21 expanded
[t=0.12889s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.12892s, 431100 KB] g=17, 62 evaluated, 22 expanded
[t=0.129693s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.129726s, 431100 KB] g=18, 66 evaluated, 23 expanded
[t=0.13252s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.132556s, 431100 KB] g=17, 81 evaluated, 28 expanded
[t=0.134792s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.134826s, 431100 KB] g=20, 93 evaluated, 32 expanded
[t=0.135039s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.135069s, 431100 KB] g=20, 94 evaluated, 32 expanded
[t=0.13565s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.135682s, 431100 KB] g=21, 97 evaluated, 33 expanded
[t=0.13774s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.137775s, 431100 KB] g=25, 108 evaluated, 37 expanded
[t=0.139825s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.139855s, 431100 KB] g=25, 119 evaluated, 40 expanded
[t=0.141546s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.141579s, 431100 KB] g=27, 128 evaluated, 43 expanded
[t=0.144929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.144962s, 431100 KB] g=28, 146 evaluated, 50 expanded
[t=0.145919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.145953s, 431100 KB] g=30, 151 evaluated, 52 expanded
[t=0.146539s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.146569s, 431100 KB] g=32, 154 evaluated, 54 expanded
[t=0.147348s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.147378s, 431100 KB] g=34, 159 evaluated, 58 expanded
[t=0.147406s, 431100 KB] Solution found!
[t=0.147432s, 431100 KB] Actual search time: 0.0483895s
unstack f a (1)
stack f k (1)
unstack b e (1)
stack b f (1)
unstack e h (1)
stack e b (1)
unstack a j (1)
stack a h (1)
unstack e b (1)
stack e j (1)
unstack b f (1)
put-down b (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.147457s, 431100 KB] Plan length: 34 step(s).
[t=0.147457s, 431100 KB] Plan cost: 34
[t=0.147457s, 431100 KB] Expanded 59 state(s).
[t=0.147457s, 431100 KB] Reopened 0 state(s).
[t=0.147457s, 431100 KB] Evaluated 159 state(s).
[t=0.147457s, 431100 KB] Evaluations: 159
[t=0.147457s, 431100 KB] Generated 217 state(s).
[t=0.147457s, 431100 KB] Dead ends: 0 state(s).
[t=0.147457s, 431100 KB] Expanded until last jump: 0 state(s).
[t=0.147457s, 431100 KB] Reopened until last jump: 0 state(s).
[t=0.147457s, 431100 KB] Evaluated until last jump: 1 state(s).
[t=0.147457s, 431100 KB] Generated until last jump: 0 state(s).
[t=0.147457s, 431100 KB] Number of registered states: 159
[t=0.147457s, 431100 KB] Int hash set load factor: 159/256 = 0.621094
[t=0.147457s, 431100 KB] Int hash set resizes: 8
[t=0.147457s, 431100 KB] Search time: 0.121011s
[t=0.147457s, 431100 KB] Total time: 0.147457s
Solution found.
Peak memory: 431100 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p153.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6487e-05s, 424928 KB] reading input...
[t=0.00222664s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259369s, 427536 KB] Building successor generator...done!
[t=0.0262151s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262382s, 427536 KB] time for successor generation creation: 0.000167335s
[t=0.0262667s, 427536 KB] Variables: 25
[t=0.0262896s, 427536 KB] FactPairs: 182
[t=0.0263118s, 427536 KB] Bytes per state: 8
[t=0.0265095s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984272s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.0984922s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985183s, 430128 KB] f = 122, 1 evaluated, 0 expanded
[t=0.0985456s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.0985745s, 430128 KB] pruning method: none
[t=0.117183s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.117233s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.117631s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.117661s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.117889s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.11792s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118853s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.118884s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.119631s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.119661s, 431100 KB] g=4, 17 evaluated, 4 expanded
[t=0.120586s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.120626s, 431100 KB] g=5, 22 evaluated, 5 expanded
[t=0.120841s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.12087s, 431100 KB] g=6, 23 evaluated, 6 expanded
[t=0.125795s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.125835s, 431100 KB] g=8, 50 evaluated, 11 expanded
[t=0.126949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.126979s, 431100 KB] g=9, 56 evaluated, 12 expanded
[t=0.128814s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.128848s, 431100 KB] g=10, 66 evaluated, 15 expanded
[t=0.13305s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.133088s, 431100 KB] g=14, 89 evaluated, 20 expanded
[t=0.134209s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.134244s, 431100 KB] g=15, 95 evaluated, 21 expanded
[t=0.160622s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.16066s, 431232 KB] g=20, 242 evaluated, 55 expanded
[t=0.163783s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.163817s, 431232 KB] g=23, 259 evaluated, 60 expanded
[t=0.168511s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.168545s, 431232 KB] g=24, 285 evaluated, 67 expanded
[t=0.168942s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.168972s, 431232 KB] g=25, 287 evaluated, 68 expanded
[t=0.170816s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.170851s, 431232 KB] g=27, 297 evaluated, 71 expanded
[t=0.171424s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.171453s, 431232 KB] g=28, 300 evaluated, 72 expanded
[t=0.1722s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.172233s, 431232 KB] g=29, 304 evaluated, 73 expanded
[t=0.176203s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.176236s, 431232 KB] g=33, 326 evaluated, 79 expanded
[t=0.176451s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.176481s, 431232 KB] g=34, 327 evaluated, 80 expanded
[t=0.176869s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.176906s, 431232 KB] g=34, 329 evaluated, 80 expanded
[t=0.178563s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.178597s, 431232 KB] g=36, 338 evaluated, 82 expanded
[t=0.180233s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.180267s, 431232 KB] g=37, 347 evaluated, 84 expanded
[t=0.181959s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.181997s, 431232 KB] g=40, 356 evaluated, 87 expanded
[t=0.185208s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.185242s, 431232 KB] g=44, 373 evaluated, 94 expanded
[t=0.19606s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.1961s, 431364 KB] g=48, 433 evaluated, 116 expanded
[t=0.196495s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.196524s, 431364 KB] g=49, 435 evaluated, 117 expanded
[t=0.196918s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.196947s, 431364 KB] g=50, 437 evaluated, 118 expanded
[t=0.196978s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.197002s, 431364 KB] g=51, 438 evaluated, 119 expanded
[t=0.197028s, 431364 KB] Solution found!
[t=0.197055s, 431364 KB] Actual search time: 0.0984756s
stack e i (1)
unstack c k (1)
put-down c (1)
unstack k a (1)
put-down k (1)
unstack g b (1)
stack g h (1)
pick-up c (1)
stack c b (1)
unstack a f (1)
stack a k (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack f j (1)
stack f e (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack e i (1)
stack e c (1)
unstack k j (1)
stack k f (1)
unstack e c (1)
stack e k (1)
unstack j l (1)
stack j i (1)
unstack c b (1)
put-down c (1)
unstack j i (1)
stack j e (1)
pick-up l (1)
stack l j (1)
unstack b d (1)
stack b i (1)
unstack l j (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.19708s, 431364 KB] Plan length: 51 step(s).
[t=0.19708s, 431364 KB] Plan cost: 51
[t=0.19708s, 431364 KB] Expanded 120 state(s).
[t=0.19708s, 431364 KB] Reopened 0 state(s).
[t=0.19708s, 431364 KB] Evaluated 438 state(s).
[t=0.19708s, 431364 KB] Evaluations: 438
[t=0.19708s, 431364 KB] Generated 563 state(s).
[t=0.19708s, 431364 KB] Dead ends: 0 state(s).
[t=0.19708s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.19708s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.19708s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.19708s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.19708s, 431364 KB] Number of registered states: 438
[t=0.19708s, 431364 KB] Int hash set load factor: 438/512 = 0.855469
[t=0.19708s, 431364 KB] Int hash set resizes: 9
[t=0.19708s, 431364 KB] Search time: 0.170571s
[t=0.19708s, 431364 KB] Total time: 0.19708s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p154.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9988e-05s, 424928 KB] reading input...
[t=0.00213309s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256595s, 427536 KB] Building successor generator...done!
[t=0.0259393s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259623s, 427536 KB] time for successor generation creation: 0.000169651s
[t=0.0259901s, 427536 KB] Variables: 25
[t=0.026013s, 427536 KB] FactPairs: 182
[t=0.0260351s, 427536 KB] Bytes per state: 8
[t=0.0262271s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983341s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0983858s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984213s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.09845s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0984743s, 430128 KB] pruning method: none
[t=0.117159s, 431100 KB] f = 145, 5 evaluated, 1 expanded
[t=0.117778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117809s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118217s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.118247s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.118652s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.118681s, 431100 KB] g=3, 12 evaluated, 3 expanded
[t=0.122302s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.122334s, 431100 KB] g=8, 31 evaluated, 8 expanded
[t=0.122552s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.122581s, 431100 KB] g=8, 32 evaluated, 8 expanded
[t=0.12674s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.126772s, 431100 KB] g=10, 54 evaluated, 13 expanded
[t=0.127369s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.127397s, 431100 KB] g=11, 57 evaluated, 14 expanded
[t=0.131224s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.131257s, 431100 KB] g=15, 77 evaluated, 19 expanded
[t=0.133748s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.13378s, 431100 KB] g=19, 90 evaluated, 23 expanded
[t=0.138901s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.138934s, 431100 KB] g=24, 117 evaluated, 30 expanded
[t=0.141238s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.141273s, 431100 KB] g=26, 129 evaluated, 33 expanded
[t=0.142061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.14209s, 431100 KB] g=27, 133 evaluated, 34 expanded
[t=0.144012s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.144042s, 431100 KB] g=29, 143 evaluated, 36 expanded
[t=0.145034s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.145066s, 431100 KB] g=30, 148 evaluated, 37 expanded
[t=0.145471s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.145506s, 431100 KB] g=30, 150 evaluated, 37 expanded
[t=0.147993s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.148028s, 431232 KB] g=32, 163 evaluated, 41 expanded
[t=0.156764s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.156801s, 431232 KB] g=33, 209 evaluated, 53 expanded
[t=0.162136s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.162168s, 431232 KB] g=36, 237 evaluated, 61 expanded
[t=0.163339s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.163369s, 431232 KB] g=38, 243 evaluated, 63 expanded
[t=0.16684s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.166875s, 431232 KB] g=40, 261 evaluated, 68 expanded
[t=0.167661s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.167693s, 431232 KB] g=41, 265 evaluated, 69 expanded
[t=0.168106s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.168137s, 431232 KB] g=42, 267 evaluated, 70 expanded
[t=0.175007s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.175043s, 431232 KB] g=50, 303 evaluated, 82 expanded
[t=0.175644s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.175674s, 431232 KB] g=51, 306 evaluated, 83 expanded
[t=0.178941s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.178974s, 431232 KB] g=54, 323 evaluated, 90 expanded
[t=0.179577s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.179606s, 431232 KB] g=55, 326 evaluated, 91 expanded
[t=0.180021s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.18005s, 431232 KB] g=57, 328 evaluated, 93 expanded
[t=0.180459s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.180488s, 431232 KB] g=58, 330 evaluated, 94 expanded
[t=0.181678s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.181709s, 431232 KB] g=60, 336 evaluated, 99 expanded
[t=0.181742s, 431232 KB] Solution found!
[t=0.181769s, 431232 KB] Actual search time: 0.0832912s
put-down j (1)
unstack l k (1)
put-down l (1)
unstack k d (1)
stack k i (1)
unstack d b (1)
stack d j (1)
unstack b f (1)
stack b k (1)
unstack f a (1)
stack f b (1)
pick-up l (1)
stack l d (1)
pick-up g (1)
stack g a (1)
unstack f b (1)
put-down f (1)
unstack g a (1)
stack g l (1)
unstack b k (1)
put-down b (1)
unstack a e (1)
stack a k (1)
unstack e h (1)
stack e b (1)
unstack g l (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k i (1)
stack k e (1)
unstack i c (1)
stack i l (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack i l (1)
stack i c (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
stack d l (1)
pick-up j (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.181794s, 431232 KB] Plan length: 61 step(s).
[t=0.181794s, 431232 KB] Plan cost: 61
[t=0.181794s, 431232 KB] Expanded 101 state(s).
[t=0.181794s, 431232 KB] Reopened 0 state(s).
[t=0.181794s, 431232 KB] Evaluated 337 state(s).
[t=0.181794s, 431232 KB] Evaluations: 337
[t=0.181794s, 431232 KB] Generated 437 state(s).
[t=0.181794s, 431232 KB] Dead ends: 0 state(s).
[t=0.181794s, 431232 KB] Expanded until last jump: 1 state(s).
[t=0.181794s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.181794s, 431232 KB] Evaluated until last jump: 5 state(s).
[t=0.181794s, 431232 KB] Generated until last jump: 4 state(s).
[t=0.181794s, 431232 KB] Number of registered states: 337
[t=0.181794s, 431232 KB] Int hash set load factor: 337/512 = 0.658203
[t=0.181794s, 431232 KB] Int hash set resizes: 9
[t=0.181794s, 431232 KB] Search time: 0.155567s
[t=0.181794s, 431232 KB] Total time: 0.181794s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p155.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5448e-05s, 424928 KB] reading input...
[t=0.00222007s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025802s, 427536 KB] Building successor generator...done!
[t=0.0260769s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261157s, 427536 KB] time for successor generation creation: 0.000162538s
[t=0.0261453s, 427536 KB] Variables: 25
[t=0.0261689s, 427536 KB] FactPairs: 182
[t=0.0261911s, 427536 KB] Bytes per state: 8
[t=0.0263855s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980903s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.0981437s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981694s, 430128 KB] f = 119, 1 evaluated, 0 expanded
[t=0.098197s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.0982209s, 430128 KB] pruning method: none
[t=0.116586s, 431100 KB] f = 127, 4 evaluated, 1 expanded
[t=0.117189s, 431100 KB] f = 132, 7 evaluated, 2 expanded
[t=0.117767s, 431100 KB] f = 136, 10 evaluated, 3 expanded
[t=0.119601s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.119635s, 431100 KB] g=6, 20 evaluated, 6 expanded
[t=0.122731s, 431100 KB] f = 137, 37 evaluated, 11 expanded
[t=0.123306s, 431100 KB] f = 138, 40 evaluated, 12 expanded
[t=0.123877s, 431100 KB] f = 139, 43 evaluated, 13 expanded
[t=0.124449s, 431100 KB] f = 140, 46 evaluated, 14 expanded
[t=0.12681s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.126843s, 431100 KB] g=10, 59 evaluated, 18 expanded
[t=0.12991s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.129939s, 431100 KB] g=10, 76 evaluated, 22 expanded
[t=0.137689s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.137726s, 431100 KB] g=16, 119 evaluated, 32 expanded
[t=0.138129s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.138162s, 431100 KB] g=17, 121 evaluated, 33 expanded
[t=0.138912s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.138942s, 431100 KB] g=18, 125 evaluated, 34 expanded
[t=0.139698s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.13974s, 431100 KB] g=18, 129 evaluated, 34 expanded
[t=0.141215s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.141245s, 431100 KB] g=20, 137 evaluated, 36 expanded
[t=0.152073s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.152108s, 431100 KB] g=24, 197 evaluated, 50 expanded
[t=0.153043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.153074s, 431232 KB] g=25, 202 evaluated, 51 expanded
[t=0.155462s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.155494s, 431232 KB] g=27, 215 evaluated, 54 expanded
[t=0.156428s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.156458s, 431232 KB] g=28, 220 evaluated, 55 expanded
[t=0.159902s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.159934s, 431232 KB] g=30, 239 evaluated, 59 expanded
[t=0.162307s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.162342s, 431232 KB] g=32, 252 evaluated, 62 expanded
[t=0.165081s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.165114s, 431232 KB] g=30, 267 evaluated, 65 expanded
[t=0.275335s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.27538s, 431364 KB] g=37, 883 evaluated, 226 expanded, 6 reopened
[t=0.277758s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.277789s, 431364 KB] g=39, 896 evaluated, 229 expanded, 6 reopened
[t=0.281176s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.281212s, 431496 KB] g=41, 914 evaluated, 232 expanded, 6 reopened
[t=0.406475s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.40652s, 431628 KB] g=43, 1612 evaluated, 396 expanded, 6 reopened
[t=0.406736s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.406768s, 431628 KB] g=43, 1613 evaluated, 396 expanded, 6 reopened
[t=0.410034s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.410072s, 431628 KB] g=45, 1631 evaluated, 400 expanded, 6 reopened
[t=0.414965s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.415001s, 431628 KB] g=47, 1658 evaluated, 406 expanded, 6 reopened
[t=0.415576s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.415612s, 431628 KB] g=48, 1661 evaluated, 407 expanded, 6 reopened
[t=0.419795s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.419829s, 431628 KB] g=49, 1684 evaluated, 412 expanded, 6 reopened
[t=0.420406s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.420436s, 431628 KB] g=50, 1687 evaluated, 413 expanded, 6 reopened
[t=0.420648s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.420677s, 431628 KB] g=50, 1688 evaluated, 413 expanded, 6 reopened
[t=0.422876s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.422912s, 431628 KB] g=51, 1700 evaluated, 416 expanded, 6 reopened
[t=0.426747s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.426784s, 431628 KB] g=57, 1721 evaluated, 422 expanded, 6 reopened
[t=0.427175s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.427205s, 431628 KB] g=57, 1723 evaluated, 422 expanded, 6 reopened
[t=0.4276s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.42763s, 431628 KB] g=58, 1725 evaluated, 423 expanded, 6 reopened
[t=0.435426s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.43546s, 431628 KB] g=63, 1768 evaluated, 441 expanded, 6 reopened
[t=0.435856s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.435888s, 431628 KB] g=64, 1770 evaluated, 442 expanded, 6 reopened
[t=0.43647s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.4365s, 431628 KB] g=66, 1774 evaluated, 445 expanded, 6 reopened
[t=0.436527s, 431628 KB] Solution found!
[t=0.436555s, 431628 KB] Actual search time: 0.33833s
unstack i a (1)
put-down i (1)
unstack c e (1)
stack c b (1)
unstack e d (1)
stack e i (1)
unstack a g (1)
put-down a (1)
unstack e i (1)
stack e a (1)
unstack g k (1)
stack g i (1)
unstack k h (1)
stack k d (1)
unstack e a (1)
stack e k (1)
unstack g i (1)
stack g a (1)
unstack h j (1)
stack h i (1)
unstack j l (1)
stack j e (1)
unstack g a (1)
stack g h (1)
unstack l f (1)
put-down l (1)
pick-up a (1)
stack a f (1)
unstack g h (1)
put-down g (1)
unstack h i (1)
stack h g (1)
unstack j e (1)
stack j l (1)
unstack e k (1)
stack e i (1)
unstack k d (1)
stack k j (1)
unstack a f (1)
stack a k (1)
pick-up f (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up d (1)
stack d c (1)
unstack j l (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack c b (1)
put-down c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.43658s, 431628 KB] Plan length: 66 step(s).
[t=0.43658s, 431628 KB] Plan cost: 66
[t=0.43658s, 431628 KB] Expanded 446 state(s).
[t=0.43658s, 431628 KB] Reopened 6 state(s).
[t=0.43658s, 431628 KB] Evaluated 1774 state(s).
[t=0.43658s, 431628 KB] Evaluations: 1774
[t=0.43658s, 431628 KB] Generated 2335 state(s).
[t=0.43658s, 431628 KB] Dead ends: 0 state(s).
[t=0.43658s, 431628 KB] Expanded until last jump: 14 state(s).
[t=0.43658s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.43658s, 431628 KB] Evaluated until last jump: 46 state(s).
[t=0.43658s, 431628 KB] Generated until last jump: 58 state(s).
[t=0.43658s, 431628 KB] Number of registered states: 1774
[t=0.43658s, 431628 KB] Int hash set load factor: 1774/2048 = 0.866211
[t=0.43658s, 431628 KB] Int hash set resizes: 11
[t=0.43658s, 431628 KB] Search time: 0.410195s
[t=0.43658s, 431628 KB] Total time: 0.43658s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p156.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7157e-05s, 424928 KB] reading input...
[t=0.00214564s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260126s, 427536 KB] Building successor generator...done!
[t=0.0262905s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026314s, 427536 KB] time for successor generation creation: 0.000164737s
[t=0.0263429s, 427536 KB] Variables: 25
[t=0.0263663s, 427536 KB] FactPairs: 182
[t=0.026389s, 427536 KB] Bytes per state: 8
[t=0.0265837s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099332s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0993836s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0994096s, 430128 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0994372s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0994617s, 430128 KB] pruning method: none
[t=0.11136s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.111413s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.1181s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.118144s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118358s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.118388s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.119162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.119195s, 431100 KB] g=2, 9 evaluated, 3 expanded
[t=0.119949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.119979s, 431100 KB] g=3, 13 evaluated, 4 expanded
[t=0.122353s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.122385s, 431100 KB] g=6, 26 evaluated, 9 expanded
[t=0.125301s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.125334s, 431100 KB] g=9, 42 evaluated, 13 expanded
[t=0.125549s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.125578s, 431100 KB] g=10, 43 evaluated, 14 expanded
[t=0.127239s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.127273s, 431100 KB] g=10, 52 evaluated, 16 expanded
[t=0.132542s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.132576s, 431100 KB] g=13, 81 evaluated, 24 expanded
[t=0.13766s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.137696s, 431100 KB] g=18, 109 evaluated, 30 expanded
[t=0.140799s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.140844s, 431100 KB] g=19, 126 evaluated, 33 expanded
[t=0.142707s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.142744s, 431100 KB] g=21, 136 evaluated, 35 expanded
[t=0.147296s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.147329s, 431100 KB] g=25, 161 evaluated, 40 expanded
[t=0.148264s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.148301s, 431232 KB] g=26, 166 evaluated, 41 expanded
[t=0.1487s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.14873s, 431232 KB] g=27, 168 evaluated, 42 expanded
[t=0.14985s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.149881s, 431232 KB] g=28, 174 evaluated, 43 expanded
[t=0.150281s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.15031s, 431232 KB] g=29, 176 evaluated, 44 expanded
[t=0.151446s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.151479s, 431232 KB] g=30, 182 evaluated, 45 expanded
[t=0.152599s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.152633s, 431232 KB] g=31, 188 evaluated, 46 expanded
[t=0.194779s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.194816s, 431232 KB] g=34, 421 evaluated, 103 expanded
[t=0.196115s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.196149s, 431232 KB] g=36, 428 evaluated, 105 expanded
[t=0.198716s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.19875s, 431232 KB] g=38, 442 evaluated, 108 expanded
[t=0.200056s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.200087s, 431232 KB] g=40, 449 evaluated, 110 expanded
[t=0.201387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.20142s, 431232 KB] g=42, 456 evaluated, 112 expanded
[t=0.203093s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.203129s, 431232 KB] g=42, 465 evaluated, 116 expanded
[t=0.20553s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.205564s, 431232 KB] g=45, 478 evaluated, 122 expanded
[t=0.20596s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.205996s, 431232 KB] g=46, 480 evaluated, 123 expanded
[t=0.206768s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.2068s, 431232 KB] g=48, 484 evaluated, 125 expanded
[t=0.206831s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.206855s, 431232 KB] g=49, 485 evaluated, 126 expanded
[t=0.206881s, 431232 KB] Solution found!
[t=0.206907s, 431232 KB] Actual search time: 0.107442s
stack e k (1)
unstack b g (1)
put-down b (1)
unstack e k (1)
stack e b (1)
unstack j d (1)
stack j k (1)
unstack d i (1)
stack d j (1)
unstack g a (1)
put-down g (1)
unstack a h (1)
stack a i (1)
unstack d j (1)
put-down d (1)
unstack h l (1)
stack h g (1)
unstack l f (1)
stack l d (1)
pick-up f (1)
stack f l (1)
unstack a i (1)
stack a h (1)
unstack j k (1)
stack j i (1)
unstack k c (1)
stack k e (1)
unstack f l (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
stack l c (1)
pick-up d (1)
stack d j (1)
pick-up b (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.206932s, 431232 KB] Plan length: 49 step(s).
[t=0.206932s, 431232 KB] Plan cost: 49
[t=0.206932s, 431232 KB] Expanded 127 state(s).
[t=0.206932s, 431232 KB] Reopened 0 state(s).
[t=0.206932s, 431232 KB] Evaluated 485 state(s).
[t=0.206932s, 431232 KB] Evaluations: 485
[t=0.206932s, 431232 KB] Generated 623 state(s).
[t=0.206932s, 431232 KB] Dead ends: 0 state(s).
[t=0.206932s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.206932s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.206932s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.206932s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.206932s, 431232 KB] Number of registered states: 485
[t=0.206932s, 431232 KB] Int hash set load factor: 485/512 = 0.947266
[t=0.206932s, 431232 KB] Int hash set resizes: 9
[t=0.206932s, 431232 KB] Search time: 0.180349s
[t=0.206932s, 431232 KB] Total time: 0.206932s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p157.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7115e-05s, 424928 KB] reading input...
[t=0.00213792s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260817s, 427536 KB] Building successor generator...done!
[t=0.026362s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263857s, 427536 KB] time for successor generation creation: 0.000167921s
[t=0.0264139s, 427536 KB] Variables: 25
[t=0.0264365s, 427536 KB] FactPairs: 182
[t=0.0264583s, 427536 KB] Bytes per state: 8
[t=0.0266538s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991079s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0991612s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991873s, 430128 KB] f = 148, 1 evaluated, 0 expanded
[t=0.0992139s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.0992374s, 430128 KB] pruning method: none
[t=0.117584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.117634s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118392s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.118424s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.119005s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.119038s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.120144s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.120175s, 431100 KB] g=5, 16 evaluated, 5 expanded
[t=0.120747s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.120777s, 431100 KB] g=6, 19 evaluated, 6 expanded
[t=0.121534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.121565s, 431100 KB] g=7, 23 evaluated, 7 expanded
[t=0.122863s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.122896s, 431100 KB] g=9, 30 evaluated, 9 expanded
[t=0.124192s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.124222s, 431100 KB] g=11, 37 evaluated, 11 expanded
[t=0.124973s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.125004s, 431100 KB] g=12, 41 evaluated, 13 expanded
[t=0.131152s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.131186s, 431100 KB] g=18, 75 evaluated, 23 expanded
[t=0.133909s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.133943s, 431100 KB] g=21, 90 evaluated, 26 expanded
[t=0.134516s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.134547s, 431100 KB] g=22, 93 evaluated, 27 expanded
[t=0.144445s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.14448s, 431100 KB] g=25, 148 evaluated, 40 expanded
[t=0.147742s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.147775s, 431232 KB] g=26, 166 evaluated, 43 expanded
[t=0.148713s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.148744s, 431232 KB] g=27, 171 evaluated, 44 expanded
[t=0.149669s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.149702s, 431232 KB] g=28, 176 evaluated, 45 expanded
[t=0.150275s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.150306s, 431232 KB] g=29, 179 evaluated, 46 expanded
[t=0.152327s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.152359s, 431232 KB] g=31, 190 evaluated, 48 expanded
[t=0.156201s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.156237s, 431232 KB] g=34, 211 evaluated, 53 expanded
[t=0.156625s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.156655s, 431232 KB] g=34, 213 evaluated, 53 expanded
[t=0.159929s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.159965s, 431232 KB] g=36, 231 evaluated, 58 expanded
[t=0.160182s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.160212s, 431232 KB] g=36, 232 evaluated, 58 expanded
[t=0.160423s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.160451s, 431232 KB] g=36, 233 evaluated, 58 expanded
[t=0.161028s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.161058s, 431232 KB] g=37, 236 evaluated, 59 expanded
[t=0.161628s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.161662s, 431232 KB] g=38, 239 evaluated, 60 expanded
[t=0.164767s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.164803s, 431232 KB] g=41, 256 evaluated, 65 expanded
[t=0.166838s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.166873s, 431232 KB] g=44, 267 evaluated, 68 expanded
[t=0.167086s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.167115s, 431232 KB] g=44, 268 evaluated, 68 expanded
[t=0.170201s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.170236s, 431232 KB] g=47, 285 evaluated, 73 expanded
[t=0.190196s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.190234s, 431232 KB] g=51, 396 evaluated, 113 expanded
[t=0.190447s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.190476s, 431232 KB] g=51, 397 evaluated, 113 expanded
[t=0.193748s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.193781s, 431232 KB] g=53, 415 evaluated, 120 expanded
[t=0.195623s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.195656s, 431232 KB] g=56, 425 evaluated, 124 expanded
[t=0.198771s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.198807s, 431232 KB] g=59, 443 evaluated, 136 expanded
[t=0.198835s, 431232 KB] Solution found!
[t=0.198862s, 431232 KB] Actual search time: 0.0996209s
stack h b (1)
unstack k g (1)
put-down k (1)
unstack g e (1)
stack g h (1)
unstack e j (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up a (1)
stack a j (1)
unstack l f (1)
put-down l (1)
unstack a j (1)
stack a f (1)
unstack g h (1)
put-down g (1)
unstack h b (1)
stack h a (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
unstack h a (1)
stack h g (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k j (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
stack b d (1)
unstack j i (1)
stack j e (1)
unstack b d (1)
stack b i (1)
pick-up d (1)
stack d j (1)
unstack b i (1)
put-down b (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.198887s, 431232 KB] Plan length: 59 step(s).
[t=0.198887s, 431232 KB] Plan cost: 59
[t=0.198887s, 431232 KB] Expanded 137 state(s).
[t=0.198887s, 431232 KB] Reopened 0 state(s).
[t=0.198887s, 431232 KB] Evaluated 443 state(s).
[t=0.198887s, 431232 KB] Evaluations: 443
[t=0.198887s, 431232 KB] Generated 584 state(s).
[t=0.198887s, 431232 KB] Dead ends: 0 state(s).
[t=0.198887s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.198887s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.198887s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.198887s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.198887s, 431232 KB] Number of registered states: 443
[t=0.198887s, 431232 KB] Int hash set load factor: 443/512 = 0.865234
[t=0.198887s, 431232 KB] Int hash set resizes: 9
[t=0.198887s, 431232 KB] Search time: 0.172234s
[t=0.198887s, 431232 KB] Total time: 0.198887s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p158.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.744e-05s, 424928 KB] reading input...
[t=0.00216159s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260644s, 427536 KB] Building successor generator...done!
[t=0.0263427s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263666s, 427536 KB] time for successor generation creation: 0.000166414s
[t=0.0263954s, 427536 KB] Variables: 25
[t=0.0264185s, 427536 KB] FactPairs: 182
[t=0.0264407s, 427536 KB] Bytes per state: 8
[t=0.0266362s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992075s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0992605s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992872s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0993151s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0993392s, 430128 KB] pruning method: none
[t=0.118099s, 431100 KB] f = 146, 5 evaluated, 1 expanded
[t=0.118339s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.118369s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118761s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.11879s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.119397s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.119968s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.119998s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.120752s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.120782s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.120993s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.121021s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.122153s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.122185s, 431100 KB] g=7, 25 evaluated, 7 expanded
[t=0.123293s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.123323s, 431100 KB] g=8, 31 evaluated, 8 expanded
[t=0.125152s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.125183s, 431100 KB] g=10, 41 evaluated, 10 expanded
[t=0.126481s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.126526s, 431100 KB] g=11, 48 evaluated, 12 expanded
[t=0.12728s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.127315s, 431100 KB] g=12, 52 evaluated, 13 expanded
[t=0.128605s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.128635s, 431100 KB] g=13, 59 evaluated, 14 expanded
[t=0.129396s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.129427s, 431100 KB] g=14, 63 evaluated, 15 expanded
[t=0.133969s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.134003s, 431100 KB] g=14, 88 evaluated, 21 expanded
[t=0.144131s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.144168s, 431100 KB] g=19, 144 evaluated, 36 expanded
[t=0.144923s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.144956s, 431100 KB] g=20, 148 evaluated, 37 expanded
[t=0.14645s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.146482s, 431100 KB] g=23, 156 evaluated, 40 expanded
[t=0.146919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.146956s, 431100 KB] g=24, 158 evaluated, 41 expanded
[t=0.151518s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.151552s, 431232 KB] g=22, 183 evaluated, 50 expanded
[t=0.152308s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.152339s, 431232 KB] g=24, 187 evaluated, 52 expanded
[t=0.179857s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.179897s, 431232 KB] g=24, 339 evaluated, 96 expanded
[t=0.180647s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.180677s, 431232 KB] g=25, 343 evaluated, 97 expanded
[t=0.18107s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.1811s, 431232 KB] g=26, 345 evaluated, 98 expanded
[t=0.181307s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.181339s, 431232 KB] g=26, 346 evaluated, 98 expanded
[t=0.19418s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.194218s, 431232 KB] g=32, 417 evaluated, 120 expanded
[t=0.196951s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.196989s, 431232 KB] g=35, 432 evaluated, 124 expanded
[t=0.208463s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.208501s, 431364 KB] g=38, 495 evaluated, 142 expanded
[t=0.212597s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.212634s, 431364 KB] g=40, 517 evaluated, 149 expanded
[t=0.213214s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.213244s, 431364 KB] g=41, 520 evaluated, 150 expanded
[t=0.214016s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.214048s, 431364 KB] g=42, 524 evaluated, 151 expanded
[t=0.214264s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.214293s, 431364 KB] g=43, 525 evaluated, 152 expanded
[t=0.214868s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.2149s, 431364 KB] g=44, 528 evaluated, 153 expanded
[t=0.217125s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.21716s, 431364 KB] g=46, 540 evaluated, 159 expanded
[t=0.218126s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.218163s, 431364 KB] g=48, 545 evaluated, 163 expanded
[t=0.218559s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.218588s, 431364 KB] g=49, 547 evaluated, 164 expanded
[t=0.218982s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.219011s, 431364 KB] g=50, 549 evaluated, 165 expanded
[t=0.219407s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.219437s, 431364 KB] g=51, 551 evaluated, 166 expanded
[t=0.219653s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.219682s, 431364 KB] g=52, 552 evaluated, 167 expanded
[t=0.220083s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.220112s, 431364 KB] g=54, 555 evaluated, 169 expanded
[t=0.220139s, 431364 KB] Solution found!
[t=0.220165s, 431364 KB] Actual search time: 0.120822s
unstack g k (1)
stack g h (1)
unstack k b (1)
stack k f (1)
unstack l e (1)
put-down l (1)
unstack b a (1)
stack b l (1)
unstack e d (1)
stack e k (1)
unstack a j (1)
put-down a (1)
pick-up j (1)
stack j e (1)
unstack g h (1)
stack g d (1)
pick-up h (1)
stack h a (1)
unstack g d (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack j e (1)
stack j b (1)
unstack e k (1)
stack e d (1)
unstack k f (1)
stack k e (1)
unstack f i (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack j b (1)
stack j i (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.22019s, 431364 KB] Plan length: 54 step(s).
[t=0.22019s, 431364 KB] Plan cost: 54
[t=0.22019s, 431364 KB] Expanded 170 state(s).
[t=0.22019s, 431364 KB] Reopened 0 state(s).
[t=0.22019s, 431364 KB] Evaluated 555 state(s).
[t=0.22019s, 431364 KB] Evaluations: 555
[t=0.22019s, 431364 KB] Generated 736 state(s).
[t=0.22019s, 431364 KB] Dead ends: 0 state(s).
[t=0.22019s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.22019s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.22019s, 431364 KB] Evaluated until last jump: 5 state(s).
[t=0.22019s, 431364 KB] Generated until last jump: 4 state(s).
[t=0.22019s, 431364 KB] Number of registered states: 555
[t=0.22019s, 431364 KB] Int hash set load factor: 555/1024 = 0.541992
[t=0.22019s, 431364 KB] Int hash set resizes: 10
[t=0.22019s, 431364 KB] Search time: 0.193554s
[t=0.22019s, 431364 KB] Total time: 0.22019s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p159.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9427e-05s, 424928 KB] reading input...
[t=0.00223355s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260415s, 427536 KB] Building successor generator...done!
[t=0.026321s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026345s, 427536 KB] time for successor generation creation: 0.000166732s
[t=0.0263736s, 427536 KB] Variables: 25
[t=0.0263966s, 427536 KB] FactPairs: 182
[t=0.0264187s, 427536 KB] Bytes per state: 8
[t=0.0266158s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099475s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0995274s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0995537s, 430128 KB] f = 129, 1 evaluated, 0 expanded
[t=0.0995813s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0996054s, 430128 KB] pruning method: none
[t=0.117949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.117999s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118587s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.118619s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118827s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.118856s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.119608s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.119639s, 431100 KB] g=4, 11 evaluated, 4 expanded
[t=0.120385s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.120415s, 431100 KB] g=5, 15 evaluated, 5 expanded
[t=0.121726s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.121758s, 431100 KB] g=7, 22 evaluated, 10 expanded
[t=0.121969s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.121998s, 431100 KB] g=7, 23 evaluated, 10 expanded
[t=0.124008s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.124039s, 431100 KB] g=10, 34 evaluated, 14 expanded
[t=0.12679s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.126823s, 431100 KB] g=10, 49 evaluated, 21 expanded, 1 reopened
[t=0.132445s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.132481s, 431100 KB] g=15, 80 evaluated, 32 expanded, 1 reopened
[t=0.136656s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.136692s, 431100 KB] g=19, 103 evaluated, 39 expanded, 1 reopened
[t=0.148428s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.148462s, 431100 KB] g=23, 168 evaluated, 60 expanded, 1 reopened
[t=0.149213s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.149244s, 431100 KB] g=24, 172 evaluated, 61 expanded, 1 reopened
[t=0.149645s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.14968s, 431100 KB] g=25, 174 evaluated, 62 expanded, 1 reopened
[t=0.235289s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.235334s, 431364 KB] g=26, 647 evaluated, 297 expanded, 77 reopened
[t=0.235552s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.235582s, 431364 KB] g=27, 648 evaluated, 298 expanded, 77 reopened
[t=0.236332s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.236362s, 431364 KB] g=28, 652 evaluated, 299 expanded, 77 reopened
[t=0.238578s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.238611s, 431364 KB] g=30, 664 evaluated, 304 expanded, 77 reopened
[t=0.241171s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.241202s, 431496 KB] g=32, 678 evaluated, 308 expanded, 77 reopened
[t=0.241786s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.241817s, 431496 KB] g=33, 681 evaluated, 309 expanded, 77 reopened
[t=0.24239s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.242423s, 431496 KB] g=34, 684 evaluated, 310 expanded, 77 reopened
[t=0.266604s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.266642s, 431496 KB] g=36, 818 evaluated, 354 expanded, 78 reopened
[t=0.271892s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.271928s, 431496 KB] g=39, 847 evaluated, 360 expanded, 78 reopened
[t=0.273757s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.273789s, 431496 KB] g=41, 857 evaluated, 362 expanded, 78 reopened
[t=0.274542s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.274572s, 431496 KB] g=42, 861 evaluated, 363 expanded, 78 reopened
[t=0.275328s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.275366s, 431496 KB] g=44, 865 evaluated, 365 expanded, 78 reopened
[t=0.276302s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.276332s, 431496 KB] g=46, 870 evaluated, 367 expanded, 78 reopened
[t=0.276906s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.276939s, 431496 KB] g=47, 873 evaluated, 368 expanded, 78 reopened
[t=0.277338s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.277367s, 431496 KB] g=48, 875 evaluated, 370 expanded, 78 reopened
[t=0.277397s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.277421s, 431496 KB] g=49, 876 evaluated, 371 expanded, 78 reopened
[t=0.277446s, 431496 KB] Solution found!
[t=0.277485s, 431496 KB] Actual search time: 0.177877s
stack k a (1)
unstack c h (1)
stack c k (1)
unstack g d (1)
stack g h (1)
unstack c k (1)
stack c d (1)
unstack k a (1)
put-down k (1)
unstack g h (1)
stack g k (1)
unstack h i (1)
stack h a (1)
unstack i f (1)
stack i c (1)
unstack g k (1)
put-down g (1)
unstack f j (1)
stack f i (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f i (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack i c (1)
put-down i (1)
unstack c d (1)
put-down c (1)
unstack j e (1)
stack j d (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
stack b c (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.27751s, 431496 KB] Plan length: 49 step(s).
[t=0.27751s, 431496 KB] Plan cost: 49
[t=0.27751s, 431496 KB] Expanded 372 state(s).
[t=0.27751s, 431496 KB] Reopened 78 state(s).
[t=0.27751s, 431496 KB] Evaluated 876 state(s).
[t=0.27751s, 431496 KB] Evaluations: 876
[t=0.27751s, 431496 KB] Generated 1553 state(s).
[t=0.27751s, 431496 KB] Dead ends: 0 state(s).
[t=0.27751s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.27751s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.27751s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.27751s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.27751s, 431496 KB] Number of registered states: 876
[t=0.27751s, 431496 KB] Int hash set load factor: 876/1024 = 0.855469
[t=0.27751s, 431496 KB] Int hash set resizes: 10
[t=0.27751s, 431496 KB] Search time: 0.250896s
[t=0.27751s, 431496 KB] Total time: 0.27751s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p160.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8613e-05s, 424928 KB] reading input...
[t=0.00215624s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258452s, 427536 KB] Building successor generator...done!
[t=0.0261216s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261447s, 427536 KB] time for successor generation creation: 0.000164935s
[t=0.026173s, 427536 KB] Variables: 25
[t=0.0261958s, 427536 KB] FactPairs: 182
[t=0.0262178s, 427536 KB] Bytes per state: 8
[t=0.0264145s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0989005s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0989529s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0989787s, 430128 KB] f = 154, 1 evaluated, 0 expanded
[t=0.0990059s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0990301s, 430128 KB] pruning method: none
[t=0.110923s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.110973s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117482s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117524s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119366s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.119409s, 431100 KB] g=4, 13 evaluated, 6 expanded
[t=0.120712s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.120745s, 431100 KB] g=6, 20 evaluated, 9 expanded
[t=0.120952s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.120982s, 431100 KB] g=6, 21 evaluated, 9 expanded
[t=0.121729s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.12176s, 431100 KB] g=7, 25 evaluated, 10 expanded
[t=0.12233s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.12236s, 431100 KB] g=8, 28 evaluated, 11 expanded
[t=0.122568s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.122597s, 431100 KB] g=8, 29 evaluated, 11 expanded
[t=0.124782s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.124816s, 431100 KB] g=12, 41 evaluated, 15 expanded
[t=0.125024s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.125054s, 431100 KB] g=12, 42 evaluated, 15 expanded
[t=0.125624s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.125654s, 431100 KB] g=13, 45 evaluated, 16 expanded
[t=0.137835s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.137871s, 431100 KB] g=19, 113 evaluated, 32 expanded
[t=0.138439s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.138472s, 431100 KB] g=20, 116 evaluated, 33 expanded
[t=0.138682s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.138711s, 431100 KB] g=20, 117 evaluated, 33 expanded
[t=0.144292s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.144327s, 431100 KB] g=23, 148 evaluated, 41 expanded
[t=0.146505s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.146538s, 431100 KB] g=25, 160 evaluated, 44 expanded
[t=0.146934s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.146964s, 431100 KB] g=26, 162 evaluated, 45 expanded
[t=0.154362s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.1544s, 431232 KB] g=26, 203 evaluated, 57 expanded
[t=0.15785s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.157892s, 431232 KB] g=28, 222 evaluated, 62 expanded
[t=0.158827s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.15886s, 431232 KB] g=29, 227 evaluated, 64 expanded
[t=0.162836s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.162873s, 431232 KB] g=30, 249 evaluated, 70 expanded
[t=0.170408s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.170444s, 431232 KB] g=37, 290 evaluated, 81 expanded
[t=0.174796s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.174834s, 431232 KB] g=39, 314 evaluated, 88 expanded
[t=0.17523s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.175261s, 431232 KB] g=40, 316 evaluated, 89 expanded
[t=0.175842s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.175874s, 431232 KB] g=41, 319 evaluated, 90 expanded
[t=0.18041s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.180447s, 431232 KB] g=43, 344 evaluated, 99 expanded
[t=0.181018s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.181049s, 431232 KB] g=44, 347 evaluated, 100 expanded
[t=0.183604s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.183637s, 431232 KB] g=48, 361 evaluated, 106 expanded
[t=0.185276s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.18531s, 431232 KB] g=50, 370 evaluated, 108 expanded
[t=0.185702s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.185732s, 431232 KB] g=51, 372 evaluated, 109 expanded
[t=0.188107s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.188141s, 431232 KB] g=54, 385 evaluated, 112 expanded
[t=0.190326s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.190358s, 431232 KB] g=55, 397 evaluated, 115 expanded
[t=0.190751s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.19078s, 431232 KB] g=56, 399 evaluated, 116 expanded
[t=0.192445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.192478s, 431232 KB] g=60, 408 evaluated, 120 expanded
[t=0.193412s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.193451s, 431232 KB] g=61, 413 evaluated, 123 expanded
[t=0.194397s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_7.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.194428s, 431232 KB] g=62, 419 evaluated, 128 expanded
[t=0.194455s, 431232 KB] Solution found!
[t=0.194482s, 431232 KB] Actual search time: 0.0954481s
unstack j k (1)
put-down j (1)
unstack h e (1)
put-down h (1)
unstack e l (1)
stack e k (1)
unstack l g (1)
put-down l (1)
pick-up j (1)
stack j e (1)
unstack g b (1)
stack g h (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
stack i j (1)
pick-up c (1)
stack c b (1)
unstack g h (1)
put-down g (1)
unstack i j (1)
stack i c (1)
pick-up h (1)
stack h g (1)
unstack i c (1)
put-down i (1)
unstack j e (1)
stack j d (1)
pick-up i (1)
stack i c (1)
unstack e k (1)
stack e i (1)
unstack k a (1)
stack k j (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack i c (1)
put-down i (1)
unstack j d (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.194507s, 431232 KB] Plan length: 62 step(s).
[t=0.194507s, 431232 KB] Plan cost: 62
[t=0.194507s, 431232 KB] Expanded 129 state(s).
[t=0.194507s, 431232 KB] Reopened 0 state(s).
[t=0.194507s, 431232 KB] Evaluated 419 state(s).
[t=0.194507s, 431232 KB] Evaluations: 419
[t=0.194507s, 431232 KB] Generated 550 state(s).
[t=0.194507s, 431232 KB] Dead ends: 0 state(s).
[t=0.194507s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.194507s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.194507s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.194507s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.194507s, 431232 KB] Number of registered states: 419
[t=0.194507s, 431232 KB] Int hash set load factor: 419/512 = 0.818359
[t=0.194507s, 431232 KB] Int hash set resizes: 9
[t=0.194507s, 431232 KB] Search time: 0.168093s
[t=0.194507s, 431232 KB] Total time: 0.194507s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.024085
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 7 test success: 20 of 20 (100.0%)

---------- FOLD 9/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 175 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.05821451544761658 (0.14682678878307343 vs. 0.08861227333545685), which occurred at index 128.
  _module_class,
 | avg_train_loss=0.099290 | avg_val_loss=0.091320
Epoch 2 | avg_train_loss=0.065656 | avg_val_loss=0.045027
Epoch 3 | avg_train_loss=0.042994 | avg_val_loss=0.038974
Epoch 4 | avg_train_loss=0.039210 | avg_val_loss=0.037251
Epoch 5 | avg_train_loss=0.037429 | avg_val_loss=0.035345
Epoch 6 | avg_train_loss=0.036239 | avg_val_loss=0.034969
Epoch 7 | avg_train_loss=0.035800 | avg_val_loss=0.033481
Epoch 8 | avg_train_loss=0.034618 | avg_val_loss=0.033297
Epoch 9 | avg_train_loss=0.034229 | avg_val_loss=0.032444
Epoch 10 | avg_train_loss=0.033519 | avg_val_loss=0.031857
Epoch 11 | avg_train_loss=0.033265 | avg_val_loss=0.031501
Epoch 12 | avg_train_loss=0.032519 | avg_val_loss=0.031337
Epoch 13 | avg_train_loss=0.032192 | avg_val_loss=0.030997
Epoch 14 | avg_train_loss=0.031613 | avg_val_loss=0.030683
Epoch 15 | avg_train_loss=0.031394 | avg_val_loss=0.030052
Epoch 16 | avg_train_loss=0.031191 | avg_val_loss=0.029601
Epoch 17 | avg_train_loss=0.030833 | avg_val_loss=0.029337
Epoch 18 | avg_train_loss=0.030594 | avg_val_loss=0.029411
Epoch 19 | avg_train_loss=0.030320 | avg_val_loss=0.029076
Epoch 20 | avg_train_loss=0.030083 | avg_val_loss=0.029013
Epoch 21 | avg_train_loss=0.030030 | avg_val_loss=0.028650
Epoch 22 | avg_train_loss=0.029843 | avg_val_loss=0.028188
Epoch 23 | avg_train_loss=0.029445 | avg_val_loss=0.028440
Epoch 24 | avg_train_loss=0.029195 | avg_val_loss=0.028251
Epoch 25 | avg_train_loss=0.028987 | avg_val_loss=0.027699
Epoch 26 | avg_train_loss=0.028827 | avg_val_loss=0.027562
Epoch 27 | avg_train_loss=0.028530 | avg_val_loss=0.027716
Epoch 28 | avg_train_loss=0.028305 | avg_val_loss=0.027606
Epoch 29 | avg_train_loss=0.028266 | avg_val_loss=0.026956
Epoch 30 | avg_train_loss=0.027895 | avg_val_loss=0.026745
Epoch 31 | avg_train_loss=0.027618 | avg_val_loss=0.026881
Epoch 32 | avg_train_loss=0.027442 | avg_val_loss=0.026847
Epoch 33 | avg_train_loss=0.027331 | avg_val_loss=0.026890
Epoch 34 | avg_train_loss=0.027024 | avg_val_loss=0.026572
Epoch 35 | avg_train_loss=0.026878 | avg_val_loss=0.026830
Epoch 36 | avg_train_loss=0.026730 | avg_val_loss=0.026511
Epoch 37 | avg_train_loss=0.026517 | avg_val_loss=0.025842
Epoch 38 | avg_train_loss=0.026525 | avg_val_loss=0.026281
Epoch 39 | avg_train_loss=0.026152 | avg_val_loss=0.025894
Epoch 40 | avg_train_loss=0.026039 | avg_val_loss=0.026183
Epoch 41 | avg_train_loss=0.025839 | avg_val_loss=0.025869
Epoch 42 | avg_train_loss=0.025791 | avg_val_loss=0.025943
Epoch 43 | avg_train_loss=0.025634 | avg_val_loss=0.025509
Epoch 44 | avg_train_loss=0.025453 | avg_val_loss=0.025287
Epoch 45 | avg_train_loss=0.025257 | avg_val_loss=0.024900
Epoch 46 | avg_train_loss=0.024968 | avg_val_loss=0.025738
Epoch 47 | avg_train_loss=0.024930 | avg_val_loss=0.025638
Epoch 48 | avg_train_loss=0.024763 | avg_val_loss=0.024644
Epoch 49 | avg_train_loss=0.024645 | avg_val_loss=0.025013
Epoch 50 | avg_train_loss=0.024615 | avg_val_loss=0.024800
Epoch 51 | avg_train_loss=0.024477 | avg_val_loss=0.024716
Epoch 52 | avg_train_loss=0.024232 | avg_val_loss=0.024500
Epoch 53 | avg_train_loss=0.024063 | avg_val_loss=0.024856
Epoch 54 | avg_train_loss=0.023914 | avg_val_loss=0.024919
Epoch 55 | avg_train_loss=0.023834 | avg_val_loss=0.024376
Epoch 56 | avg_train_loss=0.023812 | avg_val_loss=0.024765
Epoch 57 | avg_train_loss=0.023501 | avg_val_loss=0.025163
Epoch 58 | avg_train_loss=0.023445 | avg_val_loss=0.024441
Epoch 59 | avg_train_loss=0.023486 | avg_val_loss=0.024269
Epoch 60 | avg_train_loss=0.023340 | avg_val_loss=0.024295
Epoch 61 | avg_train_loss=0.023113 | avg_val_loss=0.024189
Epoch 62 | avg_train_loss=0.023030 | avg_val_loss=0.024126
Epoch 63 | avg_train_loss=0.023098 | avg_val_loss=0.023906
Epoch 64 | avg_train_loss=0.022965 | avg_val_loss=0.023515
Epoch 65 | avg_train_loss=0.022808 | avg_val_loss=0.024283
Epoch 66 | avg_train_loss=0.022680 | avg_val_loss=0.024032
Epoch 67 | avg_train_loss=0.022503 | avg_val_loss=0.023930
Epoch 68 | avg_train_loss=0.022582 | avg_val_loss=0.023980
Epoch 69 | avg_train_loss=0.022303 | avg_val_loss=0.023946
Epoch 70 | avg_train_loss=0.022304 | avg_val_loss=0.023607
Epoch 71 | avg_train_loss=0.022255 | avg_val_loss=0.024036
Epoch 72 | avg_train_loss=0.022133 | avg_val_loss=0.023910
Epoch 73 | avg_train_loss=0.022038 | avg_val_loss=0.023847
Epoch 74 | avg_train_loss=0.021916 | avg_val_loss=0.023889
Epoch 75 | avg_train_loss=0.021888 | avg_val_loss=0.023998
Epoch 76 | avg_train_loss=0.021940 | avg_val_loss=0.023825
Epoch 77 | avg_train_loss=0.022059 | avg_val_loss=0.023863
Epoch 78 | avg_train_loss=0.021679 | avg_val_loss=0.023887
Epoch 79 | avg_train_loss=0.021636 | avg_val_loss=0.023311
Epoch 80 | avg_train_loss=0.021537 | avg_val_loss=0.023125
Epoch 81 | avg_train_loss=0.021462 | avg_val_loss=0.023383
Epoch 82 | avg_train_loss=0.021551 | avg_val_loss=0.023806
Epoch 83 | avg_train_loss=0.021430 | avg_val_loss=0.023581
Epoch 84 | avg_train_loss=0.021312 | avg_val_loss=0.023737
Epoch 85 | avg_train_loss=0.021213 | avg_val_loss=0.023519
Epoch 86 | avg_train_loss=0.021143 | avg_val_loss=0.023389
Epoch 87 | avg_train_loss=0.021015 | avg_val_loss=0.023100
Epoch 88 | avg_train_loss=0.020999 | avg_val_loss=0.023142
Epoch 89 | avg_train_loss=0.020962 | avg_val_loss=0.023064
Epoch 90 | avg_train_loss=0.020783 | avg_val_loss=0.023235
Epoch 91 | avg_train_loss=0.020712 | avg_val_loss=0.022700
Epoch 92 | avg_train_loss=0.020653 | avg_val_loss=0.023249
Epoch 93 | avg_train_loss=0.020684 | avg_val_loss=0.023039
Epoch 94 | avg_train_loss=0.020625 | avg_val_loss=0.023343
Epoch 95 | avg_train_loss=0.020413 | avg_val_loss=0.023251
Epoch 96 | avg_train_loss=0.020480 | avg_val_loss=0.023345
Epoch 97 | avg_train_loss=0.020424 | avg_val_loss=0.023489
Epoch 98 | avg_train_loss=0.020261 | avg_val_loss=0.022901
Epoch 99 | avg_train_loss=0.020260 | avg_val_loss=0.023119
Epoch 100 | avg_train_loss=0.020125 | avg_val_loss=0.023550
Epoch 101 | avg_train_loss=0.020122 | avg_val_loss=0.023119
Epoch 102 | avg_train_loss=0.020099INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p161.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5751e-05s, 424928 KB] reading input...
[t=0.00217128s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258255s, 427536 KB] Building successor generator...done!
[t=0.0261025s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261255s, 427536 KB] time for successor generation creation: 0.000164498s
[t=0.0261539s, 427536 KB] Variables: 25
[t=0.0261763s, 427536 KB] FactPairs: 182
[t=0.0261981s, 427536 KB] Bytes per state: 8
[t=0.0263916s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.102556s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.102612s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.102638s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.102687s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.102712s, 430128 KB] pruning method: none
[t=0.121459s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.12151s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.12173s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.12176s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.122332s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.122362s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.123853s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.123885s, 431100 KB] g=4, 17 evaluated, 5 expanded
[t=0.124275s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.124304s, 431100 KB] g=4, 19 evaluated, 5 expanded
[t=0.125232s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.125262s, 431100 KB] g=5, 24 evaluated, 6 expanded
[t=0.12784s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.127873s, 431100 KB] g=8, 38 evaluated, 9 expanded
[t=0.128264s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.128294s, 431100 KB] g=8, 40 evaluated, 9 expanded
[t=0.128691s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.12872s, 431100 KB] g=9, 42 evaluated, 10 expanded
[t=0.132545s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.13258s, 431100 KB] g=12, 63 evaluated, 14 expanded
[t=0.135887s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.135932s, 431100 KB] g=14, 81 evaluated, 17 expanded
[t=0.139404s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.139436s, 431100 KB] g=16, 100 evaluated, 21 expanded
[t=0.140007s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.140039s, 431100 KB] g=16, 103 evaluated, 21 expanded
[t=0.14387s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.143905s, 431100 KB] g=19, 124 evaluated, 26 expanded
[t=0.147756s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.147793s, 431100 KB] g=23, 145 evaluated, 32 expanded
[t=0.149447s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.149477s, 431100 KB] g=25, 154 evaluated, 34 expanded
[t=0.149874s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.149906s, 431100 KB] g=26, 156 evaluated, 35 expanded
[t=0.150484s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.150513s, 431100 KB] g=27, 159 evaluated, 36 expanded
[t=0.163651s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.163688s, 431232 KB] g=31, 231 evaluated, 63 expanded
[t=0.355975s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.35602s, 431364 KB] g=33, 1281 evaluated, 846 expanded, 372 reopened
[t=6.16046s, 433844 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=6.16053s, 433844 KB] g=52, 33187 evaluated, 15805 expanded, 2894 reopened
[t=6.16112s, 433844 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=6.16115s, 433844 KB] g=54, 33190 evaluated, 15807 expanded, 2894 reopened
[t=6.16265s, 433976 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=6.16268s, 433976 KB] g=58, 33199 evaluated, 15813 expanded, 2894 reopened
[t=6.16271s, 433976 KB] Solution found!
[t=6.16274s, 433976 KB] Actual search time: 6.06002s
unstack l k (1)
put-down l (1)
unstack a g (1)
stack a k (1)
unstack d i (1)
put-down d (1)
unstack b h (1)
stack b l (1)
unstack g j (1)
stack g d (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up j (1)
stack j i (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e b (1)
pick-up k (1)
stack k e (1)
unstack f a (1)
stack f k (1)
unstack a h (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g d (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack j i (1)
stack j d (1)
unstack f k (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
stack b i (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=6.16276s, 433976 KB] Plan length: 58 step(s).
[t=6.16276s, 433976 KB] Plan cost: 58
[t=6.16276s, 433976 KB] Expanded 15814 state(s).
[t=6.16276s, 433976 KB] Reopened 2894 state(s).
[t=6.16276s, 433976 KB] Evaluated 33199 state(s).
[t=6.16276s, 433976 KB] Evaluations: 33199
[t=6.16276s, 433976 KB] Generated 67567 state(s).
[t=6.16276s, 433976 KB] Dead ends: 0 state(s).
[t=6.16276s, 433976 KB] Expanded until last jump: 0 state(s).
[t=6.16276s, 433976 KB] Reopened until last jump: 0 state(s).
[t=6.16276s, 433976 KB] Evaluated until last jump: 1 state(s).
[t=6.16276s, 433976 KB] Generated until last jump: 0 state(s).
[t=6.16276s, 433976 KB] Number of registered states: 33199
[t=6.16276s, 433976 KB] Int hash set load factor: 33199/65536 = 0.506577
[t=6.16276s, 433976 KB] Int hash set resizes: 16
[t=6.16276s, 433976 KB] Search time: 6.13637s
[t=6.16276s, 433976 KB] Total time: 6.16276s
Solution found.
Peak memory: 433976 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p162.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6247e-05s, 424928 KB] reading input...
[t=0.00214859s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257463s, 427536 KB] Building successor generator...done!
[t=0.0260255s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260488s, 427536 KB] time for successor generation creation: 0.000169596s
[t=0.0260776s, 427536 KB] Variables: 25
[t=0.0261003s, 427536 KB] FactPairs: 182
[t=0.0261223s, 427536 KB] Bytes per state: 8
[t=0.0263153s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107582s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.107636s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107662s, 430128 KB] f = 129, 1 evaluated, 0 expanded
[t=0.107689s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.107714s, 430128 KB] pruning method: none
[t=0.126086s, 431100 KB] f = 145, 4 evaluated, 1 expanded
[t=0.126708s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.126741s, 431100 KB] g=3, 7 evaluated, 3 expanded
[t=0.127136s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.127166s, 431100 KB] g=4, 9 evaluated, 4 expanded
[t=0.128282s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.128312s, 431100 KB] g=7, 15 evaluated, 7 expanded
[t=0.136494s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.136526s, 431100 KB] g=11, 60 evaluated, 22 expanded
[t=0.136923s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.136953s, 431100 KB] g=12, 62 evaluated, 23 expanded
[t=0.13716s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.137189s, 431100 KB] g=12, 63 evaluated, 23 expanded
[t=0.138128s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.138161s, 431100 KB] g=13, 68 evaluated, 24 expanded
[t=0.138374s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.138403s, 431100 KB] g=13, 69 evaluated, 24 expanded
[t=0.138986s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.139018s, 431100 KB] g=14, 72 evaluated, 25 expanded
[t=0.140675s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.140716s, 431100 KB] g=17, 81 evaluated, 28 expanded
[t=0.145285s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.145319s, 431100 KB] g=18, 106 evaluated, 37 expanded
[t=0.153029s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.153063s, 431100 KB] g=21, 148 evaluated, 54 expanded, 1 reopened
[t=0.159494s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.159528s, 431100 KB] g=22, 183 evaluated, 66 expanded, 1 reopened
[t=0.184887s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.184923s, 431232 KB] g=29, 322 evaluated, 109 expanded, 3 reopened
[t=0.185137s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.185166s, 431232 KB] g=29, 323 evaluated, 109 expanded, 3 reopened
[t=0.191s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.191037s, 431232 KB] g=35, 355 evaluated, 118 expanded, 3 reopened
[t=0.192511s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.192541s, 431232 KB] g=35, 363 evaluated, 120 expanded, 3 reopened
[t=0.194578s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.194624s, 431232 KB] g=37, 374 evaluated, 124 expanded, 3 reopened
[t=0.195378s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.195408s, 431232 KB] g=38, 378 evaluated, 125 expanded, 3 reopened
[t=0.201084s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.20112s, 431232 KB] g=41, 409 evaluated, 138 expanded, 3 reopened
[t=0.204993s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.205029s, 431364 KB] g=40, 430 evaluated, 146 expanded, 3 reopened
[t=0.205604s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.205634s, 431364 KB] g=41, 433 evaluated, 147 expanded, 3 reopened
[t=0.206032s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.20606s, 431364 KB] g=42, 435 evaluated, 148 expanded, 3 reopened
[t=0.209728s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.209763s, 431364 KB] g=46, 455 evaluated, 154 expanded, 3 reopened
[t=0.211257s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.211291s, 431364 KB] g=48, 463 evaluated, 156 expanded, 3 reopened
[t=0.224812s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.224851s, 431364 KB] g=52, 537 evaluated, 180 expanded, 5 reopened
[t=0.225621s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.225654s, 431364 KB] g=53, 541 evaluated, 181 expanded, 5 reopened
[t=0.230524s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.230559s, 431364 KB] g=50, 567 evaluated, 190 expanded, 5 reopened
[t=0.232245s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.232276s, 431364 KB] g=53, 576 evaluated, 193 expanded, 5 reopened
[t=0.232673s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.232702s, 431364 KB] g=54, 578 evaluated, 194 expanded, 5 reopened
[t=0.233825s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.233856s, 431364 KB] g=56, 584 evaluated, 196 expanded, 5 reopened
[t=0.236362s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.236398s, 431364 KB] g=57, 597 evaluated, 200 expanded, 5 reopened
[t=0.238257s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.23829s, 431364 KB] g=59, 607 evaluated, 206 expanded, 5 reopened
[t=0.239432s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.239464s, 431364 KB] g=61, 613 evaluated, 208 expanded, 5 reopened
[t=0.242977s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.243009s, 431364 KB] g=60, 632 evaluated, 216 expanded, 5 reopened
[t=0.243223s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.243252s, 431364 KB] g=61, 633 evaluated, 217 expanded, 5 reopened
[t=0.244365s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.244395s, 431364 KB] g=63, 639 evaluated, 219 expanded, 5 reopened
[t=0.259638s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.259673s, 431496 KB] g=66, 722 evaluated, 273 expanded, 10 reopened
[t=0.260815s, 431496 KB] Solution found!
[t=0.260848s, 431496 KB] Actual search time: 0.153132s
stack g e (1)
unstack f j (1)
put-down f (1)
unstack j l (1)
stack j f (1)
unstack g e (1)
put-down g (1)
unstack e k (1)
put-down e (1)
unstack k h (1)
stack k l (1)
pick-up e (1)
stack e k (1)
unstack j f (1)
stack j e (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a f (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
unstack a f (1)
stack a i (1)
pick-up f (1)
stack f d (1)
unstack a i (1)
stack a h (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack f d (1)
stack f a (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e d (1)
unstack k l (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
stack i l (1)
unstack c b (1)
put-down c (1)
unstack i l (1)
stack i b (1)
pick-up l (1)
stack l d (1)
unstack i b (1)
stack i c (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.260874s, 431496 KB] Plan length: 69 step(s).
[t=0.260874s, 431496 KB] Plan cost: 69
[t=0.260874s, 431496 KB] Expanded 280 state(s).
[t=0.260874s, 431496 KB] Reopened 10 state(s).
[t=0.260874s, 431496 KB] Evaluated 729 state(s).
[t=0.260874s, 431496 KB] Evaluations: 729
[t=0.260874s, 431496 KB] Generated 1073 state(s).
[t=0.260874s, 431496 KB] Dead ends: 0 state(s).
[t=0.260874s, 431496 KB] Expanded until last jump: 1 state(s).
[t=0.260874s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.260874s, 431496 KB] Evaluated until last jump: 4 state(s).
[t=0.260874s, 431496 KB] Generated until last jump: 3 state(s).
[t=0.260874s, 431496 KB] Number of registered states: 729
[t=0.260874s, 431496 KB] Int hash set load factor: 729/1024 = 0.711914
[t=0.260874s, 431496 KB] Int hash set resizes: 10
[t=0.260874s, 431496 KB] Search time: 0.23456s
[t=0.260874s, 431496 KB] Total time: 0.260874s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p163.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5978e-05s, 424928 KB] reading input...
[t=0.00222817s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259473s, 427536 KB] Building successor generator...done!
[t=0.026227s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262508s, 427536 KB] time for successor generation creation: 0.000168657s
[t=0.0262793s, 427536 KB] Variables: 25
[t=0.0263028s, 427536 KB] FactPairs: 182
[t=0.0263251s, 427536 KB] Bytes per state: 8
[t=0.0265189s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981241s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0981757s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982013s, 430128 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0982307s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0982546s, 430128 KB] pruning method: none
[t=0.110068s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.110118s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116572s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.116615s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11847s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.118502s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.119088s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.11912s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.120061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.120091s, 431100 KB] g=5, 21 evaluated, 5 expanded
[t=0.121219s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.121249s, 431100 KB] g=5, 27 evaluated, 7 expanded
[t=0.12146s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.121489s, 431100 KB] g=5, 28 evaluated, 7 expanded
[t=0.12225s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.12228s, 431100 KB] g=6, 32 evaluated, 8 expanded
[t=0.122676s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.122717s, 431100 KB] g=6, 34 evaluated, 8 expanded
[t=0.13714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.137178s, 431100 KB] g=13, 113 evaluated, 22 expanded
[t=0.138477s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.138507s, 431100 KB] g=14, 120 evaluated, 23 expanded
[t=0.140183s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.140217s, 431100 KB] g=15, 129 evaluated, 24 expanded
[t=0.142982s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.143017s, 431100 KB] g=17, 144 evaluated, 27 expanded
[t=0.143596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.143626s, 431100 KB] g=18, 147 evaluated, 28 expanded
[t=0.146734s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.146768s, 431232 KB] g=20, 164 evaluated, 31 expanded
[t=0.14717s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.147202s, 431232 KB] g=20, 166 evaluated, 31 expanded
[t=0.153213s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.153248s, 431232 KB] g=22, 199 evaluated, 37 expanded
[t=0.164177s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.164214s, 431232 KB] g=22, 259 evaluated, 48 expanded
[t=0.16587s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.165903s, 431232 KB] g=24, 268 evaluated, 50 expanded
[t=0.168847s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.168882s, 431232 KB] g=26, 284 evaluated, 53 expanded
[t=0.169097s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.169125s, 431232 KB] g=26, 285 evaluated, 53 expanded
[t=0.169706s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.169735s, 431232 KB] g=27, 288 evaluated, 54 expanded
[t=0.171235s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.171272s, 431232 KB] g=28, 296 evaluated, 55 expanded
[t=0.172396s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.172427s, 431232 KB] g=29, 302 evaluated, 56 expanded
[t=0.273536s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.273586s, 431496 KB] g=38, 857 evaluated, 182 expanded, 9 reopened
[t=0.281067s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.281105s, 431496 KB] g=42, 898 evaluated, 191 expanded, 9 reopened
[t=0.31238s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.312419s, 431628 KB] g=41, 1070 evaluated, 227 expanded, 9 reopened
[t=0.313729s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.31376s, 431628 KB] g=43, 1077 evaluated, 229 expanded, 9 reopened
[t=0.314519s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.314549s, 431628 KB] g=44, 1081 evaluated, 230 expanded, 9 reopened
[t=0.319246s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.319284s, 431628 KB] g=48, 1106 evaluated, 237 expanded, 9 reopened
[t=0.320042s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.320072s, 431628 KB] g=49, 1110 evaluated, 238 expanded, 9 reopened
[t=0.324029s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.324066s, 431628 KB] g=51, 1131 evaluated, 246 expanded, 9 reopened
[t=0.32627s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.326302s, 431628 KB] g=53, 1143 evaluated, 251 expanded, 9 reopened
[t=0.326517s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.326546s, 431628 KB] g=54, 1144 evaluated, 252 expanded, 9 reopened
[t=0.326764s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.326795s, 431628 KB] g=55, 1145 evaluated, 253 expanded, 9 reopened
[t=0.327012s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.327041s, 431628 KB] g=56, 1146 evaluated, 254 expanded, 9 reopened
[t=0.327983s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.328016s, 431628 KB] g=59, 1151 evaluated, 257 expanded, 9 reopened
[t=0.328595s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.328624s, 431628 KB] g=61, 1154 evaluated, 259 expanded, 9 reopened
[t=0.329204s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.329234s, 431628 KB] g=62, 1157 evaluated, 261 expanded, 9 reopened
[t=0.33258s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.332619s, 431628 KB] g=59, 1175 evaluated, 275 expanded, 13 reopened
[t=0.333026s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.333056s, 431628 KB] g=60, 1177 evaluated, 276 expanded, 13 reopened
[t=0.333087s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.333111s, 431628 KB] g=61, 1178 evaluated, 277 expanded, 13 reopened
[t=0.333137s, 431628 KB] Solution found!
[t=0.333163s, 431628 KB] Actual search time: 0.234904s
stack j b (1)
unstack d l (1)
put-down d (1)
unstack l h (1)
stack l d (1)
unstack i c (1)
put-down i (1)
unstack g f (1)
put-down g (1)
unstack j b (1)
put-down j (1)
pick-up c (1)
stack c f (1)
pick-up h (1)
stack h i (1)
unstack b k (1)
stack b l (1)
unstack k a (1)
stack k j (1)
unstack a e (1)
stack a k (1)
unstack h i (1)
stack h g (1)
unstack c f (1)
put-down c (1)
pick-up f (1)
stack f a (1)
unstack b l (1)
put-down b (1)
pick-up i (1)
stack i c (1)
unstack f a (1)
stack f b (1)
unstack a k (1)
stack a h (1)
unstack f b (1)
stack f a (1)
pick-up e (1)
stack e l (1)
unstack k j (1)
stack k f (1)
pick-up j (1)
stack j b (1)
unstack e l (1)
stack e k (1)
unstack l d (1)
stack l i (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.333187s, 431628 KB] Plan length: 61 step(s).
[t=0.333187s, 431628 KB] Plan cost: 61
[t=0.333187s, 431628 KB] Expanded 278 state(s).
[t=0.333187s, 431628 KB] Reopened 13 state(s).
[t=0.333187s, 431628 KB] Evaluated 1178 state(s).
[t=0.333187s, 431628 KB] Evaluations: 1178
[t=0.333187s, 431628 KB] Generated 1532 state(s).
[t=0.333187s, 431628 KB] Dead ends: 0 state(s).
[t=0.333187s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.333187s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.333187s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.333187s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.333187s, 431628 KB] Number of registered states: 1178
[t=0.333187s, 431628 KB] Int hash set load factor: 1178/2048 = 0.575195
[t=0.333187s, 431628 KB] Int hash set resizes: 11
[t=0.333187s, 431628 KB] Search time: 0.306669s
[t=0.333187s, 431628 KB] Total time: 0.333187s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p164.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6404e-05s, 424928 KB] reading input...
[t=0.00216254s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259171s, 427536 KB] Building successor generator...done!
[t=0.026195s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262179s, 427536 KB] time for successor generation creation: 0.000166806s
[t=0.0262464s, 427536 KB] Variables: 25
[t=0.0262702s, 427536 KB] FactPairs: 182
[t=0.0262926s, 427536 KB] Bytes per state: 8
[t=0.0264883s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988015s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0988539s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988798s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0989074s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0989318s, 430128 KB] pruning method: none
[t=0.117376s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.117426s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118568s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.118601s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.118813s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.118843s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.11942s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.119451s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.120565s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.120606s, 431100 KB] g=4, 19 evaluated, 4 expanded
[t=0.122824s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.122858s, 431100 KB] g=6, 31 evaluated, 7 expanded
[t=0.127929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.127963s, 431100 KB] g=9, 59 evaluated, 13 expanded
[t=0.128537s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.128566s, 431100 KB] g=10, 62 evaluated, 14 expanded
[t=0.128955s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.128984s, 431100 KB] g=10, 64 evaluated, 14 expanded
[t=0.129565s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.1296s, 431100 KB] g=11, 67 evaluated, 15 expanded
[t=0.132894s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.132929s, 431100 KB] g=13, 85 evaluated, 19 expanded
[t=0.134779s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.134813s, 431100 KB] g=12, 95 evaluated, 22 expanded
[t=0.135569s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.135599s, 431100 KB] g=13, 99 evaluated, 23 expanded
[t=0.136714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.136747s, 431100 KB] g=14, 105 evaluated, 24 expanded
[t=0.137509s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.137539s, 431100 KB] g=14, 109 evaluated, 26 expanded
[t=0.138131s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.138162s, 431100 KB] g=15, 112 evaluated, 27 expanded
[t=0.142744s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.142778s, 431100 KB] g=17, 137 evaluated, 34 expanded
[t=0.147003s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.147038s, 431100 KB] g=19, 160 evaluated, 41 expanded
[t=0.164364s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.164399s, 431232 KB] g=19, 255 evaluated, 77 expanded
[t=0.18046s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.180494s, 431232 KB] g=28, 343 evaluated, 105 expanded, 1 reopened
[t=0.181255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.181292s, 431232 KB] g=29, 347 evaluated, 106 expanded, 1 reopened
[t=0.183323s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.183356s, 431232 KB] g=31, 358 evaluated, 110 expanded, 1 reopened
[t=0.184113s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.184145s, 431232 KB] g=32, 362 evaluated, 111 expanded, 1 reopened
[t=0.185451s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.185482s, 431232 KB] g=35, 369 evaluated, 114 expanded, 1 reopened
[t=0.193903s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.193937s, 431232 KB] g=35, 415 evaluated, 140 expanded, 1 reopened
[t=0.194342s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.194371s, 431232 KB] g=37, 418 evaluated, 142 expanded, 1 reopened
[t=0.194399s, 431232 KB] Solution found!
[t=0.194425s, 431232 KB] Actual search time: 0.0954895s
stack d b (1)
unstack j h (1)
stack j d (1)
unstack h l (1)
stack h g (1)
unstack k e (1)
stack k j (1)
unstack e f (1)
stack e k (1)
unstack f a (1)
stack f e (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack i c (1)
put-down i (1)
unstack e k (1)
stack e l (1)
unstack k j (1)
stack k f (1)
unstack e l (1)
stack e k (1)
pick-up l (1)
stack l c (1)
unstack j d (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.19445s, 431232 KB] Plan length: 37 step(s).
[t=0.19445s, 431232 KB] Plan cost: 37
[t=0.19445s, 431232 KB] Expanded 143 state(s).
[t=0.19445s, 431232 KB] Reopened 1 state(s).
[t=0.19445s, 431232 KB] Evaluated 418 state(s).
[t=0.19445s, 431232 KB] Evaluations: 418
[t=0.19445s, 431232 KB] Generated 574 state(s).
[t=0.19445s, 431232 KB] Dead ends: 0 state(s).
[t=0.19445s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.19445s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.19445s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.19445s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.19445s, 431232 KB] Number of registered states: 418
[t=0.19445s, 431232 KB] Int hash set load factor: 418/512 = 0.816406
[t=0.19445s, 431232 KB] Int hash set resizes: 9
[t=0.19445s, 431232 KB] Search time: 0.167962s
[t=0.19445s, 431232 KB] Total time: 0.19445s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p165.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6417e-05s, 424928 KB] reading input...
[t=0.0021874s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259609s, 427536 KB] Building successor generator...done!
[t=0.0262379s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262604s, 427536 KB] time for successor generation creation: 0.000167426s
[t=0.0262882s, 427536 KB] Variables: 25
[t=0.0263108s, 427536 KB] FactPairs: 182
[t=0.0263325s, 427536 KB] Bytes per state: 8
[t=0.0265242s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987462s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.098799s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098825s, 430128 KB] f = 122, 1 evaluated, 0 expanded
[t=0.0988526s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.098876s, 430128 KB] pruning method: none
[t=0.110754s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.110804s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117805s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.117849s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.118642s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.118683s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.1227s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.122733s, 431100 KB] g=7, 31 evaluated, 7 expanded
[t=0.123335s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.123364s, 431100 KB] g=7, 34 evaluated, 7 expanded
[t=0.130453s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.130487s, 431100 KB] g=15, 71 evaluated, 16 expanded
[t=0.136228s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.136263s, 431100 KB] g=19, 101 evaluated, 22 expanded
[t=0.136674s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.136703s, 431100 KB] g=19, 103 evaluated, 22 expanded
[t=0.137503s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.137537s, 431100 KB] g=20, 107 evaluated, 23 expanded
[t=0.137952s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.137982s, 431100 KB] g=21, 109 evaluated, 24 expanded
[t=0.169575s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.169611s, 431232 KB] g=27, 275 evaluated, 61 expanded
[t=0.170215s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.170246s, 431232 KB] g=28, 278 evaluated, 62 expanded
[t=0.170463s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.170491s, 431232 KB] g=28, 279 evaluated, 62 expanded
[t=0.170716s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.170743s, 431232 KB] g=29, 280 evaluated, 63 expanded
[t=0.171715s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.171746s, 431232 KB] g=30, 285 evaluated, 64 expanded
[t=0.172158s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.172187s, 431232 KB] g=31, 287 evaluated, 65 expanded
[t=0.173183s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.173217s, 431232 KB] g=32, 292 evaluated, 67 expanded
[t=0.173815s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.173844s, 431232 KB] g=33, 295 evaluated, 68 expanded
[t=0.175575s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.175614s, 431232 KB] g=35, 304 evaluated, 72 expanded
[t=0.177738s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.177771s, 431232 KB] g=37, 315 evaluated, 76 expanded
[t=0.179125s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.179158s, 431232 KB] g=40, 322 evaluated, 79 expanded
[t=0.181468s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.181501s, 431232 KB] g=44, 334 evaluated, 84 expanded
[t=0.182293s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.182327s, 431232 KB] g=45, 338 evaluated, 85 expanded
[t=0.196998s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.197045s, 431232 KB] g=49, 415 evaluated, 114 expanded
[t=0.197282s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.197313s, 431232 KB] g=49, 416 evaluated, 114 expanded
[t=0.334016s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.334059s, 431500 KB] g=54, 1134 evaluated, 427 expanded, 37 reopened
[t=2.23737s, 432492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=2.23744s, 432492 KB] g=60, 11101 evaluated, 6337 expanded, 1573 reopened
[t=2.24489s, 432492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=2.24493s, 432492 KB] g=63, 11139 evaluated, 6357 expanded, 1574 reopened
[t=2.24593s, 432492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=2.24596s, 432492 KB] g=64, 11144 evaluated, 6360 expanded, 1574 reopened
[t=2.2477s, 432492 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=2.24773s, 432492 KB] g=66, 11153 evaluated, 6365 expanded, 1574 reopened
[t=2.24776s, 432492 KB] Solution found!
[t=2.24779s, 432492 KB] Actual search time: 2.14891s
stack b l (1)
unstack d i (1)
stack d j (1)
unstack g f (1)
stack g i (1)
unstack d j (1)
put-down d (1)
pick-up a (1)
stack a b (1)
unstack j h (1)
stack j a (1)
unstack g i (1)
stack g h (1)
unstack f k (1)
stack f g (1)
unstack k e (1)
put-down k (1)
pick-up e (1)
stack e i (1)
unstack j a (1)
stack j e (1)
unstack f g (1)
put-down f (1)
unstack g h (1)
stack g d (1)
pick-up k (1)
stack k j (1)
pick-up h (1)
stack h g (1)
pick-up f (1)
stack f k (1)
unstack a b (1)
stack a f (1)
unstack h g (1)
stack h a (1)
unstack g d (1)
put-down g (1)
pick-up d (1)
stack d b (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j d (1)
unstack e i (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=2.24781s, 432492 KB] Plan length: 67 step(s).
[t=2.24781s, 432492 KB] Plan cost: 67
[t=2.24781s, 432492 KB] Expanded 6367 state(s).
[t=2.24781s, 432492 KB] Reopened 1574 state(s).
[t=2.24781s, 432492 KB] Evaluated 11154 state(s).
[t=2.24781s, 432492 KB] Evaluations: 11154
[t=2.24781s, 432492 KB] Generated 25288 state(s).
[t=2.24781s, 432492 KB] Dead ends: 0 state(s).
[t=2.24781s, 432492 KB] Expanded until last jump: 0 state(s).
[t=2.24781s, 432492 KB] Reopened until last jump: 0 state(s).
[t=2.24781s, 432492 KB] Evaluated until last jump: 1 state(s).
[t=2.24781s, 432492 KB] Generated until last jump: 0 state(s).
[t=2.24781s, 432492 KB] Number of registered states: 11154
[t=2.24781s, 432492 KB] Int hash set load factor: 11154/16384 = 0.680786
[t=2.24781s, 432492 KB] Int hash set resizes: 14
[t=2.24781s, 432492 KB] Search time: 2.22129s
[t=2.24781s, 432492 KB] Total time: 2.24781s
Solution found.
Peak memory: 432492 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p166.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1466 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6472e-05s, 424928 KB] reading input...
[t=0.00222556s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259368s, 427536 KB] Building successor generator...done!
[t=0.0262184s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262422s, 427536 KB] time for successor generation creation: 0.000168451s
[t=0.0262706s, 427536 KB] Variables: 25
[t=0.0262927s, 427536 KB] FactPairs: 182
[t=0.0263149s, 427536 KB] Bytes per state: 8
[t=0.0265084s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109762s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.109819s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.109845s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.109872s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.109896s, 430128 KB] pruning method: none
[t=0.128235s, 431100 KB] f = 146, 3 evaluated, 1 expanded
[t=0.128486s, 431100 KB] f = 147, 4 evaluated, 2 expanded
[t=0.128521s, 431100 KB] f = 151, 4 evaluated, 3 expanded
[t=0.128916s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.128946s, 431100 KB] g=3, 6 evaluated, 4 expanded
[t=0.132207s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.132241s, 431100 KB] g=7, 23 evaluated, 13 expanded
[t=0.133s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.133031s, 431100 KB] g=8, 27 evaluated, 14 expanded
[t=0.135247s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.13528s, 431100 KB] g=10, 39 evaluated, 17 expanded
[t=0.13549s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.135519s, 431100 KB] g=10, 40 evaluated, 17 expanded
[t=0.137187s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.137218s, 431100 KB] g=11, 49 evaluated, 19 expanded
[t=0.137432s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.137462s, 431100 KB] g=12, 50 evaluated, 20 expanded
[t=0.141864s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.1419s, 431100 KB] g=17, 74 evaluated, 26 expanded
[t=0.146128s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.146161s, 431100 KB] g=19, 97 evaluated, 32 expanded
[t=0.146937s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.146969s, 431100 KB] g=20, 101 evaluated, 33 expanded
[t=0.14755s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.147591s, 431100 KB] g=21, 104 evaluated, 34 expanded
[t=0.150905s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.150938s, 431100 KB] g=26, 122 evaluated, 39 expanded
[t=0.153712s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.153743s, 431100 KB] g=28, 137 evaluated, 43 expanded
[t=0.154317s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.154349s, 431100 KB] g=29, 140 evaluated, 44 expanded
[t=0.166572s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.166609s, 431232 KB] g=31, 207 evaluated, 62 expanded
[t=0.199763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.1998s, 431232 KB] g=37, 389 evaluated, 113 expanded, 1 reopened
[t=0.231873s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.231911s, 431364 KB] g=41, 564 evaluated, 180 expanded, 12 reopened
[t=0.233943s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.233973s, 431364 KB] g=45, 575 evaluated, 185 expanded, 12 reopened
[t=0.253849s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.253886s, 431364 KB] g=47, 684 evaluated, 218 expanded, 12 reopened
[t=0.259189s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.259224s, 431364 KB] g=51, 713 evaluated, 224 expanded, 12 reopened
[t=0.262165s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.2622s, 431496 KB] g=52, 729 evaluated, 227 expanded, 12 reopened
[t=0.26334s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.263373s, 431496 KB] g=53, 735 evaluated, 228 expanded, 12 reopened
[t=0.265224s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.265255s, 431496 KB] g=53, 745 evaluated, 230 expanded, 12 reopened
[t=0.268756s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.268789s, 431496 KB] g=56, 764 evaluated, 234 expanded, 12 reopened
[t=0.269375s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.269405s, 431496 KB] g=57, 767 evaluated, 235 expanded, 12 reopened
[t=0.272183s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.272224s, 431496 KB] g=61, 782 evaluated, 239 expanded, 12 reopened
[t=0.272809s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.272839s, 431496 KB] g=62, 785 evaluated, 240 expanded, 12 reopened
[t=0.2747s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.274734s, 431496 KB] g=65, 795 evaluated, 244 expanded, 12 reopened
[t=0.3032s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.303238s, 431496 KB] g=68, 951 evaluated, 294 expanded, 13 reopened
[t=0.303816s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.303846s, 431496 KB] g=69, 954 evaluated, 295 expanded, 13 reopened
[t=0.30462s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.30465s, 431496 KB] g=70, 958 evaluated, 298 expanded, 13 reopened
[t=0.30468s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.304704s, 431496 KB] g=71, 959 evaluated, 299 expanded, 13 reopened
[t=0.30473s, 431496 KB] Solution found!
[t=0.304757s, 431496 KB] Actual search time: 0.194857s
put-down h (1)
unstack l a (1)
put-down l (1)
unstack a f (1)
put-down a (1)
unstack f g (1)
stack f a (1)
unstack g j (1)
put-down g (1)
unstack j k (1)
put-down j (1)
pick-up g (1)
stack g h (1)
pick-up j (1)
stack j f (1)
unstack k e (1)
stack k l (1)
unstack e b (1)
stack e k (1)
unstack j f (1)
stack j e (1)
unstack b d (1)
stack b j (1)
unstack d i (1)
put-down d (1)
unstack b j (1)
stack b d (1)
unstack f a (1)
stack f i (1)
pick-up a (1)
stack a b (1)
unstack g h (1)
put-down g (1)
unstack j e (1)
put-down j (1)
pick-up h (1)
stack h g (1)
pick-up j (1)
stack j f (1)
unstack a b (1)
stack a h (1)
unstack e k (1)
stack e b (1)
unstack j f (1)
put-down j (1)
unstack f i (1)
stack f a (1)
unstack i c (1)
put-down i (1)
unstack k l (1)
stack k f (1)
pick-up j (1)
stack j c (1)
unstack e b (1)
stack e k (1)
unstack j c (1)
stack j e (1)
pick-up l (1)
stack l c (1)
unstack b d (1)
put-down b (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.304781s, 431496 KB] Plan length: 71 step(s).
[t=0.304781s, 431496 KB] Plan cost: 71
[t=0.304781s, 431496 KB] Expanded 300 state(s).
[t=0.304781s, 431496 KB] Reopened 13 state(s).
[t=0.304781s, 431496 KB] Evaluated 959 state(s).
[t=0.304781s, 431496 KB] Evaluations: 959
[t=0.304781s, 431496 KB] Generated 1333 state(s).
[t=0.304781s, 431496 KB] Dead ends: 0 state(s).
[t=0.304781s, 431496 KB] Expanded until last jump: 3 state(s).
[t=0.304781s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.304781s, 431496 KB] Evaluated until last jump: 4 state(s).
[t=0.304781s, 431496 KB] Generated until last jump: 5 state(s).
[t=0.304781s, 431496 KB] Number of registered states: 959
[t=0.304781s, 431496 KB] Int hash set load factor: 959/1024 = 0.936523
[t=0.304781s, 431496 KB] Int hash set resizes: 10
[t=0.304781s, 431496 KB] Search time: 0.278273s
[t=0.304781s, 431496 KB] Total time: 0.304781s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p167.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6874e-05s, 424928 KB] reading input...
[t=0.00209914s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258956s, 427536 KB] Building successor generator...done!
[t=0.0261745s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261982s, 427536 KB] time for successor generation creation: 0.000167473s
[t=0.0262265s, 427536 KB] Variables: 25
[t=0.0262487s, 427536 KB] FactPairs: 182
[t=0.0262705s, 427536 KB] Bytes per state: 8
[t=0.0264644s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988056s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0988555s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988805s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0989073s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0989403s, 430128 KB] pruning method: none
[t=0.110799s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.11085s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117708s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.117751s, 431100 KB] g=2, 5 evaluated, 2 expanded
[t=0.119662s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.119692s, 431100 KB] g=4, 15 evaluated, 5 expanded
[t=0.125s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.125033s, 431100 KB] g=11, 43 evaluated, 16 expanded
[t=0.125627s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.125657s, 431100 KB] g=12, 46 evaluated, 17 expanded
[t=0.128134s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.12817s, 431100 KB] g=16, 59 evaluated, 23 expanded
[t=0.133468s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.133501s, 431100 KB] g=12, 87 evaluated, 34 expanded
[t=0.142562s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.142598s, 431100 KB] g=24, 135 evaluated, 59 expanded, 1 reopened
[t=0.145259s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.145294s, 431100 KB] g=18, 149 evaluated, 65 expanded, 1 reopened
[t=0.146447s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.14648s, 431100 KB] g=20, 155 evaluated, 67 expanded, 1 reopened
[t=0.147633s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.147663s, 431100 KB] g=21, 161 evaluated, 68 expanded, 1 reopened
[t=0.148082s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.148114s, 431100 KB] g=22, 163 evaluated, 69 expanded, 1 reopened
[t=0.148708s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.148741s, 431100 KB] g=23, 166 evaluated, 70 expanded, 1 reopened
[t=0.150826s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.150856s, 431100 KB] g=24, 177 evaluated, 73 expanded, 1 reopened
[t=0.152776s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.152808s, 431232 KB] g=25, 187 evaluated, 77 expanded, 1 reopened
[t=0.154152s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.15419s, 431232 KB] g=27, 194 evaluated, 79 expanded, 1 reopened
[t=0.154408s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.154436s, 431232 KB] g=27, 195 evaluated, 79 expanded, 1 reopened
[t=0.16159s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.161626s, 431232 KB] g=28, 233 evaluated, 91 expanded, 1 reopened
[t=0.162037s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.162066s, 431232 KB] g=29, 235 evaluated, 92 expanded, 1 reopened
[t=0.174523s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.174557s, 431232 KB] g=32, 301 evaluated, 119 expanded, 2 reopened
[t=0.175535s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.175566s, 431232 KB] g=33, 306 evaluated, 121 expanded, 2 reopened
[t=0.176556s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.176587s, 431232 KB] g=35, 311 evaluated, 124 expanded, 2 reopened
[t=0.176808s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.176837s, 431232 KB] g=36, 312 evaluated, 125 expanded, 2 reopened
[t=0.178383s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.178413s, 431232 KB] g=39, 320 evaluated, 130 expanded, 2 reopened
[t=0.178443s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.178467s, 431232 KB] g=40, 321 evaluated, 131 expanded, 2 reopened
[t=0.178493s, 431232 KB] Solution found!
[t=0.178517s, 431232 KB] Actual search time: 0.0795729s
unstack g e (1)
put-down g (1)
unstack f h (1)
stack f e (1)
pick-up g (1)
stack g a (1)
unstack h j (1)
stack h f (1)
unstack g a (1)
put-down g (1)
unstack j k (1)
put-down j (1)
pick-up a (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.178542s, 431232 KB] Plan length: 40 step(s).
[t=0.178542s, 431232 KB] Plan cost: 40
[t=0.178542s, 431232 KB] Expanded 132 state(s).
[t=0.178542s, 431232 KB] Reopened 2 state(s).
[t=0.178542s, 431232 KB] Evaluated 321 state(s).
[t=0.178542s, 431232 KB] Evaluations: 321
[t=0.178542s, 431232 KB] Generated 475 state(s).
[t=0.178542s, 431232 KB] Dead ends: 0 state(s).
[t=0.178542s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.178542s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.178542s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.178542s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.178542s, 431232 KB] Number of registered states: 321
[t=0.178542s, 431232 KB] Int hash set load factor: 321/512 = 0.626953
[t=0.178542s, 431232 KB] Int hash set resizes: 9
[t=0.178542s, 431232 KB] Search time: 0.152078s
[t=0.178542s, 431232 KB] Total time: 0.178542s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p168.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.697e-05s, 424928 KB] reading input...
[t=0.00219192s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257581s, 427536 KB] Building successor generator...done!
[t=0.0260342s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026058s, 427536 KB] time for successor generation creation: 0.000166108s
[t=0.0260871s, 427536 KB] Variables: 25
[t=0.0261101s, 427536 KB] FactPairs: 182
[t=0.0261326s, 427536 KB] Bytes per state: 8
[t=0.0263283s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985785s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0986311s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098657s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0986842s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0987081s, 430128 KB] pruning method: none
[t=0.117367s, 431100 KB] f = 148, 4 evaluated, 1 expanded
[t=0.11779s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.117822s, 431100 KB] g=3, 6 evaluated, 3 expanded
[t=0.119292s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.119324s, 431100 KB] g=6, 14 evaluated, 7 expanded
[t=0.120254s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.120285s, 431100 KB] g=7, 19 evaluated, 8 expanded
[t=0.121054s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.121086s, 431100 KB] g=8, 23 evaluated, 9 expanded
[t=0.121299s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.121328s, 431100 KB] g=9, 24 evaluated, 10 expanded
[t=0.121713s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.121743s, 431100 KB] g=9, 26 evaluated, 10 expanded
[t=0.121949s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.121978s, 431100 KB] g=9, 27 evaluated, 10 expanded
[t=0.122544s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.122574s, 431100 KB] g=10, 30 evaluated, 11 expanded
[t=0.135295s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.13533s, 431100 KB] g=18, 101 evaluated, 33 expanded
[t=0.142737s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.142773s, 431100 KB] g=15, 142 evaluated, 51 expanded, 3 reopened
[t=0.145501s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.14554s, 431232 KB] g=19, 157 evaluated, 58 expanded, 3 reopened
[t=0.149329s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.149365s, 431232 KB] g=21, 178 evaluated, 64 expanded, 3 reopened
[t=0.150293s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.150324s, 431232 KB] g=22, 183 evaluated, 65 expanded, 3 reopened
[t=0.15752s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.157565s, 431232 KB] g=27, 223 evaluated, 75 expanded, 3 reopened
[t=0.159562s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.159595s, 431232 KB] g=30, 234 evaluated, 79 expanded, 3 reopened
[t=0.159806s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.159835s, 431232 KB] g=30, 235 evaluated, 79 expanded, 3 reopened
[t=0.170064s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.170101s, 431232 KB] g=32, 292 evaluated, 96 expanded, 3 reopened
[t=0.170852s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.170882s, 431232 KB] g=33, 296 evaluated, 97 expanded, 3 reopened
[t=0.173958s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.173993s, 431232 KB] g=36, 313 evaluated, 104 expanded, 3 reopened
[t=0.176727s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.17676s, 431232 KB] g=39, 328 evaluated, 110 expanded, 3 reopened
[t=0.184499s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.184535s, 431232 KB] g=43, 371 evaluated, 127 expanded, 3 reopened
[t=0.195652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.195688s, 431232 KB] g=45, 433 evaluated, 148 expanded, 3 reopened
[t=0.1977s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.197734s, 431232 KB] g=49, 444 evaluated, 152 expanded, 3 reopened
[t=0.20028s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.200312s, 431232 KB] g=53, 458 evaluated, 158 expanded, 3 reopened
[t=0.200533s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.200567s, 431232 KB] g=53, 459 evaluated, 158 expanded, 3 reopened
[t=0.20096s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.20099s, 431232 KB] g=54, 461 evaluated, 159 expanded, 3 reopened
[t=0.205904s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.205939s, 431364 KB] g=55, 488 evaluated, 175 expanded, 7 reopened
[t=0.218502s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.218538s, 431364 KB] g=51, 557 evaluated, 229 expanded, 26 reopened
[t=0.218937s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.218973s, 431364 KB] g=53, 560 evaluated, 231 expanded, 26 reopened
[t=0.219001s, 431364 KB] Solution found!
[t=0.219028s, 431364 KB] Actual search time: 0.120316s
stack k j (1)
unstack h f (1)
put-down h (1)
unstack k j (1)
put-down k (1)
unstack f l (1)
stack f k (1)
unstack l g (1)
put-down l (1)
pick-up h (1)
stack h j (1)
unstack g a (1)
stack g h (1)
pick-up a (1)
stack a f (1)
unstack g h (1)
put-down g (1)
unstack h j (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack j e (1)
put-down j (1)
unstack f k (1)
stack f e (1)
pick-up k (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k e (1)
pick-up j (1)
stack j l (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.219053s, 431364 KB] Plan length: 53 step(s).
[t=0.219053s, 431364 KB] Plan cost: 53
[t=0.219053s, 431364 KB] Expanded 232 state(s).
[t=0.219053s, 431364 KB] Reopened 26 state(s).
[t=0.219053s, 431364 KB] Evaluated 560 state(s).
[t=0.219053s, 431364 KB] Evaluations: 560
[t=0.219053s, 431364 KB] Generated 883 state(s).
[t=0.219053s, 431364 KB] Dead ends: 0 state(s).
[t=0.219053s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.219053s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.219053s, 431364 KB] Evaluated until last jump: 4 state(s).
[t=0.219053s, 431364 KB] Generated until last jump: 3 state(s).
[t=0.219053s, 431364 KB] Number of registered states: 560
[t=0.219053s, 431364 KB] Int hash set load factor: 560/1024 = 0.546875
[t=0.219053s, 431364 KB] Int hash set resizes: 10
[t=0.219053s, 431364 KB] Search time: 0.192725s
[t=0.219053s, 431364 KB] Total time: 0.219053s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p169.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5987e-05s, 424928 KB] reading input...
[t=0.00214844s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0256868s, 427536 KB] Building successor generator...done!
[t=0.0259826s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260063s, 427536 KB] time for successor generation creation: 0.000184436s
[t=0.026035s, 427536 KB] Variables: 25
[t=0.0260586s, 427536 KB] FactPairs: 182
[t=0.0260811s, 427536 KB] Bytes per state: 8
[t=0.0262762s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0981518s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.0982038s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098229s, 430128 KB] f = 90, 1 evaluated, 0 expanded
[t=0.0982562s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.0982805s, 430128 KB] pruning method: none
[t=0.116862s, 431100 KB] f = 95, 5 evaluated, 1 expanded
[t=0.117285s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.117317s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.119177s, 431100 KB] f = 96, 17 evaluated, 6 expanded
[t=0.119765s, 431100 KB] f = 97, 20 evaluated, 7 expanded
[t=0.120714s, 431100 KB] f = 98, 25 evaluated, 9 expanded
[t=0.122042s, 431100 KB] f = 99, 32 evaluated, 12 expanded
[t=0.123532s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.123563s, 431100 KB] g=7, 40 evaluated, 15 expanded
[t=0.154856s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.154892s, 431232 KB] g=22, 212 evaluated, 72 expanded, 1 reopened
[t=0.156687s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.15672s, 431232 KB] g=24, 221 evaluated, 74 expanded, 1 reopened
[t=0.159669s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.159704s, 431232 KB] g=26, 237 evaluated, 78 expanded, 1 reopened
[t=0.161181s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.161225s, 431232 KB] g=27, 245 evaluated, 79 expanded, 1 reopened
[t=0.171266s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.1713s, 431232 KB] g=27, 300 evaluated, 94 expanded, 1 reopened
[t=0.174239s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.174273s, 431232 KB] g=29, 316 evaluated, 99 expanded, 1 reopened
[t=0.175574s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.175608s, 431232 KB] g=31, 323 evaluated, 101 expanded, 1 reopened
[t=0.17582s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.175849s, 431232 KB] g=31, 324 evaluated, 101 expanded, 1 reopened
[t=0.1766s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.176633s, 431232 KB] g=32, 328 evaluated, 102 expanded, 1 reopened
[t=0.178486s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.178519s, 431232 KB] g=35, 338 evaluated, 105 expanded, 1 reopened
[t=0.181102s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.181133s, 431232 KB] g=38, 352 evaluated, 112 expanded, 1 reopened
[t=0.181903s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.181935s, 431232 KB] g=39, 356 evaluated, 113 expanded, 1 reopened
[t=0.184866s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.184897s, 431232 KB] g=42, 372 evaluated, 118 expanded, 1 reopened
[t=0.18675s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.186783s, 431232 KB] g=42, 382 evaluated, 121 expanded, 1 reopened
[t=0.187727s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.187758s, 431232 KB] g=45, 387 evaluated, 124 expanded, 1 reopened
[t=0.188337s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.18837s, 431232 KB] g=47, 390 evaluated, 126 expanded, 1 reopened
[t=0.188581s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.188611s, 431232 KB] g=47, 391 evaluated, 126 expanded, 1 reopened
[t=0.202006s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.202041s, 431364 KB] g=54, 464 evaluated, 170 expanded, 4 reopened
[t=0.202072s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.202097s, 431364 KB] g=55, 465 evaluated, 171 expanded, 4 reopened
[t=0.202129s, 431364 KB] Solution found!
[t=0.202156s, 431364 KB] Actual search time: 0.103871s
stack g h (1)
unstack l a (1)
put-down l (1)
unstack e f (1)
stack e a (1)
unstack f j (1)
stack f e (1)
pick-up j (1)
stack j l (1)
unstack f e (1)
put-down f (1)
unstack e a (1)
put-down e (1)
unstack j l (1)
put-down j (1)
pick-up e (1)
stack e j (1)
pick-up f (1)
stack f e (1)
unstack g h (1)
put-down g (1)
unstack h b (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k b (1)
unstack f e (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
stack i d (1)
pick-up l (1)
stack l c (1)
unstack i d (1)
put-down i (1)
pick-up b (1)
stack b i (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.20218s, 431364 KB] Plan length: 55 step(s).
[t=0.20218s, 431364 KB] Plan cost: 55
[t=0.20218s, 431364 KB] Expanded 172 state(s).
[t=0.20218s, 431364 KB] Reopened 4 state(s).
[t=0.20218s, 431364 KB] Evaluated 465 state(s).
[t=0.20218s, 431364 KB] Evaluations: 465
[t=0.20218s, 431364 KB] Generated 657 state(s).
[t=0.20218s, 431364 KB] Dead ends: 0 state(s).
[t=0.20218s, 431364 KB] Expanded until last jump: 12 state(s).
[t=0.20218s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.20218s, 431364 KB] Evaluated until last jump: 32 state(s).
[t=0.20218s, 431364 KB] Generated until last jump: 42 state(s).
[t=0.20218s, 431364 KB] Number of registered states: 465
[t=0.20218s, 431364 KB] Int hash set load factor: 465/512 = 0.908203
[t=0.20218s, 431364 KB] Int hash set resizes: 9
[t=0.20218s, 431364 KB] Search time: 0.175905s
[t=0.20218s, 431364 KB] Total time: 0.20218s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p170.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5629e-05s, 424928 KB] reading input...
[t=0.00218448s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258288s, 427536 KB] Building successor generator...done!
[t=0.0261094s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261332s, 427536 KB] time for successor generation creation: 0.00016782s
[t=0.0261618s, 427536 KB] Variables: 25
[t=0.0261848s, 427536 KB] FactPairs: 182
[t=0.0262069s, 427536 KB] Bytes per state: 8
[t=0.0264002s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982338s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.0982855s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983119s, 430128 KB] f = 100, 1 evaluated, 0 expanded
[t=0.0983396s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.098364s, 430128 KB] pruning method: none
[t=0.116972s, 431100 KB] f = 105, 5 evaluated, 1 expanded
[t=0.117573s, 431100 KB] f = 106, 8 evaluated, 2 expanded
[t=0.118329s, 431100 KB] f = 116, 12 evaluated, 3 expanded
[t=0.118905s, 431100 KB] f = 120, 15 evaluated, 4 expanded
[t=0.119485s, 431100 KB] f = 126, 18 evaluated, 5 expanded
[t=0.120081s, 431100 KB] f = 131, 21 evaluated, 6 expanded
[t=0.123s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.123033s, 431100 KB] g=5, 37 evaluated, 11 expanded
[t=0.123971s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.124005s, 431100 KB] g=6, 42 evaluated, 12 expanded
[t=0.12476s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.124791s, 431100 KB] g=7, 46 evaluated, 13 expanded
[t=0.125007s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.125036s, 431100 KB] g=8, 47 evaluated, 14 expanded
[t=0.125424s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.125454s, 431100 KB] g=8, 49 evaluated, 14 expanded
[t=0.125848s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.12589s, 431100 KB] g=9, 51 evaluated, 15 expanded
[t=0.126824s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.126854s, 431100 KB] g=10, 56 evaluated, 16 expanded
[t=0.152594s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.152635s, 431232 KB] g=22, 198 evaluated, 62 expanded, 2 reopened
[t=0.157945s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.157983s, 431232 KB] g=27, 227 evaluated, 71 expanded, 2 reopened
[t=0.161824s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.161861s, 431232 KB] g=30, 248 evaluated, 76 expanded, 2 reopened
[t=0.174365s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.174404s, 431232 KB] g=32, 317 evaluated, 96 expanded, 2 reopened
[t=0.470037s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.470083s, 431628 KB] g=38, 1964 evaluated, 615 expanded, 42 reopened
[t=0.471903s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.47194s, 431628 KB] g=39, 1973 evaluated, 617 expanded, 42 reopened
[t=0.474855s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.474892s, 431628 KB] g=42, 1989 evaluated, 622 expanded, 42 reopened
[t=0.476238s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.476275s, 431628 KB] g=43, 1996 evaluated, 624 expanded, 42 reopened
[t=0.491546s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.491585s, 431628 KB] g=47, 2080 evaluated, 656 expanded, 42 reopened
[t=0.492226s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.492262s, 431628 KB] g=49, 2083 evaluated, 658 expanded, 42 reopened
[t=0.492682s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.492714s, 431628 KB] g=49, 2085 evaluated, 658 expanded, 42 reopened
[t=0.493684s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.493718s, 431628 KB] g=50, 2090 evaluated, 660 expanded, 42 reopened
[t=0.495923s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.495957s, 431628 KB] g=51, 2102 evaluated, 665 expanded, 42 reopened
[t=0.49653s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.49656s, 431628 KB] g=52, 2105 evaluated, 666 expanded, 42 reopened
[t=0.496962s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.496996s, 431628 KB] g=53, 2107 evaluated, 667 expanded, 42 reopened
[t=0.497393s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.497423s, 431628 KB] g=55, 2109 evaluated, 669 expanded, 42 reopened
[t=0.509922s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.50996s, 431760 KB] g=55, 2177 evaluated, 707 expanded, 43 reopened
[t=0.51534s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.515377s, 431760 KB] g=58, 2206 evaluated, 733 expanded, 52 reopened
[t=0.515408s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.515432s, 431760 KB] g=59, 2207 evaluated, 734 expanded, 52 reopened
[t=0.515459s, 431760 KB] Solution found!
[t=0.515485s, 431760 KB] Actual search time: 0.417116s
put-down k (1)
unstack l a (1)
stack l j (1)
unstack a h (1)
stack a k (1)
unstack l j (1)
put-down l (1)
pick-up h (1)
stack h a (1)
unstack j f (1)
put-down j (1)
pick-up g (1)
stack g h (1)
unstack f e (1)
stack f g (1)
unstack e b (1)
stack e j (1)
unstack f g (1)
stack f e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
stack i d (1)
pick-up c (1)
stack c b (1)
unstack g h (1)
put-down g (1)
unstack i d (1)
stack i c (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
put-down i (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.515509s, 431760 KB] Plan length: 59 step(s).
[t=0.515509s, 431760 KB] Plan cost: 59
[t=0.515509s, 431760 KB] Expanded 735 state(s).
[t=0.515509s, 431760 KB] Reopened 52 state(s).
[t=0.515509s, 431760 KB] Evaluated 2207 state(s).
[t=0.515509s, 431760 KB] Evaluations: 2207
[t=0.515509s, 431760 KB] Generated 3359 state(s).
[t=0.515509s, 431760 KB] Dead ends: 0 state(s).
[t=0.515509s, 431760 KB] Expanded until last jump: 6 state(s).
[t=0.515509s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.515509s, 431760 KB] Evaluated until last jump: 21 state(s).
[t=0.515509s, 431760 KB] Generated until last jump: 25 state(s).
[t=0.515509s, 431760 KB] Number of registered states: 2207
[t=0.515509s, 431760 KB] Int hash set load factor: 2207/4096 = 0.538818
[t=0.515509s, 431760 KB] Int hash set resizes: 12
[t=0.515509s, 431760 KB] Search time: 0.48911s
[t=0.515509s, 431760 KB] Total time: 0.515509s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p171.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8274e-05s, 424928 KB] reading input...
[t=0.00213597s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260133s, 427536 KB] Building successor generator...done!
[t=0.0262919s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026315s, 427536 KB] time for successor generation creation: 0.000167048s
[t=0.0263425s, 427536 KB] Variables: 25
[t=0.0263645s, 427536 KB] FactPairs: 182
[t=0.0263861s, 427536 KB] Bytes per state: 8
[t=0.0265821s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106876s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.10693s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106955s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.106982s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.107005s, 430128 KB] pruning method: none
[t=0.118887s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.118936s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.125378s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.12543s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.125657s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.125687s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.1261s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.12613s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.127862s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.127895s, 431100 KB] g=4, 15 evaluated, 5 expanded
[t=0.128306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.128336s, 431100 KB] g=5, 17 evaluated, 6 expanded
[t=0.129304s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.129333s, 431100 KB] g=7, 22 evaluated, 8 expanded
[t=0.130485s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.130515s, 431100 KB] g=9, 28 evaluated, 10 expanded
[t=0.130934s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.130967s, 431100 KB] g=10, 30 evaluated, 11 expanded
[t=0.147885s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.147924s, 431100 KB] g=23, 120 evaluated, 42 expanded
[t=0.255575s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.255619s, 431364 KB] g=39, 690 evaluated, 229 expanded, 9 reopened
[t=0.257915s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.257951s, 431364 KB] g=41, 702 evaluated, 232 expanded, 9 reopened
[t=0.258176s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.258205s, 431364 KB] g=42, 703 evaluated, 233 expanded, 9 reopened
[t=0.258421s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.25845s, 431364 KB] g=42, 704 evaluated, 233 expanded, 9 reopened
[t=0.25907s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.259107s, 431364 KB] g=43, 707 evaluated, 234 expanded, 9 reopened
[t=0.261971s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.262006s, 431364 KB] g=47, 722 evaluated, 239 expanded, 9 reopened
[t=0.26547s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.265506s, 431364 KB] g=48, 740 evaluated, 248 expanded, 10 reopened
[t=0.268386s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.268427s, 431364 KB] g=52, 755 evaluated, 253 expanded, 10 reopened
[t=0.27528s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.275318s, 431496 KB] g=57, 791 evaluated, 264 expanded, 10 reopened
[t=0.275543s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.275575s, 431496 KB] g=58, 792 evaluated, 265 expanded, 10 reopened
[t=0.275989s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.276019s, 431496 KB] g=59, 794 evaluated, 266 expanded, 10 reopened
[t=0.276431s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.27646s, 431496 KB] g=60, 796 evaluated, 267 expanded, 10 reopened
[t=0.276683s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.276712s, 431496 KB] g=61, 797 evaluated, 268 expanded, 10 reopened
[t=0.277309s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.277339s, 431496 KB] g=62, 800 evaluated, 269 expanded, 10 reopened
[t=0.29873s, 431496 KB] Solution found!
[t=0.298788s, 431496 KB] Actual search time: 0.191782s
unstack e h (1)
stack e b (1)
unstack g j (1)
stack g h (1)
unstack j l (1)
stack j e (1)
unstack l k (1)
put-down l (1)
pick-up k (1)
stack k l (1)
unstack j e (1)
put-down j (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
put-down d (1)
pick-up b (1)
stack b d (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
unstack g h (1)
put-down g (1)
pick-up i (1)
stack i c (1)
unstack h a (1)
stack h g (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e j (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack i c (1)
stack i j (1)
unstack c b (1)
put-down c (1)
unstack i j (1)
stack i c (1)
unstack b d (1)
put-down b (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.298815s, 431496 KB] Plan length: 66 step(s).
[t=0.298815s, 431496 KB] Plan cost: 66
[t=0.298815s, 431496 KB] Expanded 323 state(s).
[t=0.298815s, 431496 KB] Reopened 14 state(s).
[t=0.298815s, 431496 KB] Evaluated 914 state(s).
[t=0.298815s, 431496 KB] Evaluations: 914
[t=0.298815s, 431496 KB] Generated 1336 state(s).
[t=0.298815s, 431496 KB] Dead ends: 0 state(s).
[t=0.298815s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.298815s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.298815s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.298815s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.298815s, 431496 KB] Number of registered states: 914
[t=0.298815s, 431496 KB] Int hash set load factor: 914/1024 = 0.892578
[t=0.298815s, 431496 KB] Int hash set resizes: 10
[t=0.298815s, 431496 KB] Search time: 0.272234s
[t=0.298815s, 431496 KB] Total time: 0.298815s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p172.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6135e-05s, 424928 KB] reading input...
[t=0.00218239s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260742s, 427536 KB] Building successor generator...done!
[t=0.026356s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263801s, 427536 KB] time for successor generation creation: 0.00016797s
[t=0.026409s, 427536 KB] Variables: 25
[t=0.0264322s, 427536 KB] FactPairs: 182
[t=0.0264549s, 427536 KB] Bytes per state: 8
[t=0.0266504s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991711s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.099223s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992489s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0992769s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0993117s, 430128 KB] pruning method: none
[t=0.117653s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.117703s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118109s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.11814s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.12254s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.122576s, 431100 KB] g=4, 29 evaluated, 9 expanded
[t=0.123896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.12393s, 431100 KB] g=5, 36 evaluated, 11 expanded
[t=0.125408s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.125439s, 431100 KB] g=7, 44 evaluated, 13 expanded
[t=0.134185s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.134223s, 431100 KB] g=15, 92 evaluated, 22 expanded
[t=0.153705s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.153745s, 431232 KB] g=22, 199 evaluated, 46 expanded
[t=0.157612s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.157647s, 431232 KB] g=23, 220 evaluated, 50 expanded
[t=0.161326s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.161365s, 431232 KB] g=26, 240 evaluated, 55 expanded
[t=0.165255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.165293s, 431232 KB] g=28, 261 evaluated, 60 expanded
[t=0.178221s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.178259s, 431232 KB] g=32, 332 evaluated, 78 expanded
[t=0.179214s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.179248s, 431232 KB] g=33, 337 evaluated, 79 expanded
[t=0.183473s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.183509s, 431232 KB] g=39, 360 evaluated, 85 expanded
[t=0.183908s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.183939s, 431232 KB] g=40, 362 evaluated, 86 expanded
[t=0.18525s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.185283s, 431232 KB] g=41, 369 evaluated, 88 expanded
[t=0.187335s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.187379s, 431364 KB] g=44, 380 evaluated, 91 expanded
[t=0.187778s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.187808s, 431364 KB] g=44, 382 evaluated, 91 expanded
[t=0.188024s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.188053s, 431364 KB] g=45, 383 evaluated, 92 expanded
[t=0.202835s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.202872s, 431364 KB] g=50, 464 evaluated, 115 expanded
[t=0.203657s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.203689s, 431364 KB] g=51, 468 evaluated, 116 expanded
[t=0.208084s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.20812s, 431364 KB] g=53, 492 evaluated, 123 expanded
[t=0.210878s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.210924s, 431364 KB] g=55, 507 evaluated, 128 expanded
[t=0.21428s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.214313s, 431364 KB] g=57, 525 evaluated, 135 expanded
[t=0.214911s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.214943s, 431364 KB] g=58, 528 evaluated, 136 expanded
[t=0.217524s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.217558s, 431364 KB] g=57, 542 evaluated, 142 expanded
[t=0.218865s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.218906s, 431364 KB] g=60, 549 evaluated, 145 expanded
[t=0.228834s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.228873s, 431364 KB] g=66, 604 evaluated, 185 expanded
[t=0.228901s, 431364 KB] Solution found!
[t=0.228928s, 431364 KB] Actual search time: 0.129611s
unstack d b (1)
stack d i (1)
unstack b h (1)
stack b j (1)
unstack d i (1)
put-down d (1)
unstack h k (1)
put-down h (1)
unstack k e (1)
stack k i (1)
unstack b j (1)
stack b d (1)
unstack c f (1)
stack c j (1)
pick-up h (1)
stack h e (1)
unstack k i (1)
stack k f (1)
unstack i g (1)
stack i c (1)
unstack k f (1)
stack k i (1)
unstack h e (1)
stack h g (1)
pick-up f (1)
stack f k (1)
unstack h g (1)
stack h e (1)
unstack g a (1)
put-down g (1)
unstack h e (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack e l (1)
stack e b (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack i c (1)
stack i l (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack c j (1)
put-down c (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
stack i c (1)
pick-up b (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.228953s, 431364 KB] Plan length: 66 step(s).
[t=0.228953s, 431364 KB] Plan cost: 66
[t=0.228953s, 431364 KB] Expanded 186 state(s).
[t=0.228953s, 431364 KB] Reopened 0 state(s).
[t=0.228953s, 431364 KB] Evaluated 604 state(s).
[t=0.228953s, 431364 KB] Evaluations: 604
[t=0.228953s, 431364 KB] Generated 806 state(s).
[t=0.228953s, 431364 KB] Dead ends: 0 state(s).
[t=0.228953s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.228953s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.228953s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.228953s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.228953s, 431364 KB] Number of registered states: 604
[t=0.228953s, 431364 KB] Int hash set load factor: 604/1024 = 0.589844
[t=0.228953s, 431364 KB] Int hash set resizes: 10
[t=0.228953s, 431364 KB] Search time: 0.202303s
[t=0.228953s, 431364 KB] Total time: 0.228953s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p173.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.050s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6327e-05s, 424928 KB] reading input...
[t=0.00220141s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258149s, 427536 KB] Building successor generator...done!
[t=0.0260887s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261119s, 427536 KB] time for successor generation creation: 0.000163958s
[t=0.0261551s, 427536 KB] Variables: 25
[t=0.026178s, 427536 KB] FactPairs: 182
[t=0.0262005s, 427536 KB] Bytes per state: 8
[t=0.0263969s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980715s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0981332s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981591s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0981865s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0982103s, 430128 KB] pruning method: none
[t=0.109987s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.110039s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117757s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.117801s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.118382s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.118415s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.119169s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.1192s, 431100 KB] g=4, 17 evaluated, 4 expanded
[t=0.122304s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.122338s, 431100 KB] g=7, 34 evaluated, 8 expanded
[t=0.125243s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.125274s, 431100 KB] g=10, 50 evaluated, 13 expanded
[t=0.129455s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.129488s, 431100 KB] g=12, 73 evaluated, 19 expanded
[t=0.145211s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.145247s, 431100 KB] g=16, 160 evaluated, 43 expanded
[t=0.152148s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.152183s, 431232 KB] g=21, 198 evaluated, 52 expanded
[t=0.158177s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.158211s, 431232 KB] g=27, 231 evaluated, 59 expanded
[t=0.167846s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.167883s, 431232 KB] g=29, 284 evaluated, 71 expanded
[t=0.180698s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.180733s, 431232 KB] g=30, 355 evaluated, 85 expanded
[t=0.188172s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.188209s, 431364 KB] g=32, 396 evaluated, 95 expanded
[t=0.202509s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.202547s, 431364 KB] g=36, 475 evaluated, 115 expanded
[t=0.210944s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.210981s, 431364 KB] g=40, 521 evaluated, 128 expanded
[t=0.270799s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.270843s, 431496 KB] g=30, 853 evaluated, 227 expanded, 1 reopened
[t=0.27142s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.27145s, 431496 KB] g=31, 856 evaluated, 228 expanded, 1 reopened
[t=0.272014s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.272044s, 431496 KB] g=31, 859 evaluated, 228 expanded, 1 reopened
[t=0.272256s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.272285s, 431496 KB] g=32, 860 evaluated, 229 expanded, 1 reopened
[t=0.274476s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.27451s, 431496 KB] g=34, 872 evaluated, 231 expanded, 1 reopened
[t=0.27526s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.275293s, 431496 KB] g=35, 876 evaluated, 232 expanded, 1 reopened
[t=0.276937s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.27697s, 431496 KB] g=36, 885 evaluated, 234 expanded, 1 reopened
[t=0.277179s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.277208s, 431496 KB] g=36, 886 evaluated, 234 expanded, 1 reopened
[t=0.277777s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.277808s, 431496 KB] g=37, 889 evaluated, 235 expanded, 1 reopened
[t=0.278385s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.278417s, 431496 KB] g=38, 892 evaluated, 236 expanded, 1 reopened
[t=0.280072s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.280104s, 431496 KB] g=40, 901 evaluated, 239 expanded, 1 reopened
[t=0.280492s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.280528s, 431496 KB] g=40, 903 evaluated, 239 expanded, 1 reopened
[t=0.285955s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.285992s, 431496 KB] g=43, 933 evaluated, 248 expanded, 1 reopened
[t=0.28729s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.287321s, 431496 KB] g=45, 940 evaluated, 250 expanded, 1 reopened
[t=0.288248s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.28828s, 431496 KB] g=46, 945 evaluated, 251 expanded, 1 reopened
[t=0.289029s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.289059s, 431496 KB] g=47, 949 evaluated, 252 expanded, 1 reopened
[t=0.289272s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.289302s, 431496 KB] g=48, 950 evaluated, 253 expanded, 1 reopened
[t=0.290069s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.290102s, 431496 KB] g=49, 954 evaluated, 254 expanded, 1 reopened
[t=0.290677s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.290708s, 431496 KB] g=50, 957 evaluated, 255 expanded, 1 reopened
[t=0.292908s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.292943s, 431628 KB] g=52, 969 evaluated, 260 expanded, 1 reopened
[t=0.298229s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.298263s, 431628 KB] g=52, 998 evaluated, 273 expanded, 1 reopened
[t=0.298667s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.298696s, 431628 KB] g=54, 1001 evaluated, 275 expanded, 1 reopened
[t=0.298724s, 431628 KB] Solution found!
[t=0.29875s, 431628 KB] Actual search time: 0.200536s
unstack g d (1)
stack g h (1)
unstack d l (1)
stack d c (1)
pick-up e (1)
stack e k (1)
unstack d c (1)
put-down d (1)
unstack l f (1)
stack l d (1)
unstack g h (1)
put-down g (1)
unstack h b (1)
stack h g (1)
pick-up c (1)
stack c l (1)
unstack b j (1)
stack b c (1)
unstack j a (1)
stack j e (1)
unstack b c (1)
stack b j (1)
unstack a i (1)
stack a h (1)
unstack c l (1)
put-down c (1)
unstack b j (1)
stack b l (1)
unstack j e (1)
stack j i (1)
pick-up f (1)
stack f a (1)
unstack e k (1)
stack e j (1)
pick-up k (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack b l (1)
put-down b (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.298775s, 431628 KB] Plan length: 54 step(s).
[t=0.298775s, 431628 KB] Plan cost: 54
[t=0.298775s, 431628 KB] Expanded 276 state(s).
[t=0.298775s, 431628 KB] Reopened 1 state(s).
[t=0.298775s, 431628 KB] Evaluated 1001 state(s).
[t=0.298775s, 431628 KB] Evaluations: 1001
[t=0.298775s, 431628 KB] Generated 1312 state(s).
[t=0.298775s, 431628 KB] Dead ends: 0 state(s).
[t=0.298775s, 431628 KB] Expanded until last jump: 0 state(s).
[t=0.298775s, 431628 KB] Reopened until last jump: 0 state(s).
[t=0.298775s, 431628 KB] Evaluated until last jump: 1 state(s).
[t=0.298775s, 431628 KB] Generated until last jump: 0 state(s).
[t=0.298775s, 431628 KB] Number of registered states: 1001
[t=0.298775s, 431628 KB] Int hash set load factor: 1001/1024 = 0.977539
[t=0.298775s, 431628 KB] Int hash set resizes: 10
[t=0.298775s, 431628 KB] Search time: 0.272379s
[t=0.298775s, 431628 KB] Total time: 0.298775s
Solution found.
Peak memory: 431628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p174.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6508e-05s, 424928 KB] reading input...
[t=0.00218411s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258892s, 427536 KB] Building successor generator...done!
[t=0.0261662s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261897s, 427536 KB] time for successor generation creation: 0.000167084s
[t=0.0262186s, 427536 KB] Variables: 25
[t=0.0262409s, 427536 KB] FactPairs: 182
[t=0.026263s, 427536 KB] Bytes per state: 8
[t=0.0264522s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980366s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0980885s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981141s, 430128 KB] f = 108, 1 evaluated, 0 expanded
[t=0.0981418s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.0981656s, 430128 KB] pruning method: none
[t=0.116656s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.11672s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118193s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.118224s, 431100 KB] g=4, 13 evaluated, 4 expanded
[t=0.119143s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.119174s, 431100 KB] g=5, 18 evaluated, 5 expanded
[t=0.120274s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.120305s, 431100 KB] g=6, 24 evaluated, 6 expanded
[t=0.126049s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.126083s, 431100 KB] g=11, 56 evaluated, 13 expanded
[t=0.129326s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.129359s, 431100 KB] g=13, 74 evaluated, 16 expanded
[t=0.129929s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.129963s, 431100 KB] g=14, 77 evaluated, 17 expanded
[t=0.130174s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.130202s, 431100 KB] g=14, 78 evaluated, 17 expanded
[t=0.130762s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.130791s, 431100 KB] g=14, 81 evaluated, 17 expanded
[t=0.134213s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.13425s, 431100 KB] g=16, 100 evaluated, 22 expanded
[t=0.134813s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.134843s, 431100 KB] g=16, 103 evaluated, 22 expanded
[t=0.137004s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.13704s, 431100 KB] g=18, 115 evaluated, 25 expanded
[t=0.137786s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.137827s, 431100 KB] g=19, 119 evaluated, 26 expanded
[t=0.144611s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.144648s, 431100 KB] g=23, 157 evaluated, 37 expanded
[t=0.146647s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.14668s, 431100 KB] g=26, 168 evaluated, 41 expanded
[t=0.147601s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.147634s, 431100 KB] g=27, 173 evaluated, 43 expanded
[t=0.174569s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.174609s, 431232 KB] g=31, 323 evaluated, 87 expanded
[t=0.174822s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.174851s, 431232 KB] g=31, 324 evaluated, 87 expanded
[t=0.175417s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.175447s, 431232 KB] g=32, 327 evaluated, 88 expanded
[t=0.176749s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.176785s, 431232 KB] g=34, 334 evaluated, 90 expanded
[t=0.177356s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.177385s, 431232 KB] g=34, 337 evaluated, 90 expanded
[t=0.179745s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.179776s, 431232 KB] g=35, 350 evaluated, 94 expanded
[t=0.180166s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.180195s, 431232 KB] g=36, 352 evaluated, 95 expanded
[t=0.180768s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.1808s, 431232 KB] g=36, 355 evaluated, 95 expanded
[t=0.182087s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.182121s, 431232 KB] g=38, 362 evaluated, 98 expanded
[t=0.182331s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.18236s, 431232 KB] g=38, 363 evaluated, 98 expanded
[t=0.182931s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.18296s, 431232 KB] g=39, 366 evaluated, 99 expanded
[t=0.183888s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.183918s, 431232 KB] g=40, 371 evaluated, 100 expanded
[t=0.184865s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.184904s, 431232 KB] g=42, 376 evaluated, 103 expanded
[t=0.187809s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.187842s, 431232 KB] g=47, 392 evaluated, 109 expanded
[t=0.196821s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.196857s, 431364 KB] g=50, 442 evaluated, 126 expanded
[t=0.197434s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.197468s, 431364 KB] g=51, 445 evaluated, 127 expanded
[t=0.198039s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.198071s, 431364 KB] g=52, 448 evaluated, 128 expanded
[t=0.198467s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.198496s, 431364 KB] g=54, 450 evaluated, 130 expanded
[t=0.198891s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.198921s, 431364 KB] g=55, 452 evaluated, 131 expanded
[t=0.431657s, 431500 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.431703s, 431500 KB] g=60, 1748 evaluated, 837 expanded, 124 reopened
[t=1.12104s, 431808 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=1.1211s, 431808 KB] g=56, 5600 evaluated, 3046 expanded, 521 reopened
[t=3.12393s, 432744 KB] Solution found!
[t=3.124s, 432744 KB] Actual search time: 3.02583s
unstack l g (1)
stack l k (1)
unstack g a (1)
put-down g (1)
unstack b d (1)
stack b j (1)
unstack d i (1)
put-down d (1)
unstack l k (1)
stack l d (1)
unstack i c (1)
stack i a (1)
pick-up c (1)
stack c b (1)
unstack i a (1)
stack i c (1)
unstack a h (1)
stack a l (1)
pick-up h (1)
stack h g (1)
unstack i c (1)
stack i k (1)
unstack a l (1)
stack a h (1)
unstack c b (1)
put-down c (1)
unstack b j (1)
stack b l (1)
unstack i k (1)
stack i c (1)
unstack k f (1)
stack k i (1)
pick-up f (1)
stack f a (1)
unstack j e (1)
stack j b (1)
unstack k i (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=3.12403s, 432744 KB] Plan length: 58 step(s).
[t=3.12403s, 432744 KB] Plan cost: 58
[t=3.12403s, 432744 KB] Expanded 10746 state(s).
[t=3.12403s, 432744 KB] Reopened 3508 state(s).
[t=3.12403s, 432744 KB] Evaluated 16710 state(s).
[t=3.12403s, 432744 KB] Evaluations: 16710
[t=3.12403s, 432744 KB] Generated 44288 state(s).
[t=3.12403s, 432744 KB] Dead ends: 0 state(s).
[t=3.12403s, 432744 KB] Expanded until last jump: 0 state(s).
[t=3.12403s, 432744 KB] Reopened until last jump: 0 state(s).
[t=3.12403s, 432744 KB] Evaluated until last jump: 1 state(s).
[t=3.12403s, 432744 KB] Generated until last jump: 0 state(s).
[t=3.12403s, 432744 KB] Number of registered states: 16710
[t=3.12403s, 432744 KB] Int hash set load factor: 16710/32768 = 0.509949
[t=3.12403s, 432744 KB] Int hash set resizes: 15
[t=3.12403s, 432744 KB] Search time: 3.09758s
[t=3.12403s, 432744 KB] Total time: 3.12403s
Solution found.
Peak memory: 432744 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p175.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.103s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8732e-05s, 424928 KB] reading input...
[t=0.00214942s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025829s, 427536 KB] Building successor generator...done!
[t=0.0261082s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261319s, 427536 KB] time for successor generation creation: 0.00016712s
[t=0.0261608s, 427536 KB] Variables: 25
[t=0.0261837s, 427536 KB] FactPairs: 182
[t=0.0262062s, 427536 KB] Bytes per state: 8
[t=0.0263995s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.10873s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.108797s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.108827s, 430128 KB] f = 135, 1 evaluated, 0 expanded
[t=0.108855s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.108886s, 430128 KB] pruning method: none
[t=0.127507s, 431100 KB] f = 136, 5 evaluated, 1 expanded
[t=0.127746s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.127777s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.128163s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.128192s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.131096s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.13113s, 431100 KB] g=3, 24 evaluated, 6 expanded
[t=0.131341s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.13137s, 431100 KB] g=3, 25 evaluated, 6 expanded
[t=0.135162s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.135194s, 431100 KB] g=6, 46 evaluated, 11 expanded
[t=0.140783s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.140819s, 431100 KB] g=4, 77 evaluated, 19 expanded
[t=0.144436s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.144472s, 431100 KB] g=8, 97 evaluated, 23 expanded
[t=0.147919s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.147951s, 431100 KB] g=12, 116 evaluated, 27 expanded
[t=0.157535s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.15757s, 431232 KB] g=12, 169 evaluated, 37 expanded
[t=0.174652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.174688s, 431232 KB] g=22, 264 evaluated, 59 expanded
[t=0.176699s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.176732s, 431232 KB] g=24, 275 evaluated, 62 expanded
[t=0.177121s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.177151s, 431232 KB] g=24, 277 evaluated, 62 expanded
[t=0.178258s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.178291s, 431232 KB] g=25, 283 evaluated, 64 expanded
[t=0.191021s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.191056s, 431232 KB] g=27, 354 evaluated, 83 expanded
[t=0.212017s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.212056s, 431364 KB] g=33, 471 evaluated, 112 expanded
[t=0.261154s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.261194s, 431496 KB] g=34, 743 evaluated, 233 expanded, 35 reopened
[t=0.282779s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.282816s, 431496 KB] g=38, 863 evaluated, 269 expanded, 36 reopened
[t=0.284109s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.284144s, 431496 KB] g=40, 870 evaluated, 271 expanded, 36 reopened
[t=0.285072s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.285102s, 431496 KB] g=41, 875 evaluated, 272 expanded, 36 reopened
[t=0.788494s, 432312 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.788545s, 432312 KB] g=61, 3692 evaluated, 1310 expanded, 215 reopened
[t=1.12202s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 28
[t=1.12207s, 432720 KB] g=63, 5556 evaluated, 1909 expanded, 261 reopened
[t=1.12285s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=1.12288s, 432720 KB] g=64, 5560 evaluated, 1910 expanded, 261 reopened
[t=1.12614s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=1.12618s, 432720 KB] g=69, 5578 evaluated, 1916 expanded, 261 reopened
[t=1.12782s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=1.12786s, 432720 KB] g=68, 5587 evaluated, 1919 expanded, 261 reopened
[t=1.12843s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=1.12846s, 432720 KB] g=69, 5590 evaluated, 1920 expanded, 261 reopened
[t=1.12975s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=1.12978s, 432720 KB] g=71, 5597 evaluated, 1922 expanded, 261 reopened
[t=1.13144s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 18
[t=1.13147s, 432720 KB] g=73, 5606 evaluated, 1926 expanded, 261 reopened
[t=1.13348s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=1.13351s, 432720 KB] g=74, 5617 evaluated, 1930 expanded, 261 reopened
[t=1.13714s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=1.13717s, 432720 KB] g=76, 5637 evaluated, 1938 expanded, 261 reopened
[t=1.14763s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=1.14767s, 432720 KB] g=76, 5695 evaluated, 1959 expanded, 261 reopened
[t=1.14807s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=1.1481s, 432720 KB] g=77, 5697 evaluated, 1960 expanded, 261 reopened
[t=1.15009s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=1.15013s, 432720 KB] g=81, 5708 evaluated, 1965 expanded, 261 reopened
[t=1.15053s, 432720 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=1.15056s, 432720 KB] g=83, 5711 evaluated, 1967 expanded, 261 reopened
[t=1.15059s, 432720 KB] Solution found!
[t=1.15062s, 432720 KB] Actual search time: 1.04172s
put-down d (1)
unstack b h (1)
stack b d (1)
unstack e k (1)
put-down e (1)
unstack k l (1)
put-down k (1)
unstack l g (1)
stack l i (1)
pick-up e (1)
stack e k (1)
unstack l i (1)
stack l e (1)
pick-up g (1)
stack g b (1)
unstack l e (1)
put-down l (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack i c (1)
stack i a (1)
pick-up c (1)
stack c l (1)
unstack j f (1)
put-down j (1)
unstack e k (1)
stack e i (1)
pick-up k (1)
stack k e (1)
unstack c l (1)
stack c f (1)
unstack k e (1)
stack k l (1)
unstack e i (1)
stack e j (1)
unstack i a (1)
put-down i (1)
unstack a h (1)
stack a k (1)
unstack e j (1)
stack e i (1)
pick-up j (1)
stack j e (1)
unstack c f (1)
put-down c (1)
unstack h g (1)
stack h a (1)
unstack g b (1)
put-down g (1)
pick-up c (1)
stack c b (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack j e (1)
stack j c (1)
unstack e i (1)
stack e k (1)
unstack j c (1)
stack j i (1)
unstack c b (1)
put-down c (1)
unstack b d (1)
stack b c (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=1.15064s, 432720 KB] Plan length: 83 step(s).
[t=1.15064s, 432720 KB] Plan cost: 83
[t=1.15064s, 432720 KB] Expanded 1968 state(s).
[t=1.15064s, 432720 KB] Reopened 261 state(s).
[t=1.15064s, 432720 KB] Evaluated 5711 state(s).
[t=1.15064s, 432720 KB] Evaluations: 5711
[t=1.15064s, 432720 KB] Generated 9068 state(s).
[t=1.15064s, 432720 KB] Dead ends: 0 state(s).
[t=1.15064s, 432720 KB] Expanded until last jump: 1 state(s).
[t=1.15064s, 432720 KB] Reopened until last jump: 0 state(s).
[t=1.15064s, 432720 KB] Evaluated until last jump: 5 state(s).
[t=1.15064s, 432720 KB] Generated until last jump: 4 state(s).
[t=1.15064s, 432720 KB] Number of registered states: 5711
[t=1.15064s, 432720 KB] Int hash set load factor: 5711/8192 = 0.697144
[t=1.15064s, 432720 KB] Int hash set resizes: 13
[t=1.15064s, 432720 KB] Search time: 1.12424s
[t=1.15064s, 432720 KB] Total time: 1.15064s
Solution found.
Peak memory: 432720 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p176.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1473 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8463e-05s, 424928 KB] reading input...
[t=0.00217297s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258887s, 427536 KB] Building successor generator...done!
[t=0.0261676s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026191s, 427536 KB] time for successor generation creation: 0.000166056s
[t=0.0262198s, 427536 KB] Variables: 25
[t=0.026243s, 427536 KB] FactPairs: 182
[t=0.0262653s, 427536 KB] Bytes per state: 8
[t=0.0264605s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106236s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.106288s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.106314s, 430128 KB] f = 133, 1 evaluated, 0 expanded
[t=0.106342s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.106366s, 430128 KB] pruning method: none
[t=0.124834s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.124884s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.125275s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.125316s, 431100 KB] g=1, 7 evaluated, 1 expanded
[t=0.129112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.129147s, 431100 KB] g=4, 28 evaluated, 5 expanded
[t=0.130979s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.131012s, 431100 KB] g=6, 38 evaluated, 7 expanded
[t=0.132471s, 431100 KB] f = 134, 46 evaluated, 8 expanded
[t=0.135018s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.135055s, 431100 KB] g=5, 60 evaluated, 11 expanded
[t=0.14649s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.146524s, 431100 KB] g=7, 124 evaluated, 23 expanded, 1 reopened
[t=0.150321s, 431100 KB] f = 135, 145 evaluated, 28 expanded, 1 reopened
[t=0.151093s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.151126s, 431100 KB] g=8, 149 evaluated, 29 expanded, 1 reopened
[t=0.155785s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.155822s, 431100 KB] g=10, 175 evaluated, 34 expanded, 1 reopened
[t=0.15693s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.156961s, 431100 KB] g=12, 181 evaluated, 36 expanded, 1 reopened
[t=0.16614s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.166177s, 431232 KB] g=11, 232 evaluated, 51 expanded, 1 reopened
[t=0.225424s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.225465s, 431364 KB] g=24, 562 evaluated, 148 expanded, 7 reopened
[t=0.226042s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.226072s, 431364 KB] g=25, 565 evaluated, 149 expanded, 7 reopened
[t=0.24508s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.245119s, 431364 KB] g=35, 671 evaluated, 177 expanded, 7 reopened
[t=0.258589s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.258625s, 431496 KB] g=30, 746 evaluated, 198 expanded, 7 reopened
[t=0.262061s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.262092s, 431496 KB] g=33, 765 evaluated, 204 expanded, 7 reopened
[t=0.2915s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.291539s, 431496 KB] g=44, 929 evaluated, 267 expanded, 26 reopened
[t=0.295924s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.295966s, 431496 KB] g=48, 953 evaluated, 272 expanded, 26 reopened
[t=0.298681s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.298715s, 431628 KB] g=47, 968 evaluated, 275 expanded, 26 reopened
[t=0.298929s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.298959s, 431628 KB] g=48, 969 evaluated, 276 expanded, 26 reopened
[t=0.302533s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.302565s, 431628 KB] g=50, 989 evaluated, 280 expanded, 26 reopened
[t=0.308469s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.308505s, 431628 KB] g=54, 1022 evaluated, 288 expanded, 26 reopened
[t=0.326515s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.326554s, 431628 KB] g=52, 1123 evaluated, 314 expanded, 26 reopened
[t=0.328028s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.328063s, 431628 KB] g=54, 1131 evaluated, 316 expanded, 26 reopened
[t=0.329156s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.329189s, 431628 KB] g=55, 1137 evaluated, 317 expanded, 26 reopened
[t=0.330464s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.330497s, 431628 KB] g=55, 1144 evaluated, 319 expanded, 26 reopened
[t=0.331072s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.331105s, 431628 KB] g=56, 1147 evaluated, 320 expanded, 26 reopened
[t=0.335764s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.335801s, 431628 KB] g=59, 1173 evaluated, 327 expanded, 26 reopened
[t=0.336008s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.336037s, 431628 KB] g=59, 1174 evaluated, 327 expanded, 26 reopened
[t=0.338026s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.338059s, 431628 KB] g=61, 1185 evaluated, 331 expanded, 26 reopened
[t=0.338266s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.338295s, 431628 KB] g=61, 1186 evaluated, 331 expanded, 26 reopened
[t=0.341178s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.341216s, 431628 KB] g=65, 1202 evaluated, 336 expanded, 26 reopened
[t=0.344999s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.34504s, 431628 KB] g=63, 1223 evaluated, 347 expanded, 26 reopened
[t=0.346494s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.34653s, 431760 KB] g=66, 1231 evaluated, 350 expanded, 26 reopened
[t=0.346753s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.346784s, 431760 KB] g=67, 1232 evaluated, 351 expanded, 26 reopened
[t=0.353447s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.35348s, 431760 KB] g=74, 1269 evaluated, 372 expanded, 26 reopened
[t=0.353871s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.353901s, 431760 KB] g=75, 1271 evaluated, 373 expanded, 26 reopened
[t=0.353934s, 431760 KB] Solution found!
[t=0.353962s, 431760 KB] Actual search time: 0.247593s
unstack f d (1)
stack f e (1)
unstack d k (1)
stack d f (1)
pick-up k (1)
stack k i (1)
unstack d f (1)
stack d j (1)
pick-up h (1)
stack h f (1)
pick-up c (1)
stack c b (1)
unstack h f (1)
stack h d (1)
unstack f e (1)
stack f k (1)
unstack c b (1)
put-down c (1)
unstack e l (1)
stack e c (1)
unstack l g (1)
stack l f (1)
unstack g a (1)
stack g h (1)
pick-up a (1)
stack a l (1)
unstack e c (1)
put-down e (1)
unstack a l (1)
stack a c (1)
unstack l f (1)
put-down l (1)
unstack f k (1)
stack f e (1)
pick-up b (1)
stack b l (1)
unstack a c (1)
stack a k (1)
pick-up c (1)
stack c b (1)
unstack g h (1)
put-down g (1)
unstack h d (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack d j (1)
put-down d (1)
pick-up e (1)
stack e j (1)
unstack k i (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
stack c d (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l b (1)
unstack c d (1)
put-down c (1)
unstack l b (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.353987s, 431760 KB] Plan length: 76 step(s).
[t=0.353987s, 431760 KB] Plan cost: 76
[t=0.353987s, 431760 KB] Expanded 375 state(s).
[t=0.353987s, 431760 KB] Reopened 26 state(s).
[t=0.353987s, 431760 KB] Evaluated 1272 state(s).
[t=0.353987s, 431760 KB] Evaluations: 1272
[t=0.353987s, 431760 KB] Generated 1792 state(s).
[t=0.353987s, 431760 KB] Dead ends: 0 state(s).
[t=0.353987s, 431760 KB] Expanded until last jump: 28 state(s).
[t=0.353987s, 431760 KB] Reopened until last jump: 1 state(s).
[t=0.353987s, 431760 KB] Evaluated until last jump: 145 state(s).
[t=0.353987s, 431760 KB] Generated until last jump: 179 state(s).
[t=0.353987s, 431760 KB] Number of registered states: 1272
[t=0.353987s, 431760 KB] Int hash set load factor: 1272/2048 = 0.621094
[t=0.353987s, 431760 KB] Int hash set resizes: 11
[t=0.353987s, 431760 KB] Search time: 0.327527s
[t=0.353987s, 431760 KB] Total time: 0.353987s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p177.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6404e-05s, 424928 KB] reading input...
[t=0.00215293s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259623s, 427536 KB] Building successor generator...done!
[t=0.0262448s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026268s, 427536 KB] time for successor generation creation: 0.000169166s
[t=0.0262966s, 427536 KB] Variables: 25
[t=0.0263194s, 427536 KB] FactPairs: 182
[t=0.0263415s, 427536 KB] Bytes per state: 8
[t=0.0265368s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.100429s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.100489s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.100514s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.100542s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.100566s, 430128 KB] pruning method: none
[t=0.119003s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.119054s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.119275s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.119315s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.119714s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.119743s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.120516s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.120546s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.121313s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.121343s, 431100 KB] g=3, 14 evaluated, 3 expanded
[t=0.121926s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.121955s, 431100 KB] g=4, 17 evaluated, 4 expanded
[t=0.122357s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.122386s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.129049s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.129084s, 431100 KB] g=13, 55 evaluated, 14 expanded
[t=0.137254s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.13729s, 431100 KB] g=10, 99 evaluated, 27 expanded
[t=0.138811s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.138846s, 431100 KB] g=12, 107 evaluated, 29 expanded
[t=0.149764s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.149802s, 431232 KB] g=16, 166 evaluated, 43 expanded
[t=0.163075s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.163111s, 431232 KB] g=16, 238 evaluated, 60 expanded
[t=0.17606s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.176097s, 431232 KB] g=24, 308 evaluated, 73 expanded
[t=0.177046s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.177076s, 431232 KB] g=24, 313 evaluated, 73 expanded
[t=0.184274s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.184309s, 431232 KB] g=28, 352 evaluated, 80 expanded
[t=0.185261s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.185291s, 431232 KB] g=28, 357 evaluated, 80 expanded
[t=0.198133s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.198169s, 431364 KB] g=30, 426 evaluated, 91 expanded
[t=0.20043s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.200473s, 431364 KB] g=32, 438 evaluated, 93 expanded
[t=0.20069s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.200719s, 431364 KB] g=32, 439 evaluated, 93 expanded
[t=0.213471s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.213506s, 431364 KB] g=36, 508 evaluated, 105 expanded
[t=0.249051s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.249089s, 431496 KB] g=38, 700 evaluated, 159 expanded, 12 reopened
[t=0.250413s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.250443s, 431496 KB] g=38, 707 evaluated, 161 expanded, 12 reopened
[t=0.253445s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.253481s, 431496 KB] g=39, 723 evaluated, 165 expanded, 12 reopened
[t=0.256104s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.25614s, 431496 KB] g=43, 737 evaluated, 169 expanded, 12 reopened
[t=0.256909s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.256938s, 431496 KB] g=44, 741 evaluated, 170 expanded, 12 reopened
[t=0.257152s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.25718s, 431496 KB] g=44, 742 evaluated, 170 expanded, 12 reopened
[t=0.258324s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.258354s, 431496 KB] g=46, 748 evaluated, 172 expanded, 12 reopened
[t=0.258764s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.258794s, 431496 KB] g=47, 750 evaluated, 173 expanded, 12 reopened
[t=0.260304s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.260334s, 431496 KB] g=49, 758 evaluated, 176 expanded, 12 reopened
[t=0.260917s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.260945s, 431496 KB] g=50, 761 evaluated, 177 expanded, 12 reopened
[t=0.26431s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.264343s, 431496 KB] g=54, 779 evaluated, 184 expanded, 12 reopened
[t=0.266975s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.267009s, 431496 KB] g=56, 793 evaluated, 188 expanded, 12 reopened
[t=0.269442s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.269478s, 431496 KB] g=58, 806 evaluated, 191 expanded, 12 reopened
[t=0.270058s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.270087s, 431496 KB] g=58, 809 evaluated, 191 expanded, 12 reopened
[t=0.271239s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.271272s, 431496 KB] g=60, 815 evaluated, 193 expanded, 12 reopened
[t=0.276378s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.276411s, 431496 KB] g=62, 842 evaluated, 201 expanded, 12 reopened
[t=0.276993s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.277022s, 431496 KB] g=63, 845 evaluated, 202 expanded, 12 reopened
[t=0.277788s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.277818s, 431496 KB] g=65, 849 evaluated, 204 expanded, 12 reopened
[t=0.282107s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.282144s, 431496 KB] g=66, 872 evaluated, 214 expanded, 12 reopened
[t=0.284957s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.284992s, 431496 KB] g=68, 887 evaluated, 221 expanded, 12 reopened
[t=0.285209s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.285238s, 431496 KB] g=69, 888 evaluated, 222 expanded, 12 reopened
[t=0.28638s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.286411s, 431496 KB] g=70, 894 evaluated, 226 expanded, 12 reopened
[t=0.286441s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.286471s, 431496 KB] g=71, 895 evaluated, 227 expanded, 12 reopened
[t=0.286498s, 431496 KB] Solution found!
[t=0.286524s, 431496 KB] Actual search time: 0.185955s
put-down e (1)
pick-up l (1)
stack l k (1)
unstack j f (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
unstack b l (1)
stack b d (1)
unstack l k (1)
stack l b (1)
unstack k g (1)
stack k f (1)
unstack l b (1)
stack l j (1)
unstack g a (1)
put-down g (1)
unstack l j (1)
stack l k (1)
unstack i c (1)
put-down i (1)
unstack l k (1)
stack l b (1)
unstack a h (1)
stack a k (1)
unstack l b (1)
put-down l (1)
pick-up h (1)
stack h g (1)
pick-up i (1)
stack i j (1)
pick-up c (1)
stack c b (1)
unstack i j (1)
stack i c (1)
unstack j e (1)
stack j l (1)
pick-up e (1)
stack e i (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k e (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
stack b i (1)
pick-up l (1)
stack l c (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.286549s, 431496 KB] Plan length: 71 step(s).
[t=0.286549s, 431496 KB] Plan cost: 71
[t=0.286549s, 431496 KB] Expanded 228 state(s).
[t=0.286549s, 431496 KB] Reopened 12 state(s).
[t=0.286549s, 431496 KB] Evaluated 895 state(s).
[t=0.286549s, 431496 KB] Evaluations: 895
[t=0.286549s, 431496 KB] Generated 1207 state(s).
[t=0.286549s, 431496 KB] Dead ends: 0 state(s).
[t=0.286549s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.286549s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.286549s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.286549s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.286549s, 431496 KB] Number of registered states: 895
[t=0.286549s, 431496 KB] Int hash set load factor: 895/1024 = 0.874023
[t=0.286549s, 431496 KB] Int hash set resizes: 10
[t=0.286549s, 431496 KB] Search time: 0.260013s
[t=0.286549s, 431496 KB] Total time: 0.286549s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p178.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.010s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6278e-05s, 424928 KB] reading input...
[t=0.00216572s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257866s, 427536 KB] Building successor generator...done!
[t=0.0260693s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260929s, 427536 KB] time for successor generation creation: 0.000170373s
[t=0.0261219s, 427536 KB] Variables: 25
[t=0.0261448s, 427536 KB] FactPairs: 182
[t=0.0261681s, 427536 KB] Bytes per state: 8
[t=0.0263617s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982647s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0983167s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0983425s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0983703s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0983949s, 430128 KB] pruning method: none
[t=0.116827s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.116878s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118544s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.118578s, 431100 KB] g=2, 13 evaluated, 3 expanded
[t=0.12004s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.120071s, 431100 KB] g=4, 21 evaluated, 5 expanded
[t=0.121186s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.121219s, 431100 KB] g=6, 27 evaluated, 7 expanded
[t=0.123389s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.123421s, 431100 KB] g=8, 39 evaluated, 9 expanded
[t=0.123991s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.124021s, 431100 KB] g=9, 42 evaluated, 10 expanded
[t=0.140014s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.140053s, 431100 KB] g=14, 131 evaluated, 37 expanded
[t=0.140624s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.140655s, 431100 KB] g=15, 134 evaluated, 38 expanded
[t=0.142308s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.142342s, 431100 KB] g=18, 143 evaluated, 42 expanded
[t=0.14701s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.147048s, 431100 KB] g=20, 169 evaluated, 50 expanded
[t=0.147441s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.147471s, 431100 KB] g=21, 171 evaluated, 51 expanded
[t=0.148041s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.148081s, 431100 KB] g=22, 174 evaluated, 52 expanded
[t=0.148651s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.148682s, 431232 KB] g=22, 177 evaluated, 52 expanded
[t=0.151232s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.151265s, 431232 KB] g=25, 191 evaluated, 56 expanded
[t=0.151479s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.151508s, 431232 KB] g=26, 192 evaluated, 57 expanded
[t=0.151717s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.151746s, 431232 KB] g=26, 193 evaluated, 57 expanded
[t=0.152856s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.152891s, 431232 KB] g=28, 199 evaluated, 59 expanded
[t=0.153107s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.153139s, 431232 KB] g=28, 200 evaluated, 59 expanded
[t=0.160499s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.160535s, 431232 KB] g=32, 241 evaluated, 71 expanded
[t=0.164345s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.164379s, 431232 KB] g=32, 262 evaluated, 77 expanded
[t=0.166026s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.166063s, 431232 KB] g=34, 271 evaluated, 79 expanded
[t=0.166454s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.166484s, 431232 KB] g=35, 273 evaluated, 80 expanded
[t=0.167049s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.167078s, 431232 KB] g=36, 276 evaluated, 81 expanded
[t=0.167825s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.167855s, 431232 KB] g=37, 280 evaluated, 82 expanded
[t=0.168787s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.168817s, 431232 KB] g=40, 285 evaluated, 85 expanded
[t=0.169575s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.169608s, 431232 KB] g=42, 289 evaluated, 87 expanded
[t=0.175762s, 431232 KB] Solution found!
[t=0.175799s, 431232 KB] Actual search time: 0.0774027s
unstack l h (1)
put-down l (1)
unstack k e (1)
stack k l (1)
unstack h j (1)
stack h g (1)
pick-up e (1)
stack e k (1)
unstack j f (1)
stack j e (1)
unstack a b (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack b d (1)
stack b f (1)
unstack d i (1)
put-down d (1)
unstack j e (1)
stack j i (1)
unstack b f (1)
stack b d (1)
unstack e k (1)
stack e b (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.175827s, 431232 KB] Plan length: 44 step(s).
[t=0.175827s, 431232 KB] Plan cost: 44
[t=0.175827s, 431232 KB] Expanded 108 state(s).
[t=0.175827s, 431232 KB] Reopened 0 state(s).
[t=0.175827s, 431232 KB] Evaluated 324 state(s).
[t=0.175827s, 431232 KB] Evaluations: 324
[t=0.175827s, 431232 KB] Generated 429 state(s).
[t=0.175827s, 431232 KB] Dead ends: 0 state(s).
[t=0.175827s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.175827s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.175827s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.175827s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.175827s, 431232 KB] Number of registered states: 324
[t=0.175827s, 431232 KB] Int hash set load factor: 324/512 = 0.632812
[t=0.175827s, 431232 KB] Int hash set resizes: 9
[t=0.175827s, 431232 KB] Search time: 0.149466s
[t=0.175827s, 431232 KB] Total time: 0.175827s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p179.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6844e-05s, 424928 KB] reading input...
[t=0.00219054s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260514s, 427536 KB] Building successor generator...done!
[t=0.0263337s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026357s, 427536 KB] time for successor generation creation: 0.000168458s
[t=0.0263857s, 427536 KB] Variables: 25
[t=0.0264086s, 427536 KB] FactPairs: 182
[t=0.0264307s, 427536 KB] Bytes per state: 8
[t=0.0266272s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.100699s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.100751s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.100777s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.100805s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.10083s, 430128 KB] pruning method: none
[t=0.119528s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.119578s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.121094s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.121126s, 431100 KB] g=4, 12 evaluated, 4 expanded
[t=0.121912s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.121945s, 431100 KB] g=5, 16 evaluated, 5 expanded
[t=0.122905s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.122935s, 431100 KB] g=6, 21 evaluated, 7 expanded
[t=0.127034s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.127066s, 431100 KB] g=10, 43 evaluated, 13 expanded
[t=0.127649s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.127678s, 431100 KB] g=10, 46 evaluated, 13 expanded
[t=0.137134s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.137168s, 431100 KB] g=12, 97 evaluated, 25 expanded
[t=0.137766s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.137798s, 431100 KB] g=13, 100 evaluated, 26 expanded
[t=0.138565s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.138595s, 431100 KB] g=14, 104 evaluated, 27 expanded
[t=0.140485s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.140518s, 431100 KB] g=16, 114 evaluated, 30 expanded
[t=0.143512s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.143547s, 431100 KB] g=19, 130 evaluated, 33 expanded
[t=0.144316s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.144349s, 431100 KB] g=20, 134 evaluated, 34 expanded
[t=0.146061s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.146097s, 431100 KB] g=21, 143 evaluated, 36 expanded
[t=0.146866s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.146899s, 431100 KB] g=22, 147 evaluated, 37 expanded
[t=0.15232s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.152353s, 431232 KB] g=30, 176 evaluated, 48 expanded
[t=0.155728s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.155761s, 431232 KB] g=30, 194 evaluated, 53 expanded
[t=0.156532s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.156561s, 431232 KB] g=31, 198 evaluated, 54 expanded
[t=0.157514s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.157546s, 431232 KB] g=32, 203 evaluated, 55 expanded
[t=0.166466s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.166503s, 431232 KB] g=38, 251 evaluated, 73 expanded
[t=0.17967s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.179705s, 431232 KB] g=32, 322 evaluated, 96 expanded
[t=0.183789s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.183824s, 431232 KB] g=37, 344 evaluated, 104 expanded
[t=0.184228s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.18426s, 431232 KB] g=38, 346 evaluated, 105 expanded
[t=0.185769s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.185805s, 431232 KB] g=40, 354 evaluated, 107 expanded
[t=0.186391s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.18642s, 431232 KB] g=41, 357 evaluated, 108 expanded
[t=0.191404s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.191436s, 431232 KB] g=46, 384 evaluated, 114 expanded
[t=0.194064s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.1941s, 431232 KB] g=48, 398 evaluated, 119 expanded
[t=0.195237s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.195268s, 431232 KB] g=50, 404 evaluated, 121 expanded
[t=0.197887s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.19792s, 431364 KB] g=51, 418 evaluated, 125 expanded
[t=0.200712s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.200745s, 431364 KB] g=55, 433 evaluated, 129 expanded
[t=0.220315s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.220352s, 431364 KB] g=56, 539 evaluated, 163 expanded, 1 reopened
[t=0.220754s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.220784s, 431364 KB] g=57, 541 evaluated, 164 expanded, 1 reopened
[t=0.223754s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.223787s, 431364 KB] g=57, 557 evaluated, 169 expanded, 1 reopened
[t=0.225473s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.225503s, 431364 KB] g=60, 566 evaluated, 173 expanded, 1 reopened
[t=0.234383s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.23442s, 431364 KB] g=58, 614 evaluated, 189 expanded, 1 reopened
[t=0.252025s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.252065s, 431364 KB] g=63, 709 evaluated, 242 expanded, 11 reopened
[t=0.252468s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.252498s, 431364 KB] g=64, 711 evaluated, 243 expanded, 11 reopened
[t=0.271963s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.271999s, 431364 KB] g=66, 817 evaluated, 311 expanded, 16 reopened
[t=0.272028s, 431364 KB] Solution found!
[t=0.272055s, 431364 KB] Actual search time: 0.171222s
unstack e b (1)
put-down e (1)
unstack g k (1)
stack g a (1)
unstack b d (1)
stack b e (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
stack i g (1)
pick-up c (1)
stack c d (1)
unstack b e (1)
put-down b (1)
unstack c d (1)
stack c b (1)
unstack k f (1)
stack k d (1)
unstack f h (1)
stack f k (1)
pick-up h (1)
stack h f (1)
pick-up e (1)
stack e h (1)
unstack i g (1)
stack i c (1)
unstack e h (1)
put-down e (1)
unstack g a (1)
stack g h (1)
pick-up e (1)
stack e i (1)
unstack a j (1)
stack a e (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack j l (1)
put-down j (1)
unstack f k (1)
stack f a (1)
pick-up j (1)
stack j l (1)
unstack k d (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack i c (1)
put-down i (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.272081s, 431364 KB] Plan length: 66 step(s).
[t=0.272081s, 431364 KB] Plan cost: 66
[t=0.272081s, 431364 KB] Expanded 312 state(s).
[t=0.272081s, 431364 KB] Reopened 16 state(s).
[t=0.272081s, 431364 KB] Evaluated 817 state(s).
[t=0.272081s, 431364 KB] Evaluations: 817
[t=0.272081s, 431364 KB] Generated 1212 state(s).
[t=0.272081s, 431364 KB] Dead ends: 0 state(s).
[t=0.272081s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.272081s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.272081s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.272081s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.272081s, 431364 KB] Number of registered states: 817
[t=0.272081s, 431364 KB] Int hash set load factor: 817/1024 = 0.797852
[t=0.272081s, 431364 KB] Int hash set resizes: 10
[t=0.272081s, 431364 KB] Search time: 0.245454s
[t=0.272081s, 431364 KB] Total time: 0.272081s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p180.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6849e-05s, 424928 KB] reading input...
[t=0.00218048s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258728s, 427536 KB] Building successor generator...done!
[t=0.0261722s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261969s, 427536 KB] time for successor generation creation: 0.000168813s
[t=0.0262253s, 427536 KB] Variables: 25
[t=0.0262481s, 427536 KB] FactPairs: 182
[t=0.0262704s, 427536 KB] Bytes per state: 8
[t=0.0264675s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984523s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.098505s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0985307s, 430128 KB] f = 147, 1 evaluated, 0 expanded
[t=0.0985584s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 147
[t=0.0985823s, 430128 KB] pruning method: none
[t=0.110381s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.110433s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116866s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.116908s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117126s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.117156s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.120415s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.120449s, 431100 KB] g=5, 22 evaluated, 5 expanded
[t=0.124051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.124084s, 431100 KB] g=9, 42 evaluated, 11 expanded
[t=0.126973s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.127009s, 431100 KB] g=11, 58 evaluated, 16 expanded
[t=0.127577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.127607s, 431100 KB] g=12, 61 evaluated, 17 expanded
[t=0.128535s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.128565s, 431100 KB] g=13, 66 evaluated, 18 expanded
[t=0.129306s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.129336s, 431100 KB] g=14, 70 evaluated, 19 expanded
[t=0.133655s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.133691s, 431100 KB] g=16, 94 evaluated, 25 expanded
[t=0.150352s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.1504s, 431232 KB] g=18, 187 evaluated, 50 expanded
[t=0.183606s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.183643s, 431232 KB] g=33, 372 evaluated, 104 expanded
[t=0.184396s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.18443s, 431232 KB] g=34, 376 evaluated, 105 expanded
[t=0.188966s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.189s, 431232 KB] g=35, 401 evaluated, 112 expanded
[t=0.196045s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.196079s, 431364 KB] g=36, 440 evaluated, 123 expanded
[t=0.201853s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.201887s, 431364 KB] g=40, 472 evaluated, 132 expanded
[t=0.202816s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.202851s, 431364 KB] g=41, 477 evaluated, 133 expanded
[t=0.21152s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.211558s, 431364 KB] g=44, 525 evaluated, 145 expanded
[t=0.223565s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.2236s, 431364 KB] g=44, 592 evaluated, 163 expanded
[t=0.224351s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.224382s, 431364 KB] g=45, 596 evaluated, 164 expanded
[t=0.226567s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.2266s, 431364 KB] g=48, 608 evaluated, 167 expanded
[t=0.227172s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.227203s, 431364 KB] g=49, 611 evaluated, 168 expanded
[t=0.232767s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.232801s, 431364 KB] g=52, 642 evaluated, 176 expanded
[t=0.241961s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.241999s, 431496 KB] g=56, 693 evaluated, 189 expanded
[t=0.242932s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.242963s, 431496 KB] g=58, 698 evaluated, 191 expanded
[t=0.243175s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.243204s, 431496 KB] g=59, 699 evaluated, 192 expanded
[t=0.24413s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.244168s, 431496 KB] g=60, 704 evaluated, 193 expanded
[t=0.245992s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.246026s, 431496 KB] g=61, 714 evaluated, 196 expanded
[t=0.250346s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.250382s, 431496 KB] g=63, 738 evaluated, 204 expanded
[t=0.250774s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.250806s, 431496 KB] g=64, 740 evaluated, 205 expanded
[t=0.251377s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.251407s, 431496 KB] g=66, 743 evaluated, 207 expanded
[t=0.252152s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.252182s, 431496 KB] g=67, 747 evaluated, 208 expanded
[t=0.254009s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.254041s, 431496 KB] g=69, 757 evaluated, 212 expanded
[t=0.266249s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.266285s, 431496 KB] g=70, 825 evaluated, 240 expanded
[t=0.267036s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.267066s, 431496 KB] g=72, 829 evaluated, 242 expanded
[t=0.268172s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.268202s, 431496 KB] g=74, 835 evaluated, 244 expanded
[t=0.268592s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.268622s, 431496 KB] g=75, 837 evaluated, 245 expanded
[t=0.272248s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.272282s, 431496 KB] g=78, 857 evaluated, 259 expanded
[t=0.287361s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_8.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.2874s, 431496 KB] g=77, 941 evaluated, 305 expanded, 5 reopened
[t=0.287434s, 431496 KB] Solution found!
[t=0.287462s, 431496 KB] Actual search time: 0.188877s
unstack e f (1)
stack e k (1)
pick-up f (1)
stack f e (1)
unstack i l (1)
stack i b (1)
unstack l a (1)
stack l f (1)
unstack a j (1)
stack a i (1)
unstack j g (1)
stack j a (1)
unstack d c (1)
put-down d (1)
unstack l f (1)
stack l d (1)
unstack j a (1)
stack j l (1)
pick-up c (1)
stack c f (1)
unstack a i (1)
stack a j (1)
unstack i b (1)
stack i c (1)
unstack a j (1)
stack a g (1)
pick-up b (1)
stack b i (1)
unstack j l (1)
put-down j (1)
unstack b i (1)
stack b l (1)
unstack a g (1)
stack a j (1)
unstack g h (1)
put-down g (1)
unstack i c (1)
stack i a (1)
unstack c f (1)
stack c b (1)
pick-up h (1)
stack h g (1)
unstack i a (1)
stack i c (1)
unstack a j (1)
stack a h (1)
unstack i c (1)
stack i j (1)
unstack c b (1)
stack c i (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e b (1)
pick-up k (1)
stack k f (1)
unstack c i (1)
put-down c (1)
unstack e b (1)
stack e k (1)
unstack i j (1)
put-down i (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
stack b c (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.287488s, 431496 KB] Plan length: 78 step(s).
[t=0.287488s, 431496 KB] Plan cost: 78
[t=0.287488s, 431496 KB] Expanded 307 state(s).
[t=0.287488s, 431496 KB] Reopened 5 state(s).
[t=0.287488s, 431496 KB] Evaluated 942 state(s).
[t=0.287488s, 431496 KB] Evaluations: 942
[t=0.287488s, 431496 KB] Generated 1288 state(s).
[t=0.287488s, 431496 KB] Dead ends: 0 state(s).
[t=0.287488s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.287488s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.287488s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.287488s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.287488s, 431496 KB] Number of registered states: 942
[t=0.287488s, 431496 KB] Int hash set load factor: 942/1024 = 0.919922
[t=0.287488s, 431496 KB] Int hash set resizes: 10
[t=0.287488s, 431496 KB] Search time: 0.261021s
[t=0.287488s, 431496 KB] Total time: 0.287488s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023740
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 8 test success: 20 of 20 (100.0%)

---------- FOLD 10/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
  (dropout): Dropout(p=0.4, inplace=False)
)

Epoch 1/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 163 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.4933658242225647 (0.14583075046539307 vs. 0.6391965746879578), which occurred at index 95.
  _module_class,
 | avg_train_loss=0.098959 | avg_val_loss=0.092306
Epoch 2 | avg_train_loss=0.065701 | avg_val_loss=0.046762
Epoch 3 | avg_train_loss=0.043415 | avg_val_loss=0.040766
Epoch 4 | avg_train_loss=0.039497 | avg_val_loss=0.038673
Epoch 5 | avg_train_loss=0.037643 | avg_val_loss=0.036587
Epoch 6 | avg_train_loss=0.036516 | avg_val_loss=0.035410
Epoch 7 | avg_train_loss=0.035594 | avg_val_loss=0.034981
Epoch 8 | avg_train_loss=0.034700 | avg_val_loss=0.033804
Epoch 9 | avg_train_loss=0.034134 | avg_val_loss=0.033628
Epoch 10 | avg_train_loss=0.033533 | avg_val_loss=0.032720
Epoch 11 | avg_train_loss=0.033039 | avg_val_loss=0.031910
Epoch 12 | avg_train_loss=0.032500 | avg_val_loss=0.032056
Epoch 13 | avg_train_loss=0.032158 | avg_val_loss=0.031683
Epoch 14 | avg_train_loss=0.031723 | avg_val_loss=0.031359
Epoch 15 | avg_train_loss=0.031380 | avg_val_loss=0.031359
Epoch 16 | avg_train_loss=0.031197 | avg_val_loss=0.030672
Epoch 17 | avg_train_loss=0.030751 | avg_val_loss=0.030682
Epoch 18 | avg_train_loss=0.030587 | avg_val_loss=0.030213
Epoch 19 | avg_train_loss=0.030317 | avg_val_loss=0.030232
Epoch 20 | avg_train_loss=0.030120 | avg_val_loss=0.029792
Epoch 21 | avg_train_loss=0.029730 | avg_val_loss=0.029511
Epoch 22 | avg_train_loss=0.029560 | avg_val_loss=0.029741
Epoch 23 | avg_train_loss=0.029398 | avg_val_loss=0.029524
Epoch 24 | avg_train_loss=0.029213 | avg_val_loss=0.029616
Epoch 25 | avg_train_loss=0.029008 | avg_val_loss=0.028948
Epoch 26 | avg_train_loss=0.028696 | avg_val_loss=0.028418
Epoch 27 | avg_train_loss=0.028604 | avg_val_loss=0.028862
Epoch 28 | avg_train_loss=0.028290 | avg_val_loss=0.028533
Epoch 29 | avg_train_loss=0.028095 | avg_val_loss=0.028378
Epoch 30 | avg_train_loss=0.027828 | avg_val_loss=0.027704
Epoch 31 | avg_train_loss=0.027692 | avg_val_loss=0.027348
Epoch 32 | avg_train_loss=0.027368 | avg_val_loss=0.027952
Epoch 33 | avg_train_loss=0.027252 | avg_val_loss=0.027377
Epoch 34 | avg_train_loss=0.027102 | avg_val_loss=0.027039
Epoch 35 | avg_train_loss=0.026860 | avg_val_loss=0.026990
Epoch 36 | avg_train_loss=0.026759 | avg_val_loss=0.027177
Epoch 37 | avg_train_loss=0.026394 | avg_val_loss=0.027095
Epoch 38 | avg_train_loss=0.026300 | avg_val_loss=0.027176
Epoch 39 | avg_train_loss=0.026037 | avg_val_loss=0.026531
Epoch 40 | avg_train_loss=0.025845 | avg_val_loss=0.026745
Epoch 41 | avg_train_loss=0.025792 | avg_val_loss=0.026548
Epoch 42 | avg_train_loss=0.025511 | avg_val_loss=0.026350
Epoch 43 | avg_train_loss=0.025374 | avg_val_loss=0.026304
Epoch 44 | avg_train_loss=0.025176 | avg_val_loss=0.025972
Epoch 45 | avg_train_loss=0.025076 | avg_val_loss=0.025868
Epoch 46 | avg_train_loss=0.024928 | avg_val_loss=0.025828
Epoch 47 | avg_train_loss=0.024632 | avg_val_loss=0.025915
Epoch 48 | avg_train_loss=0.024808 | avg_val_loss=0.026007
Epoch 49 | avg_train_loss=0.024424 | avg_val_loss=0.025717
Epoch 50 | avg_train_loss=0.024429 | avg_val_loss=0.025611
Epoch 51 | avg_train_loss=0.024207 | avg_val_loss=0.025505
Epoch 52 | avg_train_loss=0.024083 | avg_val_loss=0.025364
Epoch 53 | avg_train_loss=0.023877 | avg_val_loss=0.025401
Epoch 54 | avg_train_loss=0.023740 | avg_val_loss=0.025286
Epoch 55 | avg_train_loss=0.023647 | avg_val_loss=0.025494
Epoch 56 | avg_train_loss=0.023535 | avg_val_loss=0.025314
Epoch 57 | avg_train_loss=0.023455 | avg_val_loss=0.025390
Epoch 58 | avg_train_loss=0.023331 | avg_val_loss=0.025399
Epoch 59 | avg_train_loss=0.023222 | avg_val_loss=0.025386
Epoch 60 | avg_train_loss=0.023255 | avg_val_loss=0.025081
Epoch 61 | avg_train_loss=0.022963 | avg_val_loss=0.024784
Epoch 62 | avg_train_loss=0.023005 | avg_val_loss=0.024913
Epoch 63 | avg_train_loss=0.022815 | avg_val_loss=0.025030
Epoch 64 | avg_train_loss=0.022596 | avg_val_loss=0.024511
Epoch 65 | avg_train_loss=0.022670 | avg_val_loss=0.024753
Epoch 66 | avg_train_loss=0.022643 | avg_val_loss=0.024542
Epoch 67 | avg_train_loss=0.022542 | avg_val_loss=0.025085
Epoch 68 | avg_train_loss=0.022292 | avg_val_loss=0.024781
Epoch 69 | avg_train_loss=0.022170 | avg_val_loss=0.024155
Epoch 70 | avg_train_loss=0.022237 | avg_val_loss=0.024556
Epoch 71 | avg_train_loss=0.022098 | avg_val_loss=0.024509
Epoch 72 | avg_train_loss=0.022126 | avg_val_loss=0.024652
Epoch 73 | avg_train_loss=0.021958 | avg_val_loss=0.024288
Epoch 74 | avg_train_loss=0.021913 | avg_val_loss=0.024441
Epoch 75 | avg_train_loss=0.021886 | avg_val_loss=0.024607
Epoch 76 | avg_train_loss=0.021720 | avg_val_loss=0.024590
Epoch 77 | avg_train_loss=0.021630 | avg_val_loss=0.023996
Epoch 78 | avg_train_loss=0.021467 | avg_val_loss=0.024722
Epoch 79 | avg_train_loss=0.021638 | avg_val_loss=0.024517
Epoch 80 | avg_train_loss=0.021356 | avg_val_loss=0.024559
Epoch 81 | avg_train_loss=0.021294 | avg_val_loss=0.024770
Epoch 82 | avg_train_loss=0.021038 | avg_val_loss=0.024078
Epoch 83 | avg_train_loss=0.021221 | avg_val_loss=0.024335
Epoch 84 | avg_train_loss=0.020900 | avg_val_loss=0.024699
Epoch 85 | avg_train_loss=0.020869 | avg_val_loss=0.023989
Epoch 86 | avg_train_loss=0.020974 | avg_val_loss=0.024153
Epoch 87 | avg_train_loss=0.020974 | avg_val_loss=0.024396
Epoch 88 | avg_train_loss=0.020817 | avg_val_loss=0.024147
Epoch 89 | avg_train_loss=0.020565 | avg_val_loss=0.023718
Epoch 90 | avg_train_loss=0.020628 | avg_val_loss=0.024412
Epoch 91 | avg_train_loss=0.020496 | avg_val_loss=0.024098
Epoch 92 | avg_train_loss=0.020539 | avg_val_loss=0.023814
Epoch 93 | avg_train_loss=0.020535 | avg_val_loss=0.023703
Epoch 94 | avg_train_loss=0.020319 | avg_val_loss=0.024197
Epoch 95 | avg_train_loss=0.020251 | avg_val_loss=0.024193
Epoch 96 | avg_train_loss=0.020144 | avg_val_loss=0.023809
Epoch 97 | avg_train_loss=0.020202 | avg_val_loss=0.024175
Epoch 98 | avg_train_loss=0.020078 | avg_val_loss=0.023579
Epoch 99 | avg_train_loss=0.020117 | avg_val_loss=0.024068
Epoch 100 | avg_train_loss=0.019979 | avg_val_loss=0.023708
Epoch 101 | avg_train_loss=0.019862 | avg_val_loss=0.024255
Epoch 102 | avg_train_loss=0.019928INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p181.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7332e-05s, 424928 KB] reading input...
[t=0.00212959s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257822s, 427536 KB] Building successor generator...done!
[t=0.0260638s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260873s, 427536 KB] time for successor generation creation: 0.000169144s
[t=0.0261155s, 427536 KB] Variables: 25
[t=0.0261376s, 427536 KB] FactPairs: 182
[t=0.0261599s, 427536 KB] Bytes per state: 8
[t=0.0263535s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106962s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.107019s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.107045s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.107072s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.107096s, 430128 KB] pruning method: none
[t=0.118949s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.119001s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.126265s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.126308s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.127953s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.127987s, 431100 KB] g=5, 16 evaluated, 5 expanded
[t=0.129613s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.129644s, 431100 KB] g=7, 25 evaluated, 8 expanded
[t=0.133047s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.133079s, 431100 KB] g=11, 44 evaluated, 13 expanded
[t=0.135244s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.135276s, 431100 KB] g=14, 56 evaluated, 17 expanded
[t=0.139051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.139087s, 431100 KB] g=15, 77 evaluated, 23 expanded
[t=0.139476s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.139505s, 431100 KB] g=16, 79 evaluated, 24 expanded
[t=0.141827s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.14186s, 431100 KB] g=18, 92 evaluated, 26 expanded
[t=0.154799s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.154844s, 431100 KB] g=26, 164 evaluated, 48 expanded
[t=0.163377s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.163414s, 431232 KB] g=25, 211 evaluated, 64 expanded
[t=0.169833s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.16987s, 431232 KB] g=27, 247 evaluated, 71 expanded
[t=0.176131s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.176165s, 431232 KB] g=33, 282 evaluated, 77 expanded
[t=0.176904s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.176946s, 431232 KB] g=34, 286 evaluated, 78 expanded
[t=0.177336s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.177368s, 431232 KB] g=35, 288 evaluated, 79 expanded
[t=0.178099s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.178131s, 431232 KB] g=35, 292 evaluated, 79 expanded
[t=0.178343s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.178373s, 431232 KB] g=36, 293 evaluated, 80 expanded
[t=0.17965s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.179684s, 431232 KB] g=37, 300 evaluated, 81 expanded
[t=0.188763s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.188797s, 431232 KB] g=40, 351 evaluated, 93 expanded
[t=0.189008s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.189041s, 431232 KB] g=40, 352 evaluated, 93 expanded
[t=0.189252s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.189281s, 431232 KB] g=41, 353 evaluated, 94 expanded
[t=0.189663s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.189693s, 431232 KB] g=41, 355 evaluated, 94 expanded
[t=0.1899s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.189929s, 431232 KB] g=41, 356 evaluated, 94 expanded
[t=0.19068s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.190716s, 431232 KB] g=42, 360 evaluated, 95 expanded
[t=0.203351s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.203388s, 431364 KB] g=46, 431 evaluated, 114 expanded
[t=0.204668s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.204701s, 431364 KB] g=48, 438 evaluated, 116 expanded
[t=0.207238s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.207271s, 431364 KB] g=50, 452 evaluated, 121 expanded
[t=0.21034s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.210373s, 431364 KB] g=54, 469 evaluated, 127 expanded
[t=0.210781s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.210812s, 431364 KB] g=55, 471 evaluated, 128 expanded
[t=0.214068s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.214107s, 431364 KB] g=56, 489 evaluated, 137 expanded, 1 reopened
[t=0.218238s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.218272s, 431364 KB] g=58, 512 evaluated, 147 expanded, 1 reopened
[t=0.219432s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.219465s, 431364 KB] g=60, 518 evaluated, 149 expanded, 1 reopened
[t=0.220571s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.220604s, 431364 KB] g=62, 524 evaluated, 153 expanded, 1 reopened
[t=0.220826s, 431364 KB] Solution found!
[t=0.220858s, 431364 KB] Actual search time: 0.11376s
stack h d (1)
unstack k g (1)
put-down k (1)
unstack e a (1)
stack e k (1)
unstack a l (1)
stack a e (1)
unstack l f (1)
stack l a (1)
unstack g b (1)
stack g h (1)
unstack l a (1)
put-down l (1)
unstack b j (1)
stack b l (1)
pick-up j (1)
stack j f (1)
unstack a e (1)
stack a b (1)
unstack j f (1)
stack j e (1)
unstack g h (1)
put-down g (1)
unstack h d (1)
stack h g (1)
unstack j e (1)
put-down j (1)
unstack d i (1)
put-down d (1)
unstack e k (1)
stack e j (1)
pick-up k (1)
stack k i (1)
pick-up f (1)
stack f k (1)
unstack a b (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
pick-up d (1)
stack d i (1)
unstack e j (1)
stack e k (1)
unstack d i (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.220884s, 431364 KB] Plan length: 63 step(s).
[t=0.220884s, 431364 KB] Plan cost: 63
[t=0.220884s, 431364 KB] Expanded 157 state(s).
[t=0.220884s, 431364 KB] Reopened 1 state(s).
[t=0.220884s, 431364 KB] Evaluated 526 state(s).
[t=0.220884s, 431364 KB] Evaluations: 526
[t=0.220884s, 431364 KB] Generated 694 state(s).
[t=0.220884s, 431364 KB] Dead ends: 0 state(s).
[t=0.220884s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.220884s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.220884s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.220884s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.220884s, 431364 KB] Number of registered states: 526
[t=0.220884s, 431364 KB] Int hash set load factor: 526/1024 = 0.513672
[t=0.220884s, 431364 KB] Int hash set resizes: 10
[t=0.220884s, 431364 KB] Search time: 0.194531s
[t=0.220884s, 431364 KB] Total time: 0.220884s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p182.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.646e-05s, 424928 KB] reading input...
[t=0.00221503s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259773s, 427536 KB] Building successor generator...done!
[t=0.0262561s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.02628s, 427536 KB] time for successor generation creation: 0.000167308s
[t=0.0263093s, 427536 KB] Variables: 25
[t=0.0263328s, 427536 KB] FactPairs: 182
[t=0.0263553s, 427536 KB] Bytes per state: 8
[t=0.0265507s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0983477s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0983999s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984258s, 430128 KB] f = 125, 1 evaluated, 0 expanded
[t=0.0984534s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.098477s, 430128 KB] pruning method: none
[t=0.117235s, 431100 KB] f = 126, 6 evaluated, 1 expanded
[t=0.118008s, 431100 KB] f = 135, 10 evaluated, 2 expanded
[t=0.118577s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.118608s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.11882s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.11885s, 431100 KB] g=4, 14 evaluated, 4 expanded
[t=0.122805s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.12285s, 431100 KB] g=7, 36 evaluated, 9 expanded
[t=0.123243s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.123273s, 431100 KB] g=8, 38 evaluated, 10 expanded
[t=0.128125s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.128163s, 431100 KB] g=6, 65 evaluated, 17 expanded
[t=0.135175s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.135209s, 431100 KB] g=8, 104 evaluated, 24 expanded
[t=0.141347s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.141384s, 431100 KB] g=12, 138 evaluated, 31 expanded
[t=0.141596s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.141626s, 431100 KB] g=12, 139 evaluated, 31 expanded
[t=0.145067s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.1451s, 431100 KB] g=13, 158 evaluated, 34 expanded
[t=0.146202s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.146238s, 431232 KB] g=14, 164 evaluated, 35 expanded
[t=0.159864s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.159901s, 431232 KB] g=20, 240 evaluated, 47 expanded
[t=0.195934s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.195975s, 431364 KB] g=22, 441 evaluated, 93 expanded, 9 reopened
[t=0.198168s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.198204s, 431364 KB] g=23, 453 evaluated, 95 expanded, 9 reopened
[t=0.228275s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.228316s, 431364 KB] g=26, 620 evaluated, 162 expanded, 39 reopened
[t=0.229788s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.229821s, 431364 KB] g=27, 628 evaluated, 164 expanded, 39 reopened
[t=0.232512s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.232546s, 431364 KB] g=29, 643 evaluated, 167 expanded, 39 reopened
[t=0.237911s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.23795s, 431496 KB] g=30, 673 evaluated, 174 expanded, 39 reopened
[t=0.239227s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.239258s, 431496 KB] g=32, 680 evaluated, 176 expanded, 39 reopened
[t=0.253326s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.253371s, 431496 KB] g=29, 759 evaluated, 197 expanded, 39 reopened
[t=0.255365s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.255396s, 431496 KB] g=34, 770 evaluated, 201 expanded, 39 reopened
[t=0.262057s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.262092s, 431496 KB] g=37, 807 evaluated, 213 expanded, 39 reopened
[t=0.266757s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.266791s, 431496 KB] g=40, 833 evaluated, 222 expanded, 39 reopened
[t=0.26789s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.26792s, 431496 KB] g=42, 839 evaluated, 224 expanded, 39 reopened
[t=0.270101s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.270135s, 431496 KB] g=44, 851 evaluated, 227 expanded, 39 reopened
[t=0.306004s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.30605s, 431628 KB] g=53, 1051 evaluated, 271 expanded, 39 reopened
[t=0.335608s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.335654s, 431760 KB] g=56, 1215 evaluated, 310 expanded, 42 reopened
[t=0.336946s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.336982s, 431760 KB] g=57, 1222 evaluated, 311 expanded, 42 reopened
[t=0.342896s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.342931s, 431760 KB] g=61, 1255 evaluated, 319 expanded, 42 reopened
[t=0.355826s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.355864s, 431760 KB] g=63, 1327 evaluated, 336 expanded, 42 reopened
[t=0.359988s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.360023s, 431760 KB] g=62, 1350 evaluated, 341 expanded, 42 reopened
[t=0.361487s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.36152s, 431760 KB] g=63, 1358 evaluated, 342 expanded, 42 reopened
[t=0.363689s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.363722s, 431760 KB] g=62, 1370 evaluated, 345 expanded, 42 reopened
[t=0.365011s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.365048s, 431760 KB] g=63, 1377 evaluated, 346 expanded, 42 reopened
[t=0.372046s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.372088s, 431760 KB] g=67, 1416 evaluated, 355 expanded, 42 reopened
[t=0.373873s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.373906s, 431892 KB] g=66, 1425 evaluated, 357 expanded, 42 reopened
[t=0.376274s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.376305s, 431892 KB] g=68, 1438 evaluated, 360 expanded, 42 reopened
[t=0.378152s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.378185s, 431892 KB] g=69, 1448 evaluated, 362 expanded, 42 reopened
[t=0.390273s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.390309s, 431892 KB] g=75, 1515 evaluated, 381 expanded, 42 reopened
[t=0.392317s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.392347s, 431892 KB] g=78, 1526 evaluated, 384 expanded, 42 reopened
[t=0.394193s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.394227s, 431892 KB] g=81, 1536 evaluated, 388 expanded, 42 reopened
[t=0.405236s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.405273s, 431892 KB] g=82, 1597 evaluated, 407 expanded, 42 reopened
[t=0.405665s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.405695s, 431892 KB] g=83, 1599 evaluated, 408 expanded, 42 reopened
[t=0.406802s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.406832s, 431892 KB] g=85, 1605 evaluated, 410 expanded, 42 reopened
[t=0.429968s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.430009s, 431892 KB] g=81, 1734 evaluated, 455 expanded, 50 reopened
[t=0.43076s, 431892 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.430791s, 431892 KB] g=83, 1738 evaluated, 457 expanded, 50 reopened
[t=0.431548s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.431578s, 432024 KB] g=85, 1742 evaluated, 459 expanded, 50 reopened
[t=0.432328s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.43236s, 432024 KB] g=87, 1746 evaluated, 461 expanded, 50 reopened
[t=0.432391s, 432024 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.432415s, 432024 KB] g=88, 1747 evaluated, 462 expanded, 50 reopened
[t=0.43246s, 432024 KB] Solution found!
[t=0.432487s, 432024 KB] Actual search time: 0.334006s
pick-up e (1)
stack e k (1)
unstack h j (1)
put-down h (1)
unstack a i (1)
stack a c (1)
unstack i l (1)
put-down i (1)
unstack l d (1)
put-down l (1)
unstack a c (1)
put-down a (1)
pick-up j (1)
stack j e (1)
pick-up h (1)
stack h a (1)
unstack d f (1)
stack d l (1)
pick-up f (1)
stack f d (1)
unstack j e (1)
stack j f (1)
unstack e k (1)
stack e j (1)
unstack k g (1)
stack k i (1)
unstack h a (1)
stack h e (1)
pick-up g (1)
stack g h (1)
pick-up a (1)
stack a k (1)
unstack g h (1)
stack g c (1)
unstack h e (1)
stack h a (1)
unstack g c (1)
put-down g (1)
unstack e j (1)
put-down e (1)
unstack j f (1)
stack j e (1)
unstack f d (1)
stack f j (1)
unstack d l (1)
put-down d (1)
unstack f j (1)
stack f d (1)
unstack c b (1)
stack c j (1)
pick-up b (1)
stack b l (1)
unstack c j (1)
stack c b (1)
unstack h a (1)
stack h g (1)
unstack f d (1)
put-down f (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack j e (1)
put-down j (1)
unstack k i (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j d (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
put-down b (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up b (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.432511s, 432024 KB] Plan length: 88 step(s).
[t=0.432511s, 432024 KB] Plan cost: 88
[t=0.432511s, 432024 KB] Expanded 463 state(s).
[t=0.432511s, 432024 KB] Reopened 50 state(s).
[t=0.432511s, 432024 KB] Evaluated 1747 state(s).
[t=0.432511s, 432024 KB] Evaluations: 1747
[t=0.432511s, 432024 KB] Generated 2506 state(s).
[t=0.432511s, 432024 KB] Dead ends: 0 state(s).
[t=0.432511s, 432024 KB] Expanded until last jump: 2 state(s).
[t=0.432511s, 432024 KB] Reopened until last jump: 0 state(s).
[t=0.432511s, 432024 KB] Evaluated until last jump: 10 state(s).
[t=0.432511s, 432024 KB] Generated until last jump: 10 state(s).
[t=0.432511s, 432024 KB] Number of registered states: 1747
[t=0.432511s, 432024 KB] Int hash set load factor: 1747/2048 = 0.853027
[t=0.432511s, 432024 KB] Int hash set resizes: 11
[t=0.432511s, 432024 KB] Search time: 0.405961s
[t=0.432511s, 432024 KB] Total time: 0.432511s
Solution found.
Peak memory: 432024 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p183.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5342e-05s, 424928 KB] reading input...
[t=0.00218998s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257686s, 427536 KB] Building successor generator...done!
[t=0.0260432s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260659s, 427536 KB] time for successor generation creation: 0.0001653s
[t=0.0260939s, 427536 KB] Variables: 25
[t=0.026116s, 427536 KB] FactPairs: 182
[t=0.0261377s, 427536 KB] Bytes per state: 8
[t=0.0263348s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0976652s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0977171s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0977434s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0977707s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0977948s, 430128 KB] pruning method: none
[t=0.109615s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.109667s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116256s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.1163s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.116877s, 431100 KB] f = 146, 7 evaluated, 3 expanded
[t=0.118507s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.118539s, 431100 KB] g=3, 16 evaluated, 6 expanded
[t=0.11963s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.119661s, 431100 KB] g=5, 22 evaluated, 8 expanded
[t=0.12077s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.120803s, 431100 KB] g=6, 28 evaluated, 10 expanded
[t=0.122083s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.122123s, 431100 KB] g=7, 35 evaluated, 11 expanded
[t=0.13946s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.139496s, 431100 KB] g=14, 132 evaluated, 31 expanded
[t=0.140842s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.14088s, 431100 KB] g=15, 139 evaluated, 33 expanded
[t=0.144881s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.144915s, 431100 KB] g=19, 161 evaluated, 39 expanded
[t=0.203414s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.203453s, 431232 KB] g=31, 488 evaluated, 154 expanded, 4 reopened
[t=0.204025s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.204055s, 431232 KB] g=32, 491 evaluated, 155 expanded, 4 reopened
[t=0.21933s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.219367s, 431364 KB] g=35, 576 evaluated, 174 expanded, 4 reopened
[t=0.221728s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.221764s, 431364 KB] g=38, 589 evaluated, 177 expanded, 4 reopened
[t=0.231602s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.231641s, 431364 KB] g=41, 644 evaluated, 187 expanded, 4 reopened
[t=0.234164s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.234197s, 431364 KB] g=42, 658 evaluated, 190 expanded, 4 reopened
[t=0.237064s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.2371s, 431364 KB] g=44, 674 evaluated, 193 expanded, 4 reopened
[t=0.237845s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.237875s, 431364 KB] g=45, 678 evaluated, 194 expanded, 4 reopened
[t=0.241292s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.241329s, 431364 KB] g=46, 697 evaluated, 199 expanded, 4 reopened
[t=0.250782s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.250817s, 431496 KB] g=48, 750 evaluated, 210 expanded, 4 reopened
[t=0.253521s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.253554s, 431496 KB] g=51, 765 evaluated, 214 expanded, 4 reopened
[t=0.272956s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.272996s, 431496 KB] g=56, 874 evaluated, 246 expanded, 6 reopened
[t=0.274095s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.274134s, 431496 KB] g=57, 880 evaluated, 247 expanded, 6 reopened
[t=0.277934s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.277969s, 431496 KB] g=58, 901 evaluated, 252 expanded, 6 reopened
[t=0.285289s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.285326s, 431628 KB] g=61, 942 evaluated, 262 expanded, 6 reopened
[t=0.297961s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.298002s, 431628 KB] g=65, 1013 evaluated, 280 expanded, 6 reopened
[t=0.30045s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.300488s, 431628 KB] g=65, 1026 evaluated, 284 expanded, 6 reopened
[t=0.306361s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.306396s, 431628 KB] g=69, 1059 evaluated, 291 expanded, 6 reopened
[t=0.306963s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.306996s, 431628 KB] g=70, 1062 evaluated, 292 expanded, 6 reopened
[t=0.307736s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.30777s, 431628 KB] g=71, 1066 evaluated, 293 expanded, 6 reopened
[t=0.314369s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.314404s, 431628 KB] g=76, 1103 evaluated, 304 expanded, 6 reopened
[t=0.315146s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.315177s, 431628 KB] g=77, 1107 evaluated, 305 expanded, 6 reopened
[t=0.315385s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.315414s, 431628 KB] g=77, 1108 evaluated, 305 expanded, 6 reopened
[t=0.319866s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.319903s, 431628 KB] g=79, 1133 evaluated, 312 expanded, 6 reopened
[t=0.321545s, 431628 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.321581s, 431628 KB] g=81, 1142 evaluated, 315 expanded, 6 reopened
[t=0.327635s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.327674s, 431760 KB] g=83, 1176 evaluated, 328 expanded, 6 reopened
[t=0.341764s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.341801s, 431760 KB] g=87, 1255 evaluated, 367 expanded, 9 reopened
[t=0.34397s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.344007s, 431760 KB] g=90, 1267 evaluated, 373 expanded, 9 reopened
[t=0.352782s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.352819s, 431760 KB] g=89, 1316 evaluated, 399 expanded, 12 reopened
[t=0.353208s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.353241s, 431760 KB] g=90, 1318 evaluated, 400 expanded, 12 reopened
[t=0.353272s, 431760 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.353296s, 431760 KB] g=91, 1319 evaluated, 401 expanded, 12 reopened
[t=0.353321s, 431760 KB] Solution found!
[t=0.353348s, 431760 KB] Actual search time: 0.255548s
put-down h (1)
unstack e b (1)
put-down e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
put-down i (1)
pick-up d (1)
stack d e (1)
pick-up h (1)
stack h a (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack d e (1)
put-down d (1)
unstack h a (1)
stack h d (1)
unstack a k (1)
stack a h (1)
unstack i c (1)
put-down i (1)
unstack k g (1)
stack k c (1)
unstack g f (1)
stack g a (1)
unstack k c (1)
stack k i (1)
unstack f l (1)
put-down f (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j e (1)
pick-up f (1)
stack f j (1)
unstack k i (1)
stack k l (1)
unstack g a (1)
stack g k (1)
unstack a h (1)
stack a f (1)
unstack h d (1)
stack h a (1)
unstack g k (1)
put-down g (1)
pick-up i (1)
stack i c (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a k (1)
unstack f j (1)
stack f d (1)
unstack j e (1)
stack j i (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack j i (1)
stack j d (1)
pick-up e (1)
stack e j (1)
unstack k l (1)
stack k e (1)
unstack i c (1)
stack i l (1)
unstack k e (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack i l (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.353372s, 431760 KB] Plan length: 91 step(s).
[t=0.353372s, 431760 KB] Plan cost: 91
[t=0.353372s, 431760 KB] Expanded 402 state(s).
[t=0.353372s, 431760 KB] Reopened 12 state(s).
[t=0.353372s, 431760 KB] Evaluated 1319 state(s).
[t=0.353372s, 431760 KB] Evaluations: 1319
[t=0.353372s, 431760 KB] Generated 1818 state(s).
[t=0.353372s, 431760 KB] Dead ends: 0 state(s).
[t=0.353372s, 431760 KB] Expanded until last jump: 3 state(s).
[t=0.353372s, 431760 KB] Reopened until last jump: 0 state(s).
[t=0.353372s, 431760 KB] Evaluated until last jump: 7 state(s).
[t=0.353372s, 431760 KB] Generated until last jump: 8 state(s).
[t=0.353372s, 431760 KB] Number of registered states: 1319
[t=0.353372s, 431760 KB] Int hash set load factor: 1319/2048 = 0.644043
[t=0.353372s, 431760 KB] Int hash set resizes: 11
[t=0.353372s, 431760 KB] Search time: 0.327038s
[t=0.353372s, 431760 KB] Total time: 0.353372s
Solution found.
Peak memory: 431760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p184.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1466 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5717e-05s, 424928 KB] reading input...
[t=0.00218455s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260283s, 427536 KB] Building successor generator...done!
[t=0.0263084s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263316s, 427536 KB] time for successor generation creation: 0.000168508s
[t=0.0263593s, 427536 KB] Variables: 25
[t=0.0263821s, 427536 KB] FactPairs: 182
[t=0.0264039s, 427536 KB] Bytes per state: 8
[t=0.0266011s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987255s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0987776s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988031s, 430128 KB] f = 142, 1 evaluated, 0 expanded
[t=0.0988296s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.098853s, 430128 KB] pruning method: none
[t=0.117074s, 431100 KB] f = 147, 3 evaluated, 1 expanded
[t=0.117327s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.117357s, 431100 KB] g=2, 4 evaluated, 2 expanded
[t=0.117589s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.117619s, 431100 KB] g=3, 5 evaluated, 3 expanded
[t=0.119743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.119776s, 431100 KB] g=8, 16 evaluated, 8 expanded
[t=0.120374s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.120403s, 431100 KB] g=9, 19 evaluated, 9 expanded
[t=0.12062s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.120648s, 431100 KB] g=10, 20 evaluated, 10 expanded
[t=0.121802s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.121832s, 431100 KB] g=11, 26 evaluated, 11 expanded
[t=0.122434s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.122465s, 431100 KB] g=12, 29 evaluated, 12 expanded
[t=0.123431s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.12346s, 431100 KB] g=14, 34 evaluated, 14 expanded
[t=0.124055s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.124084s, 431100 KB] g=15, 37 evaluated, 15 expanded
[t=0.124864s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.124893s, 431100 KB] g=16, 41 evaluated, 16 expanded
[t=0.13743s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.137468s, 431100 KB] g=18, 107 evaluated, 44 expanded, 7 reopened
[t=0.146358s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.146396s, 431100 KB] g=22, 154 evaluated, 62 expanded, 7 reopened
[t=0.188528s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.188567s, 431232 KB] g=28, 378 evaluated, 139 expanded, 16 reopened
[t=0.191428s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.191462s, 431232 KB] g=30, 393 evaluated, 143 expanded, 16 reopened
[t=0.19206s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.192092s, 431232 KB] g=31, 396 evaluated, 144 expanded, 16 reopened
[t=0.198735s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.198769s, 431232 KB] g=35, 431 evaluated, 158 expanded, 16 reopened
[t=0.222013s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.222055s, 431364 KB] g=24, 554 evaluated, 208 expanded, 18 reopened
[t=0.22266s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.22269s, 431364 KB] g=25, 557 evaluated, 209 expanded, 18 reopened
[t=0.223286s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.223318s, 431364 KB] g=26, 560 evaluated, 210 expanded, 18 reopened
[t=0.226183s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.226216s, 431364 KB] g=28, 575 evaluated, 214 expanded, 18 reopened
[t=0.229812s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.229842s, 431364 KB] g=29, 594 evaluated, 219 expanded, 18 reopened
[t=0.232517s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.232553s, 431364 KB] g=33, 608 evaluated, 226 expanded, 18 reopened
[t=0.23446s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.234495s, 431364 KB] g=36, 618 evaluated, 229 expanded, 18 reopened
[t=0.236587s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.236616s, 431364 KB] g=32, 629 evaluated, 233 expanded, 18 reopened
[t=0.246039s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.246074s, 431364 KB] g=37, 679 evaluated, 249 expanded, 18 reopened
[t=0.247424s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.247465s, 431364 KB] g=38, 686 evaluated, 252 expanded, 18 reopened
[t=0.25955s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.259584s, 431364 KB] g=40, 750 evaluated, 282 expanded, 18 reopened
[t=0.259994s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.260023s, 431364 KB] g=41, 752 evaluated, 283 expanded, 18 reopened
[t=0.260238s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.260266s, 431364 KB] g=41, 753 evaluated, 283 expanded, 18 reopened
[t=0.260678s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.260707s, 431364 KB] g=42, 755 evaluated, 285 expanded, 18 reopened
[t=0.260738s, 431364 KB] Solution found!
[t=0.260765s, 431364 KB] Actual search time: 0.161908s
put-down a (1)
unstack h f (1)
stack h a (1)
unstack f j (1)
put-down f (1)
unstack j l (1)
stack j f (1)
unstack l g (1)
put-down l (1)
unstack g e (1)
put-down g (1)
unstack j f (1)
stack j e (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e j (1)
unstack k b (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
unstack i c (1)
put-down i (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.260788s, 431364 KB] Plan length: 43 step(s).
[t=0.260788s, 431364 KB] Plan cost: 43
[t=0.260788s, 431364 KB] Expanded 287 state(s).
[t=0.260788s, 431364 KB] Reopened 18 state(s).
[t=0.260788s, 431364 KB] Evaluated 756 state(s).
[t=0.260788s, 431364 KB] Evaluations: 756
[t=0.260788s, 431364 KB] Generated 1151 state(s).
[t=0.260788s, 431364 KB] Dead ends: 0 state(s).
[t=0.260788s, 431364 KB] Expanded until last jump: 1 state(s).
[t=0.260788s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.260788s, 431364 KB] Evaluated until last jump: 3 state(s).
[t=0.260788s, 431364 KB] Generated until last jump: 2 state(s).
[t=0.260788s, 431364 KB] Number of registered states: 756
[t=0.260788s, 431364 KB] Int hash set load factor: 756/1024 = 0.738281
[t=0.260788s, 431364 KB] Int hash set resizes: 10
[t=0.260788s, 431364 KB] Search time: 0.234188s
[t=0.260788s, 431364 KB] Total time: 0.260788s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p185.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1473 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6134e-05s, 424928 KB] reading input...
[t=0.00217701s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0257506s, 427536 KB] Building successor generator...done!
[t=0.0260499s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260746s, 427536 KB] time for successor generation creation: 0.000181567s
[t=0.0261047s, 427536 KB] Variables: 25
[t=0.0261292s, 427536 KB] FactPairs: 182
[t=0.0261528s, 427536 KB] Bytes per state: 8
[t=0.0263602s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980567s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.098109s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981348s, 430128 KB] f = 101, 1 evaluated, 0 expanded
[t=0.0981613s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.0981851s, 430128 KB] pruning method: none
[t=0.117032s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.117082s, 431100 KB] g=1, 7 evaluated, 1 expanded
[t=0.117685s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.117719s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.118842s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.118872s, 431100 KB] g=3, 16 evaluated, 3 expanded
[t=0.127294s, 431100 KB] f = 103, 62 evaluated, 10 expanded
[t=0.131751s, 431100 KB] f = 104, 86 evaluated, 14 expanded
[t=0.132159s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.132189s, 431100 KB] g=8, 88 evaluated, 15 expanded
[t=0.133694s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.133729s, 431100 KB] g=9, 96 evaluated, 17 expanded
[t=0.134307s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.134336s, 431100 KB] g=9, 99 evaluated, 17 expanded
[t=0.142465s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.142499s, 431100 KB] g=13, 143 evaluated, 27 expanded
[t=0.146758s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.146792s, 431100 KB] g=17, 166 evaluated, 33 expanded
[t=0.147009s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.14704s, 431100 KB] g=18, 167 evaluated, 34 expanded
[t=0.147436s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.147476s, 431100 KB] g=18, 169 evaluated, 34 expanded
[t=0.148985s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.149017s, 431232 KB] g=19, 177 evaluated, 36 expanded
[t=0.149231s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.149259s, 431232 KB] g=19, 178 evaluated, 36 expanded
[t=0.152603s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.152635s, 431232 KB] g=20, 196 evaluated, 40 expanded
[t=0.155782s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.155818s, 431232 KB] g=24, 213 evaluated, 44 expanded
[t=0.169135s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.16917s, 431232 KB] g=26, 285 evaluated, 62 expanded
[t=0.171222s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.171254s, 431232 KB] g=27, 296 evaluated, 65 expanded
[t=0.171654s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.171682s, 431232 KB] g=28, 298 evaluated, 66 expanded
[t=0.172445s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.172474s, 431232 KB] g=29, 302 evaluated, 67 expanded
[t=0.176919s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.176952s, 431232 KB] g=30, 326 evaluated, 73 expanded
[t=0.179197s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.17923s, 431232 KB] g=32, 338 evaluated, 77 expanded
[t=0.179998s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.180029s, 431232 KB] g=33, 342 evaluated, 78 expanded
[t=0.18079s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.180819s, 431232 KB] g=34, 346 evaluated, 79 expanded
[t=0.181964s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.181996s, 431232 KB] g=35, 352 evaluated, 81 expanded
[t=0.182387s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.182416s, 431232 KB] g=35, 354 evaluated, 81 expanded
[t=0.18263s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.182659s, 431232 KB] g=36, 355 evaluated, 82 expanded
[t=0.184158s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.184194s, 431232 KB] g=37, 363 evaluated, 84 expanded
[t=0.184959s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.184991s, 431232 KB] g=38, 367 evaluated, 85 expanded
[t=0.187594s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.18763s, 431232 KB] g=41, 381 evaluated, 89 expanded
[t=0.188028s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.188057s, 431232 KB] g=42, 383 evaluated, 90 expanded
[t=0.189006s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.189041s, 431364 KB] g=44, 388 evaluated, 92 expanded
[t=0.18945s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.189481s, 431364 KB] g=45, 390 evaluated, 93 expanded
[t=0.189878s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.18991s, 431364 KB] g=46, 392 evaluated, 94 expanded
[t=0.190312s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.190341s, 431364 KB] g=47, 394 evaluated, 95 expanded
[t=0.190371s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.190394s, 431364 KB] g=48, 395 evaluated, 96 expanded
[t=0.19042s, 431364 KB] Solution found!
[t=0.190444s, 431364 KB] Actual search time: 0.0922551s
unstack j a (1)
stack j c (1)
pick-up d (1)
stack d j (1)
unstack g b (1)
stack g h (1)
pick-up f (1)
stack f d (1)
unstack l e (1)
put-down l (1)
pick-up b (1)
stack b l (1)
pick-up e (1)
stack e b (1)
unstack g h (1)
put-down g (1)
unstack h i (1)
stack h g (1)
unstack e b (1)
stack e i (1)
unstack a k (1)
stack a f (1)
pick-up k (1)
stack k e (1)
unstack a f (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack d j (1)
stack d b (1)
unstack e i (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.190469s, 431364 KB] Plan length: 48 step(s).
[t=0.190469s, 431364 KB] Plan cost: 48
[t=0.190469s, 431364 KB] Expanded 97 state(s).
[t=0.190469s, 431364 KB] Reopened 0 state(s).
[t=0.190469s, 431364 KB] Evaluated 395 state(s).
[t=0.190469s, 431364 KB] Evaluations: 395
[t=0.190469s, 431364 KB] Generated 491 state(s).
[t=0.190469s, 431364 KB] Dead ends: 0 state(s).
[t=0.190469s, 431364 KB] Expanded until last jump: 14 state(s).
[t=0.190469s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.190469s, 431364 KB] Evaluated until last jump: 86 state(s).
[t=0.190469s, 431364 KB] Generated until last jump: 98 state(s).
[t=0.190469s, 431364 KB] Number of registered states: 395
[t=0.190469s, 431364 KB] Int hash set load factor: 395/512 = 0.771484
[t=0.190469s, 431364 KB] Int hash set resizes: 9
[t=0.190469s, 431364 KB] Search time: 0.164109s
[t=0.190469s, 431364 KB] Total time: 0.190469s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p186.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6121e-05s, 424928 KB] reading input...
[t=0.00214263s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025863s, 427536 KB] Building successor generator...done!
[t=0.0261443s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261679s, 427536 KB] time for successor generation creation: 0.000169937s
[t=0.0261961s, 427536 KB] Variables: 25
[t=0.0262185s, 427536 KB] FactPairs: 182
[t=0.0262406s, 427536 KB] Bytes per state: 8
[t=0.0264349s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0984067s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0984591s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0984846s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0985212s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0985452s, 430128 KB] pruning method: none
[t=0.116901s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.116951s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117889s, 431100 KB] f = 145, 9 evaluated, 2 expanded
[t=0.118642s, 431100 KB] f = 146, 13 evaluated, 3 expanded
[t=0.119046s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.119078s, 431100 KB] g=3, 15 evaluated, 4 expanded
[t=0.119643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.119673s, 431100 KB] g=3, 18 evaluated, 4 expanded
[t=0.120064s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.120094s, 431100 KB] g=4, 20 evaluated, 5 expanded
[t=0.120659s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.120688s, 431100 KB] g=4, 23 evaluated, 5 expanded
[t=0.121258s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.121287s, 431100 KB] g=5, 26 evaluated, 6 expanded
[t=0.121676s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.121706s, 431100 KB] g=5, 28 evaluated, 6 expanded
[t=0.125695s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.125728s, 431100 KB] g=8, 50 evaluated, 11 expanded
[t=0.133136s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.133171s, 431100 KB] g=11, 91 evaluated, 20 expanded
[t=0.136799s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.136833s, 431100 KB] g=14, 111 evaluated, 24 expanded
[t=0.145705s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.145739s, 431100 KB] g=18, 160 evaluated, 37 expanded
[t=0.146136s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.146166s, 431100 KB] g=19, 162 evaluated, 38 expanded
[t=0.153804s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.153838s, 431232 KB] g=10, 204 evaluated, 48 expanded
[t=0.164043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.164077s, 431232 KB] g=15, 260 evaluated, 60 expanded
[t=0.165202s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.165243s, 431232 KB] g=17, 266 evaluated, 62 expanded
[t=0.170331s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.170364s, 431232 KB] g=20, 294 evaluated, 66 expanded
[t=0.17563s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.175666s, 431232 KB] g=20, 323 evaluated, 71 expanded
[t=0.176062s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.176091s, 431232 KB] g=21, 325 evaluated, 72 expanded
[t=0.178277s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.17831s, 431232 KB] g=23, 337 evaluated, 74 expanded
[t=0.179435s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.179466s, 431232 KB] g=24, 343 evaluated, 75 expanded
[t=0.180401s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.180431s, 431232 KB] g=25, 348 evaluated, 76 expanded
[t=0.18137s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.181403s, 431232 KB] g=26, 353 evaluated, 77 expanded
[t=0.18161s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.181639s, 431232 KB] g=26, 354 evaluated, 77 expanded
[t=0.182208s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.18224s, 431232 KB] g=26, 357 evaluated, 77 expanded
[t=0.183546s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.183584s, 431364 KB] g=28, 364 evaluated, 79 expanded
[t=0.186506s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.186536s, 431364 KB] g=30, 380 evaluated, 82 expanded
[t=0.186758s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.186792s, 431364 KB] g=30, 381 evaluated, 82 expanded
[t=0.195175s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.195212s, 431364 KB] g=32, 427 evaluated, 91 expanded
[t=0.195424s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.195453s, 431364 KB] g=32, 428 evaluated, 91 expanded
[t=0.213397s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.213433s, 431364 KB] g=35, 527 evaluated, 112 expanded
[t=0.224379s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.224419s, 431364 KB] g=36, 588 evaluated, 127 expanded
[t=0.224813s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.224843s, 431364 KB] g=37, 590 evaluated, 128 expanded
[t=0.226868s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.2269s, 431364 KB] g=41, 601 evaluated, 133 expanded
[t=0.228194s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.228224s, 431364 KB] g=42, 608 evaluated, 137 expanded
[t=0.229508s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.229537s, 431364 KB] g=44, 615 evaluated, 139 expanded
[t=0.232451s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.232486s, 431364 KB] g=45, 631 evaluated, 145 expanded
[t=0.233607s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.233637s, 431364 KB] g=48, 637 evaluated, 149 expanded
[t=0.23403s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.234059s, 431364 KB] g=49, 639 evaluated, 150 expanded
[t=0.234642s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.234673s, 431364 KB] g=51, 642 evaluated, 152 expanded
[t=0.237051s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.237083s, 431364 KB] g=53, 655 evaluated, 157 expanded
[t=0.239988s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.240024s, 431364 KB] g=54, 671 evaluated, 164 expanded
[t=0.241131s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.241164s, 431364 KB] g=57, 677 evaluated, 167 expanded
[t=0.241553s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.241582s, 431364 KB] g=58, 679 evaluated, 168 expanded
[t=0.250083s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.25012s, 431496 KB] g=61, 727 evaluated, 195 expanded
[t=0.250147s, 431496 KB] Solution found!
[t=0.250173s, 431496 KB] Actual search time: 0.151624s
put-down e (1)
unstack l j (1)
put-down l (1)
unstack j h (1)
stack j e (1)
pick-up h (1)
stack h f (1)
unstack b d (1)
stack b l (1)
unstack d g (1)
stack d h (1)
unstack g a (1)
stack g c (1)
unstack d h (1)
put-down d (1)
unstack g c (1)
put-down g (1)
pick-up a (1)
stack a b (1)
unstack h f (1)
stack h g (1)
unstack a b (1)
stack a d (1)
unstack c i (1)
stack c b (1)
unstack j e (1)
stack j c (1)
unstack a d (1)
stack a h (1)
pick-up i (1)
stack i j (1)
pick-up e (1)
stack e d (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack i j (1)
put-down i (1)
unstack j c (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up i (1)
stack i d (1)
unstack c b (1)
put-down c (1)
unstack i d (1)
put-down i (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.250198s, 431496 KB] Plan length: 61 step(s).
[t=0.250198s, 431496 KB] Plan cost: 61
[t=0.250198s, 431496 KB] Expanded 196 state(s).
[t=0.250198s, 431496 KB] Reopened 0 state(s).
[t=0.250198s, 431496 KB] Evaluated 727 state(s).
[t=0.250198s, 431496 KB] Evaluations: 727
[t=0.250198s, 431496 KB] Generated 938 state(s).
[t=0.250198s, 431496 KB] Dead ends: 0 state(s).
[t=0.250198s, 431496 KB] Expanded until last jump: 3 state(s).
[t=0.250198s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.250198s, 431496 KB] Evaluated until last jump: 13 state(s).
[t=0.250198s, 431496 KB] Generated until last jump: 14 state(s).
[t=0.250198s, 431496 KB] Number of registered states: 727
[t=0.250198s, 431496 KB] Int hash set load factor: 727/1024 = 0.709961
[t=0.250198s, 431496 KB] Int hash set resizes: 10
[t=0.250198s, 431496 KB] Search time: 0.223763s
[t=0.250198s, 431496 KB] Total time: 0.250198s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p187.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6791e-05s, 424928 KB] reading input...
[t=0.00215429s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260033s, 427536 KB] Building successor generator...done!
[t=0.0262837s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263069s, 427536 KB] time for successor generation creation: 0.000168634s
[t=0.0263353s, 427536 KB] Variables: 25
[t=0.026358s, 427536 KB] FactPairs: 182
[t=0.0263804s, 427536 KB] Bytes per state: 8
[t=0.0265742s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0992707s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.0993216s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0993483s, 430128 KB] f = 82, 1 evaluated, 0 expanded
[t=0.099376s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.0994002s, 430128 KB] pruning method: none
[t=0.118429s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.118479s, 431100 KB] g=1, 7 evaluated, 1 expanded
[t=0.118888s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.118919s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.120413s, 431100 KB] f = 84, 17 evaluated, 3 expanded
[t=0.121563s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.121597s, 431100 KB] g=5, 23 evaluated, 5 expanded
[t=0.122362s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.122392s, 431100 KB] g=6, 27 evaluated, 6 expanded
[t=0.122972s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.123002s, 431100 KB] g=7, 30 evaluated, 7 expanded
[t=0.123215s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.123243s, 431100 KB] g=7, 31 evaluated, 7 expanded
[t=0.138167s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.138207s, 431100 KB] g=12, 112 evaluated, 28 expanded
[t=0.147251s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.147288s, 431232 KB] g=17, 161 evaluated, 38 expanded
[t=0.159096s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.159134s, 431232 KB] g=20, 225 evaluated, 52 expanded
[t=0.166189s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.166234s, 431232 KB] g=22, 263 evaluated, 61 expanded
[t=0.169595s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.16963s, 431232 KB] g=25, 281 evaluated, 65 expanded
[t=0.170765s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.170798s, 431232 KB] g=26, 287 evaluated, 66 expanded
[t=0.173766s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.173801s, 431232 KB] g=28, 303 evaluated, 70 expanded
[t=0.179702s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.179742s, 431232 KB] g=28, 335 evaluated, 76 expanded
[t=0.180144s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.180174s, 431232 KB] g=29, 337 evaluated, 77 expanded
[t=0.182043s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.182075s, 431232 KB] g=30, 347 evaluated, 80 expanded
[t=0.185791s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.18583s, 431232 KB] g=34, 367 evaluated, 88 expanded
[t=0.186044s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.186075s, 431232 KB] g=34, 368 evaluated, 88 expanded
[t=0.188487s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.188517s, 431232 KB] g=36, 381 evaluated, 93 expanded
[t=0.189291s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.189322s, 431232 KB] g=38, 385 evaluated, 95 expanded
[t=0.189909s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.189938s, 431232 KB] g=39, 388 evaluated, 96 expanded
[t=0.196422s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.196458s, 431364 KB] g=42, 423 evaluated, 116 expanded
[t=0.196489s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.196514s, 431364 KB] g=43, 424 evaluated, 117 expanded
[t=0.19654s, 431364 KB] Solution found!
[t=0.196566s, 431364 KB] Actual search time: 0.0971613s
put-down l (1)
pick-up e (1)
stack e j (1)
pick-up k (1)
stack k e (1)
unstack d b (1)
put-down d (1)
unstack b g (1)
stack b l (1)
unstack k e (1)
stack k b (1)
unstack e j (1)
stack e i (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack e i (1)
stack e j (1)
unstack k b (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.196591s, 431364 KB] Plan length: 43 step(s).
[t=0.196591s, 431364 KB] Plan cost: 43
[t=0.196591s, 431364 KB] Expanded 118 state(s).
[t=0.196591s, 431364 KB] Reopened 0 state(s).
[t=0.196591s, 431364 KB] Evaluated 424 state(s).
[t=0.196591s, 431364 KB] Evaluations: 424
[t=0.196591s, 431364 KB] Generated 541 state(s).
[t=0.196591s, 431364 KB] Dead ends: 0 state(s).
[t=0.196591s, 431364 KB] Expanded until last jump: 3 state(s).
[t=0.196591s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.196591s, 431364 KB] Evaluated until last jump: 17 state(s).
[t=0.196591s, 431364 KB] Generated until last jump: 18 state(s).
[t=0.196591s, 431364 KB] Number of registered states: 424
[t=0.196591s, 431364 KB] Int hash set load factor: 424/512 = 0.828125
[t=0.196591s, 431364 KB] Int hash set resizes: 9
[t=0.196591s, 431364 KB] Search time: 0.170017s
[t=0.196591s, 431364 KB] Total time: 0.196591s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p188.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7156e-05s, 424928 KB] reading input...
[t=0.00212277s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.025917s, 427536 KB] Building successor generator...done!
[t=0.0261977s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262218s, 427536 KB] time for successor generation creation: 0.000168582s
[t=0.0262509s, 427536 KB] Variables: 25
[t=0.0262741s, 427536 KB] FactPairs: 182
[t=0.0262963s, 427536 KB] Bytes per state: 8
[t=0.0265047s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980816s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0981346s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981606s, 430128 KB] f = 149, 1 evaluated, 0 expanded
[t=0.0981877s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0982118s, 430128 KB] pruning method: none
[t=0.110009s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.110061s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116738s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.116787s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117193s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.117224s, 431100 KB] g=2, 6 evaluated, 2 expanded
[t=0.118744s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.118778s, 431100 KB] g=5, 14 evaluated, 5 expanded
[t=0.118998s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.119027s, 431100 KB] g=6, 15 evaluated, 6 expanded
[t=0.120524s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.120555s, 431100 KB] g=8, 23 evaluated, 8 expanded
[t=0.158372s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.158414s, 431232 KB] g=21, 217 evaluated, 55 expanded
[t=0.162695s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.162732s, 431232 KB] g=23, 240 evaluated, 60 expanded
[t=0.167373s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.167409s, 431232 KB] g=25, 265 evaluated, 64 expanded
[t=0.168722s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.168754s, 431232 KB] g=27, 272 evaluated, 66 expanded
[t=0.16953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.16956s, 431232 KB] g=28, 276 evaluated, 67 expanded
[t=0.170525s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.170561s, 431232 KB] g=29, 281 evaluated, 68 expanded
[t=0.172243s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.172273s, 431232 KB] g=30, 290 evaluated, 71 expanded
[t=0.173587s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.173617s, 431232 KB] g=31, 297 evaluated, 73 expanded
[t=0.178061s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.178098s, 431232 KB] g=37, 321 evaluated, 81 expanded
[t=0.179061s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.179098s, 431232 KB] g=39, 326 evaluated, 83 expanded
[t=0.179862s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.179891s, 431232 KB] g=40, 330 evaluated, 84 expanded
[t=0.180473s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.180503s, 431232 KB] g=41, 333 evaluated, 85 expanded
[t=0.182175s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.182208s, 431232 KB] g=42, 342 evaluated, 87 expanded
[t=0.183164s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.183196s, 431232 KB] g=44, 347 evaluated, 89 expanded
[t=0.184867s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.184898s, 431232 KB] g=46, 356 evaluated, 91 expanded
[t=0.185668s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.185697s, 431232 KB] g=48, 360 evaluated, 93 expanded
[t=0.186288s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.186321s, 431232 KB] g=49, 363 evaluated, 94 expanded
[t=0.186541s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.18657s, 431232 KB] g=50, 364 evaluated, 95 expanded
[t=0.186786s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.186814s, 431232 KB] g=51, 365 evaluated, 96 expanded
[t=0.187214s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.187244s, 431232 KB] g=52, 367 evaluated, 97 expanded
[t=0.188945s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.188982s, 431232 KB] g=55, 377 evaluated, 104 expanded
[t=0.189011s, 431232 KB] Solution found!
[t=0.189038s, 431232 KB] Actual search time: 0.0908224s
put-down k (1)
unstack j g (1)
stack j k (1)
unstack b l (1)
put-down b (1)
unstack g e (1)
put-down g (1)
unstack e d (1)
stack e j (1)
unstack d i (1)
stack d b (1)
unstack e j (1)
stack e i (1)
unstack d b (1)
stack d e (1)
unstack l a (1)
stack l d (1)
unstack a h (1)
stack a l (1)
unstack j k (1)
put-down j (1)
unstack h f (1)
stack h g (1)
pick-up k (1)
stack k j (1)
unstack a l (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
pick-up j (1)
stack j b (1)
unstack l d (1)
put-down l (1)
unstack j b (1)
stack j l (1)
unstack d e (1)
stack d b (1)
unstack e i (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.189064s, 431232 KB] Plan length: 55 step(s).
[t=0.189064s, 431232 KB] Plan cost: 55
[t=0.189064s, 431232 KB] Expanded 105 state(s).
[t=0.189064s, 431232 KB] Reopened 0 state(s).
[t=0.189064s, 431232 KB] Evaluated 377 state(s).
[t=0.189064s, 431232 KB] Evaluations: 377
[t=0.189064s, 431232 KB] Generated 484 state(s).
[t=0.189064s, 431232 KB] Dead ends: 0 state(s).
[t=0.189064s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.189064s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.189064s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.189064s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.189064s, 431232 KB] Number of registered states: 377
[t=0.189064s, 431232 KB] Int hash set load factor: 377/512 = 0.736328
[t=0.189064s, 431232 KB] Int hash set resizes: 9
[t=0.189064s, 431232 KB] Search time: 0.16256s
[t=0.189064s, 431232 KB] Total time: 0.189064s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p189.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0457e-05s, 424928 KB] reading input...
[t=0.00216922s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258295s, 427536 KB] Building successor generator...done!
[t=0.0261143s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261383s, 427536 KB] time for successor generation creation: 0.000171153s
[t=0.0261673s, 427536 KB] Variables: 25
[t=0.0261907s, 427536 KB] FactPairs: 182
[t=0.0262132s, 427536 KB] Bytes per state: 8
[t=0.0264088s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986317s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0986836s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987102s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.098738s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0987625s, 430128 KB] pruning method: none
[t=0.11056s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.110613s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117036s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.117078s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11788s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.117912s, 431100 KB] g=1, 7 evaluated, 1 expanded
[t=0.118137s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.118166s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.119135s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.119165s, 431100 KB] g=3, 13 evaluated, 3 expanded
[t=0.119568s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.119597s, 431100 KB] g=3, 15 evaluated, 3 expanded
[t=0.129795s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.129839s, 431100 KB] g=6, 69 evaluated, 13 expanded
[t=0.131384s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.131415s, 431100 KB] g=7, 77 evaluated, 14 expanded
[t=0.133907s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.133942s, 431100 KB] g=10, 90 evaluated, 17 expanded
[t=0.134534s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.134564s, 431100 KB] g=10, 93 evaluated, 17 expanded
[t=0.134972s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.135002s, 431100 KB] g=11, 95 evaluated, 18 expanded
[t=0.135975s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.136005s, 431100 KB] g=12, 100 evaluated, 19 expanded
[t=0.13736s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.137393s, 431100 KB] g=13, 107 evaluated, 20 expanded
[t=0.142531s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.142567s, 431100 KB] g=18, 134 evaluated, 27 expanded
[t=0.142787s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.142816s, 431100 KB] g=18, 135 evaluated, 27 expanded
[t=0.143981s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.144013s, 431100 KB] g=19, 141 evaluated, 29 expanded
[t=0.152142s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.152176s, 431232 KB] g=22, 184 evaluated, 40 expanded
[t=0.152772s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.152804s, 431232 KB] g=23, 187 evaluated, 41 expanded
[t=0.171191s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.171228s, 431232 KB] g=18, 284 evaluated, 68 expanded
[t=0.173145s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.173178s, 431232 KB] g=21, 294 evaluated, 71 expanded
[t=0.173983s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.174016s, 431232 KB] g=22, 298 evaluated, 72 expanded
[t=0.174237s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.174266s, 431232 KB] g=23, 299 evaluated, 73 expanded
[t=0.175235s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.175271s, 431232 KB] g=25, 304 evaluated, 75 expanded
[t=0.17797s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.178003s, 431232 KB] g=28, 318 evaluated, 80 expanded
[t=0.178416s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.178448s, 431232 KB] g=29, 320 evaluated, 81 expanded
[t=0.178858s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.178887s, 431232 KB] g=30, 322 evaluated, 82 expanded
[t=0.18307s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.183103s, 431232 KB] g=32, 344 evaluated, 89 expanded
[t=0.183891s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.183924s, 431232 KB] g=34, 348 evaluated, 91 expanded
[t=0.184336s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.184366s, 431232 KB] g=35, 350 evaluated, 92 expanded
[t=0.185559s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.185595s, 431232 KB] g=38, 356 evaluated, 96 expanded
[t=0.1862s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.18623s, 431232 KB] g=40, 359 evaluated, 98 expanded
[t=0.186451s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.18648s, 431232 KB] g=41, 360 evaluated, 99 expanded
[t=0.186889s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.186919s, 431232 KB] g=42, 362 evaluated, 100 expanded
[t=0.188102s, 431232 KB] Solution found!
[t=0.188135s, 431232 KB] Actual search time: 0.08937s
put-down h (1)
unstack g j (1)
put-down g (1)
pick-up l (1)
stack l d (1)
unstack b e (1)
stack b l (1)
unstack e a (1)
stack e j (1)
pick-up h (1)
stack h g (1)
pick-up a (1)
stack a k (1)
unstack e j (1)
stack e b (1)
unstack j f (1)
stack j e (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack j e (1)
stack j i (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack b l (1)
stack b i (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.188162s, 431232 KB] Plan length: 45 step(s).
[t=0.188162s, 431232 KB] Plan cost: 45
[t=0.188162s, 431232 KB] Expanded 107 state(s).
[t=0.188162s, 431232 KB] Reopened 0 state(s).
[t=0.188162s, 431232 KB] Evaluated 369 state(s).
[t=0.188162s, 431232 KB] Evaluations: 369
[t=0.188162s, 431232 KB] Generated 477 state(s).
[t=0.188162s, 431232 KB] Dead ends: 0 state(s).
[t=0.188162s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.188162s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.188162s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.188162s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.188162s, 431232 KB] Number of registered states: 369
[t=0.188162s, 431232 KB] Int hash set load factor: 369/512 = 0.720703
[t=0.188162s, 431232 KB] Int hash set resizes: 9
[t=0.188162s, 431232 KB] Search time: 0.161754s
[t=0.188162s, 431232 KB] Total time: 0.188162s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p190.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6581e-05s, 424928 KB] reading input...
[t=0.00211113s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260637s, 427536 KB] Building successor generator...done!
[t=0.0263444s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263684s, 427536 KB] time for successor generation creation: 0.000168161s
[t=0.0263966s, 427536 KB] Variables: 25
[t=0.0264286s, 427536 KB] FactPairs: 182
[t=0.0264513s, 427536 KB] Bytes per state: 8
[t=0.0266441s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987499s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0988012s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988281s, 430128 KB] f = 143, 1 evaluated, 0 expanded
[t=0.0988553s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.0988792s, 430128 KB] pruning method: none
[t=0.110686s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.110738s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117146s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 120
[t=0.117189s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.11814s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.118171s, 431100 KB] g=2, 8 evaluated, 2 expanded
[t=0.118386s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.118415s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.118808s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.118837s, 431100 KB] g=2, 11 evaluated, 2 expanded
[t=0.122674s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.122707s, 431100 KB] g=5, 32 evaluated, 7 expanded
[t=0.13018s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.130218s, 431100 KB] g=9, 73 evaluated, 19 expanded
[t=0.130975s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.131008s, 431100 KB] g=10, 77 evaluated, 20 expanded
[t=0.1314s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.131429s, 431100 KB] g=10, 79 evaluated, 20 expanded
[t=0.134372s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.134405s, 431100 KB] g=15, 95 evaluated, 26 expanded
[t=0.13663s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.136666s, 431100 KB] g=18, 107 evaluated, 31 expanded
[t=0.137244s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.137276s, 431100 KB] g=19, 110 evaluated, 32 expanded
[t=0.151858s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.151893s, 431232 KB] g=24, 190 evaluated, 54 expanded
[t=0.157395s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.157439s, 431232 KB] g=31, 220 evaluated, 65 expanded
[t=0.157655s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.157684s, 431232 KB] g=31, 221 evaluated, 65 expanded
[t=0.159357s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.15939s, 431232 KB] g=33, 230 evaluated, 68 expanded
[t=0.161603s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.161638s, 431232 KB] g=32, 242 evaluated, 71 expanded
[t=0.162219s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.162248s, 431232 KB] g=33, 245 evaluated, 72 expanded
[t=0.165401s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.165435s, 431232 KB] g=36, 262 evaluated, 78 expanded
[t=0.166202s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.166238s, 431232 KB] g=38, 266 evaluated, 80 expanded
[t=0.166454s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.166483s, 431232 KB] g=39, 267 evaluated, 81 expanded
[t=0.168349s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.168385s, 431232 KB] g=41, 277 evaluated, 86 expanded
[t=0.168792s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.168821s, 431232 KB] g=43, 280 evaluated, 89 expanded
[t=0.168848s, 431232 KB] Solution found!
[t=0.168874s, 431232 KB] Actual search time: 0.0699911s
stack f b (1)
unstack l g (1)
stack l d (1)
pick-up a (1)
stack a g (1)
unstack h j (1)
stack h l (1)
unstack a g (1)
stack a f (1)
pick-up j (1)
stack j a (1)
unstack h l (1)
stack h g (1)
unstack j a (1)
put-down j (1)
unstack a f (1)
stack a h (1)
unstack f b (1)
stack f a (1)
unstack b k (1)
put-down b (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j b (1)
unstack l d (1)
put-down l (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.168899s, 431232 KB] Plan length: 43 step(s).
[t=0.168899s, 431232 KB] Plan cost: 43
[t=0.168899s, 431232 KB] Expanded 90 state(s).
[t=0.168899s, 431232 KB] Reopened 0 state(s).
[t=0.168899s, 431232 KB] Evaluated 280 state(s).
[t=0.168899s, 431232 KB] Evaluations: 280
[t=0.168899s, 431232 KB] Generated 371 state(s).
[t=0.168899s, 431232 KB] Dead ends: 0 state(s).
[t=0.168899s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.168899s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.168899s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.168899s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.168899s, 431232 KB] Number of registered states: 280
[t=0.168899s, 431232 KB] Int hash set load factor: 280/512 = 0.546875
[t=0.168899s, 431232 KB] Int hash set resizes: 9
[t=0.168899s, 431232 KB] Search time: 0.142255s
[t=0.168899s, 431232 KB] Total time: 0.168899s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p191.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6875e-05s, 424928 KB] reading input...
[t=0.00210881s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259146s, 427536 KB] Building successor generator...done!
[t=0.0261969s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262202s, 427536 KB] time for successor generation creation: 0.00016906s
[t=0.0262494s, 427536 KB] Variables: 25
[t=0.0262723s, 427536 KB] FactPairs: 182
[t=0.0262945s, 427536 KB] Bytes per state: 8
[t=0.0264897s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991912s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0992528s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992796s, 430128 KB] f = 141, 1 evaluated, 0 expanded
[t=0.0993068s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0993313s, 430128 KB] pruning method: none
[t=0.118207s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.118257s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.119052s, 431100 KB] f = 142, 10 evaluated, 2 expanded
[t=0.120048s, 431100 KB] f = 144, 15 evaluated, 3 expanded
[t=0.120277s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.120306s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.123168s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.123198s, 431100 KB] g=4, 31 evaluated, 7 expanded
[t=0.12607s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.126102s, 431100 KB] g=6, 46 evaluated, 10 expanded
[t=0.127072s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.127101s, 431100 KB] g=6, 51 evaluated, 10 expanded
[t=0.129219s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.12925s, 431100 KB] g=8, 62 evaluated, 12 expanded
[t=0.138006s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.13804s, 431100 KB] g=12, 108 evaluated, 18 expanded
[t=0.138259s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.138291s, 431100 KB] g=12, 109 evaluated, 18 expanded
[t=0.142112s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.142145s, 431100 KB] g=13, 129 evaluated, 21 expanded
[t=0.151465s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.151499s, 431232 KB] g=15, 178 evaluated, 28 expanded
[t=0.154769s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.154802s, 431232 KB] g=17, 195 evaluated, 31 expanded
[t=0.162429s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.162465s, 431232 KB] g=19, 235 evaluated, 37 expanded
[t=0.163826s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.163861s, 431232 KB] g=20, 242 evaluated, 38 expanded
[t=0.164275s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.164313s, 431232 KB] g=21, 244 evaluated, 39 expanded
[t=0.165481s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.165513s, 431232 KB] g=21, 250 evaluated, 39 expanded
[t=0.170126s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.170161s, 431232 KB] g=23, 274 evaluated, 42 expanded
[t=0.17304s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.173075s, 431232 KB] g=25, 289 evaluated, 44 expanded
[t=0.177861s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.177895s, 431232 KB] g=28, 314 evaluated, 49 expanded
[t=0.193814s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.193848s, 431232 KB] g=26, 398 evaluated, 62 expanded
[t=0.210887s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.210923s, 431364 KB] g=33, 488 evaluated, 75 expanded
[t=0.212101s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.212136s, 431364 KB] g=33, 494 evaluated, 77 expanded
[t=0.214821s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.214855s, 431364 KB] g=35, 508 evaluated, 79 expanded
[t=0.216089s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.216122s, 431364 KB] g=36, 514 evaluated, 80 expanded
[t=0.220507s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.220544s, 431364 KB] g=38, 537 evaluated, 85 expanded
[t=0.220952s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.22098s, 431364 KB] g=38, 539 evaluated, 85 expanded
[t=0.221391s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.22142s, 431364 KB] g=39, 541 evaluated, 86 expanded
[t=0.225991s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.226024s, 431364 KB] g=41, 565 evaluated, 90 expanded
[t=0.226998s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.22703s, 431364 KB] g=42, 570 evaluated, 91 expanded
[t=0.228774s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.228807s, 431364 KB] g=42, 579 evaluated, 93 expanded
[t=0.231681s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.231719s, 431364 KB] g=45, 594 evaluated, 96 expanded
[t=0.235742s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.235777s, 431496 KB] g=48, 615 evaluated, 100 expanded
[t=0.238651s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.238683s, 431496 KB] g=48, 630 evaluated, 103 expanded
[t=0.239287s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.239315s, 431496 KB] g=49, 633 evaluated, 104 expanded
[t=0.23993s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.239964s, 431496 KB] g=50, 636 evaluated, 105 expanded
[t=0.241885s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.241914s, 431496 KB] g=53, 646 evaluated, 108 expanded
[t=0.242132s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.24216s, 431496 KB] g=53, 647 evaluated, 108 expanded
[t=0.243531s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.243565s, 431496 KB] g=54, 654 evaluated, 110 expanded
[t=0.25255s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.252585s, 431496 KB] g=59, 701 evaluated, 127 expanded
[t=0.253767s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.253797s, 431496 KB] g=61, 708 evaluated, 131 expanded
[t=0.253824s, 431496 KB] Solution found!
[t=0.25385s, 431496 KB] Actual search time: 0.154515s
put-down i (1)
unstack a g (1)
put-down a (1)
unstack b f (1)
put-down b (1)
unstack k j (1)
put-down k (1)
unstack j h (1)
stack j b (1)
unstack g l (1)
stack g h (1)
unstack j b (1)
stack j k (1)
pick-up b (1)
stack b l (1)
unstack c d (1)
stack c b (1)
unstack d e (1)
put-down d (1)
unstack j k (1)
put-down j (1)
pick-up e (1)
stack e j (1)
pick-up a (1)
stack a k (1)
unstack g h (1)
put-down g (1)
unstack e j (1)
stack e i (1)
pick-up j (1)
stack j e (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack j e (1)
put-down j (1)
pick-up f (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d b (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.253875s, 431496 KB] Plan length: 61 step(s).
[t=0.253875s, 431496 KB] Plan cost: 61
[t=0.253875s, 431496 KB] Expanded 132 state(s).
[t=0.253875s, 431496 KB] Reopened 0 state(s).
[t=0.253875s, 431496 KB] Evaluated 708 state(s).
[t=0.253875s, 431496 KB] Evaluations: 708
[t=0.253875s, 431496 KB] Generated 840 state(s).
[t=0.253875s, 431496 KB] Dead ends: 0 state(s).
[t=0.253875s, 431496 KB] Expanded until last jump: 3 state(s).
[t=0.253875s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.253875s, 431496 KB] Evaluated until last jump: 15 state(s).
[t=0.253875s, 431496 KB] Generated until last jump: 16 state(s).
[t=0.253875s, 431496 KB] Number of registered states: 708
[t=0.253875s, 431496 KB] Int hash set load factor: 708/1024 = 0.691406
[t=0.253875s, 431496 KB] Int hash set resizes: 10
[t=0.253875s, 431496 KB] Search time: 0.227386s
[t=0.253875s, 431496 KB] Total time: 0.253875s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p192.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6925e-05s, 424928 KB] reading input...
[t=0.00219155s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259448s, 427536 KB] Building successor generator...done!
[t=0.0262289s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262524s, 427536 KB] time for successor generation creation: 0.000169211s
[t=0.0262809s, 427536 KB] Variables: 25
[t=0.0263042s, 427536 KB] FactPairs: 182
[t=0.0263268s, 427536 KB] Bytes per state: 8
[t=0.0265321s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0990171s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0990704s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0990959s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.0991342s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0991594s, 430128 KB] pruning method: none
[t=0.117637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.117686s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.126051s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.126085s, 431100 KB] g=6, 48 evaluated, 18 expanded
[t=0.126851s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.12688s, 431100 KB] g=7, 52 evaluated, 19 expanded
[t=0.140431s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.140468s, 431100 KB] g=15, 125 evaluated, 41 expanded
[t=0.142732s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.142765s, 431100 KB] g=18, 137 evaluated, 45 expanded
[t=0.144097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.144131s, 431100 KB] g=20, 144 evaluated, 47 expanded
[t=0.145632s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.145664s, 431100 KB] g=22, 152 evaluated, 49 expanded
[t=0.146246s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.146275s, 431100 KB] g=23, 155 evaluated, 50 expanded
[t=0.148157s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.148191s, 431100 KB] g=25, 165 evaluated, 53 expanded
[t=0.148778s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.148807s, 431100 KB] g=26, 168 evaluated, 54 expanded
[t=0.151633s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.151667s, 431232 KB] g=30, 183 evaluated, 60 expanded
[t=0.152619s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.152648s, 431232 KB] g=31, 188 evaluated, 61 expanded
[t=0.169221s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.169256s, 431232 KB] g=33, 277 evaluated, 91 expanded
[t=0.170955s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.170993s, 431232 KB] g=35, 286 evaluated, 95 expanded
[t=0.171961s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.171993s, 431232 KB] g=36, 291 evaluated, 97 expanded
[t=0.172953s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.172986s, 431232 KB] g=37, 296 evaluated, 99 expanded
[t=0.180813s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.180846s, 431232 KB] g=40, 338 evaluated, 121 expanded
[t=0.181251s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.181282s, 431232 KB] g=41, 340 evaluated, 122 expanded
[t=0.182444s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.182474s, 431232 KB] g=44, 347 evaluated, 128 expanded
[t=0.182501s, 431232 KB] Solution found!
[t=0.182526s, 431232 KB] Actual search time: 0.0833623s
unstack k f (1)
put-down k (1)
unstack h a (1)
stack h k (1)
unstack a g (1)
stack a f (1)
unstack g j (1)
stack g l (1)
unstack h k (1)
put-down h (1)
unstack g l (1)
put-down g (1)
pick-up k (1)
stack k j (1)
pick-up h (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
pick-up j (1)
stack j l (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.182551s, 431232 KB] Plan length: 44 step(s).
[t=0.182551s, 431232 KB] Plan cost: 44
[t=0.182551s, 431232 KB] Expanded 129 state(s).
[t=0.182551s, 431232 KB] Reopened 0 state(s).
[t=0.182551s, 431232 KB] Evaluated 347 state(s).
[t=0.182551s, 431232 KB] Evaluations: 347
[t=0.182551s, 431232 KB] Generated 483 state(s).
[t=0.182551s, 431232 KB] Dead ends: 0 state(s).
[t=0.182551s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.182551s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.182551s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.182551s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.182551s, 431232 KB] Number of registered states: 347
[t=0.182551s, 431232 KB] Int hash set load factor: 347/512 = 0.677734
[t=0.182551s, 431232 KB] Int hash set resizes: 9
[t=0.182551s, 431232 KB] Search time: 0.156019s
[t=0.182551s, 431232 KB] Total time: 0.182551s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p193.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0002e-05s, 424928 KB] reading input...
[t=0.00221238s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258517s, 427536 KB] Building successor generator...done!
[t=0.0261281s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261517s, 427536 KB] time for successor generation creation: 0.000165235s
[t=0.0261801s, 427536 KB] Variables: 25
[t=0.0262029s, 427536 KB] FactPairs: 182
[t=0.0262252s, 427536 KB] Bytes per state: 8
[t=0.0264191s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0985901s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0986418s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098667s, 430128 KB] f = 125, 1 evaluated, 0 expanded
[t=0.0986945s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0987196s, 430128 KB] pruning method: none
[t=0.110481s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.110534s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116955s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.116998s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117217s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.117259s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.118558s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.118589s, 431100 KB] g=3, 11 evaluated, 4 expanded
[t=0.120584s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.120615s, 431100 KB] g=5, 22 evaluated, 8 expanded
[t=0.121016s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.121048s, 431100 KB] g=6, 24 evaluated, 9 expanded
[t=0.125233s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.125267s, 431100 KB] g=8, 47 evaluated, 18 expanded
[t=0.125664s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.125694s, 431100 KB] g=9, 49 evaluated, 19 expanded
[t=0.126798s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.126829s, 431100 KB] g=10, 55 evaluated, 20 expanded
[t=0.12722s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.12725s, 431100 KB] g=11, 57 evaluated, 21 expanded
[t=0.128353s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.128388s, 431100 KB] g=12, 63 evaluated, 22 expanded
[t=0.130398s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.13043s, 431100 KB] g=14, 74 evaluated, 25 expanded
[t=0.13334s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.133376s, 431100 KB] g=16, 90 evaluated, 28 expanded
[t=0.140755s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.140792s, 431100 KB] g=19, 131 evaluated, 37 expanded
[t=0.14172s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.141754s, 431100 KB] g=20, 136 evaluated, 38 expanded
[t=0.143028s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.143061s, 431100 KB] g=21, 143 evaluated, 39 expanded
[t=0.147758s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.147793s, 431100 KB] g=22, 169 evaluated, 46 expanded
[t=0.160872s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.160911s, 431232 KB] g=18, 242 evaluated, 62 expanded
[t=0.162919s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.162958s, 431232 KB] g=20, 253 evaluated, 65 expanded
[t=0.164093s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.164126s, 431232 KB] g=21, 259 evaluated, 67 expanded
[t=0.16578s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.165814s, 431232 KB] g=23, 268 evaluated, 69 expanded
[t=0.178182s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.17822s, 431232 KB] g=27, 337 evaluated, 88 expanded
[t=0.190564s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.1906s, 431232 KB] g=28, 406 evaluated, 106 expanded
[t=0.199142s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.19918s, 431232 KB] g=30, 453 evaluated, 119 expanded
[t=0.207011s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.207046s, 431364 KB] g=29, 496 evaluated, 130 expanded
[t=0.209775s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.209809s, 431364 KB] g=31, 511 evaluated, 133 expanded
[t=0.210422s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.210456s, 431364 KB] g=32, 514 evaluated, 134 expanded
[t=0.213046s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.213082s, 431364 KB] g=34, 528 evaluated, 137 expanded
[t=0.213306s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.213341s, 431364 KB] g=34, 529 evaluated, 137 expanded
[t=0.213961s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.213991s, 431364 KB] g=35, 532 evaluated, 138 expanded
[t=0.214378s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.214407s, 431364 KB] g=35, 534 evaluated, 138 expanded
[t=0.215334s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.215366s, 431364 KB] g=36, 539 evaluated, 139 expanded
[t=0.217747s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.217781s, 431364 KB] g=38, 552 evaluated, 142 expanded
[t=0.218352s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.218382s, 431364 KB] g=39, 555 evaluated, 143 expanded
[t=0.219124s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.219162s, 431364 KB] g=40, 559 evaluated, 144 expanded
[t=0.219376s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.219405s, 431364 KB] g=41, 560 evaluated, 145 expanded
[t=0.219795s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.219825s, 431364 KB] g=42, 562 evaluated, 146 expanded
[t=0.231852s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.231887s, 431364 KB] g=45, 629 evaluated, 171 expanded
[t=0.240025s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.240063s, 431364 KB] g=49, 674 evaluated, 196 expanded, 1 reopened
[t=0.242261s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.242294s, 431364 KB] g=50, 686 evaluated, 202 expanded, 1 reopened
[t=0.243232s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.243263s, 431364 KB] g=51, 691 evaluated, 206 expanded, 1 reopened
[t=0.243294s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.243317s, 431364 KB] g=52, 692 evaluated, 207 expanded, 1 reopened
[t=0.243344s, 431364 KB] Solution found!
[t=0.24337s, 431364 KB] Actual search time: 0.144646s
unstack f l (1)
put-down f (1)
pick-up k (1)
stack k f (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
put-down d (1)
unstack e j (1)
stack e i (1)
unstack j a (1)
stack j e (1)
unstack k f (1)
stack k b (1)
pick-up f (1)
stack f d (1)
unstack a g (1)
stack a k (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack j e (1)
put-down j (1)
unstack a k (1)
stack a h (1)
unstack e i (1)
stack e j (1)
unstack f d (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack i c (1)
put-down i (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.243394s, 431364 KB] Plan length: 52 step(s).
[t=0.243394s, 431364 KB] Plan cost: 52
[t=0.243394s, 431364 KB] Expanded 208 state(s).
[t=0.243394s, 431364 KB] Reopened 1 state(s).
[t=0.243394s, 431364 KB] Evaluated 692 state(s).
[t=0.243394s, 431364 KB] Evaluations: 692
[t=0.243394s, 431364 KB] Generated 916 state(s).
[t=0.243394s, 431364 KB] Dead ends: 0 state(s).
[t=0.243394s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.243394s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.243394s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.243394s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.243394s, 431364 KB] Number of registered states: 692
[t=0.243394s, 431364 KB] Int hash set load factor: 692/1024 = 0.675781
[t=0.243394s, 431364 KB] Int hash set resizes: 10
[t=0.243394s, 431364 KB] Search time: 0.216976s
[t=0.243394s, 431364 KB] Total time: 0.243394s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p194.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8453e-05s, 424928 KB] reading input...
[t=0.00215376s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258005s, 427536 KB] Building successor generator...done!
[t=0.0260833s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261067s, 427536 KB] time for successor generation creation: 0.000170692s
[t=0.0261358s, 427536 KB] Variables: 25
[t=0.0261584s, 427536 KB] FactPairs: 182
[t=0.0261808s, 427536 KB] Bytes per state: 8
[t=0.026376s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979064s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0979596s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0979859s, 430128 KB] f = 152, 1 evaluated, 0 expanded
[t=0.098014s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 152
[t=0.0980485s, 430128 KB] pruning method: none
[t=0.109789s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.109841s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.116279s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.116322s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117615s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.117646s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.11875s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.11878s, 431100 KB] g=4, 16 evaluated, 4 expanded
[t=0.119719s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.119751s, 431100 KB] g=6, 21 evaluated, 6 expanded
[t=0.12014s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.12017s, 431100 KB] g=6, 23 evaluated, 6 expanded
[t=0.122354s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.122385s, 431100 KB] g=8, 35 evaluated, 9 expanded
[t=0.122955s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.122984s, 431100 KB] g=8, 38 evaluated, 9 expanded
[t=0.125355s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.125388s, 431100 KB] g=11, 51 evaluated, 12 expanded
[t=0.127214s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.12725s, 431100 KB] g=12, 61 evaluated, 13 expanded
[t=0.12801s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.128043s, 431100 KB] g=13, 65 evaluated, 14 expanded
[t=0.131861s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.131898s, 431100 KB] g=15, 86 evaluated, 18 expanded
[t=0.135158s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.135189s, 431100 KB] g=17, 104 evaluated, 21 expanded
[t=0.136488s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.136519s, 431100 KB] g=18, 111 evaluated, 22 expanded
[t=0.137631s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.137665s, 431100 KB] g=19, 117 evaluated, 23 expanded
[t=0.143668s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.14371s, 431100 KB] g=19, 150 evaluated, 30 expanded
[t=0.145187s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.145219s, 431100 KB] g=20, 158 evaluated, 31 expanded
[t=0.146333s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.146364s, 431232 KB] g=21, 164 evaluated, 32 expanded
[t=0.15652s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.156555s, 431232 KB] g=23, 220 evaluated, 45 expanded
[t=0.158386s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.158421s, 431232 KB] g=24, 230 evaluated, 47 expanded
[t=0.159174s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.159213s, 431232 KB] g=25, 234 evaluated, 48 expanded
[t=0.160696s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.16073s, 431232 KB] g=26, 242 evaluated, 50 expanded
[t=0.161662s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.161695s, 431232 KB] g=27, 247 evaluated, 51 expanded
[t=0.162987s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.163017s, 431232 KB] g=28, 254 evaluated, 53 expanded
[t=0.163622s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.163656s, 431232 KB] g=29, 257 evaluated, 54 expanded
[t=0.164767s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.1648s, 431232 KB] g=30, 263 evaluated, 55 expanded
[t=0.165198s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.165227s, 431232 KB] g=31, 265 evaluated, 56 expanded
[t=0.165804s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.165833s, 431232 KB] g=32, 268 evaluated, 57 expanded
[t=0.17235s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.172384s, 431232 KB] g=34, 304 evaluated, 67 expanded
[t=0.197464s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.1975s, 431232 KB] g=38, 443 evaluated, 115 expanded, 2 reopened
[t=0.199908s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.199944s, 431364 KB] g=40, 456 evaluated, 119 expanded, 2 reopened
[t=0.200698s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.200734s, 431364 KB] g=41, 460 evaluated, 120 expanded, 2 reopened
[t=0.203855s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.20389s, 431364 KB] g=46, 477 evaluated, 128 expanded, 2 reopened
[t=0.204472s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.204503s, 431364 KB] g=48, 480 evaluated, 130 expanded, 2 reopened
[t=0.205078s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.205108s, 431364 KB] g=50, 483 evaluated, 132 expanded, 2 reopened
[t=0.234647s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.234687s, 431364 KB] g=52, 645 evaluated, 239 expanded, 27 reopened
[t=0.258897s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.258934s, 431364 KB] g=50, 778 evaluated, 342 expanded, 76 reopened
[t=0.258962s, 431364 KB] Solution found!
[t=0.258989s, 431364 KB] Actual search time: 0.160936s
unstack c i (1)
stack c d (1)
unstack b f (1)
put-down b (1)
unstack j k (1)
stack j f (1)
unstack i l (1)
put-down i (1)
unstack l a (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack a h (1)
stack a j (1)
unstack k g (1)
stack k i (1)
unstack h e (1)
stack h g (1)
unstack a j (1)
stack a h (1)
pick-up e (1)
stack e b (1)
unstack j f (1)
stack j e (1)
pick-up f (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack c d (1)
put-down c (1)
unstack j e (1)
stack j i (1)
unstack e b (1)
stack e k (1)
pick-up d (1)
stack d b (1)
unstack j i (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.259014s, 431364 KB] Plan length: 50 step(s).
[t=0.259014s, 431364 KB] Plan cost: 50
[t=0.259014s, 431364 KB] Expanded 343 state(s).
[t=0.259014s, 431364 KB] Reopened 76 state(s).
[t=0.259014s, 431364 KB] Evaluated 778 state(s).
[t=0.259014s, 431364 KB] Evaluations: 778
[t=0.259014s, 431364 KB] Generated 1343 state(s).
[t=0.259014s, 431364 KB] Dead ends: 0 state(s).
[t=0.259014s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.259014s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.259014s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.259014s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.259014s, 431364 KB] Number of registered states: 778
[t=0.259014s, 431364 KB] Int hash set load factor: 778/1024 = 0.759766
[t=0.259014s, 431364 KB] Int hash set resizes: 10
[t=0.259014s, 431364 KB] Search time: 0.232639s
[t=0.259014s, 431364 KB] Total time: 0.259014s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p195.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7187e-05s, 424928 KB] reading input...
[t=0.00215311s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258024s, 427536 KB] Building successor generator...done!
[t=0.0260821s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261058s, 427536 KB] time for successor generation creation: 0.000168571s
[t=0.0261343s, 427536 KB] Variables: 25
[t=0.0261565s, 427536 KB] FactPairs: 182
[t=0.0261784s, 427536 KB] Bytes per state: 8
[t=0.0263749s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0979839s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0980367s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0980623s, 430128 KB] f = 125, 1 evaluated, 0 expanded
[t=0.0980896s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.0981138s, 430128 KB] pruning method: none
[t=0.116502s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.116552s, 431100 KB] g=1, 4 evaluated, 1 expanded
[t=0.117852s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.117896s, 431100 KB] g=2, 11 evaluated, 3 expanded
[t=0.119522s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.119552s, 431100 KB] g=4, 20 evaluated, 5 expanded
[t=0.120299s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.12033s, 431100 KB] g=5, 24 evaluated, 6 expanded
[t=0.1209s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.120931s, 431100 KB] g=5, 27 evaluated, 6 expanded
[t=0.121145s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.121174s, 431100 KB] g=6, 28 evaluated, 7 expanded
[t=0.130808s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.130845s, 431100 KB] g=11, 82 evaluated, 18 expanded
[t=0.139105s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.139141s, 431100 KB] g=10, 128 evaluated, 28 expanded
[t=0.158374s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.158409s, 431232 KB] g=10, 235 evaluated, 54 expanded, 1 reopened
[t=0.162764s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.162798s, 431232 KB] g=13, 259 evaluated, 59 expanded, 1 reopened
[t=0.163731s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.163765s, 431232 KB] g=14, 264 evaluated, 60 expanded, 1 reopened
[t=0.164509s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.164541s, 431232 KB] g=14, 268 evaluated, 60 expanded, 1 reopened
[t=0.167983s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.168014s, 431232 KB] g=17, 287 evaluated, 64 expanded, 1 reopened
[t=0.170025s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.170058s, 431232 KB] g=19, 298 evaluated, 66 expanded, 1 reopened
[t=0.170628s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.170657s, 431232 KB] g=20, 301 evaluated, 67 expanded, 1 reopened
[t=0.172299s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.172329s, 431232 KB] g=20, 310 evaluated, 70 expanded, 1 reopened
[t=0.172906s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.172938s, 431232 KB] g=21, 313 evaluated, 71 expanded, 1 reopened
[t=0.173868s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.173902s, 431232 KB] g=22, 318 evaluated, 72 expanded, 1 reopened
[t=0.176626s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.176659s, 431232 KB] g=26, 333 evaluated, 76 expanded, 1 reopened
[t=0.176869s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.176898s, 431232 KB] g=26, 334 evaluated, 76 expanded, 1 reopened
[t=0.179608s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.17964s, 431232 KB] g=28, 349 evaluated, 79 expanded, 1 reopened
[t=0.180208s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.180238s, 431232 KB] g=29, 352 evaluated, 80 expanded, 1 reopened
[t=0.180812s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.180844s, 431232 KB] g=30, 355 evaluated, 81 expanded, 1 reopened
[t=0.181238s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.18127s, 431232 KB] g=31, 357 evaluated, 82 expanded, 1 reopened
[t=0.182913s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.182945s, 431232 KB] g=33, 366 evaluated, 85 expanded, 1 reopened
[t=0.183158s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.183187s, 431232 KB] g=34, 367 evaluated, 86 expanded, 1 reopened
[t=0.185198s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.185231s, 431232 KB] g=37, 378 evaluated, 89 expanded, 1 reopened
[t=0.186164s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.186194s, 431232 KB] g=39, 383 evaluated, 91 expanded, 1 reopened
[t=0.186945s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.186977s, 431232 KB] g=41, 387 evaluated, 93 expanded, 1 reopened
[t=0.187369s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.187398s, 431232 KB] g=42, 389 evaluated, 94 expanded, 1 reopened
[t=0.187429s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.187453s, 431232 KB] g=43, 390 evaluated, 95 expanded, 1 reopened
[t=0.187479s, 431232 KB] Solution found!
[t=0.187504s, 431232 KB] Actual search time: 0.0893858s
put-down a (1)
unstack h b (1)
stack h e (1)
unstack b g (1)
stack b j (1)
unstack l f (1)
put-down l (1)
unstack b j (1)
stack b l (1)
unstack h e (1)
stack h g (1)
unstack e d (1)
stack e b (1)
unstack j k (1)
stack j e (1)
pick-up f (1)
stack f d (1)
pick-up a (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack j e (1)
put-down j (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.187528s, 431232 KB] Plan length: 43 step(s).
[t=0.187528s, 431232 KB] Plan cost: 43
[t=0.187528s, 431232 KB] Expanded 96 state(s).
[t=0.187528s, 431232 KB] Reopened 1 state(s).
[t=0.187528s, 431232 KB] Evaluated 390 state(s).
[t=0.187528s, 431232 KB] Evaluations: 390
[t=0.187528s, 431232 KB] Generated 488 state(s).
[t=0.187528s, 431232 KB] Dead ends: 0 state(s).
[t=0.187528s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.187528s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.187528s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.187528s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.187528s, 431232 KB] Number of registered states: 390
[t=0.187528s, 431232 KB] Int hash set load factor: 390/512 = 0.761719
[t=0.187528s, 431232 KB] Int hash set resizes: 9
[t=0.187528s, 431232 KB] Search time: 0.161154s
[t=0.187528s, 431232 KB] Total time: 0.187528s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p196.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.62e-05s, 424928 KB] reading input...
[t=0.0021359s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258101s, 427536 KB] Building successor generator...done!
[t=0.0260916s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261148s, 427536 KB] time for successor generation creation: 0.00017009s
[t=0.0261431s, 427536 KB] Variables: 25
[t=0.0261655s, 427536 KB] FactPairs: 182
[t=0.0261881s, 427536 KB] Bytes per state: 8
[t=0.0263824s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.098076s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0981279s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981544s, 430128 KB] f = 145, 1 evaluated, 0 expanded
[t=0.098183s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0982071s, 430128 KB] pruning method: none
[t=0.116371s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.116421s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117537s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.117568s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.119399s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.119432s, 431100 KB] g=3, 19 evaluated, 5 expanded
[t=0.12323s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.123264s, 431100 KB] g=8, 40 evaluated, 11 expanded
[t=0.123474s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.123504s, 431100 KB] g=8, 41 evaluated, 11 expanded
[t=0.127674s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.12771s, 431100 KB] g=10, 64 evaluated, 18 expanded
[t=0.132055s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.132091s, 431100 KB] g=13, 88 evaluated, 24 expanded
[t=0.134801s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.134834s, 431100 KB] g=17, 103 evaluated, 28 expanded
[t=0.136137s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.13617s, 431100 KB] g=19, 110 evaluated, 30 expanded
[t=0.139818s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.139862s, 431100 KB] g=20, 130 evaluated, 40 expanded
[t=0.14097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.141003s, 431100 KB] g=22, 136 evaluated, 43 expanded
[t=0.141395s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.141424s, 431100 KB] g=23, 138 evaluated, 44 expanded
[t=0.144176s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.144212s, 431100 KB] g=27, 153 evaluated, 50 expanded
[t=0.146397s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.146429s, 431232 KB] g=29, 165 evaluated, 53 expanded
[t=0.146644s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.146674s, 431232 KB] g=30, 166 evaluated, 54 expanded
[t=0.150846s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.150882s, 431232 KB] g=33, 189 evaluated, 62 expanded
[t=0.151831s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.151862s, 431232 KB] g=34, 194 evaluated, 64 expanded
[t=0.158382s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.158418s, 431232 KB] g=35, 230 evaluated, 79 expanded
[t=0.160079s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.160114s, 431232 KB] g=36, 239 evaluated, 82 expanded
[t=0.162845s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.162876s, 431232 KB] g=38, 254 evaluated, 88 expanded
[t=0.173215s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.173252s, 431232 KB] g=44, 311 evaluated, 114 expanded, 1 reopened
[t=0.174199s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.174229s, 431232 KB] g=45, 317 evaluated, 120 expanded, 1 reopened
[t=0.174257s, 431232 KB] Solution found!
[t=0.174283s, 431232 KB] Actual search time: 0.0760724s
stack g a (1)
unstack j h (1)
stack j e (1)
unstack k l (1)
stack k j (1)
unstack g a (1)
stack g h (1)
unstack l f (1)
put-down l (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h a (1)
pick-up f (1)
stack f k (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
put-down j (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l b (1)
unstack i c (1)
put-down i (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.174308s, 431232 KB] Plan length: 45 step(s).
[t=0.174308s, 431232 KB] Plan cost: 45
[t=0.174308s, 431232 KB] Expanded 121 state(s).
[t=0.174308s, 431232 KB] Reopened 1 state(s).
[t=0.174308s, 431232 KB] Evaluated 317 state(s).
[t=0.174308s, 431232 KB] Evaluations: 317
[t=0.174308s, 431232 KB] Generated 447 state(s).
[t=0.174308s, 431232 KB] Dead ends: 0 state(s).
[t=0.174308s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.174308s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.174308s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.174308s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.174308s, 431232 KB] Number of registered states: 317
[t=0.174308s, 431232 KB] Int hash set load factor: 317/512 = 0.619141
[t=0.174308s, 431232 KB] Int hash set resizes: 9
[t=0.174308s, 431232 KB] Search time: 0.147927s
[t=0.174308s, 431232 KB] Total time: 0.174308s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p197.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.098s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6109e-05s, 424928 KB] reading input...
[t=0.00217457s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258707s, 427536 KB] Building successor generator...done!
[t=0.0261499s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261741s, 427536 KB] time for successor generation creation: 0.000167081s
[t=0.026203s, 427536 KB] Variables: 25
[t=0.0262258s, 427536 KB] FactPairs: 182
[t=0.0262485s, 427536 KB] Bytes per state: 8
[t=0.0264445s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0988409s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0988922s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.098918s, 430128 KB] f = 146, 1 evaluated, 0 expanded
[t=0.0989461s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0989697s, 430128 KB] pruning method: none
[t=0.117148s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.117198s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.117597s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 143
[t=0.117628s, 431100 KB] g=1, 5 evaluated, 1 expanded
[t=0.118022s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.118053s, 431100 KB] g=2, 7 evaluated, 2 expanded
[t=0.119334s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.119365s, 431100 KB] g=3, 14 evaluated, 4 expanded
[t=0.120296s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.120326s, 431100 KB] g=4, 19 evaluated, 5 expanded
[t=0.120713s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.120743s, 431100 KB] g=4, 21 evaluated, 5 expanded
[t=0.121154s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.121186s, 431100 KB] g=5, 23 evaluated, 6 expanded
[t=0.123193s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.123224s, 431100 KB] g=7, 34 evaluated, 8 expanded
[t=0.127903s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.127936s, 431100 KB] g=8, 60 evaluated, 13 expanded
[t=0.128499s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.12853s, 431100 KB] g=8, 63 evaluated, 13 expanded
[t=0.134477s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.13451s, 431100 KB] g=10, 96 evaluated, 19 expanded
[t=0.137445s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.13748s, 431100 KB] g=11, 112 evaluated, 22 expanded
[t=0.141637s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.14167s, 431100 KB] g=13, 135 evaluated, 26 expanded
[t=0.14601s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.146043s, 431100 KB] g=14, 159 evaluated, 32 expanded
[t=0.147685s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.147719s, 431100 KB] g=16, 168 evaluated, 34 expanded
[t=0.151336s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.15137s, 431232 KB] g=18, 188 evaluated, 39 expanded
[t=0.152847s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.152879s, 431232 KB] g=19, 196 evaluated, 40 expanded
[t=0.153279s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.153309s, 431232 KB] g=20, 198 evaluated, 41 expanded
[t=0.153702s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.153734s, 431232 KB] g=20, 200 evaluated, 41 expanded
[t=0.155561s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.155594s, 431232 KB] g=21, 210 evaluated, 43 expanded
[t=0.156704s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.156738s, 431232 KB] g=22, 216 evaluated, 45 expanded
[t=0.158937s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.15897s, 431232 KB] g=24, 228 evaluated, 47 expanded
[t=0.160255s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.160288s, 431232 KB] g=26, 235 evaluated, 49 expanded
[t=0.171326s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.171362s, 431232 KB] g=27, 296 evaluated, 64 expanded
[t=0.173023s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.173056s, 431232 KB] g=28, 305 evaluated, 66 expanded
[t=0.173806s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.173836s, 431232 KB] g=29, 309 evaluated, 67 expanded
[t=0.17423s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.174262s, 431232 KB] g=30, 311 evaluated, 68 expanded
[t=0.175195s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.175226s, 431232 KB] g=31, 316 evaluated, 69 expanded
[t=0.178861s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.178893s, 431232 KB] g=34, 336 evaluated, 76 expanded
[t=0.179641s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.179671s, 431232 KB] g=35, 340 evaluated, 77 expanded
[t=0.180241s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.180271s, 431232 KB] g=36, 343 evaluated, 78 expanded
[t=0.180661s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.18069s, 431232 KB] g=37, 345 evaluated, 79 expanded
[t=0.181094s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.181125s, 431232 KB] g=38, 347 evaluated, 80 expanded
[t=0.182949s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.182981s, 431232 KB] g=40, 357 evaluated, 84 expanded
[t=0.18373s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.183763s, 431232 KB] g=42, 361 evaluated, 86 expanded
[t=0.183971s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.184s, 431232 KB] g=42, 362 evaluated, 86 expanded
[t=0.184395s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.184424s, 431232 KB] g=44, 364 evaluated, 88 expanded
[t=0.185004s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.185036s, 431232 KB] g=46, 367 evaluated, 90 expanded
[t=0.186154s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.186187s, 431232 KB] g=48, 373 evaluated, 95 expanded
[t=0.186577s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.186606s, 431232 KB] g=49, 375 evaluated, 96 expanded
[t=0.186636s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.186659s, 431232 KB] g=50, 376 evaluated, 97 expanded
[t=0.186684s, 431232 KB] Solution found!
[t=0.186709s, 431232 KB] Actual search time: 0.0877356s
unstack k h (1)
put-down k (1)
unstack e g (1)
put-down e (1)
unstack j f (1)
stack j e (1)
unstack g a (1)
stack g h (1)
unstack a l (1)
stack a k (1)
pick-up f (1)
stack f j (1)
unstack b d (1)
stack b l (1)
unstack f j (1)
stack f d (1)
unstack g h (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e b (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k e (1)
unstack f d (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.186734s, 431232 KB] Plan length: 50 step(s).
[t=0.186734s, 431232 KB] Plan cost: 50
[t=0.186734s, 431232 KB] Expanded 98 state(s).
[t=0.186734s, 431232 KB] Reopened 0 state(s).
[t=0.186734s, 431232 KB] Evaluated 376 state(s).
[t=0.186734s, 431232 KB] Evaluations: 376
[t=0.186734s, 431232 KB] Generated 472 state(s).
[t=0.186734s, 431232 KB] Dead ends: 0 state(s).
[t=0.186734s, 431232 KB] Expanded until last jump: 0 state(s).
[t=0.186734s, 431232 KB] Reopened until last jump: 0 state(s).
[t=0.186734s, 431232 KB] Evaluated until last jump: 1 state(s).
[t=0.186734s, 431232 KB] Generated until last jump: 0 state(s).
[t=0.186734s, 431232 KB] Number of registered states: 376
[t=0.186734s, 431232 KB] Int hash set load factor: 376/512 = 0.734375
[t=0.186734s, 431232 KB] Int hash set resizes: 9
[t=0.186734s, 431232 KB] Search time: 0.16029s
[t=0.186734s, 431232 KB] Total time: 0.186734s
Solution found.
Peak memory: 431232 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p198.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8406e-05s, 424928 KB] reading input...
[t=0.00214602s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259192s, 427536 KB] Building successor generator...done!
[t=0.0262097s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.026235s, 427536 KB] time for successor generation creation: 0.000171351s
[t=0.0262639s, 427536 KB] Variables: 25
[t=0.026287s, 427536 KB] FactPairs: 182
[t=0.0263089s, 427536 KB] Bytes per state: 8
[t=0.0265023s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099064s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0991157s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0991413s, 430128 KB] f = 144, 1 evaluated, 0 expanded
[t=0.0991682s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.0991925s, 430128 KB] pruning method: none
[t=0.111119s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.111173s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11767s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.117712s, 431100 KB] g=1, 3 evaluated, 1 expanded
[t=0.118877s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.11891s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.119129s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.119158s, 431100 KB] g=3, 10 evaluated, 3 expanded
[t=0.120848s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.120878s, 431100 KB] g=5, 19 evaluated, 5 expanded
[t=0.129393s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.129431s, 431100 KB] g=7, 65 evaluated, 16 expanded
[t=0.133153s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.133186s, 431100 KB] g=10, 85 evaluated, 21 expanded
[t=0.146159s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.146196s, 431100 KB] g=13, 155 evaluated, 37 expanded
[t=0.14715s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.147182s, 431100 KB] g=14, 160 evaluated, 38 expanded
[t=0.147578s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.147621s, 431100 KB] g=14, 162 evaluated, 38 expanded
[t=0.153005s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.153041s, 431232 KB] g=17, 191 evaluated, 44 expanded
[t=0.155856s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.155888s, 431232 KB] g=19, 206 evaluated, 48 expanded
[t=0.162771s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.162804s, 431232 KB] g=22, 243 evaluated, 57 expanded
[t=0.163206s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.163235s, 431232 KB] g=22, 245 evaluated, 57 expanded
[t=0.17219s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.172225s, 431232 KB] g=27, 293 evaluated, 68 expanded
[t=0.194074s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.194116s, 431364 KB] g=34, 411 evaluated, 94 expanded
[t=0.195259s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.195288s, 431364 KB] g=35, 417 evaluated, 95 expanded
[t=0.195503s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.195532s, 431364 KB] g=35, 418 evaluated, 95 expanded
[t=0.211468s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.211507s, 431364 KB] g=40, 504 evaluated, 119 expanded
[t=0.221496s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.221534s, 431364 KB] g=33, 558 evaluated, 132 expanded
[t=0.226531s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.226567s, 431364 KB] g=36, 585 evaluated, 137 expanded
[t=0.22788s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.22791s, 431364 KB] g=37, 592 evaluated, 138 expanded
[t=0.234906s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.234941s, 431496 KB] g=40, 630 evaluated, 145 expanded
[t=0.239925s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.239959s, 431496 KB] g=43, 657 evaluated, 149 expanded
[t=0.246255s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.246289s, 431496 KB] g=44, 691 evaluated, 156 expanded
[t=0.25475s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.254792s, 431496 KB] g=44, 737 evaluated, 166 expanded
[t=0.257753s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.257786s, 431496 KB] g=47, 753 evaluated, 169 expanded
[t=0.261316s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.261351s, 431496 KB] g=50, 772 evaluated, 174 expanded
[t=0.263598s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.263632s, 431496 KB] g=47, 784 evaluated, 177 expanded
[t=0.264033s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.264065s, 431496 KB] g=48, 786 evaluated, 178 expanded
[t=0.26667s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.266704s, 431496 KB] g=50, 800 evaluated, 182 expanded
[t=0.267844s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.267874s, 431496 KB] g=53, 806 evaluated, 185 expanded
[t=0.273986s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.274025s, 431496 KB] g=57, 839 evaluated, 196 expanded
[t=0.274987s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.275023s, 431496 KB] g=58, 844 evaluated, 197 expanded
[t=0.275609s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.275639s, 431496 KB] g=60, 847 evaluated, 199 expanded
[t=0.276045s, 431496 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.276074s, 431496 KB] g=62, 850 evaluated, 201 expanded
[t=0.276102s, 431496 KB] Solution found!
[t=0.276128s, 431496 KB] Actual search time: 0.176931s
unstack e a (1)
put-down e (1)
unstack f b (1)
stack f e (1)
unstack g j (1)
put-down g (1)
unstack f e (1)
put-down f (1)
pick-up j (1)
stack j e (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d b (1)
pick-up g (1)
stack g a (1)
unstack d b (1)
put-down d (1)
pick-up f (1)
stack f d (1)
unstack g a (1)
stack g f (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
unstack j e (1)
put-down j (1)
unstack a k (1)
stack a c (1)
unstack k h (1)
stack k e (1)
unstack g f (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack f d (1)
put-down f (1)
unstack a c (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.276152s, 431496 KB] Plan length: 62 step(s).
[t=0.276152s, 431496 KB] Plan cost: 62
[t=0.276152s, 431496 KB] Expanded 202 state(s).
[t=0.276152s, 431496 KB] Reopened 0 state(s).
[t=0.276152s, 431496 KB] Evaluated 850 state(s).
[t=0.276152s, 431496 KB] Evaluations: 850
[t=0.276152s, 431496 KB] Generated 1069 state(s).
[t=0.276152s, 431496 KB] Dead ends: 0 state(s).
[t=0.276152s, 431496 KB] Expanded until last jump: 0 state(s).
[t=0.276152s, 431496 KB] Reopened until last jump: 0 state(s).
[t=0.276152s, 431496 KB] Evaluated until last jump: 1 state(s).
[t=0.276152s, 431496 KB] Generated until last jump: 0 state(s).
[t=0.276152s, 431496 KB] Number of registered states: 850
[t=0.276152s, 431496 KB] Int hash set load factor: 850/1024 = 0.830078
[t=0.276152s, 431496 KB] Int hash set resizes: 10
[t=0.276152s, 431496 KB] Search time: 0.249651s
[t=0.276152s, 431496 KB] Total time: 0.276152s
Solution found.
Peak memory: 431496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p199.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6422e-05s, 424928 KB] reading input...
[t=0.00227055s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260717s, 427536 KB] Building successor generator...done!
[t=0.0263843s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.02641s, 427536 KB] time for successor generation creation: 0.000182641s
[t=0.0264411s, 427536 KB] Variables: 25
[t=0.0264658s, 427536 KB] FactPairs: 182
[t=0.0264898s, 427536 KB] Bytes per state: 8
[t=0.0266989s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0991622s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0992145s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0992403s, 430128 KB] f = 139, 1 evaluated, 0 expanded
[t=0.099268s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 139
[t=0.0992918s, 430128 KB] pruning method: none
[t=0.111143s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.111194s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.11879s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.118835s, 431100 KB] g=2, 9 evaluated, 2 expanded
[t=0.123257s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.12329s, 431100 KB] g=7, 33 evaluated, 8 expanded
[t=0.124951s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.124982s, 431100 KB] g=8, 42 evaluated, 9 expanded
[t=0.12538s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.125409s, 431100 KB] g=9, 44 evaluated, 10 expanded
[t=0.125999s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.126032s, 431100 KB] g=9, 47 evaluated, 10 expanded
[t=0.12643s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.126459s, 431100 KB] g=10, 49 evaluated, 11 expanded
[t=0.13087s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.130903s, 431100 KB] g=12, 73 evaluated, 15 expanded
[t=0.135685s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.135721s, 431100 KB] g=13, 99 evaluated, 20 expanded
[t=0.136844s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.136874s, 431100 KB] g=14, 105 evaluated, 21 expanded
[t=0.139097s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.139132s, 431100 KB] g=15, 117 evaluated, 24 expanded
[t=0.187667s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.18771s, 431364 KB] g=24, 383 evaluated, 82 expanded
[t=0.190862s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.190908s, 431364 KB] g=27, 400 evaluated, 85 expanded
[t=0.191498s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.191528s, 431364 KB] g=28, 403 evaluated, 86 expanded
[t=0.195972s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.196006s, 431364 KB] g=30, 427 evaluated, 91 expanded
[t=0.196951s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.196981s, 431364 KB] g=31, 432 evaluated, 92 expanded
[t=0.197941s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.197978s, 431364 KB] g=32, 437 evaluated, 93 expanded
[t=0.198742s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.198772s, 431364 KB] g=33, 441 evaluated, 94 expanded
[t=0.207057s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.207091s, 431364 KB] g=37, 486 evaluated, 104 expanded
[t=0.209316s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.209347s, 431364 KB] g=38, 498 evaluated, 106 expanded
[t=0.211219s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.211252s, 431364 KB] g=41, 508 evaluated, 109 expanded
[t=0.212983s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.213015s, 431364 KB] g=45, 517 evaluated, 113 expanded
[t=0.213421s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.213452s, 431364 KB] g=46, 519 evaluated, 114 expanded
[t=0.214046s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.214078s, 431364 KB] g=48, 523 evaluated, 117 expanded
[t=0.214106s, 431364 KB] Solution found!
[t=0.214132s, 431364 KB] Actual search time: 0.114837s
unstack a e (1)
put-down a (1)
unstack l k (1)
put-down l (1)
unstack h b (1)
stack h a (1)
unstack b g (1)
stack b l (1)
unstack g f (1)
put-down g (1)
pick-up k (1)
stack k b (1)
pick-up f (1)
stack f j (1)
unstack e d (1)
stack e k (1)
unstack d i (1)
put-down d (1)
unstack f j (1)
stack f d (1)
unstack e k (1)
stack e i (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack i c (1)
put-down i (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.214157s, 431364 KB] Plan length: 48 step(s).
[t=0.214157s, 431364 KB] Plan cost: 48
[t=0.214157s, 431364 KB] Expanded 118 state(s).
[t=0.214157s, 431364 KB] Reopened 0 state(s).
[t=0.214157s, 431364 KB] Evaluated 523 state(s).
[t=0.214157s, 431364 KB] Evaluations: 523
[t=0.214157s, 431364 KB] Generated 642 state(s).
[t=0.214157s, 431364 KB] Dead ends: 0 state(s).
[t=0.214157s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.214157s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.214157s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.214157s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.214157s, 431364 KB] Number of registered states: 523
[t=0.214157s, 431364 KB] Int hash set load factor: 523/1024 = 0.510742
[t=0.214157s, 431364 KB] Int hash set resizes: 10
[t=0.214157s, 431364 KB] Search time: 0.187459s
[t=0.214157s, 431364 KB] Total time: 0.214157s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p200.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6061e-05s, 424928 KB] reading input...
[t=0.00215589s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0258437s, 427536 KB] Building successor generator...done!
[t=0.0261248s, 427536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261483s, 427536 KB] time for successor generation creation: 0.000167915s
[t=0.0261763s, 427536 KB] Variables: 25
[t=0.0261993s, 427536 KB] FactPairs: 182
[t=0.0262214s, 427536 KB] Bytes per state: 8
[t=0.0264151s, 427536 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980824s, 430128 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0981332s, 430128 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981589s, 430128 KB] f = 118, 1 evaluated, 0 expanded
[t=0.0981864s, 430128 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0982106s, 430128 KB] pruning method: none
[t=0.110078s, 430968 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.110129s, 430968 KB] g=1, 2 evaluated, 1 expanded
[t=0.117092s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.117135s, 431100 KB] g=1, 6 evaluated, 1 expanded
[t=0.117896s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.117927s, 431100 KB] g=2, 10 evaluated, 2 expanded
[t=0.118144s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.118173s, 431100 KB] g=3, 11 evaluated, 3 expanded
[t=0.119292s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.119322s, 431100 KB] g=4, 17 evaluated, 4 expanded
[t=0.120624s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.120657s, 431100 KB] g=6, 24 evaluated, 6 expanded
[t=0.12159s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.121621s, 431100 KB] g=7, 29 evaluated, 7 expanded
[t=0.122557s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.122588s, 431100 KB] g=8, 34 evaluated, 8 expanded
[t=0.128232s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.128271s, 431100 KB] g=8, 65 evaluated, 18 expanded
[t=0.129574s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.129608s, 431100 KB] g=10, 72 evaluated, 20 expanded
[t=0.130547s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.130581s, 431100 KB] g=11, 77 evaluated, 21 expanded
[t=0.133338s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.133372s, 431100 KB] g=15, 92 evaluated, 26 expanded
[t=0.133784s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.133814s, 431100 KB] g=16, 94 evaluated, 27 expanded
[t=0.13457s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.134602s, 431100 KB] g=17, 98 evaluated, 28 expanded
[t=0.1359s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.135934s, 431100 KB] g=20, 105 evaluated, 31 expanded
[t=0.146447s, 431100 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.146483s, 431100 KB] g=24, 163 evaluated, 48 expanded
[t=0.153228s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.153263s, 431232 KB] g=26, 200 evaluated, 62 expanded
[t=0.162016s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.162051s, 431232 KB] g=27, 248 evaluated, 79 expanded, 1 reopened
[t=0.166474s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.166511s, 431232 KB] g=27, 272 evaluated, 87 expanded, 1 reopened
[t=0.166728s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.166757s, 431232 KB] g=28, 273 evaluated, 88 expanded, 1 reopened
[t=0.167694s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.167725s, 431232 KB] g=29, 278 evaluated, 90 expanded, 1 reopened
[t=0.16957s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.169603s, 431232 KB] g=30, 288 evaluated, 93 expanded, 1 reopened
[t=0.170355s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.170384s, 431232 KB] g=31, 292 evaluated, 94 expanded, 1 reopened
[t=0.174218s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.174254s, 431232 KB] g=34, 313 evaluated, 102 expanded, 1 reopened
[t=0.181354s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.181389s, 431232 KB] g=36, 352 evaluated, 116 expanded, 1 reopened
[t=0.181965s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.181998s, 431232 KB] g=37, 355 evaluated, 117 expanded, 1 reopened
[t=0.188898s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.188933s, 431232 KB] g=41, 393 evaluated, 125 expanded, 1 reopened
[t=0.19004s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.190076s, 431232 KB] g=42, 399 evaluated, 126 expanded, 1 reopened
[t=0.190832s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.190865s, 431232 KB] g=43, 403 evaluated, 127 expanded, 1 reopened
[t=0.193247s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.193283s, 431232 KB] g=44, 416 evaluated, 130 expanded, 1 reopened
[t=0.194214s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.194247s, 431232 KB] g=45, 421 evaluated, 131 expanded, 1 reopened
[t=0.196455s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.196491s, 431232 KB] g=47, 433 evaluated, 134 expanded, 1 reopened
[t=0.197423s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.197453s, 431232 KB] g=48, 438 evaluated, 135 expanded, 1 reopened
[t=0.197666s, 431232 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.197694s, 431232 KB] g=49, 439 evaluated, 136 expanded, 1 reopened
[t=0.20188s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.201917s, 431364 KB] g=51, 462 evaluated, 143 expanded, 1 reopened
[t=0.203034s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.203064s, 431364 KB] g=54, 468 evaluated, 146 expanded, 1 reopened
[t=0.203274s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.203303s, 431364 KB] g=54, 469 evaluated, 146 expanded, 1 reopened
[t=0.210398s, 431364 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.26T16.42.20.823980/traced_fold_9.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.210436s, 431364 KB] g=58, 509 evaluated, 165 expanded, 1 reopened
[t=0.210465s, 431364 KB] Solution found!
[t=0.210491s, 431364 KB] Actual search time: 0.112278s
pick-up k (1)
stack k i (1)
unstack c j (1)
put-down c (1)
unstack e f (1)
stack e k (1)
pick-up f (1)
stack f d (1)
unstack j b (1)
stack j e (1)
unstack f d (1)
stack f c (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b d (1)
unstack l g (1)
stack l b (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f c (1)
stack f a (1)
unstack l b (1)
put-down l (1)
unstack b d (1)
stack b l (1)
pick-up c (1)
stack c b (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
put-down j (1)
unstack e k (1)
stack e d (1)
unstack k i (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack c b (1)
put-down c (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.210517s, 431364 KB] Plan length: 58 step(s).
[t=0.210517s, 431364 KB] Plan cost: 58
[t=0.210517s, 431364 KB] Expanded 166 state(s).
[t=0.210517s, 431364 KB] Reopened 1 state(s).
[t=0.210517s, 431364 KB] Evaluated 509 state(s).
[t=0.210517s, 431364 KB] Evaluations: 509
[t=0.210517s, 431364 KB] Generated 689 state(s).
[t=0.210517s, 431364 KB] Dead ends: 0 state(s).
[t=0.210517s, 431364 KB] Expanded until last jump: 0 state(s).
[t=0.210517s, 431364 KB] Reopened until last jump: 0 state(s).
[t=0.210517s, 431364 KB] Evaluated until last jump: 1 state(s).
[t=0.210517s, 431364 KB] Generated until last jump: 0 state(s).
[t=0.210517s, 431364 KB] Number of registered states: 509
[t=0.210517s, 431364 KB] Int hash set load factor: 509/512 = 0.994141
[t=0.210517s, 431364 KB] Int hash set resizes: 9
[t=0.210517s, 431364 KB] Search time: 0.184102s
[t=0.210517s, 431364 KB] Total time: 0.210517s
Solution found.
Peak memory: 431364 KB
Remove intermediate file output.sas
search exit code: 0

/home/rvbettker/.local/lib/python3.6/site-packages/torch/jit/_trace.py:985: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:
With rtol=1e-05 and atol=1e-05, found 171 element(s) (out of 197) whose difference(s) exceeded the margin of error (including 0 nan comparisons). The greatest difference was 0.8152670338749886 (0.8865225315093994 vs. 0.07125549763441086), which occurred at index 85.
  _module_class,
 | avg_val_loss=0.024012
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 9 test success: 20 of 20 (100.0%)

Max test success (fold 0): 100.0%
Min test success (fold 0): 100.0%
Avg test success: 100.0%
