OUTPUT: results/train-pytorch-2021.07.24T20.09.45.013127

---------- FOLD 1/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=183, bias=True)
  (opt): Linear(in_features=183, out_features=197, bias=True)
)

Epoch 1 | avg_train_loss=0.090412/home/rvbettker/.local/lib/python3.6/site-packages/torch/autograd/__init__.py:149: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 10010). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at  /pytorch/c10/cuda/CUDAFunctions.cpp:115.)
  allow_unreachable=True, accumulate_grad=True)  # allow_unreachable flag
 | avg_val_loss=0.059308
Epoch 2 | avg_train_loss=0.049263 | avg_val_loss=0.042268
Epoch 3 | avg_train_loss=0.039613 | avg_val_loss=0.037377
Epoch 4 | avg_train_loss=0.035690 | avg_val_loss=0.034923
Epoch 5 | avg_train_loss=0.033481 | avg_val_loss=0.033483
Epoch 6 | avg_train_loss=0.032101 | avg_val_loss=0.032556
Epoch 7 | avg_train_loss=0.031180 | avg_val_loss=0.031906
Epoch 8 | avg_train_loss=0.030510 | avg_val_loss=0.031406
Epoch 9 | avg_train_loss=0.029978 | avg_val_loss=0.030993
Epoch 10 | avg_train_loss=0.029526 | avg_val_loss=0.030629
Epoch 11 | avg_train_loss=0.029123 | avg_val_loss=0.030297
Epoch 12 | avg_train_loss=0.028750 | avg_val_loss=0.029983
Epoch 13 | avg_train_loss=0.028398 | avg_val_loss=0.029683
Epoch 14 | avg_train_loss=0.028060 | avg_val_loss=0.029390
Epoch 15 | avg_train_loss=0.027732 | avg_val_loss=0.029103
Epoch 16 | avg_train_loss=0.027410 | avg_val_loss=0.028819
Epoch 17 | avg_train_loss=0.027093 | avg_val_loss=0.028535
Epoch 18 | avg_train_loss=0.026776 | avg_val_loss=0.028251
Epoch 19 | avg_train_loss=0.026459 | avg_val_loss=0.027967
Epoch 20 | avg_train_loss=0.026140 | avg_val_loss=0.027683
Epoch 21 | avg_train_loss=0.025822 | avg_val_loss=0.027401
Epoch 22 | avg_train_loss=0.025503 | avg_val_loss=0.027124
Epoch 23 | avg_train_loss=0.025187 | avg_val_loss=0.026853
Epoch 24 | avg_train_loss=0.024875 | avg_val_loss=0.026590
Epoch 25 | avg_train_loss=0.024570 | avg_val_loss=0.026339
Epoch 26 | avg_train_loss=0.024271 | avg_val_loss=0.026098
Epoch 27 | avg_train_loss=0.023981 | avg_val_loss=0.025870
Epoch 28 | avg_train_loss=0.023700 | avg_val_loss=0.025653
Epoch 29 | avg_train_loss=0.023428 | avg_val_loss=0.025448
Epoch 30 | avg_train_loss=0.023164 | avg_val_loss=0.025253
Epoch 31 | avg_train_loss=0.022909 | avg_val_loss=0.025069
Epoch 32 | avg_train_loss=0.022661 | avg_val_loss=0.024894
Epoch 33 | avg_train_loss=0.022420 | avg_val_loss=0.024727
Epoch 34 | avg_train_loss=0.022186 | avg_val_loss=0.024569
Epoch 35 | avg_train_loss=0.021958 | avg_val_loss=0.024418
Epoch 36 | avg_train_loss=0.021736 | avg_val_loss=0.024274
Epoch 37 | avg_train_loss=0.021520 | avg_val_loss=0.024137
Epoch 38 | avg_train_loss=0.021308 | avg_val_loss=0.024005
Epoch 39 | avg_train_loss=0.021100 | avg_val_loss=0.023879
Epoch 40 | avg_train_loss=0.020896 | avg_val_loss=0.023759
Epoch 41 | avg_train_loss=0.020697 | avg_val_loss=0.023643
Epoch 42 | avg_train_loss=0.020500 | avg_val_loss=0.023532
Epoch 43 | avg_train_loss=0.020307 | avg_val_loss=0.023426
Epoch 44 | avg_train_loss=0.020117 | avg_val_loss=0.023324
Epoch 45 | avg_train_loss=0.019929 | avg_val_loss=0.023226
Epoch 46 | avg_train_loss=0.019744 | avg_val_loss=0.023132
Epoch 47 | avg_train_loss=0.019561 | avg_val_loss=0.023041
Epoch 48 | avg_train_loss=0.019379 | avg_val_loss=0.022954
Epoch 49 | avg_train_loss=0.019200 | avg_val_loss=0.022871
Epoch 50 | avg_train_loss=0.019022 | avg_val_loss=0.022791
Epoch 51 | avg_train_loss=0.018845 | avg_val_loss=0.022714
Epoch 52 | avg_train_loss=0.018670 | avg_val_loss=0.022640
Epoch 53 | avg_train_loss=0.018496 | avg_val_loss=0.022569
Epoch 54 | avg_train_loss=0.018324 | avg_val_loss=0.022500
Epoch 55 | avg_train_loss=0.018153 | avg_val_loss=0.022435
Epoch 56 | avg_train_loss=0.017983 | avg_val_loss=0.022371
Epoch 57 | avg_train_loss=0.017814 | avg_val_loss=0.022311
Epoch 58 | avg_train_loss=0.017646 | avg_val_loss=0.022252
Epoch 59 | avg_train_loss=0.017480 | avg_val_loss=0.022196
Epoch 60 | avg_train_loss=0.017314 | avg_val_loss=0.022142
Epoch 61 | avg_train_loss=0.017150 | avg_val_loss=0.022090
Epoch 62 | avg_train_loss=0.016988 | avg_val_loss=0.022040
Epoch 63 | avg_train_loss=0.016826 | avg_val_loss=0.021992
Epoch 64 | avg_train_loss=0.016666 | avg_val_loss=0.021946
Epoch 65 | avg_train_loss=0.016506 | avg_val_loss=0.021902
Epoch 66 | avg_train_loss=0.016348 | avg_val_loss=0.021859
Epoch 67 | avg_train_loss=0.016191 | avg_val_loss=0.021818
Epoch 68 | avg_train_loss=0.016035 | avg_val_loss=0.021779
Epoch 69 | avg_train_loss=0.015881 | avg_val_loss=0.021741
Epoch 70 | avg_train_loss=0.015727 | avg_val_loss=0.021705
Epoch 71 | avg_train_loss=0.015574 | avg_val_loss=0.021670
Epoch 72 | avg_train_loss=0.015423 | avg_val_loss=0.021636
Epoch 73 | avg_train_loss=0.015272 | avg_val_loss=0.021604
Epoch 74 | avg_train_loss=0.015123 | avg_val_loss=0.021573
Epoch 75 | avg_train_loss=0.014974 | avg_val_loss=0.021544
Epoch 76 | avg_train_loss=0.014827 | avg_val_loss=0.021516
Epoch 77 | avg_train_loss=0.014681 | avg_val_loss=0.021489
Epoch 78 | avg_train_loss=0.014535 | avg_val_loss=0.021464
Epoch 79 | avg_train_loss=0.014391 | avg_val_loss=0.021439
Epoch 80 | avg_train_loss=0.014247 | avg_val_loss=0.021417
Epoch 81 | avg_train_loss=0.014105 | avg_val_loss=0.021395
Epoch 82 | avg_train_loss=0.013963 | avg_val_loss=0.021375
Epoch 83 | avg_train_loss=0.013823 | avg_val_loss=0.021356
Epoch 84 | avg_train_loss=0.013683 | avg_val_loss=0.021338
Epoch 85 | avg_train_loss=0.013544 | avg_val_loss=0.021321
Epoch 86 | avg_train_loss=0.013407 | avg_val_loss=0.021305
Epoch 87 | avg_train_loss=0.013270 | avg_val_loss=0.021291
Epoch 88 | avg_train_loss=0.013134 | avg_val_loss=0.021277
Epoch 89 | avg_train_loss=0.013000 | avg_val_loss=0.021265
Epoch 90 | avg_train_loss=0.012866 | avg_val_loss=0.021254
Epoch 91 | avg_train_loss=0.012734 | avg_val_loss=0.021244
Epoch 92 | avg_train_loss=0.012602 | avg_val_loss=0.021235
Epoch 93 | avg_train_loss=0.012472 | avg_val_loss=0.021227
Epoch 94 | avg_train_loss=0.012342 | avg_val_loss=0.021220
Epoch 95 | avg_train_loss=0.012214 | avg_val_loss=0.021214
Epoch 96 | avg_train_loss=0.012086 | avg_val_loss=0.021210
Epoch 97 | avg_train_loss=0.011960 | avg_val_loss=0.021207
Epoch 98 | avg_train_loss=0.011835 | avg_val_loss=0.021205
Epoch 99 | avg_train_loss=0.011710 | avg_val_loss=0.021204
Epoch 100 | avg_train_loss=0.011587 | avg_val_loss=0.021204
Epoch 101 | avg_train_loss=0.011465 | avg_val_loss=0.021206
Epoch 102 | avg_train_loss=0.011344INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p1.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6331e-05s, 424928 KB] reading input...
[t=0.00221482s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0231764s, 427176 KB] Building successor generator...done!
[t=0.0234502s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0234736s, 427176 KB] time for successor generation creation: 0.000170319s
[t=0.0235014s, 427176 KB] Variables: 25
[t=0.0235235s, 427176 KB] FactPairs: 182
[t=0.0235454s, 427176 KB] Bytes per state: 8
[t=0.0237529s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.103896s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.103951s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.103977s, 429768 KB] f = 156, 1 evaluated, 0 expanded
[t=0.104005s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.10403s, 429768 KB] pruning method: none
[t=0.109037s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.109082s, 429816 KB] g=1, 3 evaluated, 1 expanded
[t=0.10926s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.109292s, 429816 KB] g=1, 5 evaluated, 1 expanded
[t=0.109684s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.109716s, 429816 KB] g=3, 10 evaluated, 3 expanded
[t=0.109815s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.109842s, 429816 KB] g=3, 11 evaluated, 3 expanded
[t=0.110505s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.110547s, 429816 KB] g=4, 20 evaluated, 5 expanded
[t=0.110722s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.110751s, 429816 KB] g=5, 22 evaluated, 6 expanded
[t=0.110918s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.110945s, 429816 KB] g=5, 24 evaluated, 6 expanded
[t=0.112609s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.112643s, 429816 KB] g=9, 47 evaluated, 13 expanded
[t=0.120225s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.120261s, 429948 KB] g=27, 154 evaluated, 48 expanded, 2 reopened
[t=0.120363s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.12039s, 429948 KB] g=27, 155 evaluated, 48 expanded, 2 reopened
[t=0.121059s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.121092s, 429948 KB] g=31, 164 evaluated, 53 expanded, 2 reopened
[t=0.123469s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.123502s, 429948 KB] g=27, 197 evaluated, 73 expanded, 10 reopened
[t=0.123877s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.123908s, 429948 KB] g=28, 202 evaluated, 74 expanded, 10 reopened
[t=0.126309s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.126343s, 429948 KB] g=32, 236 evaluated, 88 expanded, 10 reopened
[t=0.126654s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.126686s, 429948 KB] g=33, 240 evaluated, 89 expanded, 10 reopened
[t=0.126923s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.126951s, 429948 KB] g=34, 243 evaluated, 90 expanded, 10 reopened
[t=0.12834s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.128374s, 429948 KB] g=39, 262 evaluated, 96 expanded, 10 reopened
[t=0.128685s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.128714s, 429948 KB] g=40, 266 evaluated, 97 expanded, 10 reopened
[t=0.128953s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.128983s, 429948 KB] g=41, 269 evaluated, 98 expanded, 10 reopened
[t=0.12956s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.129598s, 429948 KB] g=42, 277 evaluated, 100 expanded, 10 reopened
[t=0.13011s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.130141s, 429948 KB] g=44, 284 evaluated, 102 expanded, 10 reopened
[t=0.130378s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.130411s, 430080 KB] g=45, 287 evaluated, 103 expanded, 10 reopened
[t=0.130579s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.130606s, 430080 KB] g=45, 289 evaluated, 103 expanded, 10 reopened
[t=0.130774s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.130803s, 430080 KB] g=46, 291 evaluated, 104 expanded, 10 reopened
[t=0.130973s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.131004s, 430080 KB] g=47, 293 evaluated, 105 expanded, 10 reopened
[t=0.131243s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.131271s, 430080 KB] g=48, 296 evaluated, 106 expanded, 10 reopened
[t=0.131373s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.1314s, 430080 KB] g=49, 297 evaluated, 107 expanded, 10 reopened
[t=0.13157s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.131598s, 430080 KB] g=50, 299 evaluated, 108 expanded, 10 reopened
[t=0.131768s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.131796s, 430080 KB] g=51, 301 evaluated, 109 expanded, 10 reopened
[t=0.131897s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.131925s, 430080 KB] g=52, 302 evaluated, 110 expanded, 10 reopened
[t=0.132106s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.132137s, 430080 KB] g=53, 304 evaluated, 111 expanded, 10 reopened
[t=0.132169s, 430080 KB] Solution found!
[t=0.132194s, 430080 KB] Actual search time: 0.0281499s
unstack h j (1)
stack h a (1)
unstack b d (1)
put-down b (1)
pick-up j (1)
stack j b (1)
unstack f e (1)
stack f d (1)
unstack h a (1)
stack h f (1)
unstack a k (1)
put-down a (1)
pick-up e (1)
stack e a (1)
unstack k l (1)
stack k j (1)
unstack l g (1)
put-down l (1)
unstack e a (1)
stack e k (1)
pick-up a (1)
stack a l (1)
unstack h f (1)
stack h g (1)
unstack a l (1)
stack a f (1)
pick-up l (1)
stack l e (1)
unstack a f (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack l e (1)
put-down l (1)
unstack e k (1)
stack e d (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.13222s, 430080 KB] Plan length: 54 step(s).
[t=0.13222s, 430080 KB] Plan cost: 54
[t=0.13222s, 430080 KB] Expanded 113 state(s).
[t=0.13222s, 430080 KB] Reopened 10 state(s).
[t=0.13222s, 430080 KB] Evaluated 305 state(s).
[t=0.13222s, 430080 KB] Evaluations: 305
[t=0.13222s, 430080 KB] Generated 447 state(s).
[t=0.13222s, 430080 KB] Dead ends: 0 state(s).
[t=0.13222s, 430080 KB] Expanded until last jump: 0 state(s).
[t=0.13222s, 430080 KB] Reopened until last jump: 0 state(s).
[t=0.13222s, 430080 KB] Evaluated until last jump: 1 state(s).
[t=0.13222s, 430080 KB] Generated until last jump: 0 state(s).
[t=0.13222s, 430080 KB] Number of registered states: 305
[t=0.13222s, 430080 KB] Int hash set load factor: 305/512 = 0.595703
[t=0.13222s, 430080 KB] Int hash set resizes: 9
[t=0.13222s, 430080 KB] Search time: 0.108467s
[t=0.13222s, 430080 KB] Total time: 0.13222s
Solution found.
Peak memory: 430080 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6771e-05s, 424928 KB] reading input...
[t=0.00217129s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0230804s, 427172 KB] Building successor generator...done!
[t=0.023355s, 427172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.023379s, 427172 KB] time for successor generation creation: 0.000170219s
[t=0.0234075s, 427172 KB] Variables: 25
[t=0.0234297s, 427172 KB] FactPairs: 182
[t=0.0234514s, 427172 KB] Bytes per state: 8
[t=0.0236484s, 427172 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.095045s, 429764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.0950975s, 429764 KB] g=0, 1 evaluated, 0 expanded
[t=0.0951237s, 429764 KB] f = 128, 1 evaluated, 0 expanded
[t=0.0951511s, 429764 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 128
[t=0.0951747s, 429764 KB] pruning method: none
[t=0.100433s, 429812 KB] f = 129, 4 evaluated, 1 expanded
[t=0.100633s, 429812 KB] f = 130, 6 evaluated, 2 expanded
[t=0.100743s, 429812 KB] f = 146, 7 evaluated, 3 expanded
[t=0.101779s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.101809s, 429812 KB] g=5, 21 evaluated, 7 expanded
[t=0.101913s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.10194s, 429812 KB] g=6, 22 evaluated, 8 expanded
[t=0.102254s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.102286s, 429812 KB] g=7, 26 evaluated, 9 expanded
[t=0.10382s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.103854s, 429812 KB] g=9, 47 evaluated, 15 expanded
[t=0.107446s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.107481s, 429944 KB] g=14, 97 evaluated, 28 expanded
[t=0.108287s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.108319s, 429944 KB] g=16, 108 evaluated, 30 expanded
[t=0.108919s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.10895s, 429944 KB] g=18, 116 evaluated, 32 expanded
[t=0.115814s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.115849s, 429944 KB] g=19, 213 evaluated, 53 expanded
[t=0.121097s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.121132s, 430076 KB] g=31, 287 evaluated, 69 expanded
[t=0.124843s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.124878s, 430076 KB] g=34, 339 evaluated, 80 expanded
[t=0.138287s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.138333s, 430208 KB] g=39, 528 evaluated, 133 expanded, 1 reopened
[t=0.139367s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.139402s, 430208 KB] g=42, 542 evaluated, 136 expanded, 1 reopened
[t=0.142157s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.142189s, 430208 KB] g=44, 581 evaluated, 145 expanded, 1 reopened
[t=0.14258s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.142611s, 430208 KB] g=45, 586 evaluated, 146 expanded, 1 reopened
[t=0.147441s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.147476s, 430208 KB] g=50, 654 evaluated, 164 expanded, 1 reopened
[t=0.147788s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.147818s, 430208 KB] g=51, 658 evaluated, 165 expanded, 1 reopened
[t=0.148618s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.148648s, 430208 KB] g=53, 669 evaluated, 168 expanded, 1 reopened
[t=0.148751s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.148777s, 430208 KB] g=54, 670 evaluated, 169 expanded, 1 reopened
[t=0.149155s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.149185s, 430208 KB] g=55, 675 evaluated, 170 expanded, 1 reopened
[t=0.149427s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.14946s, 430208 KB] g=56, 678 evaluated, 171 expanded, 1 reopened
[t=0.14998s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.15001s, 430208 KB] g=58, 685 evaluated, 173 expanded, 1 reopened
[t=0.150251s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.150278s, 430208 KB] g=59, 688 evaluated, 174 expanded, 1 reopened
[t=0.150667s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.1507s, 430208 KB] g=60, 693 evaluated, 175 expanded, 1 reopened
[t=0.150804s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.15083s, 430208 KB] g=61, 694 evaluated, 176 expanded, 1 reopened
[t=0.151002s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.151029s, 430208 KB] g=62, 696 evaluated, 177 expanded, 1 reopened
[t=0.151201s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.151228s, 430208 KB] g=63, 698 evaluated, 178 expanded, 1 reopened
[t=0.151265s, 430208 KB] Solution found!
[t=0.151292s, 430208 KB] Actual search time: 0.0561138s
unstack k g (1)
put-down k (1)
unstack g e (1)
put-down g (1)
pick-up k (1)
stack k g (1)
unstack c f (1)
put-down c (1)
unstack f d (1)
stack f c (1)
unstack e l (1)
put-down e (1)
unstack l b (1)
stack l d (1)
unstack b a (1)
stack b l (1)
unstack a h (1)
stack a j (1)
pick-up h (1)
stack h b (1)
unstack k g (1)
put-down k (1)
unstack f c (1)
stack f k (1)
pick-up e (1)
stack e c (1)
unstack h b (1)
stack h g (1)
unstack b l (1)
stack b e (1)
unstack f k (1)
stack f b (1)
pick-up k (1)
stack k l (1)
unstack f b (1)
stack f k (1)
unstack b e (1)
put-down b (1)
unstack a j (1)
stack a h (1)
unstack e c (1)
stack e b (1)
pick-up j (1)
stack j c (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.151317s, 430208 KB] Plan length: 64 step(s).
[t=0.151317s, 430208 KB] Plan cost: 64
[t=0.151317s, 430208 KB] Expanded 180 state(s).
[t=0.151317s, 430208 KB] Reopened 1 state(s).
[t=0.151317s, 430208 KB] Evaluated 699 state(s).
[t=0.151317s, 430208 KB] Evaluations: 699
[t=0.151317s, 430208 KB] Generated 904 state(s).
[t=0.151317s, 430208 KB] Dead ends: 0 state(s).
[t=0.151317s, 430208 KB] Expanded until last jump: 3 state(s).
[t=0.151317s, 430208 KB] Reopened until last jump: 0 state(s).
[t=0.151317s, 430208 KB] Evaluated until last jump: 7 state(s).
[t=0.151317s, 430208 KB] Generated until last jump: 8 state(s).
[t=0.151317s, 430208 KB] Number of registered states: 699
[t=0.151317s, 430208 KB] Int hash set load factor: 699/1024 = 0.682617
[t=0.151317s, 430208 KB] Int hash set resizes: 10
[t=0.151317s, 430208 KB] Search time: 0.127669s
[t=0.151317s, 430208 KB] Total time: 0.151317s
Solution found.
Peak memory: 430208 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.030s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6603e-05s, 424928 KB] reading input...
[t=0.00212172s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.022851s, 427172 KB] Building successor generator...done!
[t=0.0231254s, 427172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0231485s, 427172 KB] time for successor generation creation: 0.000168072s
[t=0.0231762s, 427172 KB] Variables: 25
[t=0.0231981s, 427172 KB] FactPairs: 182
[t=0.0232193s, 427172 KB] Bytes per state: 8
[t=0.0234096s, 427172 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0942156s, 429764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0942692s, 429764 KB] g=0, 1 evaluated, 0 expanded
[t=0.0942944s, 429764 KB] f = 133, 1 evaluated, 0 expanded
[t=0.0943215s, 429764 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0943449s, 429764 KB] pruning method: none
[t=0.0993936s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.0994376s, 429812 KB] g=1, 3 evaluated, 1 expanded
[t=0.0995527s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.0995815s, 429812 KB] g=1, 4 evaluated, 1 expanded
[t=0.100613s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 108
[t=0.100647s, 429812 KB] g=3, 16 evaluated, 4 expanded
[t=0.100763s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.100795s, 429812 KB] g=4, 17 evaluated, 5 expanded
[t=0.10107s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.101104s, 429812 KB] g=5, 20 evaluated, 6 expanded
[t=0.101213s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.10124s, 429812 KB] g=5, 21 evaluated, 6 expanded
[t=0.101843s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.101884s, 429812 KB] g=7, 28 evaluated, 9 expanded
[t=0.102161s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.10219s, 429812 KB] g=8, 31 evaluated, 10 expanded
[t=0.102711s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.102743s, 429812 KB] g=10, 37 evaluated, 12 expanded
[t=0.102936s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.102967s, 429812 KB] g=11, 39 evaluated, 13 expanded
[t=0.104564s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.104597s, 429812 KB] g=15, 58 evaluated, 19 expanded
[t=0.107749s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.107792s, 429944 KB] g=12, 96 evaluated, 32 expanded
[t=0.107905s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.107933s, 429944 KB] g=12, 97 evaluated, 32 expanded
[t=0.108041s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.108069s, 429944 KB] g=12, 98 evaluated, 32 expanded
[t=0.108993s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.109025s, 429944 KB] g=14, 109 evaluated, 35 expanded
[t=0.109537s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.109568s, 429944 KB] g=15, 115 evaluated, 36 expanded
[t=0.10992s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.109953s, 429944 KB] g=16, 119 evaluated, 37 expanded
[t=0.111968s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.112002s, 429944 KB] g=20, 143 evaluated, 44 expanded
[t=0.112196s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.112225s, 429944 KB] g=21, 145 evaluated, 45 expanded
[t=0.118917s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.118951s, 429944 KB] g=26, 227 evaluated, 67 expanded
[t=0.159536s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.159574s, 430208 KB] g=20, 722 evaluated, 218 expanded, 1 reopened
[t=0.159867s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.159901s, 430208 KB] g=21, 725 evaluated, 219 expanded, 1 reopened
[t=0.160902s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.160939s, 430208 KB] g=22, 737 evaluated, 222 expanded, 1 reopened
[t=0.17163s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.171666s, 430340 KB] g=31, 868 evaluated, 263 expanded, 1 reopened
[t=0.177152s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.177187s, 430340 KB] g=28, 935 evaluated, 284 expanded, 3 reopened
[t=0.177461s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.17749s, 430340 KB] g=29, 938 evaluated, 285 expanded, 3 reopened
[t=0.177762s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.177793s, 430340 KB] g=30, 941 evaluated, 286 expanded, 3 reopened
[t=0.178065s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.178094s, 430340 KB] g=31, 944 evaluated, 287 expanded, 3 reopened
[t=0.178205s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.178235s, 430340 KB] g=32, 945 evaluated, 288 expanded, 3 reopened
[t=0.178505s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.178534s, 430340 KB] g=33, 948 evaluated, 289 expanded, 3 reopened
[t=0.178727s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.178758s, 430340 KB] g=34, 950 evaluated, 290 expanded, 3 reopened
[t=0.179354s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.179384s, 430340 KB] g=36, 957 evaluated, 292 expanded, 3 reopened
[t=0.179993s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.180027s, 430340 KB] g=37, 964 evaluated, 295 expanded, 3 reopened
[t=0.180302s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.180331s, 430340 KB] g=38, 967 evaluated, 296 expanded, 3 reopened
[t=0.180444s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.180471s, 430340 KB] g=39, 968 evaluated, 297 expanded, 3 reopened
[t=0.180663s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.180692s, 430340 KB] g=40, 970 evaluated, 298 expanded, 3 reopened
[t=0.180885s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.180913s, 430340 KB] g=41, 972 evaluated, 299 expanded, 3 reopened
[t=0.181026s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.181059s, 430340 KB] g=42, 973 evaluated, 300 expanded, 3 reopened
[t=0.181256s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.181288s, 430340 KB] g=43, 975 evaluated, 301 expanded, 3 reopened
[t=0.18132s, 430340 KB] Solution found!
[t=0.181346s, 430340 KB] Actual search time: 0.0869971s
unstack f h (1)
stack f l (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f l (1)
put-down f (1)
unstack k b (1)
stack k f (1)
unstack b d (1)
put-down b (1)
unstack k f (1)
stack k b (1)
pick-up f (1)
stack f k (1)
unstack l j (1)
stack l d (1)
unstack j e (1)
put-down j (1)
pick-up e (1)
stack e l (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e l (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.18137s, 430340 KB] Plan length: 44 step(s).
[t=0.18137s, 430340 KB] Plan cost: 44
[t=0.18137s, 430340 KB] Expanded 303 state(s).
[t=0.18137s, 430340 KB] Reopened 3 state(s).
[t=0.18137s, 430340 KB] Evaluated 976 state(s).
[t=0.18137s, 430340 KB] Evaluations: 976
[t=0.18137s, 430340 KB] Generated 1322 state(s).
[t=0.18137s, 430340 KB] Dead ends: 0 state(s).
[t=0.18137s, 430340 KB] Expanded until last jump: 0 state(s).
[t=0.18137s, 430340 KB] Reopened until last jump: 0 state(s).
[t=0.18137s, 430340 KB] Evaluated until last jump: 1 state(s).
[t=0.18137s, 430340 KB] Generated until last jump: 0 state(s).
[t=0.18137s, 430340 KB] Number of registered states: 976
[t=0.18137s, 430340 KB] Int hash set load factor: 976/1024 = 0.953125
[t=0.18137s, 430340 KB] Int hash set resizes: 10
[t=0.18137s, 430340 KB] Search time: 0.157961s
[t=0.18137s, 430340 KB] Total time: 0.18137s
Solution found.
Peak memory: 430340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p4.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5655e-05s, 424928 KB] reading input...
[t=0.00218624s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.023063s, 427172 KB] Building successor generator...done!
[t=0.0233357s, 427172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0233589s, 427172 KB] time for successor generation creation: 0.0001684s
[t=0.023388s, 427172 KB] Variables: 25
[t=0.0234113s, 427172 KB] FactPairs: 182
[t=0.0234339s, 427172 KB] Bytes per state: 8
[t=0.0236228s, 427172 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0947918s, 429764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0948427s, 429764 KB] g=0, 1 evaluated, 0 expanded
[t=0.0948687s, 429764 KB] f = 132, 1 evaluated, 0 expanded
[t=0.0948961s, 429764 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0949207s, 429764 KB] pruning method: none
[t=0.0999965s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.100042s, 429812 KB] g=1, 3 evaluated, 1 expanded
[t=0.100221s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.100252s, 429812 KB] g=2, 5 evaluated, 2 expanded
[t=0.100424s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.100454s, 429812 KB] g=3, 7 evaluated, 3 expanded
[t=0.100557s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.100589s, 429812 KB] g=4, 8 evaluated, 4 expanded
[t=0.100686s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.100713s, 429812 KB] g=4, 9 evaluated, 4 expanded
[t=0.10095s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.10098s, 429812 KB] g=5, 12 evaluated, 5 expanded
[t=0.101081s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.101116s, 429812 KB] g=6, 13 evaluated, 6 expanded
[t=0.10149s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.101521s, 429812 KB] g=7, 18 evaluated, 7 expanded
[t=0.101692s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.101721s, 429812 KB] g=8, 20 evaluated, 8 expanded
[t=0.10258s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.10261s, 429812 KB] g=6, 32 evaluated, 12 expanded
[t=0.106145s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.106181s, 429944 KB] g=9, 82 evaluated, 30 expanded
[t=0.106285s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 76
[t=0.106311s, 429944 KB] g=10, 83 evaluated, 31 expanded
[t=0.106824s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.106851s, 429944 KB] g=11, 90 evaluated, 32 expanded
[t=0.106948s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.106974s, 429944 KB] g=11, 91 evaluated, 32 expanded
[t=0.107278s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.107308s, 429944 KB] g=12, 95 evaluated, 33 expanded
[t=0.107547s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.107574s, 429944 KB] g=13, 98 evaluated, 34 expanded
[t=0.108164s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.108197s, 429944 KB] g=14, 106 evaluated, 35 expanded
[t=0.111113s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.111144s, 429944 KB] g=17, 148 evaluated, 45 expanded
[t=0.112979s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.113012s, 429944 KB] g=20, 174 evaluated, 52 expanded
[t=0.117419s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.117452s, 429944 KB] g=21, 238 evaluated, 69 expanded
[t=0.155667s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.155705s, 430076 KB] g=16, 796 evaluated, 244 expanded, 21 reopened
[t=0.155964s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.155994s, 430076 KB] g=17, 799 evaluated, 245 expanded, 21 reopened
[t=0.159012s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.159049s, 430076 KB] g=18, 843 evaluated, 258 expanded, 21 reopened
[t=0.159909s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.159938s, 430076 KB] g=20, 855 evaluated, 262 expanded, 21 reopened
[t=0.161062s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.161092s, 430076 KB] g=25, 871 evaluated, 267 expanded, 21 reopened
[t=0.161397s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.161427s, 430076 KB] g=26, 875 evaluated, 268 expanded, 21 reopened
[t=0.162068s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.162101s, 430208 KB] g=27, 884 evaluated, 270 expanded, 21 reopened
[t=0.162948s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.162978s, 430208 KB] g=29, 896 evaluated, 272 expanded, 21 reopened
[t=0.163421s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.163451s, 430208 KB] g=31, 902 evaluated, 274 expanded, 21 reopened
[t=0.164243s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.164275s, 430208 KB] g=34, 913 evaluated, 277 expanded, 21 reopened
[t=0.164582s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.164612s, 430208 KB] g=36, 917 evaluated, 279 expanded, 21 reopened
[t=0.164781s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.164812s, 430208 KB] g=37, 919 evaluated, 280 expanded, 21 reopened
[t=0.164979s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.165005s, 430208 KB] g=37, 921 evaluated, 280 expanded, 21 reopened
[t=0.165174s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.165203s, 430208 KB] g=38, 923 evaluated, 281 expanded, 21 reopened
[t=0.16544s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.165467s, 430208 KB] g=39, 926 evaluated, 282 expanded, 21 reopened
[t=0.16577s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.165797s, 430208 KB] g=40, 930 evaluated, 283 expanded, 21 reopened
[t=0.166098s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.166128s, 430208 KB] g=41, 934 evaluated, 284 expanded, 21 reopened
[t=0.166436s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.16647s, 430208 KB] g=43, 938 evaluated, 286 expanded, 21 reopened
[t=0.167886s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.167919s, 430208 KB] g=45, 958 evaluated, 295 expanded, 22 reopened
[t=0.16816s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.168191s, 430208 KB] g=47, 961 evaluated, 297 expanded, 22 reopened
[t=0.168291s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.16832s, 430208 KB] g=48, 962 evaluated, 298 expanded, 22 reopened
[t=0.168489s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.168516s, 430208 KB] g=49, 964 evaluated, 299 expanded, 22 reopened
[t=0.168682s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.168708s, 430208 KB] g=49, 966 evaluated, 299 expanded, 22 reopened
[t=0.168808s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.168835s, 430208 KB] g=50, 967 evaluated, 300 expanded, 22 reopened
[t=0.169209s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.169239s, 430208 KB] g=51, 972 evaluated, 301 expanded, 22 reopened
[t=0.169543s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.16957s, 430208 KB] g=52, 976 evaluated, 302 expanded, 22 reopened
[t=0.169803s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.169833s, 430208 KB] g=53, 979 evaluated, 303 expanded, 22 reopened
[t=0.169935s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.169961s, 430208 KB] g=54, 980 evaluated, 304 expanded, 22 reopened
[t=0.170196s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.170226s, 430208 KB] g=55, 983 evaluated, 305 expanded, 22 reopened
[t=0.170394s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.170421s, 430208 KB] g=56, 985 evaluated, 306 expanded, 22 reopened
[t=0.170589s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.170618s, 430208 KB] g=57, 987 evaluated, 307 expanded, 22 reopened
[t=0.170787s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.170814s, 430208 KB] g=58, 989 evaluated, 308 expanded, 22 reopened
[t=0.170846s, 430208 KB] Solution found!
[t=0.170872s, 430208 KB] Actual search time: 0.0759472s
stack e l (1)
unstack i c (1)
put-down i (1)
unstack e l (1)
put-down e (1)
unstack c j (1)
stack c i (1)
unstack l b (1)
put-down l (1)
unstack b a (1)
stack b l (1)
unstack j d (1)
stack j a (1)
unstack c i (1)
stack c b (1)
pick-up i (1)
stack i c (1)
unstack j a (1)
stack j e (1)
unstack d g (1)
stack d j (1)
unstack a k (1)
stack a i (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up f (1)
stack f k (1)
unstack a i (1)
stack a h (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.170896s, 430208 KB] Plan length: 59 step(s).
[t=0.170896s, 430208 KB] Plan cost: 59
[t=0.170896s, 430208 KB] Expanded 310 state(s).
[t=0.170896s, 430208 KB] Reopened 22 state(s).
[t=0.170896s, 430208 KB] Evaluated 990 state(s).
[t=0.170896s, 430208 KB] Evaluations: 990
[t=0.170896s, 430208 KB] Generated 1463 state(s).
[t=0.170896s, 430208 KB] Dead ends: 0 state(s).
[t=0.170896s, 430208 KB] Expanded until last jump: 0 state(s).
[t=0.170896s, 430208 KB] Reopened until last jump: 0 state(s).
[t=0.170896s, 430208 KB] Evaluated until last jump: 1 state(s).
[t=0.170896s, 430208 KB] Generated until last jump: 0 state(s).
[t=0.170896s, 430208 KB] Number of registered states: 990
[t=0.170896s, 430208 KB] Int hash set load factor: 990/1024 = 0.966797
[t=0.170896s, 430208 KB] Int hash set resizes: 10
[t=0.170896s, 430208 KB] Search time: 0.147274s
[t=0.170896s, 430208 KB] Total time: 0.170896s
Solution found.
Peak memory: 430208 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9072e-05s, 424928 KB] reading input...
[t=0.00223509s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0230023s, 427176 KB] Building successor generator...done!
[t=0.0232807s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0233041s, 427176 KB] time for successor generation creation: 0.000173857s
[t=0.023332s, 427176 KB] Variables: 25
[t=0.0233542s, 427176 KB] FactPairs: 182
[t=0.0233762s, 427176 KB] Bytes per state: 8
[t=0.0235741s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0943154s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.0943683s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0943943s, 429768 KB] f = 137, 1 evaluated, 0 expanded
[t=0.0944215s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.0944467s, 429768 KB] pruning method: none
[t=0.0995889s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.0996339s, 429816 KB] g=1, 4 evaluated, 1 expanded
[t=0.099743s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.0997751s, 429816 KB] g=1, 5 evaluated, 1 expanded
[t=0.10091s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 119
[t=0.100945s, 429816 KB] g=3, 19 evaluated, 3 expanded
[t=0.1016s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.101632s, 429816 KB] g=3, 27 evaluated, 5 expanded
[t=0.102519s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.102551s, 429816 KB] g=4, 38 evaluated, 6 expanded
[t=0.10306s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.103094s, 429816 KB] g=5, 44 evaluated, 7 expanded
[t=0.104999s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.105034s, 429948 KB] g=8, 68 evaluated, 11 expanded
[t=0.105693s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.105735s, 429948 KB] g=7, 76 evaluated, 13 expanded
[t=0.106308s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.10634s, 429948 KB] g=8, 83 evaluated, 14 expanded
[t=0.106683s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.106712s, 429948 KB] g=9, 87 evaluated, 15 expanded
[t=0.107608s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.107644s, 429948 KB] g=11, 98 evaluated, 17 expanded
[t=0.107905s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.107937s, 429948 KB] g=11, 101 evaluated, 17 expanded
[t=0.108125s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.108153s, 429948 KB] g=12, 103 evaluated, 18 expanded
[t=0.109424s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.109456s, 429948 KB] g=14, 119 evaluated, 22 expanded
[t=0.109945s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.109977s, 429948 KB] g=15, 125 evaluated, 23 expanded
[t=0.110241s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.110272s, 429948 KB] g=16, 128 evaluated, 24 expanded
[t=0.124618s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.124654s, 430080 KB] g=21, 310 evaluated, 85 expanded
[t=0.223638s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.223678s, 430476 KB] g=41, 1567 evaluated, 540 expanded, 31 reopened
[t=0.2241s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.22413s, 430476 KB] g=42, 1572 evaluated, 541 expanded, 31 reopened
[t=0.224474s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.224503s, 430476 KB] g=43, 1576 evaluated, 542 expanded, 31 reopened
[t=0.224768s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.224797s, 430476 KB] g=44, 1579 evaluated, 543 expanded, 31 reopened
[t=0.225537s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.22557s, 430476 KB] g=46, 1588 evaluated, 545 expanded, 31 reopened
[t=0.227242s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.227277s, 430476 KB] g=48, 1609 evaluated, 550 expanded, 31 reopened
[t=0.229181s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.229221s, 430476 KB] g=52, 1633 evaluated, 557 expanded, 31 reopened
[t=0.229647s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.229678s, 430476 KB] g=53, 1638 evaluated, 558 expanded, 31 reopened
[t=0.23002s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.230049s, 430476 KB] g=54, 1642 evaluated, 559 expanded, 31 reopened
[t=0.230546s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.230578s, 430476 KB] g=56, 1648 evaluated, 561 expanded, 31 reopened
[t=0.23092s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.230949s, 430476 KB] g=57, 1652 evaluated, 562 expanded, 31 reopened
[t=0.231145s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.231176s, 430476 KB] g=58, 1654 evaluated, 563 expanded, 31 reopened
[t=0.231595s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.231626s, 430476 KB] g=59, 1659 evaluated, 564 expanded, 31 reopened
[t=0.231968s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.231997s, 430476 KB] g=60, 1663 evaluated, 565 expanded, 31 reopened
[t=0.232259s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.23229s, 430476 KB] g=61, 1666 evaluated, 566 expanded, 31 reopened
[t=0.232401s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.232429s, 430476 KB] g=62, 1667 evaluated, 567 expanded, 31 reopened
[t=0.232694s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.232722s, 430476 KB] g=63, 1670 evaluated, 568 expanded, 31 reopened
[t=0.232911s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.232941s, 430476 KB] g=64, 1672 evaluated, 569 expanded, 31 reopened
[t=0.23313s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.233158s, 430476 KB] g=65, 1674 evaluated, 570 expanded, 31 reopened
[t=0.233346s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.233375s, 430476 KB] g=66, 1676 evaluated, 571 expanded, 31 reopened
[t=0.233406s, 430476 KB] Solution found!
[t=0.233433s, 430476 KB] Actual search time: 0.138981s
stack e d (1)
unstack h k (1)
stack h g (1)
unstack k c (1)
stack k l (1)
pick-up j (1)
stack j b (1)
unstack e d (1)
stack e c (1)
pick-up a (1)
stack a k (1)
unstack j b (1)
stack j e (1)
unstack a k (1)
stack a b (1)
unstack h g (1)
stack h a (1)
pick-up g (1)
stack g h (1)
unstack k l (1)
stack k j (1)
unstack d i (1)
stack d g (1)
unstack k j (1)
stack k i (1)
unstack l f (1)
put-down l (1)
pick-up f (1)
stack f k (1)
unstack d g (1)
stack d j (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a h (1)
pick-up b (1)
stack b l (1)
unstack d j (1)
stack d b (1)
unstack j e (1)
put-down j (1)
unstack e c (1)
stack e d (1)
pick-up j (1)
stack j c (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.233457s, 430476 KB] Plan length: 67 step(s).
[t=0.233457s, 430476 KB] Plan cost: 67
[t=0.233457s, 430476 KB] Expanded 573 state(s).
[t=0.233457s, 430476 KB] Reopened 31 state(s).
[t=0.233457s, 430476 KB] Evaluated 1677 state(s).
[t=0.233457s, 430476 KB] Evaluations: 1677
[t=0.233457s, 430476 KB] Generated 2486 state(s).
[t=0.233457s, 430476 KB] Dead ends: 0 state(s).
[t=0.233457s, 430476 KB] Expanded until last jump: 0 state(s).
[t=0.233457s, 430476 KB] Reopened until last jump: 0 state(s).
[t=0.233457s, 430476 KB] Evaluated until last jump: 1 state(s).
[t=0.233457s, 430476 KB] Generated until last jump: 0 state(s).
[t=0.233457s, 430476 KB] Number of registered states: 1677
[t=0.233457s, 430476 KB] Int hash set load factor: 1677/2048 = 0.818848
[t=0.233457s, 430476 KB] Int hash set resizes: 11
[t=0.233457s, 430476 KB] Search time: 0.209883s
[t=0.233457s, 430476 KB] Total time: 0.233457s
Solution found.
Peak memory: 430476 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7383e-05s, 424928 KB] reading input...
[t=0.00215759s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.022859s, 427172 KB] Building successor generator...done!
[t=0.0231316s, 427172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.023155s, 427172 KB] time for successor generation creation: 0.000167255s
[t=0.0231827s, 427172 KB] Variables: 25
[t=0.0232052s, 427172 KB] FactPairs: 182
[t=0.0232275s, 427172 KB] Bytes per state: 8
[t=0.0234347s, 427172 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0939652s, 429764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.0940213s, 429764 KB] g=0, 1 evaluated, 0 expanded
[t=0.0940469s, 429764 KB] f = 156, 1 evaluated, 0 expanded
[t=0.0940746s, 429764 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.0940989s, 429764 KB] pruning method: none
[t=0.0992134s, 429812 KB] f = 157, 4 evaluated, 1 expanded
[t=0.0996995s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.0997333s, 429812 KB] g=2, 10 evaluated, 3 expanded
[t=0.100696s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.10073s, 429812 KB] g=6, 23 evaluated, 7 expanded
[t=0.101189s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.101223s, 429812 KB] g=7, 29 evaluated, 8 expanded
[t=0.10175s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 123
[t=0.101782s, 429812 KB] g=9, 36 evaluated, 10 expanded
[t=0.102026s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.102057s, 429812 KB] g=10, 39 evaluated, 11 expanded
[t=0.102724s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.102755s, 429812 KB] g=12, 48 evaluated, 14 expanded
[t=0.103424s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.103456s, 429812 KB] g=14, 57 evaluated, 16 expanded
[t=0.103765s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.103796s, 429812 KB] g=15, 61 evaluated, 17 expanded
[t=0.10391s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.103938s, 429812 KB] g=16, 62 evaluated, 18 expanded
[t=0.104325s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.104359s, 429944 KB] g=17, 67 evaluated, 19 expanded
[t=0.106799s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.106833s, 429944 KB] g=20, 101 evaluated, 28 expanded
[t=0.107005s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.107036s, 429944 KB] g=20, 103 evaluated, 28 expanded
[t=0.107209s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.107237s, 429944 KB] g=21, 105 evaluated, 29 expanded
[t=0.107407s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.107437s, 429944 KB] g=21, 107 evaluated, 29 expanded
[t=0.108739s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.108775s, 429944 KB] g=25, 125 evaluated, 34 expanded
[t=0.109099s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.109131s, 429944 KB] g=26, 129 evaluated, 35 expanded
[t=0.109441s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.109472s, 429944 KB] g=27, 133 evaluated, 36 expanded
[t=0.114741s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.114776s, 429944 KB] g=41, 207 evaluated, 62 expanded
[t=0.11495s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.114978s, 429944 KB] g=42, 209 evaluated, 63 expanded
[t=0.115219s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.11525s, 429944 KB] g=43, 212 evaluated, 64 expanded
[t=0.115489s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.11552s, 429944 KB] g=44, 215 evaluated, 65 expanded
[t=0.115968s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.115997s, 429944 KB] g=45, 221 evaluated, 66 expanded
[t=0.116169s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.116196s, 429944 KB] g=46, 223 evaluated, 67 expanded
[t=0.118075s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.11811s, 429944 KB] g=50, 249 evaluated, 77 expanded
[t=0.118429s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.118458s, 429944 KB] g=51, 253 evaluated, 78 expanded
[t=0.118699s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.118732s, 429944 KB] g=52, 256 evaluated, 79 expanded
[t=0.118996s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.119029s, 430076 KB] g=53, 259 evaluated, 80 expanded
[t=0.119483s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.119512s, 430076 KB] g=55, 265 evaluated, 82 expanded
[t=0.127032s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.127069s, 430076 KB] g=57, 371 evaluated, 122 expanded
[t=0.128894s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.128929s, 430076 KB] g=61, 396 evaluated, 134 expanded, 2 reopened
[t=0.129799s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.129831s, 430076 KB] g=64, 408 evaluated, 137 expanded, 2 reopened
[t=0.130212s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.130243s, 430076 KB] g=65, 413 evaluated, 138 expanded, 2 reopened
[t=0.130559s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.130589s, 430076 KB] g=66, 417 evaluated, 139 expanded, 2 reopened
[t=0.131247s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.131279s, 430076 KB] g=68, 426 evaluated, 141 expanded, 2 reopened
[t=0.131455s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.131483s, 430076 KB] g=69, 428 evaluated, 142 expanded, 2 reopened
[t=0.131651s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.131678s, 430076 KB] g=69, 430 evaluated, 142 expanded, 2 reopened
[t=0.13185s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.131878s, 430076 KB] g=70, 432 evaluated, 143 expanded, 2 reopened
[t=0.132051s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.132079s, 430076 KB] g=71, 434 evaluated, 144 expanded, 2 reopened
[t=0.13232s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.132351s, 430076 KB] g=72, 437 evaluated, 145 expanded, 2 reopened
[t=0.132453s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.132486s, 430076 KB] g=73, 438 evaluated, 146 expanded, 2 reopened
[t=0.132671s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.132703s, 430076 KB] g=74, 440 evaluated, 147 expanded, 2 reopened
[t=0.132876s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.132904s, 430076 KB] g=75, 442 evaluated, 148 expanded, 2 reopened
[t=0.133005s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.133032s, 430076 KB] g=76, 443 evaluated, 149 expanded, 2 reopened
[t=0.133204s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.133234s, 430076 KB] g=77, 445 evaluated, 150 expanded, 2 reopened
[t=0.133266s, 430076 KB] Solution found!
[t=0.133293s, 430076 KB] Actual search time: 0.0391904s
unstack b d (1)
put-down b (1)
unstack g l (1)
put-down g (1)
unstack e f (1)
stack e b (1)
pick-up f (1)
stack f e (1)
unstack d k (1)
stack d f (1)
unstack k c (1)
stack k g (1)
unstack c i (1)
stack c l (1)
unstack k g (1)
put-down k (1)
unstack d f (1)
stack d k (1)
unstack i h (1)
stack i f (1)
pick-up g (1)
stack g h (1)
unstack d k (1)
stack d g (1)
unstack c l (1)
stack c i (1)
pick-up k (1)
stack k c (1)
unstack l j (1)
put-down l (1)
unstack k c (1)
stack k l (1)
pick-up j (1)
stack j k (1)
unstack c i (1)
put-down c (1)
unstack i f (1)
stack i c (1)
unstack j k (1)
stack j i (1)
unstack k l (1)
stack k f (1)
unstack d g (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack l d (1)
put-down l (1)
unstack k f (1)
stack k l (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack d j (1)
put-down d (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.133318s, 430076 KB] Plan length: 78 step(s).
[t=0.133318s, 430076 KB] Plan cost: 78
[t=0.133318s, 430076 KB] Expanded 152 state(s).
[t=0.133318s, 430076 KB] Reopened 2 state(s).
[t=0.133318s, 430076 KB] Evaluated 446 state(s).
[t=0.133318s, 430076 KB] Evaluations: 446
[t=0.133318s, 430076 KB] Generated 612 state(s).
[t=0.133318s, 430076 KB] Dead ends: 0 state(s).
[t=0.133318s, 430076 KB] Expanded until last jump: 1 state(s).
[t=0.133318s, 430076 KB] Reopened until last jump: 0 state(s).
[t=0.133318s, 430076 KB] Evaluated until last jump: 4 state(s).
[t=0.133318s, 430076 KB] Generated until last jump: 3 state(s).
[t=0.133318s, 430076 KB] Number of registered states: 446
[t=0.133318s, 430076 KB] Int hash set load factor: 446/512 = 0.871094
[t=0.133318s, 430076 KB] Int hash set resizes: 9
[t=0.133318s, 430076 KB] Search time: 0.109884s
[t=0.133318s, 430076 KB] Total time: 0.133318s
Solution found.
Peak memory: 430076 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5658e-05s, 424928 KB] reading input...
[t=0.00218217s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0228735s, 427176 KB] Building successor generator...done!
[t=0.0231454s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0231683s, 427176 KB] time for successor generation creation: 0.000166439s
[t=0.023197s, 427176 KB] Variables: 25
[t=0.0232191s, 427176 KB] FactPairs: 182
[t=0.0232407s, 427176 KB] Bytes per state: 8
[t=0.0234447s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0938092s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0938667s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0938929s, 429768 KB] f = 154, 1 evaluated, 0 expanded
[t=0.0939207s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.0939445s, 429768 KB] pruning method: none
[t=0.0991832s, 429816 KB] f = 155, 6 evaluated, 1 expanded
[t=0.0993113s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 151
[t=0.0993543s, 429816 KB] g=2, 7 evaluated, 2 expanded
[t=0.0994614s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0994925s, 429816 KB] g=2, 8 evaluated, 2 expanded
[t=0.100496s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 126
[t=0.100529s, 429816 KB] g=6, 21 evaluated, 7 expanded
[t=0.101694s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.101732s, 429816 KB] g=8, 35 evaluated, 11 expanded
[t=0.102529s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.102562s, 429816 KB] g=11, 45 evaluated, 14 expanded
[t=0.102815s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.102847s, 429816 KB] g=12, 48 evaluated, 15 expanded
[t=0.10295s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.10298s, 429816 KB] g=12, 49 evaluated, 15 expanded
[t=0.112547s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.112582s, 429948 KB] g=26, 177 evaluated, 65 expanded
[t=0.11486s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.114895s, 429948 KB] g=36, 207 evaluated, 81 expanded, 1 reopened
[t=0.115826s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.115858s, 429948 KB] g=38, 219 evaluated, 88 expanded, 1 reopened
[t=0.164372s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.16441s, 430212 KB] g=36, 870 evaluated, 372 expanded, 29 reopened
[t=0.201077s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.201118s, 430484 KB] g=53, 1360 evaluated, 588 expanded, 37 reopened
[t=0.201379s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.201409s, 430484 KB] g=54, 1363 evaluated, 589 expanded, 37 reopened
[t=0.201821s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.201853s, 430484 KB] g=57, 1368 evaluated, 592 expanded, 37 reopened
[t=0.202183s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.202213s, 430484 KB] g=59, 1372 evaluated, 594 expanded, 37 reopened
[t=0.202319s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.202348s, 430484 KB] g=60, 1373 evaluated, 595 expanded, 37 reopened
[t=0.202605s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.202639s, 430484 KB] g=61, 1376 evaluated, 596 expanded, 37 reopened
[t=0.202972s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.203004s, 430484 KB] g=62, 1380 evaluated, 598 expanded, 37 reopened
[t=0.203406s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.203435s, 430484 KB] g=63, 1385 evaluated, 599 expanded, 37 reopened
[t=0.203618s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.203646s, 430484 KB] g=64, 1387 evaluated, 600 expanded, 37 reopened
[t=0.204049s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.204078s, 430484 KB] g=65, 1392 evaluated, 601 expanded, 37 reopened
[t=0.204407s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.204439s, 430484 KB] g=66, 1396 evaluated, 602 expanded, 37 reopened
[t=0.204713s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.204746s, 430484 KB] g=67, 1399 evaluated, 603 expanded, 37 reopened
[t=0.204856s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.204884s, 430484 KB] g=68, 1400 evaluated, 604 expanded, 37 reopened
[t=0.205139s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.205167s, 430484 KB] g=69, 1403 evaluated, 605 expanded, 37 reopened
[t=0.205348s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.205379s, 430484 KB] g=70, 1405 evaluated, 606 expanded, 37 reopened
[t=0.205559s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.205588s, 430484 KB] g=71, 1407 evaluated, 607 expanded, 37 reopened
[t=0.205768s, 430484 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.2058s, 430484 KB] g=72, 1409 evaluated, 608 expanded, 37 reopened
[t=0.205832s, 430484 KB] Solution found!
[t=0.205859s, 430484 KB] Actual search time: 0.11191s
stack h a (1)
pick-up k (1)
stack k f (1)
unstack h a (1)
put-down h (1)
unstack a e (1)
stack a k (1)
unstack e g (1)
stack e l (1)
pick-up h (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack e l (1)
put-down e (1)
unstack l j (1)
stack l k (1)
pick-up j (1)
stack j e (1)
unstack l k (1)
put-down l (1)
unstack k f (1)
stack k j (1)
unstack a h (1)
stack a k (1)
unstack h g (1)
stack h a (1)
pick-up g (1)
stack g h (1)
unstack f b (1)
put-down f (1)
unstack b d (1)
stack b l (1)
unstack d i (1)
stack d b (1)
unstack i c (1)
stack i f (1)
pick-up c (1)
stack c d (1)
unstack i f (1)
stack i c (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i c (1)
put-down i (1)
unstack c d (1)
put-down c (1)
unstack d b (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.205883s, 430484 KB] Plan length: 73 step(s).
[t=0.205883s, 430484 KB] Plan cost: 73
[t=0.205883s, 430484 KB] Expanded 610 state(s).
[t=0.205883s, 430484 KB] Reopened 37 state(s).
[t=0.205883s, 430484 KB] Evaluated 1410 state(s).
[t=0.205883s, 430484 KB] Evaluations: 1410
[t=0.205883s, 430484 KB] Generated 2276 state(s).
[t=0.205883s, 430484 KB] Dead ends: 0 state(s).
[t=0.205883s, 430484 KB] Expanded until last jump: 1 state(s).
[t=0.205883s, 430484 KB] Reopened until last jump: 0 state(s).
[t=0.205883s, 430484 KB] Evaluated until last jump: 6 state(s).
[t=0.205883s, 430484 KB] Generated until last jump: 5 state(s).
[t=0.205883s, 430484 KB] Number of registered states: 1410
[t=0.205883s, 430484 KB] Int hash set load factor: 1410/2048 = 0.688477
[t=0.205883s, 430484 KB] Int hash set resizes: 11
[t=0.205883s, 430484 KB] Search time: 0.18244s
[t=0.205883s, 430484 KB] Total time: 0.205883s
Solution found.
Peak memory: 430484 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p8.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9857e-05s, 424928 KB] reading input...
[t=0.00213528s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0229422s, 427176 KB] Building successor generator...done!
[t=0.0232175s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0232408s, 427176 KB] time for successor generation creation: 0.00016682s
[t=0.0232689s, 427176 KB] Variables: 25
[t=0.0232918s, 427176 KB] FactPairs: 182
[t=0.023314s, 427176 KB] Bytes per state: 8
[t=0.0235086s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0939355s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0939864s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0940123s, 429768 KB] f = 142, 1 evaluated, 0 expanded
[t=0.0940399s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 142
[t=0.0940641s, 429768 KB] pruning method: none
[t=0.0993052s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.0993539s, 429816 KB] g=1, 6 evaluated, 1 expanded
[t=0.0996102s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 138
[t=0.0996433s, 429816 KB] g=2, 9 evaluated, 2 expanded
[t=0.100579s, 429816 KB] f = 143, 22 evaluated, 5 expanded
[t=0.101035s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.101065s, 429816 KB] g=3, 28 evaluated, 7 expanded
[t=0.101442s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.10147s, 429816 KB] g=4, 33 evaluated, 8 expanded
[t=0.101843s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.101873s, 429816 KB] g=5, 38 evaluated, 9 expanded
[t=0.102109s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.102139s, 429816 KB] g=6, 41 evaluated, 10 expanded
[t=0.102235s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.102261s, 429816 KB] g=6, 42 evaluated, 10 expanded
[t=0.102357s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.102383s, 429816 KB] g=6, 43 evaluated, 10 expanded
[t=0.102895s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.102925s, 429816 KB] g=8, 50 evaluated, 12 expanded
[t=0.103368s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.103408s, 429816 KB] g=8, 56 evaluated, 14 expanded
[t=0.107338s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.107372s, 429948 KB] g=21, 112 evaluated, 33 expanded
[t=0.107688s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.10772s, 429948 KB] g=22, 116 evaluated, 34 expanded
[t=0.108024s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.108054s, 429948 KB] g=23, 120 evaluated, 35 expanded
[t=0.108848s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.108878s, 429948 KB] g=25, 131 evaluated, 38 expanded
[t=0.109727s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.109757s, 429948 KB] g=28, 143 evaluated, 41 expanded
[t=0.109925s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.109954s, 429948 KB] g=29, 145 evaluated, 42 expanded
[t=0.110802s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.110832s, 429948 KB] g=32, 157 evaluated, 45 expanded
[t=0.111206s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.111236s, 429948 KB] g=32, 162 evaluated, 47 expanded
[t=0.111402s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.111429s, 429948 KB] g=32, 164 evaluated, 47 expanded
[t=0.111609s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.111638s, 429948 KB] g=33, 166 evaluated, 48 expanded
[t=0.112015s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.112046s, 429948 KB] g=35, 171 evaluated, 50 expanded
[t=0.112556s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.112586s, 429948 KB] g=38, 178 evaluated, 53 expanded
[t=0.11303s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.113059s, 429948 KB] g=41, 184 evaluated, 56 expanded
[t=0.113225s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.113251s, 429948 KB] g=42, 186 evaluated, 57 expanded
[t=0.115785s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.115818s, 429948 KB] g=44, 222 evaluated, 75 expanded, 1 reopened
[t=0.115986s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.116017s, 429948 KB] g=45, 224 evaluated, 76 expanded, 1 reopened
[t=0.116117s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.116143s, 429948 KB] g=46, 225 evaluated, 77 expanded, 1 reopened
[t=0.116241s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.116267s, 429948 KB] g=47, 226 evaluated, 78 expanded, 1 reopened
[t=0.116433s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.116462s, 429948 KB] g=48, 228 evaluated, 79 expanded, 1 reopened
[t=0.116629s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.116656s, 429948 KB] g=49, 230 evaluated, 80 expanded, 1 reopened
[t=0.116822s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.116848s, 429948 KB] g=50, 232 evaluated, 81 expanded, 1 reopened
[t=0.116946s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.116974s, 429948 KB] g=51, 233 evaluated, 82 expanded, 1 reopened
[t=0.117142s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.117169s, 429948 KB] g=52, 235 evaluated, 83 expanded, 1 reopened
[t=0.1172s, 429948 KB] Solution found!
[t=0.117226s, 429948 KB] Actual search time: 0.0231575s
put-down g (1)
unstack l a (1)
stack l d (1)
unstack a h (1)
stack a i (1)
pick-up h (1)
stack h g (1)
unstack a i (1)
stack a h (1)
pick-up e (1)
stack e a (1)
unstack l d (1)
stack l e (1)
unstack d b (1)
put-down d (1)
unstack l e (1)
stack l d (1)
unstack b k (1)
stack b l (1)
unstack k f (1)
stack k b (1)
unstack e a (1)
stack e i (1)
unstack k b (1)
stack k e (1)
unstack f j (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
stack b j (1)
unstack l d (1)
put-down l (1)
pick-up d (1)
stack d l (1)
unstack b j (1)
stack b i (1)
unstack d l (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.11725s, 429948 KB] Plan length: 53 step(s).
[t=0.11725s, 429948 KB] Plan cost: 53
[t=0.11725s, 429948 KB] Expanded 85 state(s).
[t=0.11725s, 429948 KB] Reopened 1 state(s).
[t=0.11725s, 429948 KB] Evaluated 236 state(s).
[t=0.11725s, 429948 KB] Evaluations: 236
[t=0.11725s, 429948 KB] Generated 324 state(s).
[t=0.11725s, 429948 KB] Dead ends: 0 state(s).
[t=0.11725s, 429948 KB] Expanded until last jump: 5 state(s).
[t=0.11725s, 429948 KB] Reopened until last jump: 0 state(s).
[t=0.11725s, 429948 KB] Evaluated until last jump: 22 state(s).
[t=0.11725s, 429948 KB] Generated until last jump: 25 state(s).
[t=0.11725s, 429948 KB] Number of registered states: 236
[t=0.11725s, 429948 KB] Int hash set load factor: 236/256 = 0.921875
[t=0.11725s, 429948 KB] Int hash set resizes: 8
[t=0.11725s, 429948 KB] Search time: 0.0937418s
[t=0.11725s, 429948 KB] Total time: 0.11725s
Solution found.
Peak memory: 429948 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5727e-05s, 424928 KB] reading input...
[t=0.00213699s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.022963s, 427176 KB] Building successor generator...done!
[t=0.0232323s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.023255s, 427176 KB] time for successor generation creation: 0.000164179s
[t=0.0232824s, 427176 KB] Variables: 25
[t=0.0233044s, 427176 KB] FactPairs: 182
[t=0.0233259s, 427176 KB] Bytes per state: 8
[t=0.0235144s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0944218s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 123
[t=0.094477s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0945021s, 429768 KB] f = 123, 1 evaluated, 0 expanded
[t=0.0945293s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 123
[t=0.0945619s, 429768 KB] pruning method: none
[t=0.0997084s, 429816 KB] f = 124, 3 evaluated, 1 expanded
[t=0.0999297s, 429816 KB] f = 127, 5 evaluated, 2 expanded
[t=0.100389s, 429816 KB] f = 128, 10 evaluated, 4 expanded
[t=0.10051s, 429816 KB] f = 129, 11 evaluated, 5 expanded
[t=0.101214s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.101247s, 429816 KB] g=5, 19 evaluated, 9 expanded
[t=0.101358s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.101386s, 429816 KB] g=5, 20 evaluated, 9 expanded
[t=0.101581s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.101609s, 429816 KB] g=6, 22 evaluated, 10 expanded
[t=0.101886s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.101914s, 429816 KB] g=7, 25 evaluated, 11 expanded
[t=0.102775s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.102807s, 429816 KB] g=9, 35 evaluated, 15 expanded
[t=0.106743s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.106777s, 429816 KB] g=15, 82 evaluated, 31 expanded
[t=0.110224s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.110259s, 429948 KB] g=21, 123 evaluated, 49 expanded
[t=0.110534s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.110562s, 429948 KB] g=22, 126 evaluated, 50 expanded
[t=0.110756s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.110783s, 429948 KB] g=23, 128 evaluated, 51 expanded
[t=0.186873s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.18691s, 430080 KB] g=19, 1044 evaluated, 489 expanded, 44 reopened
[t=0.18948s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.189516s, 430212 KB] g=23, 1075 evaluated, 496 expanded, 44 reopened
[t=0.191187s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.191219s, 430212 KB] g=26, 1095 evaluated, 501 expanded, 44 reopened
[t=0.193372s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.193406s, 430212 KB] g=29, 1121 evaluated, 507 expanded, 44 reopened
[t=0.194164s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.194195s, 430212 KB] g=30, 1130 evaluated, 508 expanded, 44 reopened
[t=0.194394s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.194428s, 430212 KB] g=31, 1132 evaluated, 509 expanded, 44 reopened
[t=0.195028s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.195059s, 430212 KB] g=32, 1139 evaluated, 511 expanded, 44 reopened
[t=0.195739s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.19577s, 430212 KB] g=33, 1147 evaluated, 512 expanded, 44 reopened
[t=0.196374s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.196404s, 430212 KB] g=35, 1154 evaluated, 514 expanded, 44 reopened
[t=0.199401s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.199435s, 430212 KB] g=39, 1190 evaluated, 522 expanded, 44 reopened
[t=0.200353s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.200384s, 430212 KB] g=38, 1201 evaluated, 524 expanded, 44 reopened
[t=0.212169s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.212205s, 430344 KB] g=40, 1345 evaluated, 555 expanded, 44 reopened
[t=0.213544s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.213579s, 430344 KB] g=42, 1361 evaluated, 558 expanded, 44 reopened
[t=0.214591s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.214622s, 430344 KB] g=44, 1373 evaluated, 561 expanded, 44 reopened
[t=0.215626s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.215659s, 430344 KB] g=47, 1385 evaluated, 564 expanded, 44 reopened
[t=0.216832s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.216862s, 430344 KB] g=49, 1399 evaluated, 567 expanded, 44 reopened
[t=0.223163s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.223198s, 430344 KB] g=52, 1476 evaluated, 586 expanded, 44 reopened
[t=0.223634s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.223665s, 430344 KB] g=53, 1481 evaluated, 587 expanded, 44 reopened
[t=0.224181s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.224209s, 430344 KB] g=54, 1487 evaluated, 588 expanded, 44 reopened
[t=0.224407s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.224435s, 430344 KB] g=55, 1489 evaluated, 589 expanded, 44 reopened
[t=0.253137s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.25318s, 430608 KB] g=55, 1840 evaluated, 683 expanded, 45 reopened
[t=0.256299s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.256331s, 430608 KB] g=58, 1878 evaluated, 693 expanded, 45 reopened
[t=0.256609s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.256637s, 430608 KB] g=59, 1881 evaluated, 694 expanded, 45 reopened
[t=0.257092s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.257128s, 430608 KB] g=60, 1886 evaluated, 695 expanded, 45 reopened
[t=0.257403s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.257435s, 430608 KB] g=61, 1889 evaluated, 696 expanded, 45 reopened
[t=0.257543s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.25757s, 430608 KB] g=61, 1890 evaluated, 696 expanded, 45 reopened
[t=0.257763s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.257791s, 430608 KB] g=62, 1892 evaluated, 697 expanded, 45 reopened
[t=0.258065s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.258096s, 430608 KB] g=63, 1895 evaluated, 698 expanded, 45 reopened
[t=0.260233s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.260264s, 430608 KB] g=65, 1921 evaluated, 704 expanded, 45 reopened
[t=0.261524s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.261558s, 430608 KB] g=65, 1936 evaluated, 708 expanded, 45 reopened
[t=0.261989s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.26202s, 430608 KB] g=66, 1941 evaluated, 709 expanded, 45 reopened
[t=0.262295s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.262325s, 430608 KB] g=67, 1944 evaluated, 710 expanded, 45 reopened
[t=0.262596s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.262623s, 430608 KB] g=67, 1947 evaluated, 710 expanded, 45 reopened
[t=0.262895s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.262922s, 430608 KB] g=68, 1950 evaluated, 711 expanded, 45 reopened
[t=0.263115s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.263145s, 430608 KB] g=69, 1952 evaluated, 712 expanded, 45 reopened
[t=0.263579s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.263614s, 430608 KB] g=70, 1957 evaluated, 713 expanded, 45 reopened
[t=0.263728s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.263758s, 430608 KB] g=71, 1958 evaluated, 714 expanded, 45 reopened
[t=0.263953s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.263981s, 430608 KB] g=72, 1960 evaluated, 715 expanded, 45 reopened
[t=0.264174s, 430608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.264202s, 430608 KB] g=73, 1962 evaluated, 716 expanded, 45 reopened
[t=0.264233s, 430608 KB] Solution found!
[t=0.26426s, 430608 KB] Actual search time: 0.169694s
unstack j i (1)
put-down j (1)
unstack i k (1)
stack i j (1)
unstack k e (1)
put-down k (1)
unstack i j (1)
put-down i (1)
pick-up k (1)
stack k i (1)
unstack e d (1)
put-down e (1)
pick-up j (1)
stack j e (1)
unstack h f (1)
stack h j (1)
unstack d b (1)
put-down d (1)
unstack b g (1)
stack b d (1)
unstack h j (1)
stack h g (1)
unstack b d (1)
stack b j (1)
unstack h g (1)
stack h b (1)
unstack g a (1)
put-down g (1)
pick-up a (1)
stack a k (1)
unstack h b (1)
stack h g (1)
unstack f l (1)
stack f d (1)
unstack b j (1)
put-down b (1)
unstack a k (1)
stack a h (1)
unstack l c (1)
stack l j (1)
pick-up b (1)
stack b l (1)
unstack f d (1)
stack f k (1)
unstack b l (1)
put-down b (1)
pick-up d (1)
stack d c (1)
unstack l j (1)
stack l d (1)
unstack j e (1)
stack j b (1)
pick-up e (1)
stack e l (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack j b (1)
stack j e (1)
unstack d c (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.264283s, 430608 KB] Plan length: 74 step(s).
[t=0.264283s, 430608 KB] Plan cost: 74
[t=0.264283s, 430608 KB] Expanded 718 state(s).
[t=0.264283s, 430608 KB] Reopened 45 state(s).
[t=0.264283s, 430608 KB] Evaluated 1963 state(s).
[t=0.264283s, 430608 KB] Evaluations: 1963
[t=0.264283s, 430608 KB] Generated 3039 state(s).
[t=0.264283s, 430608 KB] Dead ends: 0 state(s).
[t=0.264283s, 430608 KB] Expanded until last jump: 5 state(s).
[t=0.264283s, 430608 KB] Reopened until last jump: 0 state(s).
[t=0.264283s, 430608 KB] Evaluated until last jump: 11 state(s).
[t=0.264283s, 430608 KB] Generated until last jump: 14 state(s).
[t=0.264283s, 430608 KB] Number of registered states: 1963
[t=0.264283s, 430608 KB] Int hash set load factor: 1963/2048 = 0.958496
[t=0.264283s, 430608 KB] Int hash set resizes: 11
[t=0.264283s, 430608 KB] Search time: 0.24077s
[t=0.264283s, 430608 KB] Total time: 0.264283s
Solution found.
Peak memory: 430608 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p10.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6477e-05s, 424928 KB] reading input...
[t=0.00212731s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0234051s, 427172 KB] Building successor generator...done!
[t=0.0236787s, 427172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.023702s, 427172 KB] time for successor generation creation: 0.000168838s
[t=0.0237303s, 427172 KB] Variables: 25
[t=0.0237531s, 427172 KB] FactPairs: 182
[t=0.0237759s, 427172 KB] Bytes per state: 8
[t=0.0239797s, 427172 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0958852s, 429764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0959378s, 429764 KB] g=0, 1 evaluated, 0 expanded
[t=0.0959643s, 429764 KB] f = 145, 1 evaluated, 0 expanded
[t=0.0959923s, 429764 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.0960169s, 429764 KB] pruning method: none
[t=0.0999741s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.100019s, 429812 KB] g=1, 2 evaluated, 1 expanded
[t=0.10143s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.101467s, 429812 KB] g=2, 6 evaluated, 2 expanded
[t=0.101705s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.101744s, 429812 KB] g=2, 9 evaluated, 2 expanded
[t=0.102131s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.102162s, 429812 KB] g=4, 14 evaluated, 4 expanded
[t=0.102333s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.102361s, 429812 KB] g=4, 16 evaluated, 4 expanded
[t=0.102816s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.102847s, 429812 KB] g=6, 22 evaluated, 6 expanded
[t=0.105523s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.105561s, 429812 KB] g=8, 59 evaluated, 15 expanded
[t=0.106159s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.10619s, 429812 KB] g=10, 67 evaluated, 17 expanded
[t=0.106433s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.10646s, 429812 KB] g=11, 70 evaluated, 18 expanded
[t=0.106771s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.106798s, 429812 KB] g=12, 74 evaluated, 19 expanded
[t=0.109292s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.109325s, 429944 KB] g=16, 109 evaluated, 27 expanded
[t=0.110189s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.110221s, 429944 KB] g=18, 121 evaluated, 29 expanded
[t=0.110601s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.110631s, 429944 KB] g=19, 126 evaluated, 30 expanded
[t=0.11152s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.111551s, 429944 KB] g=22, 138 evaluated, 33 expanded
[t=0.114604s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.114637s, 429944 KB] g=25, 181 evaluated, 43 expanded
[t=0.127517s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.127557s, 430080 KB] g=30, 365 evaluated, 88 expanded, 1 reopened
[t=0.130733s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.130769s, 430080 KB] g=34, 410 evaluated, 100 expanded, 1 reopened
[t=0.131078s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.131108s, 430080 KB] g=35, 414 evaluated, 101 expanded, 1 reopened
[t=0.131209s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.131245s, 430080 KB] g=36, 415 evaluated, 102 expanded, 1 reopened
[t=0.131413s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.13144s, 430080 KB] g=36, 417 evaluated, 102 expanded, 1 reopened
[t=0.131747s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.131778s, 430080 KB] g=37, 421 evaluated, 103 expanded, 1 reopened
[t=0.131948s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.131975s, 430080 KB] g=38, 423 evaluated, 104 expanded, 1 reopened
[t=0.134673s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.134708s, 430080 KB] g=40, 461 evaluated, 116 expanded, 2 reopened
[t=0.13495s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.134979s, 430080 KB] g=41, 464 evaluated, 117 expanded, 2 reopened
[t=0.135357s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.135387s, 430080 KB] g=42, 469 evaluated, 118 expanded, 2 reopened
[t=0.135626s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.135653s, 430080 KB] g=43, 472 evaluated, 119 expanded, 2 reopened
[t=0.136101s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.136131s, 430080 KB] g=45, 478 evaluated, 121 expanded, 2 reopened
[t=0.136453s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.136482s, 430080 KB] g=46, 482 evaluated, 122 expanded, 2 reopened
[t=0.136656s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.136686s, 430080 KB] g=47, 484 evaluated, 123 expanded, 2 reopened
[t=0.136992s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.137021s, 430080 KB] g=48, 488 evaluated, 124 expanded, 2 reopened
[t=0.137537s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.137567s, 430080 KB] g=50, 495 evaluated, 126 expanded, 2 reopened
[t=0.137669s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.137696s, 430080 KB] g=51, 496 evaluated, 127 expanded, 2 reopened
[t=0.137929s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.137955s, 430080 KB] g=51, 499 evaluated, 127 expanded, 2 reopened
[t=0.138191s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.138225s, 430080 KB] g=52, 502 evaluated, 128 expanded, 2 reopened
[t=0.138398s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.138425s, 430080 KB] g=53, 504 evaluated, 129 expanded, 2 reopened
[t=0.1388s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.13883s, 430080 KB] g=54, 509 evaluated, 130 expanded, 2 reopened
[t=0.138932s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.13896s, 430080 KB] g=55, 510 evaluated, 131 expanded, 2 reopened
[t=0.139131s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.139157s, 430080 KB] g=56, 512 evaluated, 132 expanded, 2 reopened
[t=0.139371s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.139399s, 430080 KB] g=57, 514 evaluated, 133 expanded, 2 reopened
[t=0.139431s, 430080 KB] Solution found!
[t=0.139457s, 430080 KB] Actual search time: 0.0434361s
unstack g b (1)
stack g l (1)
unstack b k (1)
put-down b (1)
unstack c e (1)
stack c b (1)
unstack g l (1)
stack g k (1)
unstack e a (1)
stack e l (1)
unstack a h (1)
stack a c (1)
unstack g k (1)
put-down g (1)
pick-up h (1)
stack h g (1)
unstack k i (1)
stack k j (1)
unstack i f (1)
stack i e (1)
unstack f d (1)
stack f i (1)
unstack k j (1)
stack k f (1)
pick-up d (1)
stack d j (1)
unstack a c (1)
stack a h (1)
unstack d j (1)
put-down d (1)
pick-up j (1)
stack j d (1)
unstack k f (1)
stack k j (1)
unstack f i (1)
stack f a (1)
unstack i e (1)
stack i c (1)
unstack k j (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.139482s, 430080 KB] Plan length: 58 step(s).
[t=0.139482s, 430080 KB] Plan cost: 58
[t=0.139482s, 430080 KB] Expanded 135 state(s).
[t=0.139482s, 430080 KB] Reopened 2 state(s).
[t=0.139482s, 430080 KB] Evaluated 515 state(s).
[t=0.139482s, 430080 KB] Evaluations: 515
[t=0.139482s, 430080 KB] Generated 664 state(s).
[t=0.139482s, 430080 KB] Dead ends: 0 state(s).
[t=0.139482s, 430080 KB] Expanded until last jump: 0 state(s).
[t=0.139482s, 430080 KB] Reopened until last jump: 0 state(s).
[t=0.139482s, 430080 KB] Evaluated until last jump: 1 state(s).
[t=0.139482s, 430080 KB] Generated until last jump: 0 state(s).
[t=0.139482s, 430080 KB] Number of registered states: 515
[t=0.139482s, 430080 KB] Int hash set load factor: 515/1024 = 0.50293
[t=0.139482s, 430080 KB] Int hash set resizes: 10
[t=0.139482s, 430080 KB] Search time: 0.115503s
[t=0.139482s, 430080 KB] Total time: 0.139482s
Solution found.
Peak memory: 430080 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p11.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.103s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6341e-05s, 424928 KB] reading input...
[t=0.00226854s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0232003s, 427176 KB] Building successor generator...done!
[t=0.0234744s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0234974s, 427176 KB] time for successor generation creation: 0.000166379s
[t=0.0235262s, 427176 KB] Variables: 25
[t=0.0235487s, 427176 KB] FactPairs: 182
[t=0.0235709s, 427176 KB] Bytes per state: 8
[t=0.0237612s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0943223s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0943754s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0944008s, 429768 KB] f = 131, 1 evaluated, 0 expanded
[t=0.0944286s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.0944521s, 429768 KB] pruning method: none
[t=0.0997147s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.0997594s, 429816 KB] g=1, 5 evaluated, 1 expanded
[t=0.100071s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 123
[t=0.100113s, 429816 KB] g=2, 9 evaluated, 2 expanded
[t=0.100416s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.100448s, 429816 KB] g=3, 13 evaluated, 3 expanded
[t=0.10062s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.100647s, 429816 KB] g=4, 15 evaluated, 4 expanded
[t=0.100814s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.100843s, 429816 KB] g=4, 17 evaluated, 4 expanded
[t=0.101084s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 104
[t=0.101113s, 429816 KB] g=5, 20 evaluated, 5 expanded
[t=0.101347s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.101377s, 429816 KB] g=6, 23 evaluated, 6 expanded
[t=0.101475s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.101501s, 429816 KB] g=6, 24 evaluated, 6 expanded
[t=0.102142s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.102172s, 429816 KB] g=8, 33 evaluated, 8 expanded
[t=0.111735s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.11177s, 429948 KB] g=16, 170 evaluated, 54 expanded, 6 reopened
[t=0.115726s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.115762s, 429948 KB] g=16, 226 evaluated, 69 expanded, 6 reopened
[t=0.120029s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.120064s, 429948 KB] g=22, 288 evaluated, 87 expanded, 6 reopened
[t=0.138305s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.138355s, 430080 KB] g=25, 551 evaluated, 170 expanded, 8 reopened
[t=0.138527s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.138555s, 430080 KB] g=26, 553 evaluated, 171 expanded, 8 reopened
[t=0.138651s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.138678s, 430080 KB] g=26, 554 evaluated, 171 expanded, 8 reopened
[t=0.150716s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.150753s, 430212 KB] g=34, 728 evaluated, 229 expanded, 13 reopened
[t=0.150993s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.151021s, 430212 KB] g=35, 731 evaluated, 230 expanded, 13 reopened
[t=0.163667s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.163704s, 430212 KB] g=40, 912 evaluated, 289 expanded, 14 reopened
[t=0.164008s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.164036s, 430212 KB] g=41, 916 evaluated, 290 expanded, 14 reopened
[t=0.16544s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.165474s, 430212 KB] g=44, 936 evaluated, 296 expanded, 14 reopened
[t=0.166049s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.16608s, 430212 KB] g=46, 944 evaluated, 298 expanded, 14 reopened
[t=0.166863s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.166894s, 430212 KB] g=48, 955 evaluated, 301 expanded, 14 reopened
[t=0.16713s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.167158s, 430212 KB] g=49, 958 evaluated, 302 expanded, 14 reopened
[t=0.167392s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.167419s, 430212 KB] g=50, 961 evaluated, 303 expanded, 14 reopened
[t=0.167856s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.167886s, 430212 KB] g=51, 967 evaluated, 304 expanded, 14 reopened
[t=0.167987s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.168013s, 430212 KB] g=52, 968 evaluated, 305 expanded, 14 reopened
[t=0.168176s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.168202s, 430212 KB] g=52, 970 evaluated, 305 expanded, 14 reopened
[t=0.168438s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.168465s, 430212 KB] g=53, 973 evaluated, 306 expanded, 14 reopened
[t=0.168632s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.16866s, 430212 KB] g=54, 975 evaluated, 307 expanded, 14 reopened
[t=0.169129s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.169165s, 430344 KB] g=55, 981 evaluated, 308 expanded, 14 reopened
[t=0.169348s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.16938s, 430344 KB] g=56, 983 evaluated, 309 expanded, 14 reopened
[t=0.169563s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.169595s, 430344 KB] g=57, 985 evaluated, 310 expanded, 14 reopened
[t=0.169937s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.169968s, 430344 KB] g=58, 988 evaluated, 311 expanded, 14 reopened
[t=0.170378s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.170408s, 430344 KB] g=60, 993 evaluated, 313 expanded, 14 reopened
[t=0.171823s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.171855s, 430344 KB] g=62, 1013 evaluated, 321 expanded, 14 reopened
[t=0.172097s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.172125s, 430344 KB] g=64, 1016 evaluated, 323 expanded, 14 reopened
[t=0.172226s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.172252s, 430344 KB] g=65, 1017 evaluated, 324 expanded, 14 reopened
[t=0.172421s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.172448s, 430344 KB] g=66, 1019 evaluated, 325 expanded, 14 reopened
[t=0.172612s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.172639s, 430344 KB] g=66, 1021 evaluated, 325 expanded, 14 reopened
[t=0.172738s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.172765s, 430344 KB] g=67, 1022 evaluated, 326 expanded, 14 reopened
[t=0.173154s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.173187s, 430344 KB] g=68, 1027 evaluated, 327 expanded, 14 reopened
[t=0.17349s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.17352s, 430344 KB] g=69, 1031 evaluated, 328 expanded, 14 reopened
[t=0.173754s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.173781s, 430344 KB] g=70, 1034 evaluated, 329 expanded, 14 reopened
[t=0.173879s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.17391s, 430344 KB] g=71, 1035 evaluated, 330 expanded, 14 reopened
[t=0.174147s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.174175s, 430344 KB] g=72, 1038 evaluated, 331 expanded, 14 reopened
[t=0.174344s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.174371s, 430344 KB] g=73, 1040 evaluated, 332 expanded, 14 reopened
[t=0.174538s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.174565s, 430344 KB] g=74, 1042 evaluated, 333 expanded, 14 reopened
[t=0.174731s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.174763s, 430344 KB] g=75, 1044 evaluated, 334 expanded, 14 reopened
[t=0.174795s, 430344 KB] Solution found!
[t=0.174821s, 430344 KB] Actual search time: 0.0803652s
pick-up k (1)
stack k d (1)
unstack l e (1)
put-down l (1)
unstack e h (1)
stack e b (1)
pick-up g (1)
stack g h (1)
unstack k d (1)
put-down k (1)
unstack e b (1)
stack e k (1)
unstack d i (1)
stack d e (1)
unstack i c (1)
stack i d (1)
pick-up c (1)
stack c i (1)
pick-up b (1)
stack b l (1)
unstack c i (1)
stack c b (1)
unstack i d (1)
stack i c (1)
unstack d e (1)
put-down d (1)
unstack g h (1)
stack g d (1)
unstack h f (1)
stack h g (1)
unstack f j (1)
put-down f (1)
unstack j a (1)
stack j e (1)
pick-up f (1)
stack f i (1)
unstack h g (1)
stack h f (1)
unstack g d (1)
put-down g (1)
pick-up a (1)
stack a j (1)
unstack h f (1)
stack h g (1)
unstack f i (1)
stack f d (1)
unstack a j (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e d (1)
pick-up k (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.174846s, 430344 KB] Plan length: 76 step(s).
[t=0.174846s, 430344 KB] Plan cost: 76
[t=0.174846s, 430344 KB] Expanded 336 state(s).
[t=0.174846s, 430344 KB] Reopened 14 state(s).
[t=0.174846s, 430344 KB] Evaluated 1045 state(s).
[t=0.174846s, 430344 KB] Evaluations: 1045
[t=0.174846s, 430344 KB] Generated 1508 state(s).
[t=0.174846s, 430344 KB] Dead ends: 0 state(s).
[t=0.174846s, 430344 KB] Expanded until last jump: 0 state(s).
[t=0.174846s, 430344 KB] Reopened until last jump: 0 state(s).
[t=0.174846s, 430344 KB] Evaluated until last jump: 1 state(s).
[t=0.174846s, 430344 KB] Generated until last jump: 0 state(s).
[t=0.174846s, 430344 KB] Number of registered states: 1045
[t=0.174846s, 430344 KB] Int hash set load factor: 1045/2048 = 0.510254
[t=0.174846s, 430344 KB] Int hash set resizes: 11
[t=0.174846s, 430344 KB] Search time: 0.151085s
[t=0.174846s, 430344 KB] Total time: 0.174846s
Solution found.
Peak memory: 430344 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p12.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.5955e-05s, 424928 KB] reading input...
[t=0.00217257s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0230665s, 427176 KB] Building successor generator...done!
[t=0.0233572s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0233814s, 427176 KB] time for successor generation creation: 0.000181236s
[t=0.0234105s, 427176 KB] Variables: 25
[t=0.023435s, 427176 KB] FactPairs: 182
[t=0.0234575s, 427176 KB] Bytes per state: 8
[t=0.0236618s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0949343s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 158
[t=0.0949871s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0950129s, 429768 KB] f = 158, 1 evaluated, 0 expanded
[t=0.0950402s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 158
[t=0.0950647s, 429768 KB] pruning method: none
[t=0.100157s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.1002s, 429816 KB] g=1, 3 evaluated, 1 expanded
[t=0.100378s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.100411s, 429816 KB] g=1, 5 evaluated, 1 expanded
[t=0.100589s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 153
[t=0.10062s, 429816 KB] g=2, 7 evaluated, 2 expanded
[t=0.100792s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.100824s, 429816 KB] g=2, 9 evaluated, 2 expanded
[t=0.101069s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.1011s, 429816 KB] g=3, 12 evaluated, 3 expanded
[t=0.10149s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.101533s, 429816 KB] g=4, 17 evaluated, 4 expanded
[t=0.101924s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.101953s, 429816 KB] g=5, 22 evaluated, 5 expanded
[t=0.102125s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.102156s, 429816 KB] g=5, 24 evaluated, 5 expanded
[t=0.102262s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.102289s, 429816 KB] g=6, 25 evaluated, 6 expanded
[t=0.102678s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.102709s, 429816 KB] g=7, 30 evaluated, 7 expanded
[t=0.102886s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.102914s, 429816 KB] g=8, 32 evaluated, 8 expanded
[t=0.103017s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.103044s, 429816 KB] g=8, 33 evaluated, 8 expanded
[t=0.107364s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.1074s, 429816 KB] g=10, 92 evaluated, 32 expanded, 3 reopened
[t=0.107579s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.107611s, 429816 KB] g=11, 94 evaluated, 33 expanded, 3 reopened
[t=0.107855s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.107883s, 429816 KB] g=12, 97 evaluated, 34 expanded, 3 reopened
[t=0.108198s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.10823s, 429816 KB] g=13, 101 evaluated, 35 expanded, 3 reopened
[t=0.108682s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.108716s, 429948 KB] g=14, 107 evaluated, 36 expanded, 3 reopened
[t=0.109177s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.109208s, 429948 KB] g=16, 113 evaluated, 38 expanded, 3 reopened
[t=0.110226s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.110259s, 429948 KB] g=17, 127 evaluated, 41 expanded, 3 reopened
[t=0.111073s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.111107s, 429948 KB] g=17, 138 evaluated, 44 expanded, 3 reopened
[t=0.119231s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.119286s, 429948 KB] g=23, 252 evaluated, 80 expanded, 3 reopened
[t=0.119538s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.119567s, 429948 KB] g=24, 255 evaluated, 81 expanded, 3 reopened
[t=0.120045s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.120076s, 429948 KB] g=25, 261 evaluated, 82 expanded, 3 reopened
[t=0.120527s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.120558s, 429948 KB] g=26, 267 evaluated, 83 expanded, 3 reopened
[t=0.121148s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.121179s, 429948 KB] g=26, 275 evaluated, 85 expanded, 3 reopened
[t=0.122049s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.122081s, 429948 KB] g=28, 287 evaluated, 88 expanded, 3 reopened
[t=0.122674s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.122706s, 429948 KB] g=30, 295 evaluated, 90 expanded, 3 reopened
[t=0.122951s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.12298s, 429948 KB] g=31, 298 evaluated, 91 expanded, 3 reopened
[t=0.123225s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.123264s, 429948 KB] g=32, 301 evaluated, 92 expanded, 3 reopened
[t=0.123579s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.12361s, 429948 KB] g=33, 305 evaluated, 93 expanded, 3 reopened
[t=0.123785s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.123813s, 429948 KB] g=34, 307 evaluated, 94 expanded, 3 reopened
[t=0.124267s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.124298s, 429948 KB] g=35, 313 evaluated, 96 expanded, 3 reopened
[t=0.124611s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.124643s, 429948 KB] g=36, 317 evaluated, 97 expanded, 3 reopened
[t=0.12503s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.125059s, 429948 KB] g=38, 322 evaluated, 99 expanded, 3 reopened
[t=0.131644s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.131681s, 430080 KB] g=42, 415 evaluated, 122 expanded, 3 reopened
[t=0.132066s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.132096s, 430080 KB] g=43, 420 evaluated, 123 expanded, 3 reopened
[t=0.132486s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.132518s, 430080 KB] g=44, 425 evaluated, 124 expanded, 3 reopened
[t=0.132762s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.132793s, 430080 KB] g=45, 428 evaluated, 125 expanded, 3 reopened
[t=0.133464s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.133497s, 430080 KB] g=47, 437 evaluated, 128 expanded, 3 reopened
[t=0.133816s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.133845s, 430080 KB] g=48, 441 evaluated, 129 expanded, 3 reopened
[t=0.133949s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.133976s, 430080 KB] g=49, 442 evaluated, 130 expanded, 3 reopened
[t=0.134151s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.134182s, 430080 KB] g=50, 444 evaluated, 131 expanded, 3 reopened
[t=0.134353s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.134381s, 430080 KB] g=50, 446 evaluated, 131 expanded, 3 reopened
[t=0.134484s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.134511s, 430080 KB] g=51, 447 evaluated, 132 expanded, 3 reopened
[t=0.134891s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.134925s, 430080 KB] g=52, 452 evaluated, 133 expanded, 3 reopened
[t=0.135255s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.135288s, 430080 KB] g=53, 456 evaluated, 134 expanded, 3 reopened
[t=0.135532s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.135563s, 430080 KB] g=54, 459 evaluated, 135 expanded, 3 reopened
[t=0.135666s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.135694s, 430080 KB] g=55, 460 evaluated, 136 expanded, 3 reopened
[t=0.135938s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.135969s, 430080 KB] g=56, 463 evaluated, 137 expanded, 3 reopened
[t=0.136143s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.136172s, 430080 KB] g=57, 465 evaluated, 138 expanded, 3 reopened
[t=0.136345s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.136373s, 430080 KB] g=58, 467 evaluated, 139 expanded, 3 reopened
[t=0.136549s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.136582s, 430080 KB] g=59, 469 evaluated, 140 expanded, 3 reopened
[t=0.136614s, 430080 KB] Solution found!
[t=0.136641s, 430080 KB] Actual search time: 0.0415722s
unstack k g (1)
stack k f (1)
unstack g j (1)
stack g a (1)
pick-up j (1)
stack j g (1)
unstack e b (1)
stack e j (1)
unstack b c (1)
stack b l (1)
unstack c d (1)
stack c b (1)
unstack d i (1)
put-down d (1)
unstack k f (1)
stack k c (1)
pick-up i (1)
stack i d (1)
unstack e j (1)
stack e k (1)
unstack j g (1)
stack j e (1)
unstack g a (1)
put-down g (1)
unstack a h (1)
stack a i (1)
pick-up h (1)
stack h g (1)
unstack a i (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack j e (1)
put-down j (1)
unstack i d (1)
put-down i (1)
pick-up j (1)
stack j i (1)
unstack e k (1)
put-down e (1)
unstack k c (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.136666s, 430080 KB] Plan length: 60 step(s).
[t=0.136666s, 430080 KB] Plan cost: 60
[t=0.136666s, 430080 KB] Expanded 142 state(s).
[t=0.136666s, 430080 KB] Reopened 3 state(s).
[t=0.136666s, 430080 KB] Evaluated 470 state(s).
[t=0.136666s, 430080 KB] Evaluations: 470
[t=0.136666s, 430080 KB] Generated 636 state(s).
[t=0.136666s, 430080 KB] Dead ends: 0 state(s).
[t=0.136666s, 430080 KB] Expanded until last jump: 0 state(s).
[t=0.136666s, 430080 KB] Reopened until last jump: 0 state(s).
[t=0.136666s, 430080 KB] Evaluated until last jump: 1 state(s).
[t=0.136666s, 430080 KB] Generated until last jump: 0 state(s).
[t=0.136666s, 430080 KB] Number of registered states: 470
[t=0.136666s, 430080 KB] Int hash set load factor: 470/512 = 0.917969
[t=0.136666s, 430080 KB] Int hash set resizes: 9
[t=0.136666s, 430080 KB] Search time: 0.113005s
[t=0.136666s, 430080 KB] Total time: 0.136666s
Solution found.
Peak memory: 430080 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p13.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6192e-05s, 424928 KB] reading input...
[t=0.00212049s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0228987s, 427176 KB] Building successor generator...done!
[t=0.023168s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0231917s, 427176 KB] time for successor generation creation: 0.00016556s
[t=0.0232195s, 427176 KB] Variables: 25
[t=0.0232427s, 427176 KB] FactPairs: 182
[t=0.0232648s, 427176 KB] Bytes per state: 8
[t=0.0234552s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0938715s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0939216s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0939472s, 429768 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0939749s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0939986s, 429768 KB] pruning method: none
[t=0.099153s, 429816 KB] f = 136, 5 evaluated, 1 expanded
[t=0.0992754s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 133
[t=0.0993067s, 429816 KB] g=2, 6 evaluated, 2 expanded
[t=0.099551s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0995818s, 429816 KB] g=3, 9 evaluated, 3 expanded
[t=0.0996786s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0997052s, 429816 KB] g=3, 10 evaluated, 3 expanded
[t=0.0998686s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.0998977s, 429816 KB] g=3, 12 evaluated, 3 expanded
[t=0.100134s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.100164s, 429816 KB] g=4, 15 evaluated, 4 expanded
[t=0.101711s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.101743s, 429816 KB] g=8, 37 evaluated, 10 expanded
[t=0.102124s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.102154s, 429816 KB] g=9, 42 evaluated, 11 expanded
[t=0.102337s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.10237s, 429816 KB] g=9, 44 evaluated, 11 expanded
[t=0.102539s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.102566s, 429816 KB] g=10, 46 evaluated, 12 expanded
[t=0.10376s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.10379s, 429816 KB] g=13, 63 evaluated, 15 expanded
[t=0.104172s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.104202s, 429816 KB] g=14, 68 evaluated, 16 expanded
[t=0.106087s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.106118s, 429948 KB] g=16, 95 evaluated, 21 expanded
[t=0.108509s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.108542s, 429948 KB] g=19, 129 evaluated, 30 expanded
[t=0.109042s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.10907s, 429948 KB] g=20, 136 evaluated, 31 expanded
[t=0.109372s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.109402s, 429948 KB] g=21, 140 evaluated, 32 expanded
[t=0.110186s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.110216s, 429948 KB] g=23, 151 evaluated, 35 expanded
[t=0.110806s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.110837s, 429948 KB] g=25, 159 evaluated, 37 expanded
[t=0.115129s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.115163s, 429948 KB] g=26, 221 evaluated, 57 expanded, 2 reopened
[t=0.116015s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.116045s, 429948 KB] g=26, 233 evaluated, 60 expanded, 2 reopened
[t=0.119178s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.119211s, 429948 KB] g=29, 278 evaluated, 74 expanded, 2 reopened
[t=0.119378s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.119406s, 429948 KB] g=30, 280 evaluated, 75 expanded, 2 reopened
[t=0.119979s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.120015s, 429948 KB] g=31, 288 evaluated, 77 expanded, 2 reopened
[t=0.138868s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.138904s, 430080 KB] g=38, 552 evaluated, 246 expanded, 85 reopened
[t=0.139209s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.139239s, 430080 KB] g=39, 556 evaluated, 247 expanded, 85 reopened
[t=0.139335s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.139362s, 430080 KB] g=39, 557 evaluated, 247 expanded, 85 reopened
[t=0.139733s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.139763s, 430080 KB] g=41, 562 evaluated, 249 expanded, 85 reopened
[t=0.140407s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.140439s, 430212 KB] g=43, 571 evaluated, 252 expanded, 85 reopened
[t=0.141288s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.141318s, 430212 KB] g=46, 583 evaluated, 255 expanded, 85 reopened
[t=0.14169s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.14172s, 430212 KB] g=48, 588 evaluated, 257 expanded, 85 reopened
[t=0.14209s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.142121s, 430212 KB] g=49, 593 evaluated, 258 expanded, 85 reopened
[t=0.142443s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.142475s, 430212 KB] g=50, 597 evaluated, 259 expanded, 85 reopened
[t=0.142917s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.142944s, 430212 KB] g=52, 603 evaluated, 261 expanded, 85 reopened
[t=0.143112s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.143141s, 430212 KB] g=53, 605 evaluated, 262 expanded, 85 reopened
[t=0.143306s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.143333s, 430212 KB] g=53, 607 evaluated, 262 expanded, 85 reopened
[t=0.143432s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.143459s, 430212 KB] g=54, 608 evaluated, 263 expanded, 85 reopened
[t=0.143626s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.143652s, 430212 KB] g=55, 610 evaluated, 264 expanded, 85 reopened
[t=0.143958s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.143987s, 430212 KB] g=56, 614 evaluated, 265 expanded, 85 reopened
[t=0.144445s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.144475s, 430212 KB] g=57, 620 evaluated, 268 expanded, 85 reopened
[t=0.144574s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.144601s, 430212 KB] g=58, 621 evaluated, 269 expanded, 85 reopened
[t=0.1447s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.144727s, 430212 KB] g=59, 622 evaluated, 270 expanded, 85 reopened
[t=0.144894s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.14492s, 430212 KB] g=60, 624 evaluated, 271 expanded, 85 reopened
[t=0.145086s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.145113s, 430212 KB] g=61, 626 evaluated, 272 expanded, 85 reopened
[t=0.145281s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.145308s, 430212 KB] g=62, 628 evaluated, 273 expanded, 85 reopened
[t=0.145406s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.145435s, 430212 KB] g=63, 629 evaluated, 274 expanded, 85 reopened
[t=0.145603s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.14563s, 430212 KB] g=64, 631 evaluated, 275 expanded, 85 reopened
[t=0.145663s, 430212 KB] Solution found!
[t=0.145689s, 430212 KB] Actual search time: 0.0516874s
put-down a (1)
unstack g e (1)
stack g h (1)
unstack e j (1)
put-down e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d j (1)
unstack g h (1)
stack g e (1)
unstack h l (1)
stack h a (1)
pick-up b (1)
stack b i (1)
unstack g e (1)
stack g h (1)
unstack d j (1)
stack d g (1)
unstack b i (1)
stack b l (1)
pick-up e (1)
stack e b (1)
unstack j f (1)
stack j e (1)
unstack f k (1)
put-down f (1)
pick-up k (1)
stack k i (1)
pick-up f (1)
stack f k (1)
unstack d g (1)
stack d j (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack d j (1)
put-down d (1)
unstack j e (1)
stack j d (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b i (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.145714s, 430212 KB] Plan length: 65 step(s).
[t=0.145714s, 430212 KB] Plan cost: 65
[t=0.145714s, 430212 KB] Expanded 277 state(s).
[t=0.145714s, 430212 KB] Reopened 85 state(s).
[t=0.145714s, 430212 KB] Evaluated 632 state(s).
[t=0.145714s, 430212 KB] Evaluations: 632
[t=0.145714s, 430212 KB] Generated 1271 state(s).
[t=0.145714s, 430212 KB] Dead ends: 0 state(s).
[t=0.145714s, 430212 KB] Expanded until last jump: 1 state(s).
[t=0.145714s, 430212 KB] Reopened until last jump: 0 state(s).
[t=0.145714s, 430212 KB] Evaluated until last jump: 5 state(s).
[t=0.145714s, 430212 KB] Generated until last jump: 4 state(s).
[t=0.145714s, 430212 KB] Number of registered states: 632
[t=0.145714s, 430212 KB] Int hash set load factor: 632/1024 = 0.617188
[t=0.145714s, 430212 KB] Int hash set resizes: 10
[t=0.145714s, 430212 KB] Search time: 0.12226s
[t=0.145714s, 430212 KB] Total time: 0.145714s
Solution found.
Peak memory: 430212 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p14.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6175e-05s, 424928 KB] reading input...
[t=0.00216292s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0230675s, 427176 KB] Building successor generator...done!
[t=0.0233361s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0233602s, 427176 KB] time for successor generation creation: 0.000162844s
[t=0.0233892s, 427176 KB] Variables: 25
[t=0.0234124s, 427176 KB] FactPairs: 182
[t=0.0234348s, 427176 KB] Bytes per state: 8
[t=0.0236388s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.094385s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.0944506s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0944773s, 429768 KB] f = 127, 1 evaluated, 0 expanded
[t=0.0945055s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 127
[t=0.0945294s, 429768 KB] pruning method: none
[t=0.0996863s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 126
[t=0.0997313s, 429816 KB] g=1, 4 evaluated, 1 expanded
[t=0.0999296s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.0999619s, 429816 KB] g=2, 6 evaluated, 2 expanded
[t=0.10007s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 116
[t=0.100101s, 429816 KB] g=2, 7 evaluated, 2 expanded
[t=0.100458s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.10049s, 429816 KB] g=4, 11 evaluated, 4 expanded
[t=0.100759s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.100793s, 429816 KB] g=5, 14 evaluated, 5 expanded
[t=0.103397s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.103431s, 429816 KB] g=9, 46 evaluated, 12 expanded
[t=0.103779s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.10381s, 429816 KB] g=10, 50 evaluated, 13 expanded
[t=0.104401s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.104434s, 429816 KB] g=9, 57 evaluated, 15 expanded
[t=0.104859s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.104889s, 429816 KB] g=10, 62 evaluated, 16 expanded
[t=0.105243s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.105274s, 429816 KB] g=11, 66 evaluated, 17 expanded
[t=0.128538s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.128574s, 429948 KB] g=16, 360 evaluated, 96 expanded, 2 reopened
[t=0.132002s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.132036s, 429948 KB] g=16, 403 evaluated, 108 expanded, 2 reopened
[t=0.133399s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.133432s, 429948 KB] g=15, 420 evaluated, 112 expanded, 2 reopened
[t=0.133855s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.133884s, 429948 KB] g=16, 425 evaluated, 113 expanded, 2 reopened
[t=0.133997s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.134025s, 429948 KB] g=16, 426 evaluated, 113 expanded, 2 reopened
[t=0.134133s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.134161s, 429948 KB] g=17, 427 evaluated, 114 expanded, 2 reopened
[t=0.134816s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.134848s, 429948 KB] g=18, 435 evaluated, 115 expanded, 2 reopened
[t=0.137796s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.13783s, 429948 KB] g=20, 472 evaluated, 126 expanded, 2 reopened
[t=0.140465s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.1405s, 429948 KB] g=23, 505 evaluated, 136 expanded, 2 reopened
[t=0.140846s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.140875s, 429948 KB] g=24, 509 evaluated, 137 expanded, 2 reopened
[t=0.18306s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.183097s, 430080 KB] g=26, 1042 evaluated, 293 expanded, 5 reopened
[t=0.183758s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.183787s, 430080 KB] g=26, 1050 evaluated, 295 expanded, 5 reopened
[t=0.225165s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.225203s, 430212 KB] g=26, 1570 evaluated, 458 expanded, 19 reopened
[t=0.239394s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.239431s, 430212 KB] g=31, 1750 evaluated, 502 expanded, 19 reopened
[t=0.240739s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.240774s, 430344 KB] g=34, 1766 evaluated, 507 expanded, 19 reopened
[t=0.242622s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.242655s, 430344 KB] g=37, 1789 evaluated, 512 expanded, 19 reopened
[t=0.242767s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.242795s, 430344 KB] g=38, 1790 evaluated, 513 expanded, 19 reopened
[t=0.243553s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.243587s, 430344 KB] g=39, 1799 evaluated, 515 expanded, 19 reopened
[t=0.243699s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.243727s, 430344 KB] g=40, 1800 evaluated, 516 expanded, 19 reopened
[t=0.243912s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.243948s, 430344 KB] g=40, 1802 evaluated, 516 expanded, 19 reopened
[t=0.245157s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.245189s, 430344 KB] g=43, 1817 evaluated, 520 expanded, 19 reopened
[t=0.245609s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.245641s, 430344 KB] g=44, 1822 evaluated, 521 expanded, 19 reopened
[t=0.246776s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.246808s, 430344 KB] g=47, 1836 evaluated, 524 expanded, 19 reopened
[t=0.251096s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.251132s, 430344 KB] g=50, 1890 evaluated, 536 expanded, 19 reopened
[t=0.25235s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.252381s, 430344 KB] g=51, 1905 evaluated, 539 expanded, 19 reopened
[t=0.252964s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.252995s, 430344 KB] g=52, 1912 evaluated, 540 expanded, 19 reopened
[t=0.254048s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.25408s, 430344 KB] g=53, 1925 evaluated, 542 expanded, 19 reopened
[t=0.254424s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.254452s, 430344 KB] g=54, 1929 evaluated, 543 expanded, 19 reopened
[t=0.254564s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.254591s, 430344 KB] g=55, 1930 evaluated, 544 expanded, 19 reopened
[t=0.255257s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.255291s, 430344 KB] g=56, 1938 evaluated, 545 expanded, 19 reopened
[t=0.255561s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.255595s, 430344 KB] g=57, 1941 evaluated, 546 expanded, 19 reopened
[t=0.256414s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.256446s, 430344 KB] g=59, 1951 evaluated, 548 expanded, 19 reopened
[t=0.256712s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.256743s, 430344 KB] g=60, 1954 evaluated, 549 expanded, 19 reopened
[t=0.258026s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.25806s, 430476 KB] g=62, 1970 evaluated, 552 expanded, 19 reopened
[t=0.259364s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.259403s, 430476 KB] g=62, 1986 evaluated, 556 expanded, 19 reopened
[t=0.259748s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.25978s, 430476 KB] g=63, 1990 evaluated, 557 expanded, 19 reopened
[t=0.260047s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.260076s, 430476 KB] g=64, 1993 evaluated, 558 expanded, 19 reopened
[t=0.260338s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.260367s, 430476 KB] g=64, 1996 evaluated, 558 expanded, 19 reopened
[t=0.260631s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.26066s, 430476 KB] g=65, 1999 evaluated, 559 expanded, 19 reopened
[t=0.260849s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.260877s, 430476 KB] g=66, 2001 evaluated, 560 expanded, 19 reopened
[t=0.2613s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.261331s, 430476 KB] g=67, 2006 evaluated, 561 expanded, 19 reopened
[t=0.261442s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.261469s, 430476 KB] g=68, 2007 evaluated, 562 expanded, 19 reopened
[t=0.261659s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.261688s, 430476 KB] g=69, 2009 evaluated, 563 expanded, 19 reopened
[t=0.261875s, 430476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.261904s, 430476 KB] g=70, 2011 evaluated, 564 expanded, 19 reopened
[t=0.261936s, 430476 KB] Solution found!
[t=0.261963s, 430476 KB] Actual search time: 0.16743s
stack f c (1)
unstack a h (1)
put-down a (1)
unstack g i (1)
stack g a (1)
unstack i j (1)
put-down i (1)
unstack h l (1)
stack h g (1)
unstack j d (1)
put-down j (1)
pick-up l (1)
stack l i (1)
unstack d k (1)
stack d j (1)
unstack l i (1)
stack l d (1)
unstack f c (1)
stack f k (1)
unstack c b (1)
put-down c (1)
unstack b e (1)
stack b i (1)
pick-up e (1)
stack e c (1)
unstack b i (1)
stack b e (1)
unstack f k (1)
stack f l (1)
pick-up k (1)
stack k i (1)
unstack h g (1)
stack h f (1)
unstack g a (1)
put-down g (1)
pick-up a (1)
stack a k (1)
unstack b e (1)
put-down b (1)
unstack e c (1)
stack e b (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f l (1)
stack f k (1)
unstack l d (1)
put-down l (1)
unstack d j (1)
stack d c (1)
pick-up j (1)
stack j l (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack d c (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.261987s, 430476 KB] Plan length: 71 step(s).
[t=0.261987s, 430476 KB] Plan cost: 71
[t=0.261987s, 430476 KB] Expanded 566 state(s).
[t=0.261987s, 430476 KB] Reopened 19 state(s).
[t=0.261987s, 430476 KB] Evaluated 2012 state(s).
[t=0.261987s, 430476 KB] Evaluations: 2012
[t=0.261987s, 430476 KB] Generated 2797 state(s).
[t=0.261987s, 430476 KB] Dead ends: 0 state(s).
[t=0.261987s, 430476 KB] Expanded until last jump: 0 state(s).
[t=0.261987s, 430476 KB] Reopened until last jump: 0 state(s).
[t=0.261987s, 430476 KB] Evaluated until last jump: 1 state(s).
[t=0.261987s, 430476 KB] Generated until last jump: 0 state(s).
[t=0.261987s, 430476 KB] Number of registered states: 2012
[t=0.261987s, 430476 KB] Int hash set load factor: 2012/2048 = 0.982422
[t=0.261987s, 430476 KB] Int hash set resizes: 11
[t=0.261987s, 430476 KB] Search time: 0.238349s
[t=0.261987s, 430476 KB] Total time: 0.261987s
Solution found.
Peak memory: 430476 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p15.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.727e-05s, 424928 KB] reading input...
[t=0.00221451s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0231491s, 427172 KB] Building successor generator...done!
[t=0.0234239s, 427172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.023447s, 427172 KB] time for successor generation creation: 0.000170307s
[t=0.0234754s, 427172 KB] Variables: 25
[t=0.0234989s, 427172 KB] FactPairs: 182
[t=0.0235213s, 427172 KB] Bytes per state: 8
[t=0.0237228s, 427172 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0951708s, 429764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.0952251s, 429764 KB] g=0, 1 evaluated, 0 expanded
[t=0.0952513s, 429764 KB] f = 136, 1 evaluated, 0 expanded
[t=0.0952784s, 429764 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.095303s, 429764 KB] pruning method: none
[t=0.100438s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.100483s, 429812 KB] g=1, 4 evaluated, 1 expanded
[t=0.101586s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.101617s, 429812 KB] g=4, 19 evaluated, 5 expanded
[t=0.101789s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.101817s, 429812 KB] g=5, 21 evaluated, 6 expanded
[t=0.10333s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.103363s, 429812 KB] g=9, 42 evaluated, 12 expanded
[t=0.107314s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.10735s, 429948 KB] g=9, 98 evaluated, 29 expanded
[t=0.107664s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.107692s, 429948 KB] g=10, 102 evaluated, 30 expanded
[t=0.108207s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.108237s, 429948 KB] g=11, 109 evaluated, 31 expanded
[t=0.108342s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.108369s, 429948 KB] g=12, 110 evaluated, 32 expanded
[t=0.109503s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.109534s, 429948 KB] g=14, 126 evaluated, 35 expanded
[t=0.115476s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.115511s, 429948 KB] g=17, 211 evaluated, 60 expanded
[t=0.124584s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.12462s, 429948 KB] g=26, 341 evaluated, 94 expanded
[t=0.124723s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.124751s, 429948 KB] g=27, 342 evaluated, 95 expanded
[t=0.127668s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.127703s, 430080 KB] g=33, 383 evaluated, 108 expanded
[t=0.128504s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.128535s, 430080 KB] g=32, 394 evaluated, 112 expanded
[t=0.141708s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.141743s, 430080 KB] g=38, 581 evaluated, 173 expanded, 6 reopened
[t=0.143462s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.143496s, 430080 KB] g=42, 605 evaluated, 180 expanded, 6 reopened
[t=0.143594s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.143621s, 430080 KB] g=42, 606 evaluated, 180 expanded, 6 reopened
[t=0.145236s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.145268s, 430080 KB] g=44, 629 evaluated, 187 expanded, 6 reopened
[t=0.152962s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.152998s, 430212 KB] g=47, 739 evaluated, 220 expanded, 6 reopened
[t=0.15317s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.153198s, 430212 KB] g=48, 741 evaluated, 221 expanded, 6 reopened
[t=0.15344s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.153468s, 430212 KB] g=49, 744 evaluated, 222 expanded, 6 reopened
[t=0.153845s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.153875s, 430212 KB] g=50, 749 evaluated, 223 expanded, 6 reopened
[t=0.154405s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.154437s, 430212 KB] g=53, 756 evaluated, 226 expanded, 6 reopened
[t=0.155711s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.155742s, 430212 KB] g=51, 774 evaluated, 233 expanded, 6 reopened
[t=0.158414s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.158449s, 430212 KB] g=57, 812 evaluated, 246 expanded, 6 reopened
[t=0.158552s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.15858s, 430212 KB] g=58, 813 evaluated, 247 expanded, 6 reopened
[t=0.159728s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.159759s, 430212 KB] g=58, 829 evaluated, 253 expanded, 6 reopened
[t=0.160067s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.160104s, 430212 KB] g=59, 833 evaluated, 254 expanded, 6 reopened
[t=0.160415s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.160445s, 430212 KB] g=60, 837 evaluated, 255 expanded, 6 reopened
[t=0.161166s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.161197s, 430212 KB] g=62, 847 evaluated, 258 expanded, 6 reopened
[t=0.161436s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.161464s, 430212 KB] g=63, 850 evaluated, 259 expanded, 6 reopened
[t=0.161835s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.161865s, 430212 KB] g=64, 855 evaluated, 260 expanded, 6 reopened
[t=0.161973s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.162004s, 430212 KB] g=65, 856 evaluated, 261 expanded, 6 reopened
[t=0.162174s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.162202s, 430212 KB] g=66, 858 evaluated, 262 expanded, 6 reopened
[t=0.162373s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.162399s, 430212 KB] g=67, 860 evaluated, 263 expanded, 6 reopened
[t=0.162431s, 430212 KB] Solution found!
[t=0.162459s, 430212 KB] Actual search time: 0.0671508s
pick-up h (1)
stack h f (1)
unstack d c (1)
stack d j (1)
unstack i e (1)
stack i c (1)
unstack e l (1)
put-down e (1)
unstack h f (1)
stack h e (1)
unstack l a (1)
stack l d (1)
pick-up a (1)
stack a i (1)
unstack f b (1)
stack f l (1)
unstack b g (1)
put-down b (1)
unstack f l (1)
stack f b (1)
unstack a i (1)
stack a f (1)
unstack h e (1)
stack h l (1)
unstack i c (1)
stack i e (1)
unstack c k (1)
stack c i (1)
unstack h l (1)
stack h g (1)
pick-up k (1)
stack k l (1)
unstack c i (1)
put-down c (1)
unstack i e (1)
stack i c (1)
pick-up e (1)
stack e i (1)
unstack a f (1)
stack a h (1)
unstack f b (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack l d (1)
stack l e (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j d (1)
unstack i c (1)
put-down i (1)
unstack l e (1)
stack l c (1)
unstack j d (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.162484s, 430212 KB] Plan length: 68 step(s).
[t=0.162484s, 430212 KB] Plan cost: 68
[t=0.162484s, 430212 KB] Expanded 265 state(s).
[t=0.162484s, 430212 KB] Reopened 6 state(s).
[t=0.162484s, 430212 KB] Evaluated 861 state(s).
[t=0.162484s, 430212 KB] Evaluations: 861
[t=0.162484s, 430212 KB] Generated 1168 state(s).
[t=0.162484s, 430212 KB] Dead ends: 0 state(s).
[t=0.162484s, 430212 KB] Expanded until last jump: 0 state(s).
[t=0.162484s, 430212 KB] Reopened until last jump: 0 state(s).
[t=0.162484s, 430212 KB] Evaluated until last jump: 1 state(s).
[t=0.162484s, 430212 KB] Generated until last jump: 0 state(s).
[t=0.162484s, 430212 KB] Number of registered states: 861
[t=0.162484s, 430212 KB] Int hash set load factor: 861/1024 = 0.84082
[t=0.162484s, 430212 KB] Int hash set resizes: 10
[t=0.162484s, 430212 KB] Search time: 0.138762s
[t=0.162484s, 430212 KB] Total time: 0.162484s
Solution found.
Peak memory: 430212 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p16.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6459e-05s, 424928 KB] reading input...
[t=0.00219162s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0229192s, 427172 KB] Building successor generator...done!
[t=0.0231875s, 427172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0232109s, 427172 KB] time for successor generation creation: 0.000163867s
[t=0.0232387s, 427172 KB] Variables: 25
[t=0.023261s, 427172 KB] FactPairs: 182
[t=0.0232829s, 427172 KB] Bytes per state: 8
[t=0.0234744s, 427172 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0935806s, 429764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.093643s, 429764 KB] g=0, 1 evaluated, 0 expanded
[t=0.0936691s, 429764 KB] f = 136, 1 evaluated, 0 expanded
[t=0.0936958s, 429764 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 136
[t=0.0937198s, 429764 KB] pruning method: none
[t=0.0976129s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.097659s, 429812 KB] g=1, 2 evaluated, 1 expanded
[t=0.1002s, 429812 KB] f = 137, 23 evaluated, 6 expanded
[t=0.100717s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.10075s, 429812 KB] g=5, 30 evaluated, 8 expanded
[t=0.101744s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 124
[t=0.101777s, 429812 KB] g=6, 44 evaluated, 12 expanded
[t=0.106028s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.106062s, 429812 KB] g=5, 106 evaluated, 29 expanded
[t=0.106298s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.106325s, 429812 KB] g=6, 109 evaluated, 30 expanded
[t=0.106421s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.106447s, 429812 KB] g=6, 110 evaluated, 30 expanded
[t=0.106815s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.106845s, 429812 KB] g=7, 115 evaluated, 31 expanded
[t=0.107549s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 97
[t=0.107582s, 429944 KB] g=9, 125 evaluated, 33 expanded
[t=0.108156s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.108187s, 429944 KB] g=10, 133 evaluated, 34 expanded
[t=0.110564s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.110596s, 429944 KB] g=12, 168 evaluated, 41 expanded
[t=0.126869s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.126905s, 429944 KB] g=15, 412 evaluated, 102 expanded
[t=0.128336s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.128367s, 429944 KB] g=17, 433 evaluated, 106 expanded
[t=0.130337s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.130369s, 429944 KB] g=20, 462 evaluated, 111 expanded
[t=0.131404s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.131435s, 430076 KB] g=23, 477 evaluated, 114 expanded
[t=0.132783s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.132813s, 430076 KB] g=27, 496 evaluated, 118 expanded
[t=0.138995s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.139029s, 430076 KB] g=30, 588 evaluated, 136 expanded
[t=0.140799s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.140829s, 430076 KB] g=33, 614 evaluated, 143 expanded
[t=0.141607s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.14164s, 430076 KB] g=33, 625 evaluated, 146 expanded
[t=0.142134s, 430076 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.142164s, 430076 KB] g=34, 632 evaluated, 147 expanded
[t=0.145738s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.145772s, 430208 KB] g=32, 685 evaluated, 162 expanded
[t=0.152726s, 430208 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.152761s, 430208 KB] g=31, 788 evaluated, 188 expanded
[t=0.158811s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.158849s, 430340 KB] g=36, 878 evaluated, 207 expanded
[t=0.159153s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.15918s, 430340 KB] g=37, 882 evaluated, 208 expanded
[t=0.159543s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.15957s, 430340 KB] g=38, 887 evaluated, 209 expanded
[t=0.159934s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.159965s, 430340 KB] g=39, 892 evaluated, 210 expanded
[t=0.16314s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.163173s, 430340 KB] g=43, 939 evaluated, 221 expanded
[t=0.168165s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.168199s, 430340 KB] g=46, 1013 evaluated, 240 expanded
[t=0.168366s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.168393s, 430340 KB] g=47, 1015 evaluated, 241 expanded
[t=0.168774s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.168804s, 430340 KB] g=48, 1019 evaluated, 242 expanded
[t=0.169105s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.169133s, 430340 KB] g=49, 1023 evaluated, 243 expanded
[t=0.169237s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.169264s, 430340 KB] g=49, 1024 evaluated, 243 expanded
[t=0.169435s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.169464s, 430340 KB] g=50, 1026 evaluated, 244 expanded
[t=0.169695s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.169724s, 430340 KB] g=51, 1029 evaluated, 245 expanded
[t=0.171488s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.171519s, 430340 KB] g=53, 1055 evaluated, 251 expanded
[t=0.17255s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.172577s, 430340 KB] g=53, 1070 evaluated, 255 expanded
[t=0.172937s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.172967s, 430340 KB] g=54, 1075 evaluated, 256 expanded
[t=0.173214s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.173243s, 430340 KB] g=55, 1078 evaluated, 257 expanded
[t=0.173471s, 430340 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.173497s, 430340 KB] g=55, 1081 evaluated, 257 expanded
[t=0.173727s, 430472 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.173759s, 430472 KB] g=56, 1084 evaluated, 258 expanded
[t=0.173926s, 430472 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.173953s, 430472 KB] g=57, 1086 evaluated, 259 expanded
[t=0.174315s, 430472 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.174344s, 430472 KB] g=58, 1091 evaluated, 260 expanded
[t=0.174442s, 430472 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.174469s, 430472 KB] g=59, 1092 evaluated, 261 expanded
[t=0.174632s, 430472 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.174658s, 430472 KB] g=60, 1094 evaluated, 262 expanded
[t=0.174823s, 430472 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.174849s, 430472 KB] g=61, 1096 evaluated, 263 expanded
[t=0.17488s, 430472 KB] Solution found!
[t=0.174906s, 430472 KB] Actual search time: 0.0811822s
unstack g b (1)
put-down g (1)
unstack e f (1)
put-down e (1)
unstack f h (1)
stack f c (1)
unstack b a (1)
stack b i (1)
unstack h k (1)
stack h g (1)
unstack b i (1)
put-down b (1)
unstack f c (1)
stack f k (1)
pick-up b (1)
stack b i (1)
unstack c d (1)
put-down c (1)
pick-up e (1)
stack e c (1)
unstack b i (1)
put-down b (1)
pick-up i (1)
stack i e (1)
pick-up a (1)
stack a f (1)
unstack i e (1)
put-down i (1)
unstack e c (1)
stack e i (1)
unstack d j (1)
stack d c (1)
unstack j l (1)
stack j b (1)
pick-up l (1)
stack l d (1)
unstack a f (1)
stack a h (1)
unstack f k (1)
stack f j (1)
pick-up k (1)
stack k l (1)
unstack f j (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack j b (1)
stack j e (1)
unstack d c (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.17493s, 430472 KB] Plan length: 62 step(s).
[t=0.17493s, 430472 KB] Plan cost: 62
[t=0.17493s, 430472 KB] Expanded 265 state(s).
[t=0.17493s, 430472 KB] Reopened 0 state(s).
[t=0.17493s, 430472 KB] Evaluated 1097 state(s).
[t=0.17493s, 430472 KB] Evaluations: 1097
[t=0.17493s, 430472 KB] Generated 1405 state(s).
[t=0.17493s, 430472 KB] Dead ends: 0 state(s).
[t=0.17493s, 430472 KB] Expanded until last jump: 6 state(s).
[t=0.17493s, 430472 KB] Reopened until last jump: 0 state(s).
[t=0.17493s, 430472 KB] Evaluated until last jump: 23 state(s).
[t=0.17493s, 430472 KB] Generated until last jump: 27 state(s).
[t=0.17493s, 430472 KB] Number of registered states: 1097
[t=0.17493s, 430472 KB] Int hash set load factor: 1097/2048 = 0.535645
[t=0.17493s, 430472 KB] Int hash set resizes: 11
[t=0.17493s, 430472 KB] Search time: 0.151456s
[t=0.17493s, 430472 KB] Total time: 0.17493s
Solution found.
Peak memory: 430472 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p17.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.025s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.103s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6901e-05s, 424928 KB] reading input...
[t=0.00221443s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0230718s, 427176 KB] Building successor generator...done!
[t=0.0233378s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0233617s, 427176 KB] time for successor generation creation: 0.000162246s
[t=0.0233899s, 427176 KB] Variables: 25
[t=0.0234127s, 427176 KB] FactPairs: 182
[t=0.0234347s, 427176 KB] Bytes per state: 8
[t=0.0236404s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0950378s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0950914s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0951171s, 429768 KB] f = 134, 1 evaluated, 0 expanded
[t=0.0951453s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.0951698s, 429768 KB] pruning method: none
[t=0.100387s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.100434s, 429816 KB] g=1, 5 evaluated, 1 expanded
[t=0.100612s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.100643s, 429816 KB] g=2, 7 evaluated, 2 expanded
[t=0.101108s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.101141s, 429816 KB] g=4, 13 evaluated, 4 expanded
[t=0.101308s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.101335s, 429816 KB] g=4, 15 evaluated, 4 expanded
[t=0.102407s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.102438s, 429816 KB] g=6, 30 evaluated, 9 expanded
[t=0.103308s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.103337s, 429816 KB] g=6, 42 evaluated, 13 expanded
[t=0.10365s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.103678s, 429816 KB] g=8, 46 evaluated, 15 expanded
[t=0.104198s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.104229s, 429816 KB] g=10, 53 evaluated, 18 expanded
[t=0.105318s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.105361s, 429816 KB] g=13, 68 evaluated, 23 expanded
[t=0.105536s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.105565s, 429816 KB] g=14, 70 evaluated, 24 expanded
[t=0.113219s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.113255s, 429948 KB] g=22, 180 evaluated, 53 expanded, 1 reopened
[t=0.113708s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.113739s, 429948 KB] g=24, 186 evaluated, 55 expanded, 1 reopened
[t=0.117636s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.117671s, 429948 KB] g=30, 242 evaluated, 73 expanded, 1 reopened
[t=0.118189s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.11822s, 429948 KB] g=32, 249 evaluated, 75 expanded, 1 reopened
[t=0.118596s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.118628s, 429948 KB] g=34, 254 evaluated, 77 expanded, 1 reopened
[t=0.133954s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.133991s, 430080 KB] g=36, 476 evaluated, 146 expanded, 4 reopened
[t=0.149985s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.150022s, 430212 KB] g=37, 705 evaluated, 232 expanded, 23 reopened
[t=0.150542s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.150573s, 430212 KB] g=39, 712 evaluated, 234 expanded, 23 reopened
[t=0.151292s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.151323s, 430212 KB] g=41, 722 evaluated, 236 expanded, 23 reopened
[t=0.151557s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.151585s, 430212 KB] g=41, 725 evaluated, 236 expanded, 23 reopened
[t=0.151822s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.151852s, 430212 KB] g=42, 728 evaluated, 237 expanded, 23 reopened
[t=0.152155s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.152183s, 430212 KB] g=43, 732 evaluated, 238 expanded, 23 reopened
[t=0.152624s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.152654s, 430212 KB] g=44, 738 evaluated, 239 expanded, 23 reopened
[t=0.152904s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.152936s, 430212 KB] g=45, 741 evaluated, 240 expanded, 23 reopened
[t=0.153316s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.153347s, 430212 KB] g=47, 746 evaluated, 242 expanded, 23 reopened
[t=0.153655s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.153682s, 430212 KB] g=48, 750 evaluated, 243 expanded, 23 reopened
[t=0.153856s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.153883s, 430212 KB] g=49, 752 evaluated, 244 expanded, 23 reopened
[t=0.154189s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.154217s, 430212 KB] g=50, 756 evaluated, 245 expanded, 23 reopened
[t=0.154728s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.154758s, 430212 KB] g=52, 763 evaluated, 247 expanded, 23 reopened
[t=0.154859s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.154886s, 430212 KB] g=53, 764 evaluated, 248 expanded, 23 reopened
[t=0.155119s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.155146s, 430212 KB] g=53, 767 evaluated, 248 expanded, 23 reopened
[t=0.155383s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.155413s, 430212 KB] g=54, 770 evaluated, 249 expanded, 23 reopened
[t=0.155584s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.155611s, 430212 KB] g=55, 772 evaluated, 250 expanded, 23 reopened
[t=0.155983s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.156013s, 430212 KB] g=56, 777 evaluated, 251 expanded, 23 reopened
[t=0.156114s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.156141s, 430212 KB] g=57, 778 evaluated, 252 expanded, 23 reopened
[t=0.156309s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.156336s, 430212 KB] g=58, 780 evaluated, 253 expanded, 23 reopened
[t=0.156505s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.156537s, 430212 KB] g=59, 782 evaluated, 254 expanded, 23 reopened
[t=0.156569s, 430212 KB] Solution found!
[t=0.156595s, 430212 KB] Actual search time: 0.0614216s
unstack i c (1)
stack i d (1)
unstack b g (1)
stack b i (1)
unstack g k (1)
stack g h (1)
pick-up c (1)
stack c g (1)
unstack b i (1)
put-down b (1)
unstack c g (1)
stack c b (1)
unstack k a (1)
put-down k (1)
unstack i d (1)
stack i a (1)
unstack d e (1)
stack d k (1)
unstack i a (1)
stack i d (1)
pick-up e (1)
stack e i (1)
pick-up a (1)
stack a e (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack f j (1)
put-down f (1)
unstack a e (1)
stack a h (1)
pick-up f (1)
stack f a (1)
unstack e i (1)
put-down e (1)
unstack i d (1)
stack i c (1)
unstack d k (1)
put-down d (1)
pick-up k (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j l (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack i c (1)
put-down i (1)
unstack c b (1)
put-down c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.15662s, 430212 KB] Plan length: 60 step(s).
[t=0.15662s, 430212 KB] Plan cost: 60
[t=0.15662s, 430212 KB] Expanded 256 state(s).
[t=0.15662s, 430212 KB] Reopened 23 state(s).
[t=0.15662s, 430212 KB] Evaluated 783 state(s).
[t=0.15662s, 430212 KB] Evaluations: 783
[t=0.15662s, 430212 KB] Generated 1174 state(s).
[t=0.15662s, 430212 KB] Dead ends: 0 state(s).
[t=0.15662s, 430212 KB] Expanded until last jump: 0 state(s).
[t=0.15662s, 430212 KB] Reopened until last jump: 0 state(s).
[t=0.15662s, 430212 KB] Evaluated until last jump: 1 state(s).
[t=0.15662s, 430212 KB] Generated until last jump: 0 state(s).
[t=0.15662s, 430212 KB] Number of registered states: 783
[t=0.15662s, 430212 KB] Int hash set load factor: 783/1024 = 0.764648
[t=0.15662s, 430212 KB] Int hash set resizes: 10
[t=0.15662s, 430212 KB] Search time: 0.13298s
[t=0.15662s, 430212 KB] Total time: 0.15662s
Solution found.
Peak memory: 430212 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p18.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.103s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8581e-05s, 424928 KB] reading input...
[t=0.00211382s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0230518s, 427172 KB] Building successor generator...done!
[t=0.0233253s, 427172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0233484s, 427172 KB] time for successor generation creation: 0.000170487s
[t=0.0233764s, 427172 KB] Variables: 25
[t=0.023399s, 427172 KB] FactPairs: 182
[t=0.023421s, 427172 KB] Bytes per state: 8
[t=0.0236079s, 427172 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0940938s, 429764 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.0941482s, 429764 KB] g=0, 1 evaluated, 0 expanded
[t=0.0941741s, 429764 KB] f = 94, 1 evaluated, 0 expanded
[t=0.0942025s, 429764 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.0942265s, 429764 KB] pruning method: none
[t=0.0993326s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.0993765s, 429812 KB] g=1, 4 evaluated, 1 expanded
[t=0.0994857s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.0995172s, 429812 KB] g=2, 5 evaluated, 2 expanded
[t=0.0996161s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.0996465s, 429812 KB] g=2, 6 evaluated, 2 expanded
[t=0.0998926s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.099925s, 429812 KB] g=3, 9 evaluated, 3 expanded
[t=0.100448s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.10048s, 429812 KB] g=5, 16 evaluated, 6 expanded
[t=0.100802s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.100832s, 429812 KB] g=6, 20 evaluated, 7 expanded
[t=0.101215s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.101244s, 429812 KB] g=7, 25 evaluated, 9 expanded
[t=0.101622s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.101655s, 429812 KB] g=9, 30 evaluated, 11 expanded
[t=0.102034s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.102065s, 429812 KB] g=10, 35 evaluated, 12 expanded
[t=0.102308s, 429812 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.102348s, 429812 KB] g=11, 38 evaluated, 13 expanded
[t=0.109567s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.109604s, 429944 KB] g=17, 141 evaluated, 43 expanded
[t=0.109843s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.109872s, 429944 KB] g=18, 144 evaluated, 44 expanded
[t=0.110109s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.110139s, 429944 KB] g=19, 147 evaluated, 45 expanded
[t=0.110448s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.110476s, 429944 KB] g=19, 151 evaluated, 47 expanded
[t=0.110851s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.110882s, 429944 KB] g=20, 156 evaluated, 49 expanded
[t=0.111119s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.111147s, 429944 KB] g=21, 159 evaluated, 50 expanded
[t=0.111382s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.111409s, 429944 KB] g=22, 162 evaluated, 51 expanded
[t=0.111784s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.111814s, 429944 KB] g=24, 167 evaluated, 53 expanded
[t=0.112053s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.112081s, 429944 KB] g=25, 170 evaluated, 54 expanded
[t=0.112181s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.11221s, 429944 KB] g=26, 171 evaluated, 55 expanded
[t=0.112447s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.112475s, 429944 KB] g=27, 174 evaluated, 56 expanded
[t=0.112644s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.112673s, 429944 KB] g=28, 176 evaluated, 57 expanded
[t=0.1132s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.113233s, 429944 KB] g=30, 183 evaluated, 59 expanded
[t=0.113753s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.113784s, 429944 KB] g=31, 190 evaluated, 62 expanded
[t=0.11402s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.114048s, 429944 KB] g=32, 193 evaluated, 63 expanded
[t=0.114148s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.11418s, 429944 KB] g=33, 194 evaluated, 64 expanded
[t=0.114351s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.114379s, 429944 KB] g=34, 196 evaluated, 65 expanded
[t=0.114547s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.114575s, 429944 KB] g=35, 198 evaluated, 66 expanded
[t=0.114675s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.114702s, 429944 KB] g=36, 199 evaluated, 67 expanded
[t=0.114871s, 429944 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.114898s, 429944 KB] g=37, 201 evaluated, 68 expanded
[t=0.114929s, 429944 KB] Solution found!
[t=0.114955s, 429944 KB] Actual search time: 0.0207249s
unstack f h (1)
stack f e (1)
unstack h g (1)
stack h f (1)
unstack g a (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k l (1)
stack k e (1)
unstack l j (1)
stack l d (1)
pick-up j (1)
stack j l (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d i (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.114981s, 429944 KB] Plan length: 38 step(s).
[t=0.114981s, 429944 KB] Plan cost: 38
[t=0.114981s, 429944 KB] Expanded 70 state(s).
[t=0.114981s, 429944 KB] Reopened 0 state(s).
[t=0.114981s, 429944 KB] Evaluated 202 state(s).
[t=0.114981s, 429944 KB] Evaluations: 202
[t=0.114981s, 429944 KB] Generated 271 state(s).
[t=0.114981s, 429944 KB] Dead ends: 0 state(s).
[t=0.114981s, 429944 KB] Expanded until last jump: 0 state(s).
[t=0.114981s, 429944 KB] Reopened until last jump: 0 state(s).
[t=0.114981s, 429944 KB] Evaluated until last jump: 1 state(s).
[t=0.114981s, 429944 KB] Generated until last jump: 0 state(s).
[t=0.114981s, 429944 KB] Number of registered states: 202
[t=0.114981s, 429944 KB] Int hash set load factor: 202/256 = 0.789062
[t=0.114981s, 429944 KB] Int hash set resizes: 8
[t=0.114981s, 429944 KB] Search time: 0.0913734s
[t=0.114981s, 429944 KB] Total time: 0.114981s
Solution found.
Peak memory: 429944 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p19.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6816e-05s, 424928 KB] reading input...
[t=0.00214395s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0230093s, 427176 KB] Building successor generator...done!
[t=0.0232835s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0233071s, 427176 KB] time for successor generation creation: 0.000166836s
[t=0.0233351s, 427176 KB] Variables: 25
[t=0.0233576s, 427176 KB] FactPairs: 182
[t=0.0233795s, 427176 KB] Bytes per state: 8
[t=0.0235691s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0946401s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0946951s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0947213s, 429768 KB] f = 118, 1 evaluated, 0 expanded
[t=0.0947492s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.0947735s, 429768 KB] pruning method: none
[t=0.0998603s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 117
[t=0.0999049s, 429816 KB] g=1, 3 evaluated, 1 expanded
[t=0.100015s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.100044s, 429816 KB] g=1, 4 evaluated, 1 expanded
[t=0.100236s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.100268s, 429816 KB] g=2, 6 evaluated, 2 expanded
[t=0.100533s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.100575s, 429816 KB] g=3, 9 evaluated, 3 expanded
[t=0.100836s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.100868s, 429816 KB] g=4, 12 evaluated, 4 expanded
[t=0.101991s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.102026s, 429816 KB] g=7, 26 evaluated, 9 expanded
[t=0.10244s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.102474s, 429816 KB] g=8, 31 evaluated, 10 expanded
[t=0.102967s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.102999s, 429816 KB] g=10, 37 evaluated, 12 expanded
[t=0.10378s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.103812s, 429816 KB] g=12, 47 evaluated, 14 expanded
[t=0.10407s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.104099s, 429816 KB] g=13, 50 evaluated, 15 expanded
[t=0.104432s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.104463s, 429816 KB] g=14, 54 evaluated, 16 expanded
[t=0.104872s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.104903s, 429816 KB] g=16, 59 evaluated, 18 expanded
[t=0.105008s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.105036s, 429816 KB] g=16, 60 evaluated, 18 expanded
[t=0.105294s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.105326s, 429816 KB] g=17, 63 evaluated, 19 expanded
[t=0.105603s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.105637s, 429816 KB] g=18, 66 evaluated, 20 expanded
[t=0.106959s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.106994s, 429948 KB] g=21, 83 evaluated, 24 expanded
[t=0.126154s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.126191s, 430080 KB] g=23, 339 evaluated, 110 expanded, 5 reopened
[t=0.139548s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.139584s, 430080 KB] g=35, 517 evaluated, 173 expanded, 8 reopened
[t=0.155969s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.156005s, 430212 KB] g=36, 730 evaluated, 267 expanded, 21 reopened
[t=0.19035s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.190393s, 430212 KB] g=33, 1177 evaluated, 540 expanded, 97 reopened
[t=0.191399s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.191432s, 430212 KB] g=36, 1190 evaluated, 543 expanded, 97 reopened
[t=0.191764s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.191793s, 430212 KB] g=37, 1194 evaluated, 544 expanded, 97 reopened
[t=0.192942s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.192974s, 430212 KB] g=39, 1209 evaluated, 547 expanded, 97 reopened
[t=0.193233s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.193265s, 430212 KB] g=40, 1212 evaluated, 548 expanded, 97 reopened
[t=0.193979s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.194014s, 430344 KB] g=42, 1221 evaluated, 550 expanded, 97 reopened
[t=0.201757s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.201792s, 430344 KB] g=46, 1325 evaluated, 573 expanded, 97 reopened
[t=0.202197s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.202227s, 430344 KB] g=47, 1330 evaluated, 574 expanded, 97 reopened
[t=0.202701s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.202733s, 430344 KB] g=48, 1336 evaluated, 575 expanded, 97 reopened
[t=0.203065s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.203098s, 430344 KB] g=49, 1340 evaluated, 576 expanded, 97 reopened
[t=0.203352s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.203383s, 430344 KB] g=50, 1343 evaluated, 577 expanded, 97 reopened
[t=0.203781s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.203811s, 430344 KB] g=51, 1348 evaluated, 578 expanded, 97 reopened
[t=0.204207s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.204236s, 430344 KB] g=52, 1353 evaluated, 579 expanded, 97 reopened
[t=0.204855s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.204886s, 430344 KB] g=54, 1361 evaluated, 581 expanded, 97 reopened
[t=0.204995s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.205023s, 430344 KB] g=55, 1362 evaluated, 582 expanded, 97 reopened
[t=0.20527s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.205304s, 430344 KB] g=55, 1365 evaluated, 582 expanded, 97 reopened
[t=0.205563s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.205596s, 430344 KB] g=56, 1368 evaluated, 583 expanded, 97 reopened
[t=0.205779s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.205808s, 430344 KB] g=57, 1370 evaluated, 584 expanded, 97 reopened
[t=0.206206s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.206238s, 430344 KB] g=58, 1375 evaluated, 585 expanded, 97 reopened
[t=0.206346s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.206374s, 430344 KB] g=59, 1376 evaluated, 586 expanded, 97 reopened
[t=0.206555s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.206584s, 430344 KB] g=60, 1378 evaluated, 587 expanded, 97 reopened
[t=0.206765s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.206796s, 430344 KB] g=61, 1380 evaluated, 588 expanded, 97 reopened
[t=0.206828s, 430344 KB] Solution found!
[t=0.206854s, 430344 KB] Actual search time: 0.112077s
unstack h k (1)
stack h b (1)
unstack k g (1)
put-down k (1)
unstack h b (1)
stack h g (1)
unstack b f (1)
put-down b (1)
unstack f e (1)
stack f b (1)
pick-up k (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack a c (1)
stack a h (1)
unstack c j (1)
stack c a (1)
unstack j i (1)
stack j l (1)
unstack c a (1)
stack c i (1)
unstack j l (1)
put-down j (1)
unstack e k (1)
stack e l (1)
pick-up j (1)
stack j e (1)
unstack c i (1)
stack c j (1)
unstack i d (1)
put-down i (1)
unstack c j (1)
stack c i (1)
unstack k f (1)
stack k d (1)
unstack f b (1)
stack f k (1)
unstack c i (1)
stack c b (1)
unstack j e (1)
stack j c (1)
unstack f k (1)
stack f a (1)
unstack k d (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j c (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.206878s, 430344 KB] Plan length: 62 step(s).
[t=0.206878s, 430344 KB] Plan cost: 62
[t=0.206878s, 430344 KB] Expanded 590 state(s).
[t=0.206878s, 430344 KB] Reopened 97 state(s).
[t=0.206878s, 430344 KB] Evaluated 1381 state(s).
[t=0.206878s, 430344 KB] Evaluations: 1381
[t=0.206878s, 430344 KB] Generated 2382 state(s).
[t=0.206878s, 430344 KB] Dead ends: 0 state(s).
[t=0.206878s, 430344 KB] Expanded until last jump: 0 state(s).
[t=0.206878s, 430344 KB] Reopened until last jump: 0 state(s).
[t=0.206878s, 430344 KB] Evaluated until last jump: 1 state(s).
[t=0.206878s, 430344 KB] Generated until last jump: 0 state(s).
[t=0.206878s, 430344 KB] Number of registered states: 1381
[t=0.206878s, 430344 KB] Int hash set load factor: 1381/2048 = 0.674316
[t=0.206878s, 430344 KB] Int hash set resizes: 11
[t=0.206878s, 430344 KB] Search time: 0.18331s
[t=0.206878s, 430344 KB] Total time: 0.206878s
Solution found.
Peak memory: 430344 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p20.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7089e-05s, 424928 KB] reading input...
[t=0.00216755s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0231705s, 427176 KB] Building successor generator...done!
[t=0.0234663s, 427176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0234909s, 427176 KB] time for successor generation creation: 0.00018613s
[t=0.0235198s, 427176 KB] Variables: 25
[t=0.023543s, 427176 KB] FactPairs: 182
[t=0.0235653s, 427176 KB] Bytes per state: 8
[t=0.0237543s, 427176 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0948836s, 429768 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.0949352s, 429768 KB] g=0, 1 evaluated, 0 expanded
[t=0.0949611s, 429768 KB] f = 156, 1 evaluated, 0 expanded
[t=0.0949882s, 429768 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.0950218s, 429768 KB] pruning method: none
[t=0.0989576s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.0990044s, 429816 KB] g=1, 2 evaluated, 1 expanded
[t=0.100465s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.100503s, 429816 KB] g=1, 7 evaluated, 1 expanded
[t=0.100747s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 130
[t=0.100779s, 429816 KB] g=2, 10 evaluated, 2 expanded
[t=0.100948s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 129
[t=0.100976s, 429816 KB] g=2, 12 evaluated, 2 expanded
[t=0.101279s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.101312s, 429816 KB] g=3, 16 evaluated, 3 expanded
[t=0.101964s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.101995s, 429816 KB] g=3, 25 evaluated, 5 expanded
[t=0.102507s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.102538s, 429816 KB] g=4, 32 evaluated, 6 expanded
[t=0.103186s, 429816 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 94
[t=0.103217s, 429816 KB] g=6, 41 evaluated, 8 expanded
[t=0.107385s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 93
[t=0.10742s, 429948 KB] g=12, 101 evaluated, 23 expanded
[t=0.110142s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.110173s, 429948 KB] g=9, 140 evaluated, 33 expanded
[t=0.120793s, 429948 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.120828s, 429948 KB] g=13, 293 evaluated, 83 expanded, 4 reopened
[t=0.149207s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.149245s, 430212 KB] g=16, 704 evaluated, 237 expanded, 27 reopened
[t=0.149758s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.149789s, 430212 KB] g=17, 711 evaluated, 239 expanded, 27 reopened
[t=0.150027s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.150055s, 430212 KB] g=18, 714 evaluated, 240 expanded, 27 reopened
[t=0.150358s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.150388s, 430212 KB] g=19, 718 evaluated, 241 expanded, 27 reopened
[t=0.151938s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.151979s, 430212 KB] g=22, 740 evaluated, 248 expanded, 27 reopened
[t=0.152969s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.153s, 430212 KB] g=25, 754 evaluated, 252 expanded, 27 reopened
[t=0.153097s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.153124s, 430212 KB] g=25, 755 evaluated, 252 expanded, 27 reopened
[t=0.15603s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.156063s, 430212 KB] g=27, 797 evaluated, 265 expanded, 27 reopened
[t=0.162329s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.162365s, 430212 KB] g=30, 888 evaluated, 292 expanded, 27 reopened
[t=0.162537s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.162565s, 430212 KB] g=31, 890 evaluated, 293 expanded, 27 reopened
[t=0.162799s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.162829s, 430212 KB] g=32, 893 evaluated, 294 expanded, 27 reopened
[t=0.163197s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.163227s, 430212 KB] g=33, 898 evaluated, 295 expanded, 27 reopened
[t=0.16375s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.163779s, 430212 KB] g=36, 905 evaluated, 298 expanded, 27 reopened
[t=0.165038s, 430212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.165069s, 430212 KB] g=34, 923 evaluated, 305 expanded, 27 reopened
[t=0.167722s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.167759s, 430344 KB] g=40, 961 evaluated, 318 expanded, 27 reopened
[t=0.167861s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.167888s, 430344 KB] g=41, 962 evaluated, 319 expanded, 27 reopened
[t=0.169023s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.169053s, 430344 KB] g=41, 978 evaluated, 325 expanded, 27 reopened
[t=0.169359s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.169389s, 430344 KB] g=42, 982 evaluated, 326 expanded, 27 reopened
[t=0.169692s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.169719s, 430344 KB] g=43, 986 evaluated, 327 expanded, 27 reopened
[t=0.170438s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.170476s, 430344 KB] g=45, 996 evaluated, 330 expanded, 27 reopened
[t=0.170715s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.170742s, 430344 KB] g=46, 999 evaluated, 331 expanded, 27 reopened
[t=0.171114s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 3
[t=0.171142s, 430344 KB] g=47, 1004 evaluated, 332 expanded, 27 reopened
[t=0.171243s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.171277s, 430344 KB] g=48, 1005 evaluated, 333 expanded, 27 reopened
[t=0.171447s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.171473s, 430344 KB] g=49, 1007 evaluated, 334 expanded, 27 reopened
[t=0.171644s, 430344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T20.09.45.013127/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.171674s, 430344 KB] g=50, 1009 evaluated, 335 expanded, 27 reopened
[t=0.171706s, 430344 KB] Solution found!
[t=0.171732s, 430344 KB] Actual search time: 0.0767064s
put-down b (1)
pick-up f (1)
stack f b (1)
unstack k h (1)
stack k f (1)
unstack a l (1)
stack a k (1)
pick-up h (1)
stack h a (1)
unstack d i (1)
stack d j (1)
unstack l e (1)
stack l h (1)
unstack e g (1)
stack e i (1)
unstack l h (1)
stack l d (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k e (1)
unstack f b (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack l d (1)
stack l e (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j d (1)
unstack i c (1)
put-down i (1)
unstack l e (1)
stack l c (1)
unstack j d (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.171757s, 430344 KB] Plan length: 51 step(s).
[t=0.171757s, 430344 KB] Plan cost: 51
[t=0.171757s, 430344 KB] Expanded 337 state(s).
[t=0.171757s, 430344 KB] Reopened 27 state(s).
[t=0.171757s, 430344 KB] Evaluated 1010 state(s).
[t=0.171757s, 430344 KB] Evaluations: 1010
[t=0.171757s, 430344 KB] Generated 1551 state(s).
[t=0.171757s, 430344 KB] Dead ends: 0 state(s).
[t=0.171757s, 430344 KB] Expanded until last jump: 0 state(s).
[t=0.171757s, 430344 KB] Reopened until last jump: 0 state(s).
[t=0.171757s, 430344 KB] Evaluated until last jump: 1 state(s).
[t=0.171757s, 430344 KB] Generated until last jump: 0 state(s).
[t=0.171757s, 430344 KB] Number of registered states: 1010
[t=0.171757s, 430344 KB] Int hash set load factor: 1010/1024 = 0.986328
[t=0.171757s, 430344 KB] Int hash set resizes: 10
[t=0.171757s, 430344 KB] Search time: 0.148004s
[t=0.171757s, 430344 KB] Total time: 0.171757s
Solution found.
Peak memory: 430344 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.021209
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 0 test success: 20 of 20 (100.0%)

Max test success (fold 0): 100.0%
Min test success (fold 0): 100.0%
Avg test success: 100.0%
