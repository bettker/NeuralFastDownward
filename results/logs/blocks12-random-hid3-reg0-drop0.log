OUTPUT: results/train-pytorch-2021.07.24T21.10.13.739122

---------- FOLD 1/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=176, bias=True)
  (hid2): Linear(in_features=176, out_features=183, bias=True)
  (hid3): Linear(in_features=183, out_features=190, bias=True)
  (opt): Linear(in_features=190, out_features=197, bias=True)
)

Epoch 1 | avg_train_loss=0.097802/home/rvbettker/.local/lib/python3.6/site-packages/torch/autograd/__init__.py:149: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 10010). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at  /pytorch/c10/cuda/CUDAFunctions.cpp:115.)
  allow_unreachable=True, accumulate_grad=True)  # allow_unreachable flag
 | avg_val_loss=0.091279
Epoch 2 | avg_train_loss=0.070682 | avg_val_loss=0.043384
Epoch 3 | avg_train_loss=0.038371 | avg_val_loss=0.034953
Epoch 4 | avg_train_loss=0.034034 | avg_val_loss=0.033176
Epoch 5 | avg_train_loss=0.032507 | avg_val_loss=0.032285
Epoch 6 | avg_train_loss=0.031646 | avg_val_loss=0.031640
Epoch 7 | avg_train_loss=0.031035 | avg_val_loss=0.031116
Epoch 8 | avg_train_loss=0.030531 | avg_val_loss=0.030671
Epoch 9 | avg_train_loss=0.030075 | avg_val_loss=0.030266
Epoch 10 | avg_train_loss=0.029645 | avg_val_loss=0.029854
Epoch 11 | avg_train_loss=0.029235 | avg_val_loss=0.029427
Epoch 12 | avg_train_loss=0.028844 | avg_val_loss=0.029006
Epoch 13 | avg_train_loss=0.028465 | avg_val_loss=0.028607
Epoch 14 | avg_train_loss=0.028084 | avg_val_loss=0.028219
Epoch 15 | avg_train_loss=0.027681 | avg_val_loss=0.027819
Epoch 16 | avg_train_loss=0.027239 | avg_val_loss=0.027389
Epoch 17 | avg_train_loss=0.026764 | avg_val_loss=0.026936
Epoch 18 | avg_train_loss=0.026280 | avg_val_loss=0.026491
Epoch 19 | avg_train_loss=0.025794 | avg_val_loss=0.026059
Epoch 20 | avg_train_loss=0.025302 | avg_val_loss=0.025642
Epoch 21 | avg_train_loss=0.024813 | avg_val_loss=0.025253
Epoch 22 | avg_train_loss=0.024348 | avg_val_loss=0.024890
Epoch 23 | avg_train_loss=0.023918 | avg_val_loss=0.024546
Epoch 24 | avg_train_loss=0.023525 | avg_val_loss=0.024219
Epoch 25 | avg_train_loss=0.023166 | avg_val_loss=0.023913
Epoch 26 | avg_train_loss=0.022833 | avg_val_loss=0.023629
Epoch 27 | avg_train_loss=0.022522 | avg_val_loss=0.023367
Epoch 28 | avg_train_loss=0.022227 | avg_val_loss=0.023126
Epoch 29 | avg_train_loss=0.021946 | avg_val_loss=0.022904
Epoch 30 | avg_train_loss=0.021676 | avg_val_loss=0.022700
Epoch 31 | avg_train_loss=0.021417 | avg_val_loss=0.022514
Epoch 32 | avg_train_loss=0.021166 | avg_val_loss=0.022345
Epoch 33 | avg_train_loss=0.020925 | avg_val_loss=0.022190
Epoch 34 | avg_train_loss=0.020691 | avg_val_loss=0.022049
Epoch 35 | avg_train_loss=0.020466 | avg_val_loss=0.021920
Epoch 36 | avg_train_loss=0.020249 | avg_val_loss=0.021803
Epoch 37 | avg_train_loss=0.020039 | avg_val_loss=0.021696
Epoch 38 | avg_train_loss=0.019837 | avg_val_loss=0.021597
Epoch 39 | avg_train_loss=0.019641 | avg_val_loss=0.021506
Epoch 40 | avg_train_loss=0.019451 | avg_val_loss=0.021421
Epoch 41 | avg_train_loss=0.019267 | avg_val_loss=0.021345
Epoch 42 | avg_train_loss=0.019088 | avg_val_loss=0.021278
Epoch 43 | avg_train_loss=0.018915 | avg_val_loss=0.021222
Epoch 44 | avg_train_loss=0.018746 | avg_val_loss=0.021170
Epoch 45 | avg_train_loss=0.018577 | avg_val_loss=0.021110
Epoch 46 | avg_train_loss=0.018406 | avg_val_loss=0.021039
Epoch 47 | avg_train_loss=0.018230 | avg_val_loss=0.020970
Epoch 48 | avg_train_loss=0.018054 | avg_val_loss=0.020910
Epoch 49 | avg_train_loss=0.017878 | avg_val_loss=0.020860
Epoch 50 | avg_train_loss=0.017703 | avg_val_loss=0.020818
Epoch 51 | avg_train_loss=0.017529 | avg_val_loss=0.020784
Epoch 52 | avg_train_loss=0.017357 | avg_val_loss=0.020756
Epoch 53 | avg_train_loss=0.017184 | avg_val_loss=0.020735
Epoch 54 | avg_train_loss=0.017012 | avg_val_loss=0.020720
Epoch 55 | avg_train_loss=0.016841 | avg_val_loss=0.020710
Epoch 56 | avg_train_loss=0.016668 | avg_val_loss=0.020707
Epoch 57 | avg_train_loss=0.016496 | avg_val_loss=0.020709
Epoch 58 | avg_train_loss=0.016323 | avg_val_loss=0.020717
Epoch 59 | avg_train_loss=0.016150 | avg_val_loss=0.020729
Epoch 60 | avg_train_loss=0.015977 | avg_val_loss=0.020747
Epoch 61 | avg_train_loss=0.015802 | avg_val_loss=0.020769
Epoch 62 | avg_train_loss=0.015627 | avg_val_loss=0.020796
Epoch 63 | avg_train_loss=0.015452 | avg_val_loss=0.020827
Epoch 64 | avg_train_loss=0.015276 | avg_val_loss=0.020862
Epoch 65 | avg_train_loss=0.015099 | avg_val_loss=0.020900
Epoch 66 | avg_train_loss=0.014922 | avg_val_loss=0.020943
Epoch 67 | avg_train_loss=0.014745 | avg_val_loss=0.020988
Epoch 68 | avg_train_loss=0.014567 | avg_val_loss=0.021036
Epoch 69 | avg_train_loss=0.014389 | avg_val_loss=0.021086
Epoch 70 | avg_train_loss=0.014211 | avg_val_loss=0.021139
Epoch 71 | avg_train_loss=0.014033 | avg_val_loss=0.021194
Epoch 72 | avg_train_loss=0.013855 | avg_val_loss=0.021251
Epoch 73 | avg_train_loss=0.013678 | avg_val_loss=0.021309
Epoch 74 | avg_train_loss=0.013501 | avg_val_loss=0.021370
Epoch 75 | avg_train_loss=0.013325 | avg_val_loss=0.021434
Epoch 76 | avg_train_loss=0.013151 | avg_val_loss=0.021500
Epoch 77 | avg_train_loss=0.012978 | avg_val_loss=0.021569
Epoch 78 | avg_train_loss=0.012808 | avg_val_loss=0.021640
Epoch 79 | avg_train_loss=0.012640 | avg_val_loss=0.021714
Epoch 80 | avg_train_loss=0.012475 | avg_val_loss=0.021790
Epoch 81 | avg_train_loss=0.012315 | avg_val_loss=0.021868
Epoch 82 | avg_train_loss=0.012161 | avg_val_loss=0.021945
Epoch 83 | avg_train_loss=0.012014 | avg_val_loss=0.022022
Epoch 84 | avg_train_loss=0.011879 | avg_val_loss=0.022094
Epoch 85 | avg_train_loss=0.011759 | avg_val_loss=0.022165
Epoch 86 | avg_train_loss=0.011668 | avg_val_loss=0.022255
Epoch 87 | avg_train_loss=0.011627 | avg_val_loss=0.022420
Epoch 88 | avg_train_loss=0.011695 | avg_val_loss=0.022434
Epoch 89 | avg_train_loss=0.012028 | avg_val_loss=0.022284
Epoch 90 | avg_train_loss=0.011818 | avg_val_loss=0.022220
Epoch 91 | avg_train_loss=0.011309 | avg_val_loss=0.022407
Epoch 92 | avg_train_loss=0.011020 | avg_val_loss=0.022554
Epoch 93 | avg_train_loss=0.010813 | avg_val_loss=0.022681
Epoch 94 | avg_train_loss=0.010639 | avg_val_loss=0.022800
Epoch 95 | avg_train_loss=0.010483 | avg_val_loss=0.022917
Epoch 96 | avg_train_loss=0.010338 | avg_val_loss=0.023035
Epoch 97 | avg_train_loss=0.010200 | avg_val_loss=0.023154
Epoch 98 | avg_train_loss=0.010067 | avg_val_loss=0.023273
Epoch 99 | avg_train_loss=0.009937 | avg_val_loss=0.023391
Epoch 100 | avg_train_loss=0.009811 | avg_val_loss=0.023505
Epoch 101 | avg_train_loss=0.009687 | avg_val_loss=0.023613
Epoch 102 | avg_train_loss=0.009565INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.109s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8619e-05s, 424928 KB] reading input...
[t=0.00230922s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0268744s, 427488 KB] Building successor generator...done!
[t=0.027176s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0272012s, 427488 KB] time for successor generation creation: 0.000178939s
[t=0.0272321s, 427488 KB] Variables: 25
[t=0.0272569s, 427488 KB] FactPairs: 182
[t=0.0272807s, 427488 KB] Bytes per state: 8
[t=0.0274971s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.114305s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.114385s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.114413s, 430080 KB] f = 156, 1 evaluated, 0 expanded
[t=0.114443s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 156
[t=0.114469s, 430080 KB] pruning method: none
[t=0.124822s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.124889s, 430524 KB] g=1, 5 evaluated, 1 expanded
[t=0.125059s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.12509s, 430524 KB] g=2, 6 evaluated, 2 expanded
[t=0.12602s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 112
[t=0.126054s, 430524 KB] g=4, 13 evaluated, 4 expanded
[t=0.126337s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.126377s, 430524 KB] g=4, 15 evaluated, 4 expanded
[t=0.12925s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.129289s, 430524 KB] g=6, 37 evaluated, 11 expanded
[t=0.136382s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.136422s, 430524 KB] g=10, 92 evaluated, 27 expanded
[t=0.137981s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.138015s, 430524 KB] g=12, 104 evaluated, 30 expanded
[t=0.14126s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.141298s, 430524 KB] g=15, 129 evaluated, 37 expanded
[t=0.146581s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.146619s, 430524 KB] g=15, 170 evaluated, 49 expanded
[t=0.153549s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.153591s, 430656 KB] g=16, 224 evaluated, 62 expanded
[t=0.15528s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.155312s, 430656 KB] g=18, 237 evaluated, 65 expanded
[t=0.159246s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.159281s, 430656 KB] g=20, 267 evaluated, 77 expanded, 1 reopened
[t=0.160367s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.160403s, 430656 KB] g=22, 275 evaluated, 80 expanded, 1 reopened
[t=0.160692s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.160722s, 430656 KB] g=23, 277 evaluated, 81 expanded, 1 reopened
[t=0.18357s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.183638s, 430788 KB] g=24, 455 evaluated, 137 expanded, 4 reopened
[t=0.184327s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.184363s, 430788 KB] g=25, 460 evaluated, 138 expanded, 4 reopened
[t=0.23878s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.238836s, 430920 KB] g=31, 884 evaluated, 284 expanded, 6 reopened
[t=0.239259s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.23929s, 430920 KB] g=32, 887 evaluated, 285 expanded, 6 reopened
[t=0.240129s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.240166s, 430920 KB] g=34, 893 evaluated, 287 expanded, 6 reopened
[t=0.242263s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.242303s, 430920 KB] g=38, 909 evaluated, 292 expanded, 6 reopened
[t=0.243642s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.243676s, 430920 KB] g=38, 919 evaluated, 296 expanded, 6 reopened
[t=0.244229s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.244259s, 430920 KB] g=39, 923 evaluated, 297 expanded, 6 reopened
[t=0.244809s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.244839s, 430920 KB] g=40, 927 evaluated, 298 expanded, 6 reopened
[t=0.245256s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.245287s, 430920 KB] g=41, 930 evaluated, 299 expanded, 6 reopened
[t=0.245708s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.245739s, 430920 KB] g=42, 933 evaluated, 300 expanded, 6 reopened
[t=0.24705s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.247083s, 430920 KB] g=44, 943 evaluated, 303 expanded, 6 reopened
[t=0.24724s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.247269s, 430920 KB] g=44, 944 evaluated, 303 expanded, 6 reopened
[t=0.248341s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.248374s, 430920 KB] g=46, 952 evaluated, 305 expanded, 6 reopened
[t=0.249048s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.249081s, 430920 KB] g=48, 957 evaluated, 307 expanded, 6 reopened
[t=0.250524s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.250559s, 430920 KB] g=50, 968 evaluated, 310 expanded, 6 reopened
[t=0.251101s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.25113s, 430920 KB] g=51, 972 evaluated, 311 expanded, 6 reopened
[t=0.251698s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.251734s, 430920 KB] g=52, 976 evaluated, 312 expanded, 6 reopened
[t=0.252028s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.252058s, 430920 KB] g=53, 978 evaluated, 313 expanded, 6 reopened
[t=0.252608s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.252642s, 430920 KB] g=55, 982 evaluated, 315 expanded, 6 reopened
[t=0.253312s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.253349s, 430920 KB] g=57, 987 evaluated, 317 expanded, 6 reopened
[t=0.253891s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.253924s, 430920 KB] g=58, 991 evaluated, 318 expanded, 6 reopened
[t=0.254085s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.254114s, 430920 KB] g=59, 992 evaluated, 319 expanded, 6 reopened
[t=0.255566s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.255615s, 430920 KB] g=62, 1003 evaluated, 323 expanded, 6 reopened
[t=0.256036s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.256067s, 430920 KB] g=63, 1006 evaluated, 324 expanded, 6 reopened
[t=0.256746s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.256777s, 430920 KB] g=63, 1011 evaluated, 326 expanded, 6 reopened
[t=0.261055s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.261093s, 431052 KB] g=67, 1043 evaluated, 342 expanded, 6 reopened
[t=0.261908s, 431052 KB] Solution found!
[t=0.261943s, 431052 KB] Actual search time: 0.147471s
unstack h j (1)
stack h a (1)
unstack f e (1)
stack f j (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d h (1)
unstack i c (1)
stack i e (1)
pick-up c (1)
stack c b (1)
unstack f j (1)
stack f c (1)
unstack i e (1)
stack i d (1)
pick-up j (1)
stack j e (1)
unstack i d (1)
put-down i (1)
unstack d h (1)
stack d j (1)
pick-up i (1)
stack i d (1)
unstack h a (1)
stack h f (1)
unstack a k (1)
stack a h (1)
unstack k l (1)
stack k i (1)
unstack l g (1)
put-down l (1)
unstack k i (1)
stack k l (1)
unstack a h (1)
stack a k (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f c (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack i d (1)
stack i l (1)
unstack d j (1)
stack d c (1)
unstack j e (1)
stack j i (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack i l (1)
stack i c (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.261972s, 431052 KB] Plan length: 70 step(s).
[t=0.261972s, 431052 KB] Plan cost: 70
[t=0.261972s, 431052 KB] Expanded 348 state(s).
[t=0.261972s, 431052 KB] Reopened 6 state(s).
[t=0.261972s, 431052 KB] Evaluated 1050 state(s).
[t=0.261972s, 431052 KB] Evaluations: 1050
[t=0.261972s, 431052 KB] Generated 1480 state(s).
[t=0.261972s, 431052 KB] Dead ends: 0 state(s).
[t=0.261972s, 431052 KB] Expanded until last jump: 0 state(s).
[t=0.261972s, 431052 KB] Reopened until last jump: 0 state(s).
[t=0.261972s, 431052 KB] Evaluated until last jump: 1 state(s).
[t=0.261972s, 431052 KB] Generated until last jump: 0 state(s).
[t=0.261972s, 431052 KB] Number of registered states: 1050
[t=0.261972s, 431052 KB] Int hash set load factor: 1050/2048 = 0.512695
[t=0.261972s, 431052 KB] Int hash set resizes: 11
[t=0.261972s, 431052 KB] Search time: 0.234475s
[t=0.261972s, 431052 KB] Total time: 0.261972s
Solution found.
Peak memory: 431052 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p2.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9127e-05s, 424928 KB] reading input...
[t=0.00231569s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0269341s, 427488 KB] Building successor generator...done!
[t=0.027238s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0272632s, 427488 KB] time for successor generation creation: 0.000182391s
[t=0.027294s, 427488 KB] Variables: 25
[t=0.0273189s, 427488 KB] FactPairs: 182
[t=0.0273424s, 427488 KB] Bytes per state: 8
[t=0.0275706s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.104683s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.104761s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.104788s, 430080 KB] f = 131, 1 evaluated, 0 expanded
[t=0.104818s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 131
[t=0.104854s, 430080 KB] pruning method: none
[t=0.11248s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 113
[t=0.112532s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.115806s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.115848s, 430524 KB] g=2, 10 evaluated, 4 expanded
[t=0.116007s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.116037s, 430524 KB] g=2, 11 evaluated, 4 expanded
[t=0.116324s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.116354s, 430524 KB] g=3, 13 evaluated, 5 expanded
[t=0.116509s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.116541s, 430524 KB] g=3, 14 evaluated, 5 expanded
[t=0.117087s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.117138s, 430524 KB] g=4, 18 evaluated, 7 expanded
[t=0.117563s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.117594s, 430524 KB] g=5, 21 evaluated, 8 expanded
[t=0.118649s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.11868s, 430524 KB] g=6, 29 evaluated, 10 expanded
[t=0.118841s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.11887s, 430524 KB] g=6, 30 evaluated, 10 expanded
[t=0.120574s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.120607s, 430524 KB] g=8, 43 evaluated, 14 expanded
[t=0.122468s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.122501s, 430524 KB] g=11, 57 evaluated, 18 expanded
[t=0.123946s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.123977s, 430524 KB] g=14, 68 evaluated, 21 expanded
[t=0.126077s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.126113s, 430524 KB] g=16, 84 evaluated, 24 expanded
[t=0.149099s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.149139s, 430656 KB] g=25, 262 evaluated, 79 expanded
[t=0.16586s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.165897s, 430656 KB] g=23, 392 evaluated, 124 expanded
[t=0.18789s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.187941s, 430656 KB] g=29, 562 evaluated, 173 expanded, 1 reopened
[t=0.266753s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.266807s, 430788 KB] g=33, 1173 evaluated, 378 expanded, 27 reopened
[t=0.334807s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.334856s, 430920 KB] g=27, 1702 evaluated, 573 expanded, 52 reopened
[t=0.335529s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.335559s, 430920 KB] g=28, 1707 evaluated, 574 expanded, 52 reopened
[t=0.336483s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.336514s, 430920 KB] g=29, 1714 evaluated, 575 expanded, 52 reopened
[t=0.343061s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.3431s, 430920 KB] g=29, 1765 evaluated, 587 expanded, 52 reopened
[t=0.376604s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.376654s, 431052 KB] g=38, 2025 evaluated, 646 expanded, 52 reopened
[t=0.389138s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.389178s, 431052 KB] g=38, 2121 evaluated, 671 expanded, 52 reopened
[t=0.391266s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.391299s, 431184 KB] g=40, 2137 evaluated, 674 expanded, 52 reopened
[t=0.419954s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.420001s, 431184 KB] g=43, 2360 evaluated, 723 expanded, 56 reopened
[t=0.42081s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.420841s, 431184 KB] g=44, 2366 evaluated, 724 expanded, 56 reopened
[t=0.426961s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.426997s, 431184 KB] g=48, 2413 evaluated, 735 expanded, 56 reopened
[t=0.428317s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.428348s, 431184 KB] g=50, 2423 evaluated, 737 expanded, 56 reopened
[t=0.429029s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.429061s, 431184 KB] g=51, 2428 evaluated, 738 expanded, 56 reopened
[t=0.429864s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.429895s, 431184 KB] g=53, 2434 evaluated, 740 expanded, 56 reopened
[t=0.430438s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.430477s, 431184 KB] g=54, 2438 evaluated, 741 expanded, 56 reopened
[t=0.430895s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.430925s, 431184 KB] g=55, 2441 evaluated, 742 expanded, 56 reopened
[t=0.431213s, 431184 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.431243s, 431184 KB] g=55, 2443 evaluated, 742 expanded, 56 reopened
[t=0.431405s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.43144s, 431316 KB] g=56, 2444 evaluated, 743 expanded, 56 reopened
[t=0.431598s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.431626s, 431316 KB] g=56, 2445 evaluated, 743 expanded, 56 reopened
[t=0.432567s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.432598s, 431316 KB] g=59, 2452 evaluated, 746 expanded, 56 reopened
[t=0.433033s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.433067s, 431316 KB] g=60, 2455 evaluated, 747 expanded, 56 reopened
[t=0.433752s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.433783s, 431316 KB] g=61, 2460 evaluated, 749 expanded, 56 reopened
[t=0.434075s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.434104s, 431316 KB] g=62, 2462 evaluated, 750 expanded, 56 reopened
[t=0.4344s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.434432s, 431316 KB] g=64, 2465 evaluated, 752 expanded, 56 reopened
[t=0.434461s, 431316 KB] Solution found!
[t=0.434491s, 431316 KB] Actual search time: 0.329632s
unstack k g (1)
stack k j (1)
unstack g e (1)
put-down g (1)
unstack e l (1)
stack e k (1)
unstack l b (1)
stack l c (1)
unstack b a (1)
stack b g (1)
unstack a h (1)
put-down a (1)
pick-up h (1)
stack h a (1)
unstack b g (1)
stack b h (1)
unstack l c (1)
stack l b (1)
unstack c f (1)
put-down c (1)
unstack f d (1)
stack f c (1)
unstack l b (1)
stack l d (1)
unstack b h (1)
put-down b (1)
unstack f c (1)
stack f e (1)
pick-up c (1)
stack c b (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d c (1)
unstack f e (1)
stack f i (1)
unstack e k (1)
stack e d (1)
unstack f i (1)
stack f e (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d c (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.434517s, 431316 KB] Plan length: 64 step(s).
[t=0.434517s, 431316 KB] Plan cost: 64
[t=0.434517s, 431316 KB] Expanded 753 state(s).
[t=0.434517s, 431316 KB] Reopened 56 state(s).
[t=0.434517s, 431316 KB] Evaluated 2465 state(s).
[t=0.434517s, 431316 KB] Evaluations: 2465
[t=0.434517s, 431316 KB] Generated 3605 state(s).
[t=0.434517s, 431316 KB] Dead ends: 0 state(s).
[t=0.434517s, 431316 KB] Expanded until last jump: 0 state(s).
[t=0.434517s, 431316 KB] Reopened until last jump: 0 state(s).
[t=0.434517s, 431316 KB] Evaluated until last jump: 1 state(s).
[t=0.434517s, 431316 KB] Generated until last jump: 0 state(s).
[t=0.434517s, 431316 KB] Number of registered states: 2465
[t=0.434517s, 431316 KB] Int hash set load factor: 2465/4096 = 0.601807
[t=0.434517s, 431316 KB] Int hash set resizes: 12
[t=0.434517s, 431316 KB] Search time: 0.406948s
[t=0.434517s, 431316 KB] Total time: 0.434517s
Solution found.
Peak memory: 431316 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p3.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.105s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.3648e-05s, 424928 KB] reading input...
[t=0.00232988s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0272002s, 427488 KB] Building successor generator...done!
[t=0.0275064s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0275333s, 427488 KB] time for successor generation creation: 0.000182704s
[t=0.027576s, 427488 KB] Variables: 25
[t=0.0276016s, 427488 KB] FactPairs: 182
[t=0.0276262s, 427488 KB] Bytes per state: 8
[t=0.0278545s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107276s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.107355s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.107382s, 430080 KB] f = 53, 1 evaluated, 0 expanded
[t=0.107413s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.107439s, 430080 KB] pruning method: none
[t=0.117831s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.117897s, 430524 KB] g=1, 4 evaluated, 1 expanded
[t=0.119137s, 430524 KB] f = 54, 13 evaluated, 3 expanded
[t=0.11957s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.119601s, 430524 KB] g=3, 16 evaluated, 4 expanded
[t=0.120165s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.120196s, 430524 KB] g=4, 20 evaluated, 5 expanded
[t=0.12089s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.120937s, 430524 KB] g=5, 25 evaluated, 6 expanded
[t=0.121368s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.121398s, 430524 KB] g=6, 28 evaluated, 7 expanded
[t=0.140047s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.140093s, 430524 KB] g=14, 167 evaluated, 62 expanded, 1 reopened
[t=0.14053s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.14056s, 430524 KB] g=15, 170 evaluated, 63 expanded, 1 reopened
[t=0.153033s, 430656 KB] f = 55, 262 evaluated, 101 expanded, 3 reopened
[t=0.157524s, 430656 KB] f = 56, 295 evaluated, 114 expanded, 3 reopened
[t=0.161872s, 430656 KB] f = 57, 327 evaluated, 127 expanded, 4 reopened
[t=0.165144s, 430656 KB] f = 58, 350 evaluated, 156 expanded, 19 reopened
[t=0.177615s, 430656 KB] f = 59, 443 evaluated, 186 expanded, 19 reopened
[t=0.184614s, 430656 KB] f = 60, 495 evaluated, 210 expanded, 19 reopened
[t=0.196146s, 430788 KB] f = 61, 580 evaluated, 245 expanded, 23 reopened
[t=0.204973s, 430788 KB] f = 62, 645 evaluated, 272 expanded, 23 reopened
[t=0.222668s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.222709s, 430788 KB] g=25, 777 evaluated, 316 expanded, 23 reopened
[t=0.242056s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.242093s, 430788 KB] g=28, 922 evaluated, 360 expanded, 23 reopened
[t=0.24789s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.247926s, 430788 KB] g=28, 965 evaluated, 380 expanded, 30 reopened
[t=0.259302s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.259343s, 430920 KB] g=30, 1049 evaluated, 407 expanded, 30 reopened
[t=0.259911s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.259941s, 430920 KB] g=31, 1053 evaluated, 408 expanded, 30 reopened
[t=0.260511s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.260544s, 430920 KB] g=32, 1057 evaluated, 409 expanded, 30 reopened
[t=0.260992s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.261023s, 430920 KB] g=33, 1060 evaluated, 410 expanded, 30 reopened
[t=0.261456s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.261491s, 430920 KB] g=34, 1063 evaluated, 411 expanded, 30 reopened
[t=0.261926s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.261955s, 430920 KB] g=35, 1066 evaluated, 412 expanded, 30 reopened
[t=0.262255s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.262284s, 430920 KB] g=36, 1068 evaluated, 413 expanded, 30 reopened
[t=0.262849s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.262882s, 430920 KB] g=37, 1072 evaluated, 414 expanded, 30 reopened
[t=0.263979s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.264009s, 430920 KB] g=39, 1080 evaluated, 416 expanded, 30 reopened
[t=0.264309s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.264339s, 430920 KB] g=40, 1082 evaluated, 417 expanded, 30 reopened
[t=0.265065s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.265099s, 430920 KB] g=42, 1087 evaluated, 419 expanded, 30 reopened
[t=0.265267s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.265296s, 430920 KB] g=43, 1088 evaluated, 420 expanded, 30 reopened
[t=0.265731s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.265763s, 430920 KB] g=45, 1091 evaluated, 422 expanded, 30 reopened
[t=0.266603s, 430920 KB] Solution found!
[t=0.266636s, 430920 KB] Actual search time: 0.159192s
unstack l j (1)
put-down l (1)
unstack f h (1)
stack f j (1)
pick-up h (1)
stack h f (1)
pick-up g (1)
stack g h (1)
unstack a k (1)
put-down a (1)
unstack k b (1)
stack k a (1)
unstack b d (1)
put-down b (1)
pick-up l (1)
stack l d (1)
unstack k a (1)
stack k b (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack j e (1)
stack j b (1)
pick-up e (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack j b (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.266663s, 430920 KB] Plan length: 48 step(s).
[t=0.266663s, 430920 KB] Plan cost: 48
[t=0.266663s, 430920 KB] Expanded 428 state(s).
[t=0.266663s, 430920 KB] Reopened 30 state(s).
[t=0.266663s, 430920 KB] Evaluated 1098 state(s).
[t=0.266663s, 430920 KB] Evaluations: 1098
[t=0.266663s, 430920 KB] Generated 1717 state(s).
[t=0.266663s, 430920 KB] Dead ends: 0 state(s).
[t=0.266663s, 430920 KB] Expanded until last jump: 272 state(s).
[t=0.266663s, 430920 KB] Reopened until last jump: 23 state(s).
[t=0.266663s, 430920 KB] Evaluated until last jump: 645 state(s).
[t=0.266663s, 430920 KB] Generated until last jump: 1058 state(s).
[t=0.266663s, 430920 KB] Number of registered states: 1098
[t=0.266663s, 430920 KB] Int hash set load factor: 1098/2048 = 0.536133
[t=0.266663s, 430920 KB] Int hash set resizes: 11
[t=0.266663s, 430920 KB] Search time: 0.23881s
[t=0.266663s, 430920 KB] Total time: 0.266663s
Solution found.
Peak memory: 430920 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.110s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9538e-05s, 424928 KB] reading input...
[t=0.00230012s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0270537s, 427488 KB] Building successor generator...done!
[t=0.0273851s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0274104s, 427488 KB] time for successor generation creation: 0.000190014s
[t=0.0274412s, 427488 KB] Variables: 25
[t=0.0274657s, 427488 KB] FactPairs: 182
[t=0.0274895s, 427488 KB] Bytes per state: 8
[t=0.0277239s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.105275s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.105351s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.105378s, 430080 KB] f = 90, 1 evaluated, 0 expanded
[t=0.105408s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.105434s, 430080 KB] pruning method: none
[t=0.113199s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.113259s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.116514s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.116558s, 430524 KB] g=3, 10 evaluated, 4 expanded
[t=0.116721s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.116751s, 430524 KB] g=4, 11 evaluated, 5 expanded
[t=0.117292s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.117324s, 430524 KB] g=5, 15 evaluated, 6 expanded
[t=0.117606s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.117636s, 430524 KB] g=5, 17 evaluated, 6 expanded
[t=0.1178s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.117833s, 430524 KB] g=6, 18 evaluated, 7 expanded
[t=0.118496s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.118526s, 430524 KB] g=7, 23 evaluated, 8 expanded
[t=0.119726s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.11976s, 430524 KB] g=9, 32 evaluated, 10 expanded
[t=0.119926s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.119955s, 430524 KB] g=10, 33 evaluated, 11 expanded
[t=0.123693s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.123728s, 430524 KB] g=13, 62 evaluated, 17 expanded
[t=0.124532s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.124566s, 430524 KB] g=14, 68 evaluated, 18 expanded
[t=0.130934s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.130968s, 430524 KB] g=12, 118 evaluated, 29 expanded
[t=0.131143s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.131174s, 430524 KB] g=12, 119 evaluated, 29 expanded
[t=0.131592s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.131622s, 430524 KB] g=13, 122 evaluated, 30 expanded
[t=0.131903s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.131933s, 430524 KB] g=13, 124 evaluated, 30 expanded
[t=0.132468s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.132501s, 430524 KB] g=14, 128 evaluated, 31 expanded
[t=0.135462s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.135495s, 430524 KB] g=17, 151 evaluated, 36 expanded
[t=0.137947s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.137978s, 430524 KB] g=20, 170 evaluated, 40 expanded
[t=0.13943s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.139467s, 430524 KB] g=22, 181 evaluated, 42 expanded
[t=0.157755s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.157798s, 430656 KB] g=23, 324 evaluated, 77 expanded, 1 reopened
[t=0.178041s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.178079s, 430656 KB] g=23, 483 evaluated, 111 expanded, 1 reopened
[t=0.179913s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.179946s, 430656 KB] g=25, 497 evaluated, 114 expanded, 1 reopened
[t=0.180867s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.180898s, 430656 KB] g=26, 504 evaluated, 115 expanded, 1 reopened
[t=0.185311s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.185349s, 430656 KB] g=27, 538 evaluated, 123 expanded, 1 reopened
[t=0.185763s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.185796s, 430656 KB] g=28, 541 evaluated, 124 expanded, 1 reopened
[t=0.185952s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.185988s, 430656 KB] g=28, 542 evaluated, 124 expanded, 1 reopened
[t=0.186529s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.186561s, 430656 KB] g=29, 546 evaluated, 125 expanded, 1 reopened
[t=0.187117s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.187148s, 430656 KB] g=30, 550 evaluated, 126 expanded, 1 reopened
[t=0.18756s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.18759s, 430656 KB] g=31, 553 evaluated, 127 expanded, 1 reopened
[t=0.1899s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.189934s, 430656 KB] g=33, 571 evaluated, 131 expanded, 1 reopened
[t=0.190599s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.190629s, 430656 KB] g=34, 576 evaluated, 132 expanded, 1 reopened
[t=0.192206s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.192241s, 430656 KB] g=36, 588 evaluated, 135 expanded, 1 reopened
[t=0.192653s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.192682s, 430656 KB] g=36, 591 evaluated, 135 expanded, 1 reopened
[t=0.193095s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.193128s, 430656 KB] g=37, 594 evaluated, 136 expanded, 1 reopened
[t=0.193413s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.193443s, 430656 KB] g=38, 596 evaluated, 137 expanded, 1 reopened
[t=0.19386s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.193891s, 430788 KB] g=39, 599 evaluated, 138 expanded, 1 reopened
[t=0.194563s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.194593s, 430788 KB] g=40, 604 evaluated, 140 expanded, 1 reopened
[t=0.194878s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.19491s, 430788 KB] g=41, 606 evaluated, 141 expanded, 1 reopened
[t=0.195226s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.195258s, 430788 KB] g=43, 609 evaluated, 143 expanded, 1 reopened
[t=0.195287s, 430788 KB] Solution found!
[t=0.195316s, 430788 KB] Actual search time: 0.0898774s
put-down e (1)
unstack i c (1)
put-down i (1)
unstack c j (1)
put-down c (1)
pick-up e (1)
stack e i (1)
unstack l b (1)
put-down l (1)
unstack j d (1)
stack j c (1)
unstack d g (1)
stack d j (1)
unstack b a (1)
put-down b (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up f (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack d j (1)
stack d b (1)
unstack j c (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.195343s, 430788 KB] Plan length: 43 step(s).
[t=0.195343s, 430788 KB] Plan cost: 43
[t=0.195343s, 430788 KB] Expanded 144 state(s).
[t=0.195343s, 430788 KB] Reopened 1 state(s).
[t=0.195343s, 430788 KB] Evaluated 609 state(s).
[t=0.195343s, 430788 KB] Evaluations: 609
[t=0.195343s, 430788 KB] Generated 770 state(s).
[t=0.195343s, 430788 KB] Dead ends: 0 state(s).
[t=0.195343s, 430788 KB] Expanded until last jump: 0 state(s).
[t=0.195343s, 430788 KB] Reopened until last jump: 0 state(s).
[t=0.195343s, 430788 KB] Evaluated until last jump: 1 state(s).
[t=0.195343s, 430788 KB] Generated until last jump: 0 state(s).
[t=0.195343s, 430788 KB] Number of registered states: 609
[t=0.195343s, 430788 KB] Int hash set load factor: 609/1024 = 0.594727
[t=0.195343s, 430788 KB] Int hash set resizes: 10
[t=0.195343s, 430788 KB] Search time: 0.16762s
[t=0.195343s, 430788 KB] Total time: 0.195343s
Solution found.
Peak memory: 430788 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.100s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7378e-05s, 424928 KB] reading input...
[t=0.00234555s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0270309s, 427488 KB] Building successor generator...done!
[t=0.0273403s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0273664s, 427488 KB] time for successor generation creation: 0.000186027s
[t=0.0273978s, 427488 KB] Variables: 25
[t=0.0274237s, 427488 KB] FactPairs: 182
[t=0.0274477s, 427488 KB] Bytes per state: 8
[t=0.027674s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.105961s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.106039s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.106069s, 430080 KB] f = 105, 1 evaluated, 0 expanded
[t=0.1061s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.106126s, 430080 KB] pruning method: none
[t=0.116963s, 430524 KB] f = 106, 9 evaluated, 1 expanded
[t=0.117168s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.1172s, 430524 KB] g=2, 10 evaluated, 2 expanded
[t=0.117644s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.117678s, 430524 KB] g=2, 13 evaluated, 2 expanded
[t=0.120127s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.120159s, 430524 KB] g=5, 32 evaluated, 5 expanded
[t=0.121079s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.121113s, 430524 KB] g=6, 39 evaluated, 6 expanded
[t=0.122979s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.123133s, 430524 KB] g=7, 45 evaluated, 7 expanded
[t=0.129198s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.129292s, 430524 KB] g=11, 62 evaluated, 11 expanded
[t=0.132674s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.132768s, 430524 KB] g=13, 71 evaluated, 13 expanded
[t=0.134376s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.134411s, 430524 KB] g=14, 80 evaluated, 15 expanded
[t=0.136598s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.136629s, 430524 KB] g=16, 97 evaluated, 18 expanded
[t=0.136921s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.136961s, 430524 KB] g=17, 99 evaluated, 19 expanded
[t=0.137645s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.137679s, 430524 KB] g=18, 104 evaluated, 20 expanded
[t=0.138476s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.138507s, 430524 KB] g=19, 110 evaluated, 21 expanded
[t=0.138925s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.138958s, 430524 KB] g=20, 113 evaluated, 22 expanded
[t=0.1395s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.139531s, 430524 KB] g=21, 117 evaluated, 23 expanded
[t=0.140075s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.140108s, 430524 KB] g=22, 121 evaluated, 24 expanded
[t=0.140402s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.140432s, 430524 KB] g=23, 123 evaluated, 25 expanded
[t=0.145377s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.145413s, 430524 KB] g=27, 161 evaluated, 38 expanded
[t=0.145963s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.145994s, 430524 KB] g=28, 165 evaluated, 39 expanded
[t=0.146542s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.146573s, 430524 KB] g=30, 169 evaluated, 41 expanded
[t=0.148007s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.148046s, 430656 KB] g=33, 180 evaluated, 45 expanded
[t=0.148463s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.148492s, 430656 KB] g=34, 183 evaluated, 46 expanded
[t=0.1497s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.14974s, 430656 KB] g=36, 192 evaluated, 49 expanded
[t=0.150156s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.150187s, 430656 KB] g=37, 195 evaluated, 50 expanded
[t=0.155181s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.155219s, 430656 KB] g=38, 234 evaluated, 60 expanded
[t=0.156659s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.15669s, 430656 KB] g=40, 245 evaluated, 63 expanded
[t=0.157103s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.15714s, 430656 KB] g=40, 248 evaluated, 63 expanded
[t=0.157573s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.157608s, 430656 KB] g=41, 251 evaluated, 64 expanded
[t=0.157897s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.157928s, 430656 KB] g=42, 253 evaluated, 65 expanded
[t=0.158345s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.158376s, 430656 KB] g=43, 256 evaluated, 66 expanded
[t=0.159072s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.159106s, 430656 KB] g=44, 261 evaluated, 68 expanded
[t=0.159395s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.159426s, 430656 KB] g=45, 263 evaluated, 69 expanded
[t=0.159719s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.159748s, 430656 KB] g=47, 266 evaluated, 71 expanded
[t=0.159777s, 430656 KB] Solution found!
[t=0.159805s, 430656 KB] Actual search time: 0.0536745s
stack e a (1)
unstack h k (1)
stack h g (1)
unstack l f (1)
stack l h (1)
pick-up f (1)
stack f j (1)
pick-up b (1)
stack b f (1)
unstack l h (1)
stack l b (1)
unstack e a (1)
put-down e (1)
pick-up a (1)
stack a h (1)
unstack l b (1)
stack l d (1)
unstack b f (1)
stack b l (1)
pick-up e (1)
stack e b (1)
unstack f j (1)
stack f a (1)
unstack k c (1)
stack k e (1)
pick-up j (1)
stack j c (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
put-down l (1)
unstack j c (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.159832s, 430656 KB] Plan length: 47 step(s).
[t=0.159832s, 430656 KB] Plan cost: 47
[t=0.159832s, 430656 KB] Expanded 72 state(s).
[t=0.159832s, 430656 KB] Reopened 0 state(s).
[t=0.159832s, 430656 KB] Evaluated 266 state(s).
[t=0.159832s, 430656 KB] Evaluations: 266
[t=0.159832s, 430656 KB] Generated 337 state(s).
[t=0.159832s, 430656 KB] Dead ends: 0 state(s).
[t=0.159832s, 430656 KB] Expanded until last jump: 1 state(s).
[t=0.159832s, 430656 KB] Reopened until last jump: 0 state(s).
[t=0.159832s, 430656 KB] Evaluated until last jump: 9 state(s).
[t=0.159832s, 430656 KB] Generated until last jump: 8 state(s).
[t=0.159832s, 430656 KB] Number of registered states: 266
[t=0.159832s, 430656 KB] Int hash set load factor: 266/512 = 0.519531
[t=0.159832s, 430656 KB] Int hash set resizes: 9
[t=0.159832s, 430656 KB] Search time: 0.132158s
[t=0.159832s, 430656 KB] Total time: 0.159832s
Solution found.
Peak memory: 430656 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.109s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8167e-05s, 424928 KB] reading input...
[t=0.00227807s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0268233s, 427488 KB] Building successor generator...done!
[t=0.0271299s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0271555s, 427488 KB] time for successor generation creation: 0.000182854s
[t=0.0271875s, 427488 KB] Variables: 25
[t=0.0272123s, 427488 KB] FactPairs: 182
[t=0.0272552s, 427488 KB] Bytes per state: 8
[t=0.027483s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.105751s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.105832s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.105861s, 430080 KB] f = 154, 1 evaluated, 0 expanded
[t=0.105891s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.105916s, 430080 KB] pruning method: none
[t=0.113684s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.11375s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.11611s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.116164s, 430524 KB] g=1, 3 evaluated, 1 expanded
[t=0.116726s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.116761s, 430524 KB] g=2, 7 evaluated, 2 expanded
[t=0.116924s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.116954s, 430524 KB] g=3, 8 evaluated, 3 expanded
[t=0.117114s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.117144s, 430524 KB] g=3, 9 evaluated, 3 expanded
[t=0.117434s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.117467s, 430524 KB] g=4, 11 evaluated, 4 expanded
[t=0.118791s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.118823s, 430524 KB] g=6, 21 evaluated, 7 expanded
[t=0.119521s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.119553s, 430524 KB] g=7, 26 evaluated, 8 expanded
[t=0.123614s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.123649s, 430524 KB] g=9, 57 evaluated, 19 expanded
[t=0.126536s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.126569s, 430524 KB] g=13, 79 evaluated, 26 expanded
[t=0.136907s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.136943s, 430524 KB] g=20, 159 evaluated, 47 expanded
[t=0.137227s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.137259s, 430524 KB] g=20, 161 evaluated, 47 expanded
[t=0.138565s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.138596s, 430524 KB] g=21, 171 evaluated, 49 expanded
[t=0.139135s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.139186s, 430524 KB] g=22, 175 evaluated, 50 expanded
[t=0.140372s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.140404s, 430524 KB] g=24, 184 evaluated, 52 expanded
[t=0.151669s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.151704s, 430656 KB] g=24, 272 evaluated, 69 expanded
[t=0.153899s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.153933s, 430656 KB] g=26, 289 evaluated, 72 expanded
[t=0.190625s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.190674s, 430656 KB] g=27, 575 evaluated, 130 expanded
[t=0.191492s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.191525s, 430656 KB] g=28, 581 evaluated, 131 expanded
[t=0.191684s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.191714s, 430656 KB] g=28, 582 evaluated, 131 expanded
[t=0.191871s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.1919s, 430656 KB] g=28, 583 evaluated, 131 expanded
[t=0.194383s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.19442s, 430788 KB] g=30, 602 evaluated, 136 expanded
[t=0.198601s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.198636s, 430788 KB] g=34, 634 evaluated, 143 expanded
[t=0.198796s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.198826s, 430788 KB] g=34, 635 evaluated, 143 expanded
[t=0.199777s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.19981s, 430788 KB] g=36, 642 evaluated, 145 expanded
[t=0.205153s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.205189s, 430788 KB] g=40, 683 evaluated, 155 expanded
[t=0.205859s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.20589s, 430788 KB] g=41, 688 evaluated, 156 expanded
[t=0.20618s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.20621s, 430788 KB] g=42, 690 evaluated, 157 expanded
[t=0.208196s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.208229s, 430788 KB] g=45, 705 evaluated, 161 expanded
[t=0.208521s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.208551s, 430788 KB] g=46, 707 evaluated, 162 expanded
[t=0.211709s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.211744s, 430788 KB] g=48, 731 evaluated, 168 expanded
[t=0.213972s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.214006s, 430788 KB] g=51, 748 evaluated, 172 expanded
[t=0.214426s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.214457s, 430788 KB] g=52, 751 evaluated, 173 expanded
[t=0.215143s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.215183s, 430788 KB] g=53, 756 evaluated, 174 expanded
[t=0.215609s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.21564s, 430788 KB] g=54, 759 evaluated, 175 expanded
[t=0.216451s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.216482s, 430788 KB] g=55, 765 evaluated, 177 expanded
[t=0.216767s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.216797s, 430788 KB] g=55, 767 evaluated, 177 expanded
[t=0.217214s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.217244s, 430788 KB] g=56, 770 evaluated, 178 expanded
[t=0.217535s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.217568s, 430788 KB] g=57, 772 evaluated, 179 expanded
[t=0.217987s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.218016s, 430788 KB] g=58, 775 evaluated, 180 expanded
[t=0.218699s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.21873s, 430788 KB] g=59, 780 evaluated, 182 expanded
[t=0.219018s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.21905s, 430788 KB] g=60, 782 evaluated, 183 expanded
[t=0.219367s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.2194s, 430788 KB] g=62, 785 evaluated, 185 expanded
[t=0.219429s, 430788 KB] Solution found!
[t=0.219458s, 430788 KB] Actual search time: 0.113536s
unstack b d (1)
put-down b (1)
unstack d k (1)
stack d g (1)
unstack e f (1)
stack e b (1)
unstack k c (1)
stack k f (1)
unstack c i (1)
put-down c (1)
unstack k f (1)
stack k c (1)
pick-up f (1)
stack f k (1)
unstack e b (1)
put-down e (1)
unstack d g (1)
put-down d (1)
unstack g l (1)
put-down g (1)
unstack i h (1)
stack i e (1)
pick-up b (1)
stack b i (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack l j (1)
stack l d (1)
unstack b i (1)
stack b l (1)
unstack i e (1)
put-down i (1)
pick-up e (1)
stack e b (1)
pick-up j (1)
stack j i (1)
unstack f k (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j c (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l i (1)
unstack j c (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.219485s, 430788 KB] Plan length: 62 step(s).
[t=0.219485s, 430788 KB] Plan cost: 62
[t=0.219485s, 430788 KB] Expanded 186 state(s).
[t=0.219485s, 430788 KB] Reopened 0 state(s).
[t=0.219485s, 430788 KB] Evaluated 785 state(s).
[t=0.219485s, 430788 KB] Evaluations: 785
[t=0.219485s, 430788 KB] Generated 998 state(s).
[t=0.219485s, 430788 KB] Dead ends: 0 state(s).
[t=0.219485s, 430788 KB] Expanded until last jump: 0 state(s).
[t=0.219485s, 430788 KB] Reopened until last jump: 0 state(s).
[t=0.219485s, 430788 KB] Evaluated until last jump: 1 state(s).
[t=0.219485s, 430788 KB] Generated until last jump: 0 state(s).
[t=0.219485s, 430788 KB] Number of registered states: 785
[t=0.219485s, 430788 KB] Int hash set load factor: 785/1024 = 0.766602
[t=0.219485s, 430788 KB] Int hash set resizes: 10
[t=0.219485s, 430788 KB] Search time: 0.192003s
[t=0.219485s, 430788 KB] Total time: 0.219485s
Solution found.
Peak memory: 430788 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7581e-05s, 424928 KB] reading input...
[t=0.00231988s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0270139s, 427488 KB] Building successor generator...done!
[t=0.0273174s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0273436s, 427488 KB] time for successor generation creation: 0.000180988s
[t=0.0273759s, 427488 KB] Variables: 25
[t=0.0274107s, 427488 KB] FactPairs: 182
[t=0.0274358s, 427488 KB] Bytes per state: 8
[t=0.0276663s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106067s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.106144s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.106173s, 430080 KB] f = 109, 1 evaluated, 0 expanded
[t=0.106204s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.10623s, 430080 KB] pruning method: none
[t=0.116778s, 430524 KB] f = 115, 6 evaluated, 1 expanded
[t=0.117117s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.117153s, 430524 KB] g=2, 8 evaluated, 2 expanded
[t=0.117451s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.117484s, 430524 KB] g=3, 10 evaluated, 3 expanded
[t=0.117774s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.117807s, 430524 KB] g=3, 12 evaluated, 3 expanded
[t=0.119932s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.119966s, 430524 KB] g=8, 28 evaluated, 10 expanded
[t=0.120264s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.120294s, 430524 KB] g=9, 30 evaluated, 11 expanded
[t=0.120454s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.120483s, 430524 KB] g=9, 31 evaluated, 11 expanded
[t=0.120926s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.120957s, 430524 KB] g=10, 34 evaluated, 12 expanded
[t=0.121648s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.121681s, 430524 KB] g=12, 39 evaluated, 14 expanded
[t=0.121978s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.12201s, 430524 KB] g=13, 41 evaluated, 15 expanded
[t=0.122701s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.122732s, 430524 KB] g=15, 46 evaluated, 17 expanded
[t=0.132139s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.132177s, 430524 KB] g=23, 117 evaluated, 45 expanded
[t=0.132342s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.132372s, 430524 KB] g=23, 118 evaluated, 45 expanded
[t=0.133347s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.13338s, 430524 KB] g=25, 125 evaluated, 47 expanded
[t=0.157278s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.157322s, 430656 KB] g=33, 306 evaluated, 109 expanded, 1 reopened
[t=0.159719s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.159754s, 430656 KB] g=35, 324 evaluated, 114 expanded, 1 reopened
[t=0.160863s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.160897s, 430656 KB] g=38, 332 evaluated, 117 expanded, 1 reopened
[t=0.161193s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.161223s, 430656 KB] g=39, 334 evaluated, 118 expanded, 1 reopened
[t=0.161517s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.161547s, 430656 KB] g=40, 336 evaluated, 119 expanded, 1 reopened
[t=0.161976s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.162006s, 430656 KB] g=41, 339 evaluated, 120 expanded, 1 reopened
[t=0.162301s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.162333s, 430656 KB] g=42, 341 evaluated, 121 expanded, 1 reopened
[t=0.16289s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.162921s, 430656 KB] g=43, 345 evaluated, 122 expanded, 1 reopened
[t=0.164265s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.164299s, 430656 KB] g=45, 355 evaluated, 125 expanded, 1 reopened
[t=0.164738s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.16477s, 430656 KB] g=46, 358 evaluated, 126 expanded, 1 reopened
[t=0.165851s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.165882s, 430656 KB] g=48, 366 evaluated, 128 expanded, 1 reopened
[t=0.166181s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.166211s, 430656 KB] g=49, 368 evaluated, 129 expanded, 1 reopened
[t=0.166908s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.166938s, 430656 KB] g=51, 373 evaluated, 131 expanded, 1 reopened
[t=0.167105s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.167135s, 430656 KB] g=52, 374 evaluated, 132 expanded, 1 reopened
[t=0.167558s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.167588s, 430656 KB] g=54, 377 evaluated, 134 expanded, 1 reopened
[t=0.168426s, 430656 KB] Solution found!
[t=0.168461s, 430656 KB] Actual search time: 0.0622355s
stack h a (1)
pick-up k (1)
stack k l (1)
unstack h a (1)
stack h f (1)
unstack a e (1)
stack a h (1)
unstack e g (1)
stack e k (1)
unstack a h (1)
stack a e (1)
unstack h f (1)
stack h g (1)
unstack a e (1)
stack a f (1)
unstack e k (1)
put-down e (1)
unstack k l (1)
stack k e (1)
unstack h g (1)
stack h a (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j l (1)
unstack k e (1)
stack k j (1)
unstack h a (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack f b (1)
stack f k (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack b d (1)
put-down b (1)
unstack j l (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.168505s, 430656 KB] Plan length: 57 step(s).
[t=0.168505s, 430656 KB] Plan cost: 57
[t=0.168505s, 430656 KB] Expanded 140 state(s).
[t=0.168505s, 430656 KB] Reopened 1 state(s).
[t=0.168505s, 430656 KB] Evaluated 384 state(s).
[t=0.168505s, 430656 KB] Evaluations: 384
[t=0.168505s, 430656 KB] Generated 541 state(s).
[t=0.168505s, 430656 KB] Dead ends: 0 state(s).
[t=0.168505s, 430656 KB] Expanded until last jump: 1 state(s).
[t=0.168505s, 430656 KB] Reopened until last jump: 0 state(s).
[t=0.168505s, 430656 KB] Evaluated until last jump: 6 state(s).
[t=0.168505s, 430656 KB] Generated until last jump: 5 state(s).
[t=0.168505s, 430656 KB] Number of registered states: 384
[t=0.168505s, 430656 KB] Int hash set load factor: 384/512 = 0.75
[t=0.168505s, 430656 KB] Int hash set resizes: 9
[t=0.168505s, 430656 KB] Search time: 0.140839s
[t=0.168505s, 430656 KB] Total time: 0.168505s
Solution found.
Peak memory: 430656 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p8.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.020s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.725e-05s, 424928 KB] reading input...
[t=0.00234224s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0270814s, 427488 KB] Building successor generator...done!
[t=0.0273786s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0274042s, 427488 KB] time for successor generation creation: 0.000178366s
[t=0.0274349s, 427488 KB] Variables: 25
[t=0.0274587s, 427488 KB] FactPairs: 182
[t=0.027482s, 427488 KB] Bytes per state: 8
[t=0.0277023s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106596s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.106676s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.106704s, 430080 KB] f = 84, 1 evaluated, 0 expanded
[t=0.106735s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.10676s, 430080 KB] pruning method: none
[t=0.117286s, 430524 KB] f = 86, 6 evaluated, 1 expanded
[t=0.117899s, 430524 KB] f = 87, 10 evaluated, 2 expanded
[t=0.118876s, 430524 KB] f = 88, 17 evaluated, 4 expanded
[t=0.119446s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.119477s, 430524 KB] g=4, 21 evaluated, 5 expanded
[t=0.119781s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.119815s, 430524 KB] g=5, 23 evaluated, 6 expanded
[t=0.120503s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.120536s, 430524 KB] g=6, 28 evaluated, 7 expanded
[t=0.123494s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.123527s, 430524 KB] g=9, 50 evaluated, 12 expanded
[t=0.123823s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.123852s, 430524 KB] g=9, 52 evaluated, 12 expanded
[t=0.132852s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.13289s, 430524 KB] g=13, 119 evaluated, 29 expanded
[t=0.133717s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.133764s, 430524 KB] g=14, 125 evaluated, 30 expanded
[t=0.135014s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.135046s, 430524 KB] g=16, 134 evaluated, 32 expanded
[t=0.139217s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.139253s, 430524 KB] g=16, 165 evaluated, 38 expanded
[t=0.141046s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.141083s, 430656 KB] g=19, 178 evaluated, 41 expanded
[t=0.14219s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.14222s, 430656 KB] g=21, 186 evaluated, 43 expanded
[t=0.143594s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.143625s, 430656 KB] g=23, 196 evaluated, 46 expanded
[t=0.153498s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.153533s, 430656 KB] g=28, 269 evaluated, 68 expanded
[t=0.157599s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.157632s, 430656 KB] g=27, 299 evaluated, 78 expanded
[t=0.157795s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.157823s, 430656 KB] g=27, 300 evaluated, 78 expanded
[t=0.158259s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.158288s, 430656 KB] g=28, 303 evaluated, 79 expanded
[t=0.15859s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.158618s, 430656 KB] g=29, 305 evaluated, 80 expanded
[t=0.159449s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.159478s, 430656 KB] g=30, 311 evaluated, 81 expanded
[t=0.159779s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.159808s, 430656 KB] g=31, 313 evaluated, 82 expanded
[t=0.160374s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.160405s, 430656 KB] g=32, 317 evaluated, 83 expanded
[t=0.160988s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.16102s, 430656 KB] g=33, 321 evaluated, 84 expanded
[t=0.161582s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.161615s, 430656 KB] g=34, 325 evaluated, 85 expanded
[t=0.161914s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.161948s, 430656 KB] g=35, 327 evaluated, 86 expanded
[t=0.162249s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.162277s, 430656 KB] g=36, 329 evaluated, 87 expanded
[t=0.162579s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.162609s, 430656 KB] g=37, 331 evaluated, 88 expanded
[t=0.16277s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.162798s, 430656 KB] g=37, 332 evaluated, 88 expanded
[t=0.16296s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.162987s, 430656 KB] g=37, 333 evaluated, 88 expanded
[t=0.163423s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.163455s, 430656 KB] g=38, 336 evaluated, 89 expanded
[t=0.163623s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.163652s, 430656 KB] g=39, 337 evaluated, 90 expanded
[t=0.164213s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.164242s, 430656 KB] g=40, 341 evaluated, 91 expanded
[t=0.164831s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.164863s, 430656 KB] g=41, 345 evaluated, 92 expanded
[t=0.165431s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.165462s, 430656 KB] g=43, 349 evaluated, 94 expanded
[t=0.166289s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.166319s, 430656 KB] g=45, 355 evaluated, 96 expanded
[t=0.166484s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.166512s, 430656 KB] g=46, 356 evaluated, 97 expanded
[t=0.166945s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.166977s, 430656 KB] g=48, 359 evaluated, 99 expanded
[t=0.167822s, 430656 KB] Solution found!
[t=0.167855s, 430656 KB] Actual search time: 0.0610911s
stack g i (1)
unstack d b (1)
put-down d (1)
unstack l a (1)
stack l b (1)
unstack a h (1)
put-down a (1)
pick-up h (1)
stack h e (1)
unstack l b (1)
stack l d (1)
unstack b k (1)
stack b l (1)
unstack k f (1)
stack k b (1)
unstack h e (1)
stack h a (1)
unstack g i (1)
stack g h (1)
pick-up e (1)
stack e i (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e i (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack b l (1)
put-down b (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.167882s, 430656 KB] Plan length: 51 step(s).
[t=0.167882s, 430656 KB] Plan cost: 51
[t=0.167882s, 430656 KB] Expanded 105 state(s).
[t=0.167882s, 430656 KB] Reopened 0 state(s).
[t=0.167882s, 430656 KB] Evaluated 366 state(s).
[t=0.167882s, 430656 KB] Evaluations: 366
[t=0.167882s, 430656 KB] Generated 477 state(s).
[t=0.167882s, 430656 KB] Dead ends: 0 state(s).
[t=0.167882s, 430656 KB] Expanded until last jump: 4 state(s).
[t=0.167882s, 430656 KB] Reopened until last jump: 0 state(s).
[t=0.167882s, 430656 KB] Evaluated until last jump: 17 state(s).
[t=0.167882s, 430656 KB] Generated until last jump: 19 state(s).
[t=0.167882s, 430656 KB] Number of registered states: 366
[t=0.167882s, 430656 KB] Int hash set load factor: 366/512 = 0.714844
[t=0.167882s, 430656 KB] Int hash set resizes: 9
[t=0.167882s, 430656 KB] Search time: 0.140181s
[t=0.167882s, 430656 KB] Total time: 0.167882s
Solution found.
Peak memory: 430656 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.050s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9841e-05s, 424928 KB] reading input...
[t=0.00233774s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0267503s, 427488 KB] Building successor generator...done!
[t=0.0270347s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0270582s, 427488 KB] time for successor generation creation: 0.000167515s
[t=0.0270872s, 427488 KB] Variables: 25
[t=0.0271102s, 427488 KB] FactPairs: 182
[t=0.0271325s, 427488 KB] Bytes per state: 8
[t=0.0273404s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.102578s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 161
[t=0.102658s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.102686s, 430080 KB] f = 161, 1 evaluated, 0 expanded
[t=0.102716s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 161
[t=0.102742s, 430080 KB] pruning method: none
[t=0.112706s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 157
[t=0.112762s, 430524 KB] g=1, 3 evaluated, 1 expanded
[t=0.113098s, 430524 KB] f = 162, 5 evaluated, 2 expanded
[t=0.113271s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.113301s, 430524 KB] g=3, 6 evaluated, 3 expanded
[t=0.113725s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.113756s, 430524 KB] g=4, 9 evaluated, 4 expanded
[t=0.114063s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.114093s, 430524 KB] g=5, 11 evaluated, 5 expanded
[t=0.114511s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.11454s, 430524 KB] g=6, 14 evaluated, 6 expanded
[t=0.117584s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.117621s, 430524 KB] g=11, 37 evaluated, 13 expanded
[t=0.12063s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.120664s, 430524 KB] g=18, 60 evaluated, 20 expanded
[t=0.120828s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.120861s, 430524 KB] g=19, 61 evaluated, 21 expanded
[t=0.121799s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.121832s, 430524 KB] g=21, 68 evaluated, 23 expanded
[t=0.122631s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.122661s, 430524 KB] g=22, 74 evaluated, 24 expanded
[t=0.124762s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.124796s, 430524 KB] g=24, 90 evaluated, 28 expanded
[t=0.125358s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.125389s, 430524 KB] g=25, 94 evaluated, 29 expanded
[t=0.126198s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.126228s, 430524 KB] g=26, 100 evaluated, 30 expanded
[t=0.129753s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.129787s, 430524 KB] g=28, 127 evaluated, 36 expanded
[t=0.130473s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.130503s, 430524 KB] g=29, 132 evaluated, 37 expanded
[t=0.133115s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.133152s, 430524 KB] g=31, 152 evaluated, 41 expanded
[t=0.152376s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.152417s, 430656 KB] g=31, 301 evaluated, 82 expanded, 6 reopened
[t=0.17354s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.17358s, 430656 KB] g=35, 466 evaluated, 120 expanded, 7 reopened
[t=0.176697s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.176735s, 430656 KB] g=35, 490 evaluated, 126 expanded, 7 reopened
[t=0.179882s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.179917s, 430656 KB] g=38, 514 evaluated, 131 expanded, 7 reopened
[t=0.189254s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.189291s, 430656 KB] g=39, 586 evaluated, 153 expanded, 9 reopened
[t=0.193057s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.193096s, 430788 KB] g=41, 615 evaluated, 159 expanded, 9 reopened
[t=0.195823s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.195854s, 430788 KB] g=44, 636 evaluated, 164 expanded, 9 reopened
[t=0.196806s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.196838s, 430788 KB] g=46, 643 evaluated, 166 expanded, 9 reopened
[t=0.197514s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.197544s, 430788 KB] g=47, 648 evaluated, 167 expanded, 9 reopened
[t=0.198216s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.198246s, 430788 KB] g=48, 653 evaluated, 168 expanded, 9 reopened
[t=0.199045s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.199082s, 430788 KB] g=49, 659 evaluated, 169 expanded, 9 reopened
[t=0.199502s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.199531s, 430788 KB] g=50, 662 evaluated, 170 expanded, 9 reopened
[t=0.199951s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.19998s, 430788 KB] g=51, 665 evaluated, 171 expanded, 9 reopened
[t=0.201189s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.201222s, 430788 KB] g=53, 674 evaluated, 173 expanded, 9 reopened
[t=0.20151s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.201542s, 430788 KB] g=54, 676 evaluated, 174 expanded, 9 reopened
[t=0.206483s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.20652s, 430788 KB] g=58, 714 evaluated, 185 expanded, 9 reopened
[t=0.206815s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.206845s, 430788 KB] g=59, 716 evaluated, 186 expanded, 9 reopened
[t=0.207392s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.207423s, 430788 KB] g=60, 720 evaluated, 187 expanded, 9 reopened
[t=0.208248s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.208281s, 430788 KB] g=61, 726 evaluated, 189 expanded, 9 reopened
[t=0.208568s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.2086s, 430788 KB] g=61, 728 evaluated, 189 expanded, 9 reopened
[t=0.209019s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.209048s, 430788 KB] g=62, 731 evaluated, 190 expanded, 9 reopened
[t=0.209337s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.209367s, 430788 KB] g=63, 733 evaluated, 191 expanded, 9 reopened
[t=0.209785s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.209817s, 430788 KB] g=64, 736 evaluated, 192 expanded, 9 reopened
[t=0.210491s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.210524s, 430788 KB] g=65, 741 evaluated, 194 expanded, 9 reopened
[t=0.210812s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.210841s, 430788 KB] g=66, 743 evaluated, 195 expanded, 9 reopened
[t=0.211136s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.211174s, 430788 KB] g=68, 746 evaluated, 197 expanded, 9 reopened
[t=0.211203s, 430788 KB] Solution found!
[t=0.211231s, 430788 KB] Actual search time: 0.108485s
unstack j i (1)
put-down j (1)
unstack h f (1)
stack h j (1)
unstack f l (1)
put-down f (1)
unstack i k (1)
put-down i (1)
unstack l c (1)
stack l k (1)
pick-up c (1)
stack c h (1)
pick-up f (1)
stack f c (1)
unstack l k (1)
stack l i (1)
unstack k e (1)
put-down k (1)
unstack e d (1)
stack e k (1)
unstack d b (1)
put-down d (1)
unstack l i (1)
stack l d (1)
unstack f c (1)
stack f e (1)
unstack b g (1)
put-down b (1)
unstack c h (1)
stack c b (1)
unstack h j (1)
stack h f (1)
unstack g a (1)
stack g h (1)
pick-up j (1)
stack j c (1)
unstack g h (1)
put-down g (1)
pick-up a (1)
stack a i (1)
unstack h f (1)
stack h g (1)
unstack a i (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack e k (1)
stack e i (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack l d (1)
stack l i (1)
unstack j c (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.211258s, 430788 KB] Plan length: 68 step(s).
[t=0.211258s, 430788 KB] Plan cost: 68
[t=0.211258s, 430788 KB] Expanded 198 state(s).
[t=0.211258s, 430788 KB] Reopened 9 state(s).
[t=0.211258s, 430788 KB] Evaluated 746 state(s).
[t=0.211258s, 430788 KB] Evaluations: 746
[t=0.211258s, 430788 KB] Generated 1034 state(s).
[t=0.211258s, 430788 KB] Dead ends: 0 state(s).
[t=0.211258s, 430788 KB] Expanded until last jump: 2 state(s).
[t=0.211258s, 430788 KB] Reopened until last jump: 0 state(s).
[t=0.211258s, 430788 KB] Evaluated until last jump: 5 state(s).
[t=0.211258s, 430788 KB] Generated until last jump: 5 state(s).
[t=0.211258s, 430788 KB] Number of registered states: 746
[t=0.211258s, 430788 KB] Int hash set load factor: 746/1024 = 0.728516
[t=0.211258s, 430788 KB] Int hash set resizes: 10
[t=0.211258s, 430788 KB] Search time: 0.183918s
[t=0.211258s, 430788 KB] Total time: 0.211258s
Solution found.
Peak memory: 430788 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p10.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.020s CPU, 0.008s wall-clock]
Done! [0.120s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8204e-05s, 424928 KB] reading input...
[t=0.00235269s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026925s, 427488 KB] Building successor generator...done!
[t=0.0272289s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0272543s, 427488 KB] time for successor generation creation: 0.000178903s
[t=0.0272853s, 427488 KB] Variables: 25
[t=0.0273106s, 427488 KB] FactPairs: 182
[t=0.0273351s, 427488 KB] Bytes per state: 8
[t=0.0275921s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.104937s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.105021s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.10505s, 430080 KB] f = 114, 1 evaluated, 0 expanded
[t=0.10508s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.105106s, 430080 KB] pruning method: none
[t=0.112796s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.112855s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.116543s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.116586s, 430524 KB] g=4, 13 evaluated, 4 expanded
[t=0.117271s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.117302s, 430524 KB] g=5, 18 evaluated, 6 expanded
[t=0.118117s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.118148s, 430524 KB] g=6, 24 evaluated, 8 expanded
[t=0.118569s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.118601s, 430524 KB] g=7, 27 evaluated, 9 expanded
[t=0.118764s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.118797s, 430524 KB] g=8, 28 evaluated, 10 expanded
[t=0.119087s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.119128s, 430524 KB] g=8, 30 evaluated, 10 expanded
[t=0.120481s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.120519s, 430524 KB] g=10, 40 evaluated, 13 expanded
[t=0.129739s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.129779s, 430524 KB] g=14, 111 evaluated, 36 expanded
[t=0.131774s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.13181s, 430524 KB] g=17, 126 evaluated, 40 expanded
[t=0.132762s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.132793s, 430524 KB] g=19, 133 evaluated, 42 expanded
[t=0.133989s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.134023s, 430524 KB] g=21, 142 evaluated, 44 expanded
[t=0.136258s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.136293s, 430524 KB] g=23, 159 evaluated, 47 expanded
[t=0.137623s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.137657s, 430524 KB] g=25, 169 evaluated, 49 expanded
[t=0.13807s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.138101s, 430524 KB] g=25, 172 evaluated, 49 expanded
[t=0.139835s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.139872s, 430524 KB] g=28, 185 evaluated, 52 expanded
[t=0.14081s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.140841s, 430524 KB] g=30, 192 evaluated, 54 expanded
[t=0.146193s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.146232s, 430656 KB] g=33, 233 evaluated, 64 expanded
[t=0.180462s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.180537s, 430656 KB] g=34, 493 evaluated, 130 expanded, 1 reopened
[t=0.18227s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.182316s, 430656 KB] g=34, 502 evaluated, 132 expanded, 1 reopened
[t=0.319547s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.319611s, 430920 KB] g=37, 1528 evaluated, 449 expanded, 25 reopened
[t=0.32017s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.320202s, 430920 KB] g=38, 1532 evaluated, 450 expanded, 25 reopened
[t=0.320769s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.320801s, 430920 KB] g=39, 1536 evaluated, 451 expanded, 25 reopened
[t=0.321238s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.321269s, 430920 KB] g=40, 1539 evaluated, 452 expanded, 25 reopened
[t=0.322223s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.322254s, 430920 KB] g=42, 1546 evaluated, 454 expanded, 25 reopened
[t=0.322816s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.322846s, 430920 KB] g=43, 1550 evaluated, 455 expanded, 25 reopened
[t=0.323013s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.323045s, 430920 KB] g=44, 1551 evaluated, 456 expanded, 25 reopened
[t=0.324134s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.324174s, 430920 KB] g=45, 1559 evaluated, 458 expanded, 25 reopened
[t=0.324729s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.324762s, 430920 KB] g=46, 1563 evaluated, 459 expanded, 25 reopened
[t=0.324927s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.324957s, 430920 KB] g=47, 1564 evaluated, 460 expanded, 25 reopened
[t=0.325512s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.325542s, 430920 KB] g=48, 1568 evaluated, 461 expanded, 25 reopened
[t=0.325705s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.325734s, 430920 KB] g=49, 1569 evaluated, 462 expanded, 25 reopened
[t=0.32629s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.326321s, 430920 KB] g=50, 1573 evaluated, 463 expanded, 25 reopened
[t=0.327002s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.327033s, 430920 KB] g=51, 1578 evaluated, 464 expanded, 25 reopened
[t=0.331522s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.331561s, 430920 KB] g=55, 1612 evaluated, 480 expanded, 25 reopened
[t=0.331858s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.331888s, 430920 KB] g=56, 1614 evaluated, 481 expanded, 25 reopened
[t=0.332188s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.332218s, 430920 KB] g=58, 1617 evaluated, 483 expanded, 25 reopened
[t=0.332253s, 430920 KB] Solution found!
[t=0.332283s, 430920 KB] Actual search time: 0.227171s
unstack g b (1)
stack g c (1)
pick-up j (1)
stack j g (1)
unstack b k (1)
stack b l (1)
unstack k i (1)
put-down k (1)
unstack i f (1)
put-down i (1)
unstack f d (1)
stack f b (1)
pick-up k (1)
stack k d (1)
unstack j g (1)
stack j i (1)
unstack g c (1)
put-down g (1)
unstack c e (1)
put-down c (1)
unstack e a (1)
stack e k (1)
unstack a h (1)
stack a e (1)
pick-up h (1)
stack h a (1)
unstack f b (1)
stack f j (1)
pick-up c (1)
stack c b (1)
unstack h a (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack e k (1)
stack e j (1)
unstack k d (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack c b (1)
put-down c (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.33231s, 430920 KB] Plan length: 58 step(s).
[t=0.33231s, 430920 KB] Plan cost: 58
[t=0.33231s, 430920 KB] Expanded 484 state(s).
[t=0.33231s, 430920 KB] Reopened 25 state(s).
[t=0.33231s, 430920 KB] Evaluated 1617 state(s).
[t=0.33231s, 430920 KB] Evaluations: 1617
[t=0.33231s, 430920 KB] Generated 2432 state(s).
[t=0.33231s, 430920 KB] Dead ends: 0 state(s).
[t=0.33231s, 430920 KB] Expanded until last jump: 0 state(s).
[t=0.33231s, 430920 KB] Reopened until last jump: 0 state(s).
[t=0.33231s, 430920 KB] Evaluated until last jump: 1 state(s).
[t=0.33231s, 430920 KB] Generated until last jump: 0 state(s).
[t=0.33231s, 430920 KB] Number of registered states: 1617
[t=0.33231s, 430920 KB] Int hash set load factor: 1617/2048 = 0.789551
[t=0.33231s, 430920 KB] Int hash set resizes: 11
[t=0.33231s, 430920 KB] Search time: 0.304719s
[t=0.33231s, 430920 KB] Total time: 0.33231s
Solution found.
Peak memory: 430920 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p11.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9191e-05s, 424928 KB] reading input...
[t=0.00239017s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.027226s, 427488 KB] Building successor generator...done!
[t=0.0275339s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0275595s, 427488 KB] time for successor generation creation: 0.000180717s
[t=0.0275912s, 427488 KB] Variables: 25
[t=0.0276162s, 427488 KB] FactPairs: 182
[t=0.0276403s, 427488 KB] Bytes per state: 8
[t=0.0278797s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106209s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.10629s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.106319s, 430080 KB] f = 140, 1 evaluated, 0 expanded
[t=0.10635s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 140
[t=0.106377s, 430080 KB] pruning method: none
[t=0.116729s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 135
[t=0.116792s, 430524 KB] g=1, 5 evaluated, 1 expanded
[t=0.11712s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.117152s, 430524 KB] g=2, 7 evaluated, 2 expanded
[t=0.11731s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.117342s, 430524 KB] g=2, 8 evaluated, 2 expanded
[t=0.118006s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 114
[t=0.11804s, 430524 KB] g=3, 13 evaluated, 3 expanded
[t=0.118201s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 83
[t=0.118231s, 430524 KB] g=4, 14 evaluated, 4 expanded
[t=0.118643s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.118673s, 430524 KB] g=4, 17 evaluated, 4 expanded
[t=0.119087s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.11912s, 430524 KB] g=5, 20 evaluated, 5 expanded
[t=0.119665s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.119709s, 430524 KB] g=6, 24 evaluated, 6 expanded
[t=0.120759s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.120789s, 430524 KB] g=8, 32 evaluated, 8 expanded
[t=0.120967s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.121s, 430524 KB] g=8, 33 evaluated, 8 expanded
[t=0.128601s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.128636s, 430524 KB] g=12, 92 evaluated, 25 expanded
[t=0.129079s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.129115s, 430524 KB] g=13, 95 evaluated, 26 expanded
[t=0.139303s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.13934s, 430524 KB] g=15, 174 evaluated, 45 expanded
[t=0.174552s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.174602s, 430656 KB] g=18, 447 evaluated, 128 expanded, 2 reopened
[t=0.252869s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.252919s, 430788 KB] g=27, 1055 evaluated, 340 expanded, 12 reopened
[t=0.253214s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.253248s, 430788 KB] g=28, 1057 evaluated, 341 expanded, 12 reopened
[t=0.25341s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.253439s, 430788 KB] g=28, 1058 evaluated, 341 expanded, 12 reopened
[t=0.25386s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.25389s, 430788 KB] g=29, 1061 evaluated, 342 expanded, 12 reopened
[t=0.266046s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.266086s, 430788 KB] g=35, 1155 evaluated, 377 expanded, 12 reopened
[t=0.266379s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.266412s, 430788 KB] g=36, 1157 evaluated, 378 expanded, 12 reopened
[t=0.266956s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.266992s, 430788 KB] g=37, 1161 evaluated, 379 expanded, 12 reopened
[t=0.267542s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.267573s, 430788 KB] g=38, 1165 evaluated, 380 expanded, 12 reopened
[t=0.269551s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.269596s, 430788 KB] g=41, 1180 evaluated, 384 expanded, 12 reopened
[t=0.269888s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.269919s, 430788 KB] g=42, 1182 evaluated, 385 expanded, 12 reopened
[t=0.270464s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.270497s, 430788 KB] g=43, 1186 evaluated, 386 expanded, 12 reopened
[t=0.27104s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.271072s, 430788 KB] g=44, 1190 evaluated, 387 expanded, 12 reopened
[t=0.272001s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.272036s, 430788 KB] g=46, 1197 evaluated, 389 expanded, 12 reopened
[t=0.27258s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.272611s, 430788 KB] g=47, 1201 evaluated, 390 expanded, 12 reopened
[t=0.273174s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.273208s, 430788 KB] g=48, 1205 evaluated, 391 expanded, 12 reopened
[t=0.274522s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.274553s, 430788 KB] g=51, 1215 evaluated, 394 expanded, 12 reopened
[t=0.274967s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.274997s, 430788 KB] g=51, 1218 evaluated, 394 expanded, 12 reopened
[t=0.275411s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.275441s, 430788 KB] g=52, 1221 evaluated, 395 expanded, 12 reopened
[t=0.275727s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.275759s, 430788 KB] g=53, 1223 evaluated, 396 expanded, 12 reopened
[t=0.276177s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.276206s, 430788 KB] g=54, 1226 evaluated, 397 expanded, 12 reopened
[t=0.276899s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.276932s, 430788 KB] g=55, 1231 evaluated, 399 expanded, 12 reopened
[t=0.277223s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.277252s, 430788 KB] g=56, 1233 evaluated, 400 expanded, 12 reopened
[t=0.277549s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.277582s, 430788 KB] g=58, 1236 evaluated, 402 expanded, 12 reopened
[t=0.277611s, 430788 KB] Solution found!
[t=0.277639s, 430788 KB] Actual search time: 0.171258s
pick-up k (1)
stack k b (1)
unstack l e (1)
put-down l (1)
unstack e h (1)
stack e k (1)
pick-up g (1)
stack g h (1)
unstack d i (1)
put-down d (1)
unstack i c (1)
stack i l (1)
pick-up d (1)
stack d c (1)
unstack e k (1)
stack e i (1)
unstack g h (1)
stack g e (1)
unstack h f (1)
put-down h (1)
unstack f j (1)
stack f k (1)
pick-up h (1)
stack h f (1)
unstack g e (1)
stack g h (1)
unstack e i (1)
stack e d (1)
unstack j a (1)
stack j i (1)
pick-up a (1)
stack a e (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack i l (1)
put-down i (1)
unstack d c (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.277666s, 430788 KB] Plan length: 58 step(s).
[t=0.277666s, 430788 KB] Plan cost: 58
[t=0.277666s, 430788 KB] Expanded 403 state(s).
[t=0.277666s, 430788 KB] Reopened 12 state(s).
[t=0.277666s, 430788 KB] Evaluated 1236 state(s).
[t=0.277666s, 430788 KB] Evaluations: 1236
[t=0.277666s, 430788 KB] Generated 1866 state(s).
[t=0.277666s, 430788 KB] Dead ends: 0 state(s).
[t=0.277666s, 430788 KB] Expanded until last jump: 0 state(s).
[t=0.277666s, 430788 KB] Reopened until last jump: 0 state(s).
[t=0.277666s, 430788 KB] Evaluated until last jump: 1 state(s).
[t=0.277666s, 430788 KB] Generated until last jump: 0 state(s).
[t=0.277666s, 430788 KB] Number of registered states: 1236
[t=0.277666s, 430788 KB] Int hash set load factor: 1236/2048 = 0.603516
[t=0.277666s, 430788 KB] Int hash set resizes: 11
[t=0.277666s, 430788 KB] Search time: 0.249787s
[t=0.277666s, 430788 KB] Total time: 0.277666s
Solution found.
Peak memory: 430788 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p12.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.110s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.14e-05s, 424928 KB] reading input...
[t=0.0022921s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026787s, 427488 KB] Building successor generator...done!
[t=0.0270894s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0271149s, 427488 KB] time for successor generation creation: 0.000180603s
[t=0.0271454s, 427488 KB] Variables: 25
[t=0.0271694s, 427488 KB] FactPairs: 182
[t=0.0271924s, 427488 KB] Bytes per state: 8
[t=0.0274104s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.104604s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.104679s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.104707s, 430080 KB] f = 109, 1 evaluated, 0 expanded
[t=0.104737s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 109
[t=0.104763s, 430080 KB] pruning method: none
[t=0.114804s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.114881s, 430524 KB] g=1, 3 evaluated, 1 expanded
[t=0.115045s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 95
[t=0.115076s, 430524 KB] g=1, 4 evaluated, 1 expanded
[t=0.115236s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.115265s, 430524 KB] g=1, 5 evaluated, 1 expanded
[t=0.116322s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.116353s, 430524 KB] g=3, 13 evaluated, 3 expanded
[t=0.117017s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.11705s, 430524 KB] g=4, 18 evaluated, 4 expanded
[t=0.117729s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.117765s, 430524 KB] g=5, 23 evaluated, 5 expanded
[t=0.118176s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.118205s, 430524 KB] g=6, 26 evaluated, 6 expanded
[t=0.124311s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.124346s, 430524 KB] g=11, 74 evaluated, 21 expanded
[t=0.12477s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.1248s, 430524 KB] g=12, 77 evaluated, 22 expanded
[t=0.125859s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.125893s, 430524 KB] g=14, 85 evaluated, 24 expanded
[t=0.126298s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.12633s, 430524 KB] g=14, 88 evaluated, 24 expanded
[t=0.12687s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.1269s, 430524 KB] g=15, 92 evaluated, 25 expanded
[t=0.12731s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.127342s, 430524 KB] g=16, 95 evaluated, 26 expanded
[t=0.200823s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.200881s, 430788 KB] g=29, 678 evaluated, 217 expanded, 11 reopened
[t=0.201946s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.201983s, 430788 KB] g=31, 686 evaluated, 219 expanded, 11 reopened
[t=0.20227s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.2023s, 430788 KB] g=32, 688 evaluated, 220 expanded, 11 reopened
[t=0.202836s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.202866s, 430788 KB] g=33, 692 evaluated, 221 expanded, 11 reopened
[t=0.20341s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.203443s, 430788 KB] g=34, 696 evaluated, 222 expanded, 11 reopened
[t=0.204104s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.204134s, 430788 KB] g=35, 701 evaluated, 223 expanded, 11 reopened
[t=0.205322s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.205355s, 430788 KB] g=37, 710 evaluated, 226 expanded, 11 reopened
[t=0.205766s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.205796s, 430788 KB] g=38, 713 evaluated, 227 expanded, 11 reopened
[t=0.211098s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.211137s, 430788 KB] g=39, 755 evaluated, 237 expanded, 11 reopened
[t=0.212547s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.212578s, 430788 KB] g=41, 766 evaluated, 240 expanded, 11 reopened
[t=0.212986s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.213025s, 430788 KB] g=41, 769 evaluated, 240 expanded, 11 reopened
[t=0.213455s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.213488s, 430788 KB] g=42, 772 evaluated, 241 expanded, 11 reopened
[t=0.213775s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.213804s, 430788 KB] g=43, 774 evaluated, 242 expanded, 11 reopened
[t=0.214217s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.214246s, 430788 KB] g=44, 777 evaluated, 243 expanded, 11 reopened
[t=0.21491s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.214943s, 430788 KB] g=45, 782 evaluated, 245 expanded, 11 reopened
[t=0.21523s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.215259s, 430788 KB] g=46, 784 evaluated, 246 expanded, 11 reopened
[t=0.215551s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.21558s, 430788 KB] g=48, 787 evaluated, 248 expanded, 11 reopened
[t=0.215608s, 430788 KB] Solution found!
[t=0.215637s, 430788 KB] Actual search time: 0.110869s
unstack k g (1)
stack k f (1)
unstack a h (1)
stack a k (1)
pick-up h (1)
stack h a (1)
unstack e b (1)
stack e l (1)
unstack b c (1)
put-down b (1)
unstack e l (1)
stack e b (1)
unstack g j (1)
put-down g (1)
pick-up j (1)
stack j e (1)
unstack c d (1)
put-down c (1)
pick-up l (1)
stack l d (1)
unstack j e (1)
stack j c (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k e (1)
pick-up f (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack l d (1)
put-down l (1)
unstack j c (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.215664s, 430788 KB] Plan length: 48 step(s).
[t=0.215664s, 430788 KB] Plan cost: 48
[t=0.215664s, 430788 KB] Expanded 249 state(s).
[t=0.215664s, 430788 KB] Reopened 11 state(s).
[t=0.215664s, 430788 KB] Evaluated 787 state(s).
[t=0.215664s, 430788 KB] Evaluations: 787
[t=0.215664s, 430788 KB] Generated 1159 state(s).
[t=0.215664s, 430788 KB] Dead ends: 0 state(s).
[t=0.215664s, 430788 KB] Expanded until last jump: 0 state(s).
[t=0.215664s, 430788 KB] Reopened until last jump: 0 state(s).
[t=0.215664s, 430788 KB] Evaluated until last jump: 1 state(s).
[t=0.215664s, 430788 KB] Generated until last jump: 0 state(s).
[t=0.215664s, 430788 KB] Number of registered states: 787
[t=0.215664s, 430788 KB] Int hash set load factor: 787/1024 = 0.768555
[t=0.215664s, 430788 KB] Int hash set resizes: 10
[t=0.215664s, 430788 KB] Search time: 0.188254s
[t=0.215664s, 430788 KB] Total time: 0.215664s
Solution found.
Peak memory: 430788 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p13.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.100s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6484e-05s, 424928 KB] reading input...
[t=0.00235417s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0270983s, 427488 KB] Building successor generator...done!
[t=0.027402s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0274277s, 427488 KB] time for successor generation creation: 0.000181978s
[t=0.027458s, 427488 KB] Variables: 25
[t=0.0274858s, 427488 KB] FactPairs: 182
[t=0.0275095s, 427488 KB] Bytes per state: 8
[t=0.0277526s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106352s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.106441s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.106469s, 430080 KB] f = 111, 1 evaluated, 0 expanded
[t=0.1065s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.106526s, 430080 KB] pruning method: none
[t=0.11426s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.114332s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.116664s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.116707s, 430524 KB] g=1, 3 evaluated, 1 expanded
[t=0.117556s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.117589s, 430524 KB] g=2, 9 evaluated, 3 expanded
[t=0.119612s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.119644s, 430524 KB] g=4, 24 evaluated, 7 expanded
[t=0.120071s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.1201s, 430524 KB] g=5, 27 evaluated, 8 expanded
[t=0.120948s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.120983s, 430524 KB] g=6, 33 evaluated, 9 expanded
[t=0.121281s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.121314s, 430524 KB] g=7, 35 evaluated, 10 expanded
[t=0.122541s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.122571s, 430524 KB] g=8, 44 evaluated, 12 expanded
[t=0.12777s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.127805s, 430524 KB] g=10, 83 evaluated, 21 expanded
[t=0.128644s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.128677s, 430524 KB] g=11, 89 evaluated, 22 expanded
[t=0.137306s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.137345s, 430524 KB] g=11, 154 evaluated, 39 expanded
[t=0.146188s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.146226s, 430656 KB] g=18, 221 evaluated, 54 expanded
[t=0.163365s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.163419s, 430656 KB] g=14, 350 evaluated, 86 expanded
[t=0.165987s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.166022s, 430656 KB] g=17, 369 evaluated, 90 expanded
[t=0.166989s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.167019s, 430656 KB] g=19, 376 evaluated, 92 expanded
[t=0.167312s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.167342s, 430656 KB] g=19, 378 evaluated, 92 expanded
[t=0.1679s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.167945s, 430656 KB] g=20, 382 evaluated, 93 expanded
[t=0.17129s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.171326s, 430656 KB] g=21, 407 evaluated, 99 expanded
[t=0.172826s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.172862s, 430656 KB] g=23, 418 evaluated, 101 expanded
[t=0.176469s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.176506s, 430656 KB] g=27, 445 evaluated, 108 expanded
[t=0.185621s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.185661s, 430788 KB] g=29, 513 evaluated, 128 expanded, 1 reopened
[t=0.187422s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.187453s, 430788 KB] g=30, 526 evaluated, 131 expanded, 1 reopened
[t=0.213488s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.213569s, 430788 KB] g=28, 664 evaluated, 164 expanded, 1 reopened
[t=0.216404s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.216438s, 430788 KB] g=30, 685 evaluated, 169 expanded, 1 reopened
[t=0.217131s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.217164s, 430788 KB] g=31, 690 evaluated, 170 expanded, 1 reopened
[t=0.219191s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.219222s, 430788 KB] g=34, 705 evaluated, 173 expanded, 1 reopened
[t=0.220332s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.220366s, 430788 KB] g=36, 713 evaluated, 175 expanded, 1 reopened
[t=0.220533s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.220561s, 430788 KB] g=37, 714 evaluated, 176 expanded, 1 reopened
[t=0.223926s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.223958s, 430920 KB] g=40, 739 evaluated, 183 expanded, 1 reopened
[t=0.224534s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.224565s, 430920 KB] g=41, 743 evaluated, 184 expanded, 1 reopened
[t=0.225131s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.225161s, 430920 KB] g=42, 747 evaluated, 185 expanded, 1 reopened
[t=0.225596s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.225628s, 430920 KB] g=43, 750 evaluated, 186 expanded, 1 reopened
[t=0.226193s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.226232s, 430920 KB] g=44, 754 evaluated, 187 expanded, 1 reopened
[t=0.22828s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.228315s, 430920 KB] g=47, 769 evaluated, 192 expanded, 1 reopened
[t=0.228878s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.228907s, 430920 KB] g=48, 773 evaluated, 193 expanded, 1 reopened
[t=0.231995s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.232026s, 430920 KB] g=50, 796 evaluated, 202 expanded, 1 reopened
[t=0.23234s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.232376s, 430920 KB] g=51, 798 evaluated, 203 expanded, 1 reopened
[t=0.232684s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.232713s, 430920 KB] g=53, 801 evaluated, 205 expanded, 1 reopened
[t=0.232741s, 430920 KB] Solution found!
[t=0.23277s, 430920 KB] Actual search time: 0.12624s
put-down a (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d a (1)
unstack g e (1)
stack g i (1)
unstack h l (1)
put-down h (1)
unstack e j (1)
stack e b (1)
unstack j f (1)
stack j e (1)
pick-up h (1)
stack h f (1)
unstack g i (1)
stack g h (1)
unstack i c (1)
put-down i (1)
unstack d a (1)
stack d i (1)
pick-up a (1)
stack a c (1)
pick-up l (1)
stack l d (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a c (1)
stack a h (1)
unstack f k (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack l d (1)
stack l c (1)
unstack j e (1)
stack j d (1)
unstack e b (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.232797s, 430920 KB] Plan length: 53 step(s).
[t=0.232797s, 430920 KB] Plan cost: 53
[t=0.232797s, 430920 KB] Expanded 206 state(s).
[t=0.232797s, 430920 KB] Reopened 1 state(s).
[t=0.232797s, 430920 KB] Evaluated 801 state(s).
[t=0.232797s, 430920 KB] Evaluations: 801
[t=0.232797s, 430920 KB] Generated 1025 state(s).
[t=0.232797s, 430920 KB] Dead ends: 0 state(s).
[t=0.232797s, 430920 KB] Expanded until last jump: 0 state(s).
[t=0.232797s, 430920 KB] Reopened until last jump: 0 state(s).
[t=0.232797s, 430920 KB] Evaluated until last jump: 1 state(s).
[t=0.232797s, 430920 KB] Generated until last jump: 0 state(s).
[t=0.232797s, 430920 KB] Number of registered states: 801
[t=0.232797s, 430920 KB] Int hash set load factor: 801/1024 = 0.782227
[t=0.232797s, 430920 KB] Int hash set resizes: 10
[t=0.232797s, 430920 KB] Search time: 0.205045s
[t=0.232797s, 430920 KB] Total time: 0.232797s
Solution found.
Peak memory: 430920 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p14.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.030s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.100s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7409e-05s, 424928 KB] reading input...
[t=0.00231604s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0269054s, 427488 KB] Building successor generator...done!
[t=0.0272127s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0272389s, 427488 KB] time for successor generation creation: 0.000186236s
[t=0.0272701s, 427488 KB] Variables: 25
[t=0.0272947s, 427488 KB] FactPairs: 182
[t=0.0273187s, 427488 KB] Bytes per state: 8
[t=0.0275399s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106071s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.106153s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.106182s, 430080 KB] f = 98, 1 evaluated, 0 expanded
[t=0.106212s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.106237s, 430080 KB] pruning method: none
[t=0.113993s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.114053s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.116409s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.116467s, 430524 KB] g=1, 3 evaluated, 1 expanded
[t=0.116633s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 70
[t=0.116664s, 430524 KB] g=1, 4 evaluated, 1 expanded
[t=0.117897s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.117933s, 430524 KB] g=3, 13 evaluated, 5 expanded
[t=0.141225s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.141333s, 430524 KB] g=5, 139 evaluated, 51 expanded, 5 reopened
[t=0.141628s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.141662s, 430524 KB] g=5, 141 evaluated, 51 expanded, 5 reopened
[t=0.142596s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.142627s, 430524 KB] g=7, 148 evaluated, 54 expanded, 5 reopened
[t=0.146265s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.146302s, 430524 KB] g=9, 176 evaluated, 61 expanded, 5 reopened
[t=0.147362s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.147394s, 430524 KB] g=11, 184 evaluated, 64 expanded, 5 reopened
[t=0.148444s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.148474s, 430524 KB] g=12, 192 evaluated, 65 expanded, 5 reopened
[t=0.166732s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 56
[t=0.166776s, 430656 KB] g=13, 334 evaluated, 106 expanded, 5 reopened
[t=0.202356s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.202406s, 430656 KB] g=14, 611 evaluated, 192 expanded, 5 reopened
[t=0.202567s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.202597s, 430656 KB] g=14, 612 evaluated, 192 expanded, 5 reopened
[t=0.20302s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.203051s, 430656 KB] g=15, 615 evaluated, 193 expanded, 5 reopened
[t=0.203594s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.203624s, 430656 KB] g=16, 619 evaluated, 194 expanded, 5 reopened
[t=0.207512s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.20755s, 430656 KB] g=19, 649 evaluated, 202 expanded, 5 reopened
[t=0.208731s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.208775s, 430656 KB] g=21, 658 evaluated, 204 expanded, 5 reopened
[t=0.244712s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.244765s, 430788 KB] g=28, 937 evaluated, 285 expanded, 9 reopened
[t=0.25364s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.253686s, 430788 KB] g=23, 1005 evaluated, 304 expanded, 9 reopened
[t=0.27767s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.277721s, 430920 KB] g=28, 1191 evaluated, 362 expanded, 10 reopened
[t=0.283436s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.283478s, 430920 KB] g=31, 1235 evaluated, 373 expanded, 10 reopened
[t=0.284546s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.284578s, 430920 KB] g=33, 1243 evaluated, 375 expanded, 10 reopened
[t=0.291585s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.291625s, 430920 KB] g=36, 1297 evaluated, 391 expanded, 10 reopened
[t=0.293863s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.293902s, 430920 KB] g=39, 1314 evaluated, 396 expanded, 10 reopened
[t=0.367212s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.367269s, 431052 KB] g=42, 1884 evaluated, 585 expanded, 28 reopened
[t=0.367937s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.367968s, 431052 KB] g=43, 1889 evaluated, 586 expanded, 28 reopened
[t=0.368634s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.368668s, 431052 KB] g=44, 1894 evaluated, 587 expanded, 28 reopened
[t=0.369492s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.369531s, 431052 KB] g=45, 1900 evaluated, 588 expanded, 28 reopened
[t=0.371605s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.371639s, 431052 KB] g=47, 1916 evaluated, 591 expanded, 28 reopened
[t=0.37231s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.372341s, 431052 KB] g=48, 1921 evaluated, 592 expanded, 28 reopened
[t=0.374084s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.37412s, 431052 KB] g=50, 1933 evaluated, 595 expanded, 28 reopened
[t=0.374541s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.374583s, 431052 KB] g=50, 1936 evaluated, 595 expanded, 28 reopened
[t=0.375002s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.375034s, 431052 KB] g=51, 1939 evaluated, 596 expanded, 28 reopened
[t=0.375322s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.375353s, 431052 KB] g=52, 1941 evaluated, 597 expanded, 28 reopened
[t=0.37577s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.375801s, 431052 KB] g=53, 1944 evaluated, 598 expanded, 28 reopened
[t=0.376476s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.376508s, 431052 KB] g=54, 1949 evaluated, 600 expanded, 28 reopened
[t=0.376795s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.376825s, 431052 KB] g=55, 1951 evaluated, 601 expanded, 28 reopened
[t=0.377146s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.377184s, 431052 KB] g=57, 1954 evaluated, 603 expanded, 28 reopened
[t=0.377214s, 431052 KB] Solution found!
[t=0.377242s, 431052 KB] Actual search time: 0.271s
put-down f (1)
unstack a h (1)
stack a f (1)
unstack g i (1)
stack g h (1)
unstack i j (1)
stack i g (1)
unstack j d (1)
stack j a (1)
unstack c b (1)
stack c d (1)
unstack b e (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack c d (1)
stack c e (1)
unstack d k (1)
stack d c (1)
pick-up k (1)
stack k d (1)
unstack i g (1)
put-down i (1)
unstack j a (1)
stack j i (1)
unstack g h (1)
put-down g (1)
unstack h l (1)
stack h g (1)
unstack a f (1)
stack a h (1)
unstack k d (1)
stack k j (1)
pick-up f (1)
stack f k (1)
unstack d c (1)
put-down d (1)
unstack c e (1)
put-down c (1)
unstack f k (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.377269s, 431052 KB] Plan length: 57 step(s).
[t=0.377269s, 431052 KB] Plan cost: 57
[t=0.377269s, 431052 KB] Expanded 604 state(s).
[t=0.377269s, 431052 KB] Reopened 28 state(s).
[t=0.377269s, 431052 KB] Evaluated 1954 state(s).
[t=0.377269s, 431052 KB] Evaluations: 1954
[t=0.377269s, 431052 KB] Generated 2793 state(s).
[t=0.377269s, 431052 KB] Dead ends: 0 state(s).
[t=0.377269s, 431052 KB] Expanded until last jump: 0 state(s).
[t=0.377269s, 431052 KB] Reopened until last jump: 0 state(s).
[t=0.377269s, 431052 KB] Evaluated until last jump: 1 state(s).
[t=0.377269s, 431052 KB] Generated until last jump: 0 state(s).
[t=0.377269s, 431052 KB] Number of registered states: 1954
[t=0.377269s, 431052 KB] Int hash set load factor: 1954/4096 = 0.477051
[t=0.377269s, 431052 KB] Int hash set resizes: 12
[t=0.377269s, 431052 KB] Search time: 0.34973s
[t=0.377269s, 431052 KB] Total time: 0.377269s
Solution found.
Peak memory: 431052 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p15.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.030s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.025s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.100s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.8772e-05s, 424928 KB] reading input...
[t=0.00245322s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0273566s, 427488 KB] Building successor generator...done!
[t=0.0276565s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0276818s, 427488 KB] time for successor generation creation: 0.000180048s
[t=0.0277149s, 427488 KB] Variables: 25
[t=0.0277397s, 427488 KB] FactPairs: 182
[t=0.0277632s, 427488 KB] Bytes per state: 8
[t=0.0279828s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.105644s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 161
[t=0.105729s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.10576s, 430080 KB] f = 161, 1 evaluated, 0 expanded
[t=0.105791s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 161
[t=0.105817s, 430080 KB] pruning method: none
[t=0.115895s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 118
[t=0.115977s, 430524 KB] g=1, 3 evaluated, 1 expanded
[t=0.116688s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 115
[t=0.116724s, 430524 KB] g=2, 8 evaluated, 2 expanded
[t=0.117521s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.117555s, 430524 KB] g=3, 14 evaluated, 3 expanded
[t=0.118101s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.11813s, 430524 KB] g=4, 18 evaluated, 4 expanded
[t=0.118416s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.118445s, 430524 KB] g=4, 20 evaluated, 4 expanded
[t=0.118606s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.118639s, 430524 KB] g=5, 21 evaluated, 5 expanded
[t=0.118924s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.118954s, 430524 KB] g=5, 23 evaluated, 5 expanded
[t=0.119757s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.119787s, 430524 KB] g=6, 29 evaluated, 6 expanded
[t=0.120484s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.120516s, 430524 KB] g=7, 34 evaluated, 7 expanded
[t=0.121951s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.121985s, 430524 KB] g=9, 45 evaluated, 9 expanded
[t=0.122782s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.122812s, 430524 KB] g=10, 51 evaluated, 10 expanded
[t=0.12413s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.124161s, 430524 KB] g=12, 61 evaluated, 13 expanded
[t=0.125617s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.12565s, 430524 KB] g=13, 72 evaluated, 15 expanded
[t=0.128382s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.128419s, 430524 KB] g=14, 93 evaluated, 20 expanded
[t=0.13012s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.130151s, 430524 KB] g=17, 106 evaluated, 24 expanded
[t=0.133809s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.133845s, 430524 KB] g=17, 134 evaluated, 32 expanded
[t=0.135423s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.135461s, 430524 KB] g=20, 146 evaluated, 35 expanded
[t=0.141059s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.141096s, 430656 KB] g=17, 189 evaluated, 47 expanded
[t=0.149403s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.149441s, 430656 KB] g=21, 253 evaluated, 72 expanded, 6 reopened
[t=0.191304s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.191345s, 430656 KB] g=22, 578 evaluated, 178 expanded, 10 reopened
[t=0.218666s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.218707s, 430788 KB] g=28, 790 evaluated, 247 expanded, 20 reopened
[t=0.409523s, 430936 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.409581s, 430936 KB] g=33, 2269 evaluated, 834 expanded, 140 reopened
[t=0.412051s, 430936 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.412083s, 430936 KB] g=32, 2288 evaluated, 839 expanded, 140 reopened
[t=0.414687s, 430936 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.41472s, 430936 KB] g=36, 2308 evaluated, 844 expanded, 140 reopened
[t=0.420044s, 430936 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.420078s, 430936 KB] g=38, 2349 evaluated, 855 expanded, 140 reopened
[t=0.42128s, 430936 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.421316s, 430936 KB] g=40, 2358 evaluated, 857 expanded, 140 reopened
[t=0.42661s, 430936 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.426644s, 430936 KB] g=41, 2399 evaluated, 868 expanded, 140 reopened
[t=0.429407s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.429442s, 431068 KB] g=44, 2420 evaluated, 872 expanded, 140 reopened
[t=0.633593s, 431200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.633659s, 431200 KB] g=37, 3996 evaluated, 1529 expanded, 377 reopened
[t=0.642074s, 431200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.64211s, 431200 KB] g=42, 4061 evaluated, 1547 expanded, 377 reopened
[t=0.64253s, 431200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.642561s, 431200 KB] g=43, 4064 evaluated, 1548 expanded, 377 reopened
[t=0.643109s, 431200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.64315s, 431200 KB] g=44, 4068 evaluated, 1549 expanded, 377 reopened
[t=0.643959s, 431200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.643992s, 431200 KB] g=46, 4074 evaluated, 1551 expanded, 377 reopened
[t=0.64507s, 431332 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.645103s, 431332 KB] g=48, 4082 evaluated, 1553 expanded, 377 reopened
[t=0.647967s, 431332 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.648001s, 431332 KB] g=50, 4104 evaluated, 1560 expanded, 377 reopened
[t=0.648956s, 431332 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.648989s, 431332 KB] g=52, 4111 evaluated, 1562 expanded, 377 reopened
[t=0.649412s, 431332 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.649442s, 431332 KB] g=53, 4114 evaluated, 1563 expanded, 377 reopened
[t=0.649861s, 431332 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.649891s, 431332 KB] g=54, 4117 evaluated, 1564 expanded, 377 reopened
[t=0.650567s, 431332 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.650597s, 431332 KB] g=55, 4122 evaluated, 1566 expanded, 377 reopened
[t=0.650886s, 431332 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.650918s, 431332 KB] g=56, 4124 evaluated, 1567 expanded, 377 reopened
[t=0.651213s, 431332 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.651243s, 431332 KB] g=58, 4127 evaluated, 1569 expanded, 377 reopened
[t=0.651272s, 431332 KB] Solution found!
[t=0.651301s, 431332 KB] Actual search time: 0.545479s
unstack f b (1)
stack f h (1)
unstack i e (1)
put-down i (1)
unstack e l (1)
stack e i (1)
unstack f h (1)
stack f e (1)
pick-up h (1)
stack h f (1)
unstack b g (1)
stack b j (1)
unstack l a (1)
stack l b (1)
unstack h f (1)
stack h a (1)
pick-up g (1)
stack g h (1)
unstack d c (1)
put-down d (1)
unstack c k (1)
put-down c (1)
pick-up d (1)
stack d c (1)
unstack l b (1)
stack l d (1)
unstack b j (1)
put-down b (1)
pick-up j (1)
stack j b (1)
pick-up k (1)
stack k j (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack j b (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d c (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.651327s, 431332 KB] Plan length: 58 step(s).
[t=0.651327s, 431332 KB] Plan cost: 58
[t=0.651327s, 431332 KB] Expanded 1570 state(s).
[t=0.651327s, 431332 KB] Reopened 377 state(s).
[t=0.651327s, 431332 KB] Evaluated 4127 state(s).
[t=0.651327s, 431332 KB] Evaluations: 4127
[t=0.651327s, 431332 KB] Generated 7545 state(s).
[t=0.651327s, 431332 KB] Dead ends: 0 state(s).
[t=0.651327s, 431332 KB] Expanded until last jump: 0 state(s).
[t=0.651327s, 431332 KB] Reopened until last jump: 0 state(s).
[t=0.651327s, 431332 KB] Evaluated until last jump: 1 state(s).
[t=0.651327s, 431332 KB] Generated until last jump: 0 state(s).
[t=0.651327s, 431332 KB] Number of registered states: 4127
[t=0.651327s, 431332 KB] Int hash set load factor: 4127/8192 = 0.503784
[t=0.651327s, 431332 KB] Int hash set resizes: 13
[t=0.651327s, 431332 KB] Search time: 0.623345s
[t=0.651327s, 431332 KB] Total time: 0.651327s
Solution found.
Peak memory: 431332 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p16.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7115e-05s, 424928 KB] reading input...
[t=0.00236189s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0272679s, 427488 KB] Building successor generator...done!
[t=0.027575s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0276002s, 427488 KB] time for successor generation creation: 0.00018196s
[t=0.027632s, 427488 KB] Variables: 25
[t=0.0276678s, 427488 KB] FactPairs: 182
[t=0.0276927s, 427488 KB] Bytes per state: 8
[t=0.0279152s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.114978s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.115058s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.115086s, 430080 KB] f = 145, 1 evaluated, 0 expanded
[t=0.115117s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.115144s, 430080 KB] pruning method: none
[t=0.122942s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.123003s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.125969s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.126011s, 430524 KB] g=2, 7 evaluated, 2 expanded
[t=0.126568s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.1266s, 430524 KB] g=3, 11 evaluated, 3 expanded
[t=0.127661s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.127696s, 430524 KB] g=5, 19 evaluated, 5 expanded
[t=0.13148s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.131515s, 430524 KB] g=8, 48 evaluated, 13 expanded
[t=0.132993s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.133031s, 430524 KB] g=11, 59 evaluated, 16 expanded
[t=0.148474s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.148516s, 430524 KB] g=14, 178 evaluated, 51 expanded
[t=0.148682s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.148712s, 430524 KB] g=15, 179 evaluated, 52 expanded
[t=0.151842s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.151878s, 430656 KB] g=20, 203 evaluated, 60 expanded
[t=0.153216s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.15325s, 430656 KB] g=22, 213 evaluated, 63 expanded
[t=0.154184s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.154216s, 430656 KB] g=24, 220 evaluated, 65 expanded
[t=0.154759s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.154792s, 430656 KB] g=25, 224 evaluated, 66 expanded
[t=0.15716s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.157194s, 430656 KB] g=26, 242 evaluated, 71 expanded
[t=0.15956s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.159602s, 430656 KB] g=30, 260 evaluated, 75 expanded
[t=0.161198s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.161232s, 430656 KB] g=32, 272 evaluated, 77 expanded
[t=0.178443s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.178484s, 430656 KB] g=34, 406 evaluated, 113 expanded
[t=0.179029s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.17906s, 430656 KB] g=35, 410 evaluated, 114 expanded
[t=0.179345s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.179378s, 430656 KB] g=35, 412 evaluated, 114 expanded
[t=0.181853s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.181894s, 430788 KB] g=37, 431 evaluated, 119 expanded
[t=0.182313s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.182343s, 430788 KB] g=38, 434 evaluated, 120 expanded
[t=0.182761s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.182791s, 430788 KB] g=39, 437 evaluated, 121 expanded
[t=0.183974s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.184006s, 430788 KB] g=41, 446 evaluated, 123 expanded
[t=0.184315s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.184347s, 430788 KB] g=42, 448 evaluated, 124 expanded
[t=0.189274s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.189309s, 430788 KB] g=46, 486 evaluated, 135 expanded
[t=0.189599s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.189629s, 430788 KB] g=47, 488 evaluated, 136 expanded
[t=0.190177s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.190208s, 430788 KB] g=48, 492 evaluated, 137 expanded
[t=0.191013s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.191046s, 430788 KB] g=49, 498 evaluated, 139 expanded
[t=0.191331s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.191361s, 430788 KB] g=49, 500 evaluated, 139 expanded
[t=0.191779s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.191808s, 430788 KB] g=50, 503 evaluated, 140 expanded
[t=0.19216s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.192203s, 430788 KB] g=51, 505 evaluated, 141 expanded
[t=0.192626s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.192656s, 430788 KB] g=52, 508 evaluated, 142 expanded
[t=0.19334s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.193373s, 430788 KB] g=53, 513 evaluated, 144 expanded
[t=0.193663s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.193693s, 430788 KB] g=54, 515 evaluated, 145 expanded
[t=0.19399s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.194026s, 430788 KB] g=56, 518 evaluated, 147 expanded
[t=0.194055s, 430788 KB] Solution found!
[t=0.194084s, 430788 KB] Actual search time: 0.0789347s
unstack g b (1)
stack g c (1)
unstack e f (1)
stack e i (1)
unstack f h (1)
stack f e (1)
unstack h k (1)
stack h f (1)
unstack b a (1)
stack b k (1)
pick-up a (1)
stack a b (1)
unstack g c (1)
stack g h (1)
unstack a b (1)
stack a c (1)
unstack b k (1)
put-down b (1)
unstack a c (1)
stack a k (1)
unstack c d (1)
stack c b (1)
unstack d j (1)
put-down d (1)
unstack j l (1)
stack j c (1)
pick-up l (1)
stack l d (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e i (1)
stack e k (1)
unstack l d (1)
stack l i (1)
unstack j c (1)
stack j e (1)
unstack c b (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.194111s, 430788 KB] Plan length: 56 step(s).
[t=0.194111s, 430788 KB] Plan cost: 56
[t=0.194111s, 430788 KB] Expanded 148 state(s).
[t=0.194111s, 430788 KB] Reopened 0 state(s).
[t=0.194111s, 430788 KB] Evaluated 518 state(s).
[t=0.194111s, 430788 KB] Evaluations: 518
[t=0.194111s, 430788 KB] Generated 683 state(s).
[t=0.194111s, 430788 KB] Dead ends: 0 state(s).
[t=0.194111s, 430788 KB] Expanded until last jump: 0 state(s).
[t=0.194111s, 430788 KB] Reopened until last jump: 0 state(s).
[t=0.194111s, 430788 KB] Evaluated until last jump: 1 state(s).
[t=0.194111s, 430788 KB] Generated until last jump: 0 state(s).
[t=0.194111s, 430788 KB] Number of registered states: 518
[t=0.194111s, 430788 KB] Int hash set load factor: 518/1024 = 0.505859
[t=0.194111s, 430788 KB] Int hash set resizes: 10
[t=0.194111s, 430788 KB] Search time: 0.166196s
[t=0.194111s, 430788 KB] Total time: 0.194111s
Solution found.
Peak memory: 430788 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p17.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.010s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0689e-05s, 424928 KB] reading input...
[t=0.00226586s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259984s, 427488 KB] Building successor generator...done!
[t=0.0263402s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263658s, 427488 KB] time for successor generation creation: 0.00018153s
[t=0.0263966s, 427488 KB] Variables: 25
[t=0.0264214s, 427488 KB] FactPairs: 182
[t=0.0264454s, 427488 KB] Bytes per state: 8
[t=0.026676s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.102988s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 160
[t=0.103065s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.103093s, 430080 KB] f = 160, 1 evaluated, 0 expanded
[t=0.103123s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 160
[t=0.103149s, 430080 KB] pruning method: none
[t=0.110891s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 154
[t=0.110947s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.114213s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.114255s, 430524 KB] g=3, 10 evaluated, 3 expanded
[t=0.114676s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.114721s, 430524 KB] g=4, 13 evaluated, 4 expanded
[t=0.115135s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.115166s, 430524 KB] g=4, 16 evaluated, 4 expanded
[t=0.115456s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.115486s, 430524 KB] g=5, 18 evaluated, 5 expanded
[t=0.116157s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.11619s, 430524 KB] g=6, 23 evaluated, 6 expanded
[t=0.118539s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.11858s, 430524 KB] g=9, 41 evaluated, 10 expanded
[t=0.120012s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.120044s, 430524 KB] g=12, 52 evaluated, 13 expanded
[t=0.120839s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.12087s, 430524 KB] g=13, 58 evaluated, 14 expanded
[t=0.136101s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.13615s, 430524 KB] g=13, 176 evaluated, 47 expanded, 3 reopened
[t=0.136826s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.136857s, 430524 KB] g=14, 181 evaluated, 48 expanded, 3 reopened
[t=0.137526s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.13756s, 430524 KB] g=14, 186 evaluated, 48 expanded, 3 reopened
[t=0.137855s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.137885s, 430524 KB] g=15, 188 evaluated, 49 expanded, 3 reopened
[t=0.138064s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.138096s, 430524 KB] g=15, 189 evaluated, 49 expanded, 3 reopened
[t=0.141979s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.142096s, 430656 KB] g=18, 219 evaluated, 55 expanded, 3 reopened
[t=0.145375s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.145471s, 430656 KB] g=20, 228 evaluated, 57 expanded, 3 reopened
[t=0.167884s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.167929s, 430656 KB] g=25, 398 evaluated, 101 expanded, 5 reopened
[t=0.195344s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.195393s, 430788 KB] g=25, 612 evaluated, 171 expanded, 14 reopened
[t=0.1958s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.19583s, 430788 KB] g=26, 615 evaluated, 172 expanded, 14 reopened
[t=0.197313s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.197345s, 430788 KB] g=28, 627 evaluated, 174 expanded, 14 reopened
[t=0.198403s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.198436s, 430788 KB] g=29, 635 evaluated, 175 expanded, 14 reopened
[t=0.198736s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.198767s, 430788 KB] g=30, 637 evaluated, 176 expanded, 14 reopened
[t=0.227251s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.227304s, 430920 KB] g=35, 866 evaluated, 228 expanded, 14 reopened
[t=0.234885s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.234927s, 430920 KB] g=38, 927 evaluated, 243 expanded, 14 reopened
[t=0.244202s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.244248s, 430920 KB] g=39, 999 evaluated, 259 expanded, 14 reopened
[t=0.244674s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.244705s, 430920 KB] g=40, 1002 evaluated, 260 expanded, 14 reopened
[t=0.245916s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.245953s, 430920 KB] g=42, 1011 evaluated, 262 expanded, 14 reopened
[t=0.264334s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.264383s, 430920 KB] g=45, 1154 evaluated, 314 expanded, 26 reopened
[t=0.26509s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.265123s, 431052 KB] g=46, 1159 evaluated, 315 expanded, 26 reopened
[t=0.265421s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.265455s, 431052 KB] g=47, 1161 evaluated, 316 expanded, 26 reopened
[t=0.26603s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.266064s, 431052 KB] g=48, 1165 evaluated, 317 expanded, 26 reopened
[t=0.266896s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.266932s, 431052 KB] g=49, 1171 evaluated, 319 expanded, 26 reopened
[t=0.267221s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.267252s, 431052 KB] g=49, 1173 evaluated, 319 expanded, 26 reopened
[t=0.267683s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.267714s, 431052 KB] g=50, 1176 evaluated, 320 expanded, 26 reopened
[t=0.268005s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.268035s, 431052 KB] g=51, 1178 evaluated, 321 expanded, 26 reopened
[t=0.268454s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.268488s, 431052 KB] g=52, 1181 evaluated, 322 expanded, 26 reopened
[t=0.269168s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.269201s, 431052 KB] g=53, 1186 evaluated, 324 expanded, 26 reopened
[t=0.269495s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.269525s, 431052 KB] g=54, 1188 evaluated, 325 expanded, 26 reopened
[t=0.269824s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.269855s, 431052 KB] g=56, 1191 evaluated, 327 expanded, 26 reopened
[t=0.2699s, 431052 KB] Solution found!
[t=0.26993s, 431052 KB] Actual search time: 0.166778s
unstack b g (1)
stack b h (1)
unstack g k (1)
stack g i (1)
unstack d e (1)
put-down d (1)
unstack k a (1)
put-down k (1)
pick-up a (1)
stack a k (1)
unstack b h (1)
put-down b (1)
unstack g i (1)
stack g h (1)
unstack i c (1)
stack i g (1)
pick-up c (1)
stack c d (1)
unstack i g (1)
put-down i (1)
pick-up e (1)
stack e b (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h a (1)
unstack f j (1)
stack f e (1)
unstack j l (1)
stack j c (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
pick-up l (1)
stack l i (1)
unstack e b (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack c d (1)
put-down c (1)
pick-up d (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.269958s, 431052 KB] Plan length: 56 step(s).
[t=0.269958s, 431052 KB] Plan cost: 56
[t=0.269958s, 431052 KB] Expanded 328 state(s).
[t=0.269958s, 431052 KB] Reopened 26 state(s).
[t=0.269958s, 431052 KB] Evaluated 1191 state(s).
[t=0.269958s, 431052 KB] Evaluations: 1191
[t=0.269958s, 431052 KB] Generated 1721 state(s).
[t=0.269958s, 431052 KB] Dead ends: 0 state(s).
[t=0.269958s, 431052 KB] Expanded until last jump: 0 state(s).
[t=0.269958s, 431052 KB] Reopened until last jump: 0 state(s).
[t=0.269958s, 431052 KB] Evaluated until last jump: 1 state(s).
[t=0.269958s, 431052 KB] Generated until last jump: 0 state(s).
[t=0.269958s, 431052 KB] Number of registered states: 1191
[t=0.269958s, 431052 KB] Int hash set load factor: 1191/2048 = 0.581543
[t=0.269958s, 431052 KB] Int hash set resizes: 11
[t=0.269958s, 431052 KB] Search time: 0.243283s
[t=0.269958s, 431052 KB] Total time: 0.269958s
Solution found.
Peak memory: 431052 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p18.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.109s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7394e-05s, 424928 KB] reading input...
[t=0.00229294s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0271471s, 427488 KB] Building successor generator...done!
[t=0.0274562s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0274825s, 427488 KB] time for successor generation creation: 0.000183806s
[t=0.0275139s, 427488 KB] Variables: 25
[t=0.0275398s, 427488 KB] FactPairs: 182
[t=0.0275641s, 427488 KB] Bytes per state: 8
[t=0.0277878s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106418s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.106502s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.106531s, 430080 KB] f = 144, 1 evaluated, 0 expanded
[t=0.106561s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.106587s, 430080 KB] pruning method: none
[t=0.114396s, 430392 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 110
[t=0.114468s, 430392 KB] g=1, 2 evaluated, 1 expanded
[t=0.117272s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.117315s, 430524 KB] g=2, 6 evaluated, 2 expanded
[t=0.11761s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.117646s, 430524 KB] g=3, 8 evaluated, 3 expanded
[t=0.118203s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.118235s, 430524 KB] g=4, 12 evaluated, 4 expanded
[t=0.11853s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.118562s, 430524 KB] g=5, 14 evaluated, 5 expanded
[t=0.119522s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.11956s, 430524 KB] g=6, 21 evaluated, 7 expanded
[t=0.11972s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.119751s, 430524 KB] g=6, 22 evaluated, 7 expanded
[t=0.120172s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.120204s, 430524 KB] g=7, 25 evaluated, 8 expanded
[t=0.120363s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.120393s, 430524 KB] g=7, 26 evaluated, 8 expanded
[t=0.121595s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.121628s, 430524 KB] g=10, 35 evaluated, 11 expanded
[t=0.122176s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.122209s, 430524 KB] g=11, 39 evaluated, 12 expanded
[t=0.123056s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.123094s, 430524 KB] g=12, 45 evaluated, 14 expanded
[t=0.123257s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.123286s, 430524 KB] g=12, 46 evaluated, 14 expanded
[t=0.123833s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.123866s, 430524 KB] g=13, 50 evaluated, 15 expanded
[t=0.125579s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.125612s, 430524 KB] g=16, 63 evaluated, 19 expanded
[t=0.12591s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.125941s, 430524 KB] g=16, 65 evaluated, 19 expanded
[t=0.127412s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.127453s, 430524 KB] g=19, 76 evaluated, 22 expanded
[t=0.138746s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.13879s, 430524 KB] g=19, 163 evaluated, 44 expanded
[t=0.140741s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.140778s, 430524 KB] g=22, 178 evaluated, 48 expanded
[t=0.153319s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 45
[t=0.153365s, 430656 KB] g=23, 275 evaluated, 73 expanded
[t=0.153663s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.153694s, 430656 KB] g=24, 277 evaluated, 74 expanded
[t=0.168795s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.16884s, 430656 KB] g=28, 394 evaluated, 107 expanded
[t=0.170305s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.170339s, 430656 KB] g=25, 405 evaluated, 111 expanded
[t=0.170915s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.17095s, 430656 KB] g=26, 409 evaluated, 112 expanded
[t=0.280194s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.280251s, 430788 KB] g=32, 1251 evaluated, 401 expanded, 36 reopened
[t=0.523281s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.523352s, 431052 KB] g=28, 3129 evaluated, 1034 expanded, 105 reopened
[t=0.539083s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.53913s, 431052 KB] g=30, 3251 evaluated, 1074 expanded, 107 reopened
[t=0.544995s, 431052 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.545036s, 431052 KB] g=36, 3296 evaluated, 1087 expanded, 107 reopened
[t=0.67863s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.678696s, 431316 KB] g=36, 4327 evaluated, 1420 expanded, 114 reopened
[t=0.679386s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.67942s, 431316 KB] g=37, 4332 evaluated, 1421 expanded, 114 reopened
[t=0.679974s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.680007s, 431316 KB] g=38, 4336 evaluated, 1422 expanded, 114 reopened
[t=0.682102s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.682138s, 431316 KB] g=40, 4352 evaluated, 1425 expanded, 114 reopened
[t=0.683102s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.683151s, 431316 KB] g=41, 4359 evaluated, 1426 expanded, 114 reopened
[t=0.683578s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.68361s, 431316 KB] g=42, 4362 evaluated, 1427 expanded, 114 reopened
[t=0.684942s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.684974s, 431316 KB] g=44, 4372 evaluated, 1429 expanded, 114 reopened
[t=0.685652s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.685686s, 431316 KB] g=45, 4377 evaluated, 1430 expanded, 114 reopened
[t=0.685979s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.68601s, 431316 KB] g=46, 4379 evaluated, 1431 expanded, 114 reopened
[t=0.687219s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.687257s, 431316 KB] g=47, 4388 evaluated, 1433 expanded, 114 reopened
[t=0.687419s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.68745s, 431316 KB] g=47, 4389 evaluated, 1433 expanded, 114 reopened
[t=0.688123s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.688155s, 431316 KB] g=48, 4394 evaluated, 1434 expanded, 114 reopened
[t=0.688451s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.688483s, 431316 KB] g=49, 4396 evaluated, 1435 expanded, 114 reopened
[t=0.688774s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.688804s, 431316 KB] g=49, 4398 evaluated, 1435 expanded, 114 reopened
[t=0.688968s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.688998s, 431316 KB] g=50, 4399 evaluated, 1436 expanded, 114 reopened
[t=0.689159s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.689188s, 431316 KB] g=50, 4400 evaluated, 1436 expanded, 114 reopened
[t=0.690137s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.69017s, 431316 KB] g=53, 4407 evaluated, 1439 expanded, 114 reopened
[t=0.690612s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.690645s, 431316 KB] g=54, 4410 evaluated, 1440 expanded, 114 reopened
[t=0.691329s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.691361s, 431316 KB] g=55, 4415 evaluated, 1442 expanded, 114 reopened
[t=0.691651s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.691691s, 431316 KB] g=56, 4417 evaluated, 1443 expanded, 114 reopened
[t=0.691992s, 431316 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.692023s, 431316 KB] g=58, 4420 evaluated, 1445 expanded, 114 reopened
[t=0.692052s, 431316 KB] Solution found!
[t=0.692081s, 431316 KB] Actual search time: 0.585489s
unstack d i (1)
stack d f (1)
unstack e b (1)
put-down e (1)
unstack i c (1)
stack i e (1)
unstack d f (1)
put-down d (1)
pick-up c (1)
stack c b (1)
unstack f h (1)
stack f d (1)
unstack h g (1)
stack h f (1)
unstack g a (1)
stack g h (1)
unstack a k (1)
stack a g (1)
unstack k l (1)
stack k c (1)
unstack a g (1)
stack a k (1)
unstack i e (1)
put-down i (1)
unstack l j (1)
put-down l (1)
pick-up j (1)
stack j i (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack f d (1)
stack f e (1)
unstack a k (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e d (1)
unstack k c (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack c b (1)
put-down c (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.692108s, 431316 KB] Plan length: 58 step(s).
[t=0.692108s, 431316 KB] Plan cost: 58
[t=0.692108s, 431316 KB] Expanded 1446 state(s).
[t=0.692108s, 431316 KB] Reopened 114 state(s).
[t=0.692108s, 431316 KB] Evaluated 4420 state(s).
[t=0.692108s, 431316 KB] Evaluations: 4420
[t=0.692108s, 431316 KB] Generated 6756 state(s).
[t=0.692108s, 431316 KB] Dead ends: 0 state(s).
[t=0.692108s, 431316 KB] Expanded until last jump: 0 state(s).
[t=0.692108s, 431316 KB] Reopened until last jump: 0 state(s).
[t=0.692108s, 431316 KB] Evaluated until last jump: 1 state(s).
[t=0.692108s, 431316 KB] Generated until last jump: 0 state(s).
[t=0.692108s, 431316 KB] Number of registered states: 4420
[t=0.692108s, 431316 KB] Int hash set load factor: 4420/8192 = 0.539551
[t=0.692108s, 431316 KB] Int hash set resizes: 13
[t=0.692108s, 431316 KB] Search time: 0.664321s
[t=0.692108s, 431316 KB] Total time: 0.692108s
Solution found.
Peak memory: 431316 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p19.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.005s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.030s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.111s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7273e-05s, 424928 KB] reading input...
[t=0.00229886s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0264904s, 427488 KB] Building successor generator...done!
[t=0.0268066s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0268322s, 427488 KB] time for successor generation creation: 0.000181928s
[t=0.0268641s, 427488 KB] Variables: 25
[t=0.0268891s, 427488 KB] FactPairs: 182
[t=0.0269135s, 427488 KB] Bytes per state: 8
[t=0.0271375s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.113386s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.113465s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.113494s, 430080 KB] f = 146, 1 evaluated, 0 expanded
[t=0.113524s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.11355s, 430080 KB] pruning method: none
[t=0.123595s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 106
[t=0.123665s, 430524 KB] g=1, 3 evaluated, 1 expanded
[t=0.124351s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.124387s, 430524 KB] g=2, 8 evaluated, 3 expanded
[t=0.1248s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.124831s, 430524 KB] g=3, 11 evaluated, 4 expanded
[t=0.124989s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.125019s, 430524 KB] g=3, 12 evaluated, 4 expanded
[t=0.125186s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 54
[t=0.125216s, 430524 KB] g=4, 13 evaluated, 5 expanded
[t=0.125887s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.125928s, 430524 KB] g=6, 18 evaluated, 7 expanded
[t=0.127767s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.127804s, 430524 KB] g=12, 32 evaluated, 13 expanded
[t=0.134578s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.134615s, 430524 KB] g=18, 85 evaluated, 34 expanded
[t=0.154808s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.15485s, 430656 KB] g=15, 241 evaluated, 143 expanded, 52 reopened
[t=0.156429s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.156465s, 430656 KB] g=18, 253 evaluated, 146 expanded, 52 reopened
[t=0.157287s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.157321s, 430656 KB] g=20, 259 evaluated, 148 expanded, 52 reopened
[t=0.160281s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.160315s, 430656 KB] g=22, 282 evaluated, 154 expanded, 52 reopened
[t=0.160473s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.160507s, 430656 KB] g=22, 283 evaluated, 154 expanded, 52 reopened
[t=0.162433s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.162467s, 430656 KB] g=24, 298 evaluated, 158 expanded, 52 reopened
[t=0.378523s, 430932 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.37859s, 430932 KB] g=31, 2013 evaluated, 680 expanded, 111 reopened
[t=0.37979s, 430932 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.379826s, 430932 KB] g=32, 2022 evaluated, 682 expanded, 111 reopened
[t=0.380369s, 430932 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.3804s, 430932 KB] g=33, 2026 evaluated, 683 expanded, 111 reopened
[t=0.381446s, 430932 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.381481s, 430932 KB] g=35, 2034 evaluated, 685 expanded, 111 reopened
[t=0.381894s, 430932 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.381924s, 430932 KB] g=36, 2037 evaluated, 686 expanded, 111 reopened
[t=0.385052s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.385088s, 431068 KB] g=37, 2061 evaluated, 691 expanded, 111 reopened
[t=0.386541s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.386582s, 431068 KB] g=39, 2072 evaluated, 694 expanded, 111 reopened
[t=0.386994s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.387025s, 431068 KB] g=39, 2075 evaluated, 694 expanded, 111 reopened
[t=0.387453s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.387487s, 431068 KB] g=40, 2078 evaluated, 695 expanded, 111 reopened
[t=0.387778s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.387808s, 431068 KB] g=41, 2080 evaluated, 696 expanded, 111 reopened
[t=0.388225s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.388256s, 431068 KB] g=42, 2083 evaluated, 697 expanded, 111 reopened
[t=0.388933s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.388967s, 431068 KB] g=43, 2088 evaluated, 699 expanded, 111 reopened
[t=0.389254s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 1
[t=0.389287s, 431068 KB] g=44, 2090 evaluated, 700 expanded, 111 reopened
[t=0.38958s, 431068 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.38961s, 431068 KB] g=46, 2093 evaluated, 702 expanded, 111 reopened
[t=0.389639s, 431068 KB] Solution found!
[t=0.389669s, 431068 KB] Actual search time: 0.276114s
unstack h k (1)
stack h a (1)
unstack k g (1)
put-down k (1)
unstack b f (1)
put-down b (1)
pick-up k (1)
stack k b (1)
unstack h a (1)
stack h f (1)
unstack a c (1)
stack a k (1)
unstack c j (1)
put-down c (1)
unstack h f (1)
stack h a (1)
unstack j i (1)
stack j c (1)
unstack i d (1)
put-down i (1)
pick-up d (1)
stack d i (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k b (1)
stack k j (1)
unstack f e (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j c (1)
stack j e (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.389696s, 431068 KB] Plan length: 46 step(s).
[t=0.389696s, 431068 KB] Plan cost: 46
[t=0.389696s, 431068 KB] Expanded 703 state(s).
[t=0.389696s, 431068 KB] Reopened 111 state(s).
[t=0.389696s, 431068 KB] Evaluated 2093 state(s).
[t=0.389696s, 431068 KB] Evaluations: 2093
[t=0.389696s, 431068 KB] Generated 3437 state(s).
[t=0.389696s, 431068 KB] Dead ends: 0 state(s).
[t=0.389696s, 431068 KB] Expanded until last jump: 0 state(s).
[t=0.389696s, 431068 KB] Reopened until last jump: 0 state(s).
[t=0.389696s, 431068 KB] Evaluated until last jump: 1 state(s).
[t=0.389696s, 431068 KB] Generated until last jump: 0 state(s).
[t=0.389696s, 431068 KB] Number of registered states: 2093
[t=0.389696s, 431068 KB] Int hash set load factor: 2093/4096 = 0.510986
[t=0.389696s, 431068 KB] Int hash set resizes: 12
[t=0.389696s, 431068 KB] Search time: 0.36256s
[t=0.389696s, 431068 KB] Total time: 0.389696s
Solution found.
Peak memory: 431068 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p20.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.030s CPU, 0.014s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.010s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.110s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6544e-05s, 424928 KB] reading input...
[t=0.00236952s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0273627s, 427488 KB] Building successor generator...done!
[t=0.0276786s, 427488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0277041s, 427488 KB] time for successor generation creation: 0.00018408s
[t=0.0277361s, 427488 KB] Variables: 25
[t=0.0277659s, 427488 KB] FactPairs: 182
[t=0.0277903s, 427488 KB] Bytes per state: 8
[t=0.0280161s, 427488 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.106796s, 430080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.106879s, 430080 KB] g=0, 1 evaluated, 0 expanded
[t=0.106907s, 430080 KB] f = 144, 1 evaluated, 0 expanded
[t=0.106938s, 430080 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 144
[t=0.106974s, 430080 KB] pruning method: none
[t=0.117687s, 430524 KB] f = 145, 7 evaluated, 1 expanded
[t=0.117889s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.117922s, 430524 KB] g=2, 8 evaluated, 2 expanded
[t=0.11951s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 100
[t=0.119545s, 430524 KB] g=4, 20 evaluated, 4 expanded
[t=0.120088s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 92
[t=0.120119s, 430524 KB] g=5, 24 evaluated, 5 expanded
[t=0.121079s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.121116s, 430524 KB] g=6, 31 evaluated, 6 expanded
[t=0.121539s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.121569s, 430524 KB] g=7, 34 evaluated, 7 expanded
[t=0.122246s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.122276s, 430524 KB] g=8, 39 evaluated, 8 expanded
[t=0.122952s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.122983s, 430524 KB] g=9, 44 evaluated, 9 expanded
[t=0.123142s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.123171s, 430524 KB] g=9, 45 evaluated, 9 expanded
[t=0.123588s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.123618s, 430524 KB] g=10, 48 evaluated, 10 expanded
[t=0.127422s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.127461s, 430524 KB] g=14, 77 evaluated, 20 expanded
[t=0.128929s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.128966s, 430524 KB] g=15, 88 evaluated, 23 expanded
[t=0.12913s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 58
[t=0.12916s, 430524 KB] g=16, 89 evaluated, 24 expanded
[t=0.138402s, 430524 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.138438s, 430524 KB] g=22, 160 evaluated, 48 expanded
[t=0.192184s, 430656 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.192227s, 430656 KB] g=22, 573 evaluated, 211 expanded, 14 reopened
[t=0.247121s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 52
[t=0.247165s, 430788 KB] g=27, 997 evaluated, 331 expanded, 15 reopened
[t=0.26718s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.267232s, 430788 KB] g=25, 1150 evaluated, 377 expanded, 15 reopened
[t=0.272939s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.272974s, 430788 KB] g=27, 1194 evaluated, 389 expanded, 15 reopened
[t=0.286841s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 40
[t=0.286879s, 430788 KB] g=29, 1301 evaluated, 422 expanded, 15 reopened
[t=0.287299s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.287334s, 430788 KB] g=30, 1304 evaluated, 423 expanded, 15 reopened
[t=0.287891s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.287921s, 430788 KB] g=31, 1308 evaluated, 424 expanded, 15 reopened
[t=0.288343s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.288373s, 430788 KB] g=32, 1311 evaluated, 425 expanded, 15 reopened
[t=0.300637s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.300675s, 430788 KB] g=38, 1405 evaluated, 452 expanded, 15 reopened
[t=0.30097s, 430788 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.301s, 430788 KB] g=39, 1407 evaluated, 453 expanded, 15 reopened
[t=0.304004s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.304042s, 430920 KB] g=41, 1430 evaluated, 458 expanded, 15 reopened
[t=0.316734s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.316773s, 430920 KB] g=43, 1527 evaluated, 487 expanded, 17 reopened
[t=0.318383s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.318418s, 430920 KB] g=46, 1539 evaluated, 490 expanded, 17 reopened
[t=0.318717s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.318746s, 430920 KB] g=47, 1541 evaluated, 491 expanded, 17 reopened
[t=0.319173s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.319203s, 430920 KB] g=48, 1544 evaluated, 492 expanded, 17 reopened
[t=0.319884s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.319918s, 430920 KB] g=49, 1549 evaluated, 493 expanded, 17 reopened
[t=0.320474s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.320507s, 430920 KB] g=50, 1553 evaluated, 494 expanded, 17 reopened
[t=0.320815s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.320852s, 430920 KB] g=51, 1555 evaluated, 495 expanded, 17 reopened
[t=0.321535s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.321566s, 430920 KB] g=52, 1560 evaluated, 496 expanded, 17 reopened
[t=0.32173s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.321758s, 430920 KB] g=53, 1561 evaluated, 497 expanded, 17 reopened
[t=0.322306s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.322338s, 430920 KB] g=54, 1565 evaluated, 498 expanded, 17 reopened
[t=0.322889s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.322919s, 430920 KB] g=55, 1569 evaluated, 499 expanded, 17 reopened
[t=0.323482s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.323512s, 430920 KB] g=57, 1573 evaluated, 501 expanded, 17 reopened
[t=0.324324s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.324354s, 430920 KB] g=59, 1579 evaluated, 503 expanded, 17 reopened
[t=0.324534s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.324567s, 430920 KB] g=60, 1580 evaluated, 504 expanded, 17 reopened
[t=0.324997s, 430920 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.13.739122/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.325029s, 430920 KB] g=62, 1583 evaluated, 506 expanded, 17 reopened
[t=0.325854s, 430920 KB] Solution found!
[t=0.325888s, 430920 KB] Actual search time: 0.21891s
put-down b (1)
unstack a l (1)
stack a b (1)
pick-up f (1)
stack f a (1)
unstack k h (1)
stack k f (1)
pick-up h (1)
stack h k (1)
unstack d i (1)
stack d j (1)
unstack h k (1)
stack h i (1)
unstack l e (1)
stack l h (1)
unstack e g (1)
put-down e (1)
unstack d j (1)
stack d g (1)
pick-up j (1)
stack j e (1)
unstack d g (1)
stack d j (1)
unstack l h (1)
stack l d (1)
unstack h i (1)
stack h g (1)
unstack k f (1)
stack k i (1)
unstack f a (1)
stack f k (1)
unstack a b (1)
stack a h (1)
unstack l d (1)
stack l b (1)
unstack d j (1)
put-down d (1)
unstack l b (1)
stack l d (1)
unstack j e (1)
stack j l (1)
pick-up e (1)
stack e b (1)
unstack f k (1)
stack f a (1)
unstack k i (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j l (1)
stack j e (1)
unstack l d (1)
stack l b (1)
pick-up d (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.325916s, 430920 KB] Plan length: 65 step(s).
[t=0.325916s, 430920 KB] Plan cost: 65
[t=0.325916s, 430920 KB] Expanded 512 state(s).
[t=0.325916s, 430920 KB] Reopened 17 state(s).
[t=0.325916s, 430920 KB] Evaluated 1590 state(s).
[t=0.325916s, 430920 KB] Evaluations: 1590
[t=0.325916s, 430920 KB] Generated 2282 state(s).
[t=0.325916s, 430920 KB] Dead ends: 0 state(s).
[t=0.325916s, 430920 KB] Expanded until last jump: 1 state(s).
[t=0.325916s, 430920 KB] Reopened until last jump: 0 state(s).
[t=0.325916s, 430920 KB] Evaluated until last jump: 7 state(s).
[t=0.325916s, 430920 KB] Generated until last jump: 6 state(s).
[t=0.325916s, 430920 KB] Number of registered states: 1590
[t=0.325916s, 430920 KB] Int hash set load factor: 1590/2048 = 0.776367
[t=0.325916s, 430920 KB] Int hash set resizes: 11
[t=0.325916s, 430920 KB] Search time: 0.297901s
[t=0.325916s, 430920 KB] Total time: 0.325916s
Solution found.
Peak memory: 430920 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.023712
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 0 test success: 20 of 20 (100.0%)

Max test success (fold 0): 100.0%
Min test success (fold 0): 100.0%
Avg test success: 100.0%
