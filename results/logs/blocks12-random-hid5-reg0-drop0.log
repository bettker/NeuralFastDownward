OUTPUT: results/train-pytorch-2021.07.24T21.10.26.314849

---------- FOLD 1/10 ----------
HNN(
  (hid1): Linear(in_features=169, out_features=173, bias=True)
  (hid2): Linear(in_features=173, out_features=177, bias=True)
  (hid3): Linear(in_features=177, out_features=181, bias=True)
  (hid4): Linear(in_features=181, out_features=185, bias=True)
  (hid5): Linear(in_features=185, out_features=189, bias=True)
  (opt): Linear(in_features=189, out_features=197, bias=True)
)

Epoch 1 | avg_train_loss=0.096625/home/rvbettker/.local/lib/python3.6/site-packages/torch/autograd/__init__.py:149: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 10010). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at  /pytorch/c10/cuda/CUDAFunctions.cpp:115.)
  allow_unreachable=True, accumulate_grad=True)  # allow_unreachable flag
 | avg_val_loss=0.090462
Epoch 2 | avg_train_loss=0.090618 | avg_val_loss=0.090452
Epoch 3 | avg_train_loss=0.090599 | avg_val_loss=0.090457
Epoch 4 | avg_train_loss=0.090588 | avg_val_loss=0.090457
Epoch 5 | avg_train_loss=0.090580 | avg_val_loss=0.090452
Epoch 6 | avg_train_loss=0.090571 | avg_val_loss=0.090430
Epoch 7 | avg_train_loss=0.066587 | avg_val_loss=0.040086
Epoch 8 | avg_train_loss=0.036431 | avg_val_loss=0.035157
Epoch 9 | avg_train_loss=0.033687 | avg_val_loss=0.033254
Epoch 10 | avg_train_loss=0.032259 | avg_val_loss=0.032280
Epoch 11 | avg_train_loss=0.031308 | avg_val_loss=0.031633
Epoch 12 | avg_train_loss=0.030655 | avg_val_loss=0.031097
Epoch 13 | avg_train_loss=0.030078 | avg_val_loss=0.030620
Epoch 14 | avg_train_loss=0.029617 | avg_val_loss=0.030006
Epoch 15 | avg_train_loss=0.029194 | avg_val_loss=0.029515
Epoch 16 | avg_train_loss=0.028835 | avg_val_loss=0.029135
Epoch 17 | avg_train_loss=0.028521 | avg_val_loss=0.028817
Epoch 18 | avg_train_loss=0.028230 | avg_val_loss=0.028527
Epoch 19 | avg_train_loss=0.027927 | avg_val_loss=0.028276
Epoch 20 | avg_train_loss=0.027607 | avg_val_loss=0.028068
Epoch 21 | avg_train_loss=0.027280 | avg_val_loss=0.027874
Epoch 22 | avg_train_loss=0.026928 | avg_val_loss=0.027719
Epoch 23 | avg_train_loss=0.026557 | avg_val_loss=0.027544
Epoch 24 | avg_train_loss=0.026236 | avg_val_loss=0.027337
Epoch 25 | avg_train_loss=0.025940 | avg_val_loss=0.027182
Epoch 26 | avg_train_loss=0.025670 | avg_val_loss=0.027114
Epoch 27 | avg_train_loss=0.025433 | avg_val_loss=0.026974
Epoch 28 | avg_train_loss=0.025212 | avg_val_loss=0.026532
Epoch 29 | avg_train_loss=0.024979 | avg_val_loss=0.026148
Epoch 30 | avg_train_loss=0.024749 | avg_val_loss=0.025939
Epoch 31 | avg_train_loss=0.024532 | avg_val_loss=0.025801
Epoch 32 | avg_train_loss=0.024323 | avg_val_loss=0.025687
Epoch 33 | avg_train_loss=0.024120 | avg_val_loss=0.025578
Epoch 34 | avg_train_loss=0.023922 | avg_val_loss=0.025468
Epoch 35 | avg_train_loss=0.023728 | avg_val_loss=0.025354
Epoch 36 | avg_train_loss=0.023538 | avg_val_loss=0.025234
Epoch 37 | avg_train_loss=0.023351 | avg_val_loss=0.025110
Epoch 38 | avg_train_loss=0.023166 | avg_val_loss=0.024983
Epoch 39 | avg_train_loss=0.022984 | avg_val_loss=0.024855
Epoch 40 | avg_train_loss=0.022802 | avg_val_loss=0.024726
Epoch 41 | avg_train_loss=0.022624 | avg_val_loss=0.024607
Epoch 42 | avg_train_loss=0.022454 | avg_val_loss=0.024509
Epoch 43 | avg_train_loss=0.022289 | avg_val_loss=0.024426
Epoch 44 | avg_train_loss=0.022127 | avg_val_loss=0.024354
Epoch 45 | avg_train_loss=0.021969 | avg_val_loss=0.024288
Epoch 46 | avg_train_loss=0.021812 | avg_val_loss=0.024226
Epoch 47 | avg_train_loss=0.021659 | avg_val_loss=0.024165
Epoch 48 | avg_train_loss=0.021509 | avg_val_loss=0.024104
Epoch 49 | avg_train_loss=0.021362 | avg_val_loss=0.024044
Epoch 50 | avg_train_loss=0.021216 | avg_val_loss=0.023986
Epoch 51 | avg_train_loss=0.021071 | avg_val_loss=0.023931
Epoch 52 | avg_train_loss=0.020926 | avg_val_loss=0.023881
Epoch 53 | avg_train_loss=0.020781 | avg_val_loss=0.023836
Epoch 54 | avg_train_loss=0.020635 | avg_val_loss=0.023797
Epoch 55 | avg_train_loss=0.020489 | avg_val_loss=0.023764
Epoch 56 | avg_train_loss=0.020341 | avg_val_loss=0.023738
Epoch 57 | avg_train_loss=0.020193 | avg_val_loss=0.023719
Epoch 58 | avg_train_loss=0.020043 | avg_val_loss=0.023707
Epoch 59 | avg_train_loss=0.019891 | avg_val_loss=0.023702
Epoch 60 | avg_train_loss=0.019738 | avg_val_loss=0.023702
Epoch 61 | avg_train_loss=0.019583 | avg_val_loss=0.023703
Epoch 62 | avg_train_loss=0.019428 | avg_val_loss=0.023704
Epoch 63 | avg_train_loss=0.019272 | avg_val_loss=0.023702
Epoch 64 | avg_train_loss=0.019117 | avg_val_loss=0.023698
Epoch 65 | avg_train_loss=0.018963 | avg_val_loss=0.023692
Epoch 66 | avg_train_loss=0.018809 | avg_val_loss=0.023687
Epoch 67 | avg_train_loss=0.018657 | avg_val_loss=0.023681
Epoch 68 | avg_train_loss=0.018505 | avg_val_loss=0.023677
Epoch 69 | avg_train_loss=0.018355 | avg_val_loss=0.023675
Epoch 70 | avg_train_loss=0.018207 | avg_val_loss=0.023674
Epoch 71 | avg_train_loss=0.018060 | avg_val_loss=0.023676
Epoch 72 | avg_train_loss=0.017915 | avg_val_loss=0.023682
Epoch 73 | avg_train_loss=0.017774 | avg_val_loss=0.023692
Epoch 74 | avg_train_loss=0.017637 | avg_val_loss=0.023706
Epoch 75 | avg_train_loss=0.017508 | avg_val_loss=0.023731
Epoch 76 | avg_train_loss=0.017394 | avg_val_loss=0.023777
Epoch 77 | avg_train_loss=0.017310 | avg_val_loss=0.023902
Epoch 78 | avg_train_loss=0.017284 | avg_val_loss=0.024202
Epoch 79 | avg_train_loss=0.017424 | avg_val_loss=0.023474
Epoch 80 | avg_train_loss=0.017668 | avg_val_loss=0.023525
Epoch 81 | avg_train_loss=0.017132 | avg_val_loss=0.023434
Epoch 82 | avg_train_loss=0.016877 | avg_val_loss=0.023426
Epoch 83 | avg_train_loss=0.016669 | avg_val_loss=0.023432
Epoch 84 | avg_train_loss=0.016479 | avg_val_loss=0.023419
Epoch 85 | avg_train_loss=0.016297 | avg_val_loss=0.023413
Epoch 86 | avg_train_loss=0.016116 | avg_val_loss=0.023397
Epoch 87 | avg_train_loss=0.015936 | avg_val_loss=0.023421
Epoch 88 | avg_train_loss=0.015747 | avg_val_loss=0.023468
Epoch 89 | avg_train_loss=0.015554 | avg_val_loss=0.023556
Epoch 90 | avg_train_loss=0.015367 | avg_val_loss=0.023631
Epoch 91 | avg_train_loss=0.015187 | avg_val_loss=0.023701
Epoch 92 | avg_train_loss=0.015023 | avg_val_loss=0.023766
Epoch 93 | avg_train_loss=0.014856 | avg_val_loss=0.023848
Epoch 94 | avg_train_loss=0.014701 | avg_val_loss=0.023918
Epoch 95 | avg_train_loss=0.014540 | avg_val_loss=0.024011
Epoch 96 | avg_train_loss=0.014390 | avg_val_loss=0.024080
Epoch 97 | avg_train_loss=0.014233 | avg_val_loss=0.024162
Epoch 98 | avg_train_loss=0.014085 | avg_val_loss=0.024221
Epoch 99 | avg_train_loss=0.013931 | avg_val_loss=0.024293
Epoch 100 | avg_train_loss=0.013782 | avg_val_loss=0.024348
Epoch 101 | avg_train_loss=0.013631 | avg_val_loss=0.024413
Epoch 102 | avg_train_loss=0.013482 | avg_val_loss=0.024471
Epoch 103 | avg_train_loss=0.013333 | avg_val_loss=0.024536
Epoch 104 | avg_train_loss=0.013185 | avg_val_loss=0.024593
Epoch 105 | avg_train_loss=0.013044 | avg_val_loss=0.024672
Epoch 106 | avg_train_loss=0.012901 | avg_val_loss=0.024720
Epoch 107 | avg_train_loss=0.012773INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.1419e-05s, 424928 KB] reading input...
[t=0.00212645s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262229s, 427780 KB] Building successor generator...done!
[t=0.0265008s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265245s, 427780 KB] time for successor generation creation: 0.000168455s
[t=0.0265538s, 427780 KB] Variables: 25
[t=0.0265764s, 427780 KB] FactPairs: 182
[t=0.0265986s, 427780 KB] Bytes per state: 8
[t=0.0267963s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.103013s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.103081s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.103108s, 430372 KB] f = 86, 1 evaluated, 0 expanded
[t=0.103136s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.10316s, 430372 KB] pruning method: none
[t=0.11643s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.116482s, 431080 KB] g=1, 3 evaluated, 1 expanded
[t=0.116872s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.116904s, 431080 KB] g=1, 5 evaluated, 1 expanded
[t=0.117124s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.117154s, 431080 KB] g=2, 6 evaluated, 2 expanded
[t=0.11822s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.118251s, 431080 KB] g=3, 12 evaluated, 3 expanded
[t=0.118457s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.118486s, 431080 KB] g=4, 13 evaluated, 4 expanded
[t=0.129972s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.130009s, 431212 KB] g=12, 79 evaluated, 21 expanded
[t=0.131093s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.13113s, 431212 KB] g=14, 85 evaluated, 23 expanded
[t=0.140234s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.140273s, 431212 KB] g=17, 137 evaluated, 42 expanded, 5 reopened
[t=0.162126s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.162164s, 431212 KB] g=14, 262 evaluated, 96 expanded, 25 reopened
[t=0.163083s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.163118s, 431212 KB] g=16, 267 evaluated, 98 expanded, 25 reopened
[t=0.170964s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.17101s, 431212 KB] g=26, 312 evaluated, 114 expanded, 25 reopened
[t=0.773106s, 431872 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.773152s, 431872 KB] g=30, 3763 evaluated, 1806 expanded, 625 reopened
[t=0.77494s, 431872 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.774976s, 431872 KB] g=33, 3773 evaluated, 1809 expanded, 625 reopened
[t=0.780937s, 431872 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.780976s, 431872 KB] g=32, 3807 evaluated, 1820 expanded, 626 reopened
[t=0.781543s, 431872 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.781573s, 431872 KB] g=34, 3810 evaluated, 1822 expanded, 626 reopened
[t=0.836936s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.836978s, 432004 KB] g=36, 4126 evaluated, 1916 expanded, 626 reopened
[t=0.837537s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.837571s, 432004 KB] g=37, 4129 evaluated, 1917 expanded, 626 reopened
[t=0.83989s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.839934s, 432004 KB] g=41, 4142 evaluated, 1922 expanded, 626 reopened
[t=0.848319s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.848361s, 432004 KB] g=38, 4190 evaluated, 1937 expanded, 626 reopened
[t=0.85048s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.850516s, 432004 KB] g=41, 4202 evaluated, 1940 expanded, 626 reopened
[t=0.852291s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.852326s, 432004 KB] g=44, 4212 evaluated, 1943 expanded, 626 reopened
[t=0.853237s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.853268s, 432004 KB] g=46, 4217 evaluated, 1945 expanded, 626 reopened
[t=0.856781s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.856819s, 432004 KB] g=47, 4237 evaluated, 1953 expanded, 626 reopened
[t=0.85789s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.857921s, 432004 KB] g=49, 4243 evaluated, 1955 expanded, 626 reopened
[t=0.858644s, 432004 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.858678s, 432004 KB] g=51, 4247 evaluated, 1957 expanded, 626 reopened
[t=0.858718s, 432004 KB] Solution found!
[t=0.858747s, 432004 KB] Actual search time: 0.755584s
unstack h j (1)
stack h a (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d h (1)
unstack i c (1)
put-down i (1)
pick-up j (1)
stack j i (1)
unstack d h (1)
stack d j (1)
unstack f e (1)
stack f d (1)
unstack h a (1)
stack h f (1)
unstack a k (1)
stack a h (1)
unstack k l (1)
stack k e (1)
unstack l g (1)
stack l c (1)
unstack k e (1)
stack k l (1)
unstack a h (1)
stack a k (1)
pick-up e (1)
stack e b (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.858772s, 432004 KB] Plan length: 52 step(s).
[t=0.858772s, 432004 KB] Plan cost: 52
[t=0.858772s, 432004 KB] Expanded 1959 state(s).
[t=0.858772s, 432004 KB] Reopened 626 state(s).
[t=0.858772s, 432004 KB] Evaluated 4248 state(s).
[t=0.858772s, 432004 KB] Evaluations: 4248
[t=0.858772s, 432004 KB] Generated 8858 state(s).
[t=0.858772s, 432004 KB] Dead ends: 0 state(s).
[t=0.858772s, 432004 KB] Expanded until last jump: 0 state(s).
[t=0.858772s, 432004 KB] Reopened until last jump: 0 state(s).
[t=0.858772s, 432004 KB] Evaluated until last jump: 1 state(s).
[t=0.858772s, 432004 KB] Generated until last jump: 0 state(s).
[t=0.858772s, 432004 KB] Number of registered states: 4248
[t=0.858772s, 432004 KB] Int hash set load factor: 4248/8192 = 0.518555
[t=0.858772s, 432004 KB] Int hash set resizes: 13
[t=0.858772s, 432004 KB] Search time: 0.831976s
[t=0.858772s, 432004 KB] Total time: 0.858772s
Solution found.
Peak memory: 432004 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6918e-05s, 424928 KB] reading input...
[t=0.00214209s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259789s, 427780 KB] Building successor generator...done!
[t=0.0262589s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262819s, 427780 KB] time for successor generation creation: 0.000168665s
[t=0.0263099s, 427780 KB] Variables: 25
[t=0.0263318s, 427780 KB] FactPairs: 182
[t=0.0263533s, 427780 KB] Bytes per state: 8
[t=0.0265475s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.105741s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.105796s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.105821s, 430372 KB] f = 150, 1 evaluated, 0 expanded
[t=0.105848s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.10588s, 430372 KB] pruning method: none
[t=0.115864s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.115914s, 431080 KB] g=1, 2 evaluated, 1 expanded
[t=0.11943s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 122
[t=0.119476s, 431080 KB] g=2, 5 evaluated, 2 expanded
[t=0.119676s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 107
[t=0.119706s, 431080 KB] g=2, 6 evaluated, 2 expanded
[t=0.121241s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.121273s, 431080 KB] g=5, 15 evaluated, 6 expanded
[t=0.121968s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.122s, 431080 KB] g=6, 19 evaluated, 7 expanded
[t=0.1222s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.122229s, 431080 KB] g=7, 20 evaluated, 8 expanded
[t=0.122595s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.122624s, 431080 KB] g=8, 22 evaluated, 9 expanded
[t=0.123832s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.123865s, 431080 KB] g=10, 29 evaluated, 11 expanded
[t=0.129896s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.129931s, 431080 KB] g=12, 65 evaluated, 24 expanded
[t=0.130811s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.130845s, 431080 KB] g=14, 70 evaluated, 26 expanded
[t=0.131552s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.131586s, 431080 KB] g=15, 74 evaluated, 27 expanded
[t=0.133626s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.133658s, 431212 KB] g=18, 86 evaluated, 30 expanded
[t=0.134194s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.13423s, 431212 KB] g=19, 89 evaluated, 31 expanded
[t=0.135271s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.135305s, 431212 KB] g=20, 95 evaluated, 32 expanded
[t=0.136345s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.136376s, 431212 KB] g=22, 101 evaluated, 34 expanded
[t=0.1411s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.141144s, 431212 KB] g=24, 129 evaluated, 42 expanded
[t=0.168667s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.168706s, 431212 KB] g=27, 293 evaluated, 95 expanded
[t=0.169243s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.169274s, 431212 KB] g=28, 296 evaluated, 96 expanded
[t=0.173323s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.173361s, 431212 KB] g=30, 320 evaluated, 102 expanded
[t=0.174228s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.174258s, 431212 KB] g=31, 325 evaluated, 103 expanded
[t=0.183876s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.183916s, 431344 KB] g=33, 382 evaluated, 122 expanded
[t=0.496773s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.496817s, 431608 KB] g=38, 2247 evaluated, 708 expanded, 8 reopened
[t=3.81413s, 432564 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=3.81418s, 432564 KB] g=40, 21839 evaluated, 9787 expanded, 1640 reopened
[t=3.81491s, 432564 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=3.81494s, 432564 KB] g=41, 21843 evaluated, 9788 expanded, 1640 reopened
[t=3.81855s, 432564 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=3.81859s, 432564 KB] g=43, 21864 evaluated, 9794 expanded, 1640 reopened
[t=3.82354s, 432564 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=3.82358s, 432564 KB] g=45, 21893 evaluated, 9801 expanded, 1640 reopened
[t=3.84321s, 432564 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=3.84324s, 432564 KB] g=47, 22008 evaluated, 9832 expanded, 1640 reopened
[t=3.88649s, 432564 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=3.88653s, 432564 KB] g=50, 22261 evaluated, 9914 expanded, 1643 reopened
[t=3.9236s, 432696 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=3.92364s, 432696 KB] g=52, 22475 evaluated, 9989 expanded, 1647 reopened
[t=4.16938s, 432828 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=4.16943s, 432828 KB] g=51, 23922 evaluated, 10568 expanded, 1664 reopened
[t=4.38561s, 432960 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=4.38566s, 432960 KB] g=48, 25187 evaluated, 11104 expanded, 1673 reopened
[t=4.38672s, 432960 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=4.38675s, 432960 KB] g=49, 25193 evaluated, 11105 expanded, 1673 reopened
[t=4.38713s, 432960 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=4.38716s, 432960 KB] g=50, 25195 evaluated, 11106 expanded, 1673 reopened
[t=4.38754s, 432960 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=4.38757s, 432960 KB] g=51, 25197 evaluated, 11107 expanded, 1673 reopened
[t=4.38846s, 432960 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=4.38849s, 432960 KB] g=53, 25202 evaluated, 11109 expanded, 1673 reopened
[t=4.38923s, 432960 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=4.38926s, 432960 KB] g=55, 25206 evaluated, 11111 expanded, 1673 reopened
[t=4.38929s, 432960 KB] Solution found!
[t=4.38932s, 432960 KB] Actual search time: 4.28344s
unstack c f (1)
stack c j (1)
unstack k g (1)
stack k c (1)
unstack g e (1)
stack g k (1)
unstack e l (1)
stack e g (1)
unstack l b (1)
put-down l (1)
unstack b a (1)
stack b l (1)
unstack a h (1)
stack a b (1)
unstack e g (1)
put-down e (1)
pick-up h (1)
stack h a (1)
unstack g k (1)
stack g h (1)
unstack k c (1)
stack k e (1)
unstack c j (1)
put-down c (1)
unstack f d (1)
stack f k (1)
unstack d i (1)
stack d c (1)
pick-up j (1)
stack j i (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=4.38935s, 432960 KB] Plan length: 56 step(s).
[t=4.38935s, 432960 KB] Plan cost: 56
[t=4.38935s, 432960 KB] Expanded 11113 state(s).
[t=4.38935s, 432960 KB] Reopened 1673 state(s).
[t=4.38935s, 432960 KB] Evaluated 25207 state(s).
[t=4.38935s, 432960 KB] Evaluations: 25207
[t=4.38935s, 432960 KB] Generated 49040 state(s).
[t=4.38935s, 432960 KB] Dead ends: 0 state(s).
[t=4.38935s, 432960 KB] Expanded until last jump: 0 state(s).
[t=4.38935s, 432960 KB] Reopened until last jump: 0 state(s).
[t=4.38935s, 432960 KB] Evaluated until last jump: 1 state(s).
[t=4.38935s, 432960 KB] Generated until last jump: 0 state(s).
[t=4.38935s, 432960 KB] Number of registered states: 25207
[t=4.38935s, 432960 KB] Int hash set load factor: 25207/32768 = 0.769257
[t=4.38935s, 432960 KB] Int hash set resizes: 15
[t=4.38935s, 432960 KB] Search time: 4.3628s
[t=4.38935s, 432960 KB] Total time: 4.38935s
Solution found.
Peak memory: 432960 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6942e-05s, 424928 KB] reading input...
[t=0.00221772s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026294s, 427780 KB] Building successor generator...done!
[t=0.0265871s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266114s, 427780 KB] time for successor generation creation: 0.00017841s
[t=0.02664s, 427780 KB] Variables: 25
[t=0.0266632s, 427780 KB] FactPairs: 182
[t=0.0266854s, 427780 KB] Bytes per state: 8
[t=0.0268827s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109457s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.109511s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.109537s, 430372 KB] f = 64, 1 evaluated, 0 expanded
[t=0.109565s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.109589s, 430372 KB] pruning method: none
[t=0.123074s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.123127s, 431080 KB] g=1, 4 evaluated, 1 expanded
[t=0.123908s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.123951s, 431080 KB] g=2, 8 evaluated, 2 expanded
[t=0.124717s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.124747s, 431080 KB] g=3, 12 evaluated, 3 expanded
[t=0.125147s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.125176s, 431080 KB] g=4, 14 evaluated, 4 expanded
[t=0.126127s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.126157s, 431080 KB] g=6, 19 evaluated, 6 expanded
[t=0.133338s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.133372s, 431080 KB] g=15, 58 evaluated, 24 expanded
[t=0.133772s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.133802s, 431080 KB] g=16, 60 evaluated, 25 expanded
[t=0.137166s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.137202s, 431080 KB] g=18, 78 evaluated, 31 expanded
[t=0.465736s, 431476 KB] f = 65, 1827 evaluated, 1775 expanded, 904 reopened
[t=0.499526s, 431476 KB] f = 66, 2006 evaluated, 1938 expanded, 974 reopened
[t=0.522615s, 431476 KB] f = 67, 2129 evaluated, 2040 expanded, 1016 reopened
[t=0.563582s, 431476 KB] f = 68, 2346 evaluated, 2273 expanded, 1139 reopened
[t=0.592827s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.592865s, 431476 KB] g=22, 2503 evaluated, 2344 expanded, 1144 reopened
[t=0.594753s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.594785s, 431608 KB] g=23, 2513 evaluated, 2347 expanded, 1144 reopened
[t=0.595562s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.595596s, 431608 KB] g=24, 2517 evaluated, 2348 expanded, 1144 reopened
[t=0.596185s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.596215s, 431608 KB] g=25, 2520 evaluated, 2349 expanded, 1144 reopened
[t=0.596431s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.596459s, 431608 KB] g=25, 2521 evaluated, 2349 expanded, 1144 reopened
[t=0.59704s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.597072s, 431608 KB] g=26, 2524 evaluated, 2350 expanded, 1144 reopened
[t=0.597474s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.597505s, 431608 KB] g=27, 2526 evaluated, 2351 expanded, 1144 reopened
[t=0.597908s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.597943s, 431608 KB] g=28, 2528 evaluated, 2352 expanded, 1144 reopened
[t=0.598343s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.598376s, 431608 KB] g=29, 2530 evaluated, 2353 expanded, 1144 reopened
[t=0.598967s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.598998s, 431608 KB] g=30, 2533 evaluated, 2354 expanded, 1144 reopened
[t=0.599212s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.59924s, 431608 KB] g=30, 2534 evaluated, 2354 expanded, 1144 reopened
[t=0.600195s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.600225s, 431608 KB] g=32, 2539 evaluated, 2356 expanded, 1144 reopened
[t=0.600627s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.600657s, 431608 KB] g=33, 2541 evaluated, 2357 expanded, 1144 reopened
[t=0.60124s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.601269s, 431608 KB] g=34, 2544 evaluated, 2358 expanded, 1144 reopened
[t=0.601674s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.601703s, 431608 KB] g=36, 2546 evaluated, 2360 expanded, 1144 reopened
[t=0.602103s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.602132s, 431608 KB] g=37, 2548 evaluated, 2361 expanded, 1144 reopened
[t=0.603298s, 431608 KB] Solution found!
[t=0.603335s, 431608 KB] Actual search time: 0.493742s
unstack f h (1)
stack f a (1)
pick-up h (1)
stack h g (1)
unstack l j (1)
put-down l (1)
unstack f a (1)
stack f l (1)
unstack j e (1)
put-down j (1)
unstack a k (1)
stack a h (1)
unstack k b (1)
stack k j (1)
unstack f l (1)
stack f a (1)
unstack b d (1)
stack b l (1)
pick-up e (1)
stack e b (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.60336s, 431608 KB] Plan length: 40 step(s).
[t=0.60336s, 431608 KB] Plan cost: 40
[t=0.60336s, 431608 KB] Expanded 2367 state(s).
[t=0.60336s, 431608 KB] Reopened 1144 state(s).
[t=0.60336s, 431608 KB] Evaluated 2555 state(s).
[t=0.60336s, 431608 KB] Evaluations: 2555
[t=0.60336s, 431608 KB] Generated 8524 state(s).
[t=0.60336s, 431608 KB] Dead ends: 1 state(s).
[t=0.60336s, 431608 KB] Expanded until last jump: 2273 state(s).
[t=0.60336s, 431608 KB] Reopened until last jump: 1139 state(s).
[t=0.60336s, 431608 KB] Evaluated until last jump: 2346 state(s).
[t=0.60336s, 431608 KB] Generated until last jump: 8182 state(s).
[t=0.60336s, 431608 KB] Number of registered states: 2555
[t=0.60336s, 431608 KB] Int hash set load factor: 2555/4096 = 0.623779
[t=0.60336s, 431608 KB] Int hash set resizes: 12
[t=0.60336s, 431608 KB] Search time: 0.576479s
[t=0.60336s, 431608 KB] Total time: 0.60336s
Solution found.
Peak memory: 431608 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1467 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.4508e-05s, 424928 KB] reading input...
[t=0.002137s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262862s, 427784 KB] Building successor generator...done!
[t=0.0265677s, 427784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266004s, 427784 KB] time for successor generation creation: 0.000170171s
[t=0.0266309s, 427784 KB] Variables: 25
[t=0.0266539s, 427784 KB] FactPairs: 182
[t=0.0266773s, 427784 KB] Bytes per state: 8
[t=0.0268812s, 427784 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109202s, 430376 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.109258s, 430376 KB] g=0, 1 evaluated, 0 expanded
[t=0.109284s, 430376 KB] f = 150, 1 evaluated, 0 expanded
[t=0.10931s, 430376 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.109344s, 430376 KB] pruning method: none
[t=0.122938s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 145
[t=0.122991s, 431084 KB] g=1, 4 evaluated, 1 expanded
[t=0.123438s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.123471s, 431084 KB] g=2, 6 evaluated, 2 expanded
[t=0.123699s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 103
[t=0.123728s, 431084 KB] g=3, 7 evaluated, 3 expanded
[t=0.123952s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.123981s, 431084 KB] g=3, 8 evaluated, 3 expanded
[t=0.124206s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.124235s, 431084 KB] g=3, 9 evaluated, 3 expanded
[t=0.125058s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.125088s, 431084 KB] g=5, 13 evaluated, 5 expanded
[t=0.125311s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.125339s, 431084 KB] g=5, 14 evaluated, 5 expanded
[t=0.125759s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.125788s, 431084 KB] g=5, 16 evaluated, 5 expanded
[t=0.126413s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.126443s, 431084 KB] g=6, 19 evaluated, 6 expanded
[t=0.12687s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.126899s, 431084 KB] g=7, 21 evaluated, 7 expanded
[t=0.13881s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.138843s, 431084 KB] g=9, 81 evaluated, 23 expanded
[t=0.139471s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.139503s, 431084 KB] g=9, 84 evaluated, 23 expanded
[t=0.139727s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.139756s, 431084 KB] g=9, 85 evaluated, 23 expanded
[t=0.140978s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.141011s, 431084 KB] g=11, 91 evaluated, 25 expanded
[t=0.143423s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.143462s, 431216 KB] g=13, 103 evaluated, 28 expanded
[t=0.145863s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.1459s, 431216 KB] g=15, 115 evaluated, 30 expanded
[t=0.146922s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.146952s, 431216 KB] g=16, 120 evaluated, 31 expanded
[t=0.14798s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.148012s, 431216 KB] g=17, 125 evaluated, 32 expanded
[t=0.246426s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.246461s, 431348 KB] g=23, 621 evaluated, 187 expanded, 22 reopened
[t=0.247511s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.247546s, 431348 KB] g=24, 626 evaluated, 188 expanded, 22 reopened
[t=0.247974s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.248005s, 431348 KB] g=24, 628 evaluated, 188 expanded, 22 reopened
[t=0.248829s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.248861s, 431348 KB] g=25, 632 evaluated, 189 expanded, 22 reopened
[t=0.251487s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.25152s, 431348 KB] g=27, 645 evaluated, 192 expanded, 22 reopened
[t=0.252146s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.252176s, 431348 KB] g=28, 648 evaluated, 193 expanded, 22 reopened
[t=0.261362s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.261395s, 431348 KB] g=30, 694 evaluated, 209 expanded, 24 reopened
[t=0.792381s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.792423s, 431744 KB] g=33, 3361 evaluated, 1072 expanded, 98 reopened
[t=0.793053s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=0.793082s, 431744 KB] g=34, 3364 evaluated, 1073 expanded, 98 reopened
[t=0.798905s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.798939s, 431744 KB] g=32, 3393 evaluated, 1084 expanded, 98 reopened
[t=0.799566s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.799597s, 431744 KB] g=33, 3396 evaluated, 1085 expanded, 98 reopened
[t=0.80062s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.80065s, 431744 KB] g=34, 3401 evaluated, 1086 expanded, 98 reopened
[t=0.801079s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.801115s, 431744 KB] g=35, 3403 evaluated, 1087 expanded, 98 reopened
[t=0.807321s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.807355s, 431744 KB] g=38, 3434 evaluated, 1095 expanded, 98 reopened
[t=0.809382s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.809413s, 431744 KB] g=41, 3444 evaluated, 1098 expanded, 98 reopened
[t=0.810442s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.810472s, 431744 KB] g=43, 3449 evaluated, 1100 expanded, 98 reopened
[t=0.814493s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.814526s, 431744 KB] g=44, 3469 evaluated, 1108 expanded, 98 reopened
[t=0.815759s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.815795s, 431744 KB] g=46, 3475 evaluated, 1110 expanded, 98 reopened
[t=0.816627s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.816657s, 431744 KB] g=48, 3479 evaluated, 1112 expanded, 98 reopened
[t=0.81669s, 431744 KB] Solution found!
[t=0.816717s, 431744 KB] Actual search time: 0.707368s
put-down e (1)
unstack l b (1)
put-down l (1)
unstack b a (1)
put-down b (1)
unstack i c (1)
stack i a (1)
unstack c j (1)
put-down c (1)
pick-up e (1)
stack e b (1)
unstack i a (1)
put-down i (1)
unstack j d (1)
stack j i (1)
unstack d g (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up f (1)
stack f l (1)
unstack a k (1)
stack a h (1)
unstack f l (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack l d (1)
stack l c (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.816741s, 431744 KB] Plan length: 49 step(s).
[t=0.816741s, 431744 KB] Plan cost: 49
[t=0.816741s, 431744 KB] Expanded 1114 state(s).
[t=0.816741s, 431744 KB] Reopened 98 state(s).
[t=0.816741s, 431744 KB] Evaluated 3480 state(s).
[t=0.816741s, 431744 KB] Evaluations: 3480
[t=0.816741s, 431744 KB] Generated 5558 state(s).
[t=0.816741s, 431744 KB] Dead ends: 0 state(s).
[t=0.816741s, 431744 KB] Expanded until last jump: 0 state(s).
[t=0.816741s, 431744 KB] Reopened until last jump: 0 state(s).
[t=0.816741s, 431744 KB] Evaluated until last jump: 1 state(s).
[t=0.816741s, 431744 KB] Generated until last jump: 0 state(s).
[t=0.816741s, 431744 KB] Number of registered states: 3480
[t=0.816741s, 431744 KB] Int hash set load factor: 3480/4096 = 0.849609
[t=0.816741s, 431744 KB] Int hash set resizes: 12
[t=0.816741s, 431744 KB] Search time: 0.789861s
[t=0.816741s, 431744 KB] Total time: 0.816741s
Solution found.
Peak memory: 431744 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1472 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7275e-05s, 424928 KB] reading input...
[t=0.00216605s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026157s, 427780 KB] Building successor generator...done!
[t=0.0264367s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264601s, 427780 KB] time for successor generation creation: 0.000167452s
[t=0.0264887s, 427780 KB] Variables: 25
[t=0.0265124s, 427780 KB] FactPairs: 182
[t=0.0265352s, 427780 KB] Bytes per state: 8
[t=0.0267341s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.110302s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.110359s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.110385s, 430372 KB] f = 90, 1 evaluated, 0 expanded
[t=0.110413s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.110437s, 430372 KB] pruning method: none
[t=0.123906s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 75
[t=0.123968s, 431080 KB] g=1, 4 evaluated, 1 expanded
[t=0.125147s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.125178s, 431080 KB] g=2, 10 evaluated, 2 expanded
[t=0.125774s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.125804s, 431080 KB] g=2, 13 evaluated, 2 expanded
[t=0.126593s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.126625s, 431080 KB] g=3, 17 evaluated, 3 expanded
[t=0.127232s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.127263s, 431080 KB] g=3, 20 evaluated, 3 expanded
[t=0.128816s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.128846s, 431080 KB] g=4, 28 evaluated, 4 expanded
[t=0.130412s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.130443s, 431080 KB] g=6, 36 evaluated, 6 expanded
[t=0.131824s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.131856s, 431080 KB] g=7, 43 evaluated, 7 expanded
[t=0.133591s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.133623s, 431080 KB] g=8, 52 evaluated, 8 expanded
[t=0.136153s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.136186s, 431212 KB] g=9, 65 evaluated, 11 expanded
[t=0.140429s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.140462s, 431212 KB] g=7, 87 evaluated, 15 expanded
[t=0.140877s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.140907s, 431212 KB] g=8, 89 evaluated, 16 expanded
[t=0.14151s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.141542s, 431212 KB] g=8, 92 evaluated, 16 expanded
[t=0.142148s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.14218s, 431212 KB] g=9, 95 evaluated, 17 expanded
[t=0.143178s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.14321s, 431212 KB] g=10, 100 evaluated, 18 expanded
[t=0.143621s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.143653s, 431212 KB] g=10, 102 evaluated, 18 expanded
[t=0.144457s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.144487s, 431212 KB] g=11, 106 evaluated, 19 expanded
[t=0.144901s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.144933s, 431212 KB] g=11, 108 evaluated, 19 expanded
[t=0.146502s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.146536s, 431212 KB] g=13, 116 evaluated, 21 expanded
[t=0.30106s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.301102s, 431344 KB] g=19, 917 evaluated, 271 expanded, 10 reopened
[t=0.301904s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.301938s, 431344 KB] g=20, 921 evaluated, 272 expanded, 10 reopened
[t=0.311333s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.31137s, 431344 KB] g=20, 969 evaluated, 284 expanded, 10 reopened
[t=0.312418s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.312449s, 431344 KB] g=21, 974 evaluated, 285 expanded, 10 reopened
[t=0.313436s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.313467s, 431344 KB] g=22, 979 evaluated, 286 expanded, 10 reopened
[t=0.314263s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.314293s, 431344 KB] g=23, 983 evaluated, 287 expanded, 10 reopened
[t=0.315099s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.315134s, 431344 KB] g=24, 987 evaluated, 288 expanded, 10 reopened
[t=0.315551s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.31558s, 431344 KB] g=25, 989 evaluated, 289 expanded, 10 reopened
[t=0.31638s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.316412s, 431344 KB] g=26, 993 evaluated, 290 expanded, 10 reopened
[t=0.317017s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.317046s, 431344 KB] g=27, 996 evaluated, 291 expanded, 10 reopened
[t=0.318232s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.318263s, 431344 KB] g=29, 1002 evaluated, 293 expanded, 10 reopened
[t=0.322066s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.322099s, 431344 KB] g=30, 1021 evaluated, 300 expanded, 10 reopened
[t=0.323407s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.323448s, 431476 KB] g=32, 1027 evaluated, 302 expanded, 10 reopened
[t=0.324255s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.324292s, 431476 KB] g=34, 1031 evaluated, 304 expanded, 10 reopened
[t=0.324326s, 431476 KB] Solution found!
[t=0.324352s, 431476 KB] Actual search time: 0.213911s
stack e b (1)
unstack h k (1)
stack h j (1)
unstack l f (1)
stack l d (1)
pick-up a (1)
stack a k (1)
unstack h j (1)
stack h a (1)
pick-up f (1)
stack f j (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
stack l c (1)
unstack d i (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.324377s, 431476 KB] Plan length: 35 step(s).
[t=0.324377s, 431476 KB] Plan cost: 35
[t=0.324377s, 431476 KB] Expanded 306 state(s).
[t=0.324377s, 431476 KB] Reopened 10 state(s).
[t=0.324377s, 431476 KB] Evaluated 1032 state(s).
[t=0.324377s, 431476 KB] Evaluations: 1032
[t=0.324377s, 431476 KB] Generated 1483 state(s).
[t=0.324377s, 431476 KB] Dead ends: 0 state(s).
[t=0.324377s, 431476 KB] Expanded until last jump: 0 state(s).
[t=0.324377s, 431476 KB] Reopened until last jump: 0 state(s).
[t=0.324377s, 431476 KB] Evaluated until last jump: 1 state(s).
[t=0.324377s, 431476 KB] Generated until last jump: 0 state(s).
[t=0.324377s, 431476 KB] Number of registered states: 1032
[t=0.324377s, 431476 KB] Int hash set load factor: 1032/2048 = 0.503906
[t=0.324377s, 431476 KB] Int hash set resizes: 11
[t=0.324377s, 431476 KB] Search time: 0.297644s
[t=0.324377s, 431476 KB] Total time: 0.324377s
Solution found.
Peak memory: 431476 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0705e-05s, 424928 KB] reading input...
[t=0.00218865s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262596s, 427784 KB] Building successor generator...done!
[t=0.0265381s, 427784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265619s, 427784 KB] time for successor generation creation: 0.000170282s
[t=0.0265913s, 427784 KB] Variables: 25
[t=0.026614s, 427784 KB] FactPairs: 182
[t=0.0266369s, 427784 KB] Bytes per state: 8
[t=0.0268521s, 427784 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.099552s, 430376 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.099607s, 430376 KB] g=0, 1 evaluated, 0 expanded
[t=0.0996332s, 430376 KB] f = 72, 1 evaluated, 0 expanded
[t=0.0996609s, 430376 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.0996854s, 430376 KB] pruning method: none
[t=0.113194s, 431084 KB] f = 77, 4 evaluated, 1 expanded
[t=0.113805s, 431084 KB] f = 78, 7 evaluated, 2 expanded
[t=0.116958s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.116993s, 431084 KB] g=6, 24 evaluated, 7 expanded
[t=0.11813s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.118161s, 431084 KB] g=8, 30 evaluated, 9 expanded
[t=0.121307s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.121342s, 431084 KB] g=10, 47 evaluated, 13 expanded
[t=0.127034s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.127068s, 431084 KB] g=12, 78 evaluated, 22 expanded
[t=0.134435s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.134472s, 431216 KB] g=12, 118 evaluated, 36 expanded
[t=0.136716s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.13675s, 431216 KB] g=14, 130 evaluated, 39 expanded
[t=0.143178s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 47
[t=0.143211s, 431216 KB] g=14, 165 evaluated, 49 expanded
[t=0.210702s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.210744s, 431216 KB] g=20, 531 evaluated, 182 expanded, 5 reopened
[t=0.3192s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.31924s, 431348 KB] g=22, 1119 evaluated, 416 expanded, 28 reopened
[t=0.31946s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.31949s, 431348 KB] g=23, 1120 evaluated, 417 expanded, 28 reopened
[t=0.428776s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.428815s, 431480 KB] g=22, 1707 evaluated, 735 expanded, 148 reopened
[t=0.763194s, 431612 KB] f = 79, 3509 evaluated, 1591 expanded, 357 reopened
[t=1.26623s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=1.26629s, 431880 KB] g=25, 6186 evaluated, 3747 expanded, 1451 reopened
[t=1.26837s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=1.2684s, 431880 KB] g=27, 6197 evaluated, 3749 expanded, 1451 reopened
[t=1.27121s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=1.27124s, 431880 KB] g=30, 6212 evaluated, 3752 expanded, 1451 reopened
[t=1.2997s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=1.29974s, 431880 KB] g=33, 6366 evaluated, 3789 expanded, 1451 reopened
[t=1.31196s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=1.31199s, 431880 KB] g=34, 6432 evaluated, 3804 expanded, 1451 reopened
[t=1.31278s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=1.31282s, 431880 KB] g=35, 6436 evaluated, 3805 expanded, 1451 reopened
[t=1.31322s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=1.31325s, 431880 KB] g=36, 6438 evaluated, 3806 expanded, 1451 reopened
[t=1.31475s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=1.31479s, 431880 KB] g=37, 6446 evaluated, 3807 expanded, 1451 reopened
[t=1.31556s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=1.31559s, 431880 KB] g=38, 6450 evaluated, 3808 expanded, 1451 reopened
[t=1.31803s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=1.31807s, 431880 KB] g=40, 6463 evaluated, 3811 expanded, 1451 reopened
[t=1.31902s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=1.31905s, 431880 KB] g=41, 6468 evaluated, 3812 expanded, 1451 reopened
[t=1.32021s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=1.32025s, 431880 KB] g=43, 6474 evaluated, 3814 expanded, 1451 reopened
[t=1.32064s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=1.32068s, 431880 KB] g=43, 6476 evaluated, 3814 expanded, 1451 reopened
[t=1.32163s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=1.32167s, 431880 KB] g=44, 6481 evaluated, 3815 expanded, 1451 reopened
[t=1.32188s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=1.32191s, 431880 KB] g=45, 6482 evaluated, 3816 expanded, 1451 reopened
[t=1.3225s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=1.32253s, 431880 KB] g=46, 6485 evaluated, 3817 expanded, 1451 reopened
[t=1.32367s, 431880 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=1.3237s, 431880 KB] g=47, 6491 evaluated, 3818 expanded, 1451 reopened
[t=1.32411s, 432012 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=1.32415s, 432012 KB] g=48, 6493 evaluated, 3819 expanded, 1451 reopened
[t=1.32455s, 432012 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=1.32458s, 432012 KB] g=49, 6495 evaluated, 3820 expanded, 1451 reopened
[t=1.32554s, 432012 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=1.32557s, 432012 KB] g=51, 6500 evaluated, 3822 expanded, 1451 reopened
[t=1.32635s, 432012 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=1.32638s, 432012 KB] g=53, 6504 evaluated, 3824 expanded, 1451 reopened
[t=1.32641s, 432012 KB] Solution found!
[t=1.32644s, 432012 KB] Actual search time: 1.22675s
unstack e f (1)
put-down e (1)
unstack g l (1)
stack g e (1)
unstack l j (1)
put-down l (1)
unstack b d (1)
stack b l (1)
unstack g e (1)
put-down g (1)
unstack d k (1)
put-down d (1)
pick-up f (1)
stack f d (1)
pick-up e (1)
stack e j (1)
unstack k c (1)
stack k b (1)
unstack e j (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c i (1)
put-down c (1)
unstack i h (1)
put-down i (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack j e (1)
stack j i (1)
unstack e k (1)
stack e j (1)
unstack f d (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e j (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=1.32646s, 432012 KB] Plan length: 54 step(s).
[t=1.32646s, 432012 KB] Plan cost: 54
[t=1.32646s, 432012 KB] Expanded 3826 state(s).
[t=1.32646s, 432012 KB] Reopened 1451 state(s).
[t=1.32646s, 432012 KB] Evaluated 6505 state(s).
[t=1.32646s, 432012 KB] Evaluations: 6505
[t=1.32646s, 432012 KB] Generated 16846 state(s).
[t=1.32646s, 432012 KB] Dead ends: 0 state(s).
[t=1.32646s, 432012 KB] Expanded until last jump: 1591 state(s).
[t=1.32646s, 432012 KB] Reopened until last jump: 357 state(s).
[t=1.32646s, 432012 KB] Evaluated until last jump: 3509 state(s).
[t=1.32646s, 432012 KB] Generated until last jump: 7045 state(s).
[t=1.32646s, 432012 KB] Number of registered states: 6505
[t=1.32646s, 432012 KB] Int hash set load factor: 6505/8192 = 0.794067
[t=1.32646s, 432012 KB] Int hash set resizes: 13
[t=1.32646s, 432012 KB] Search time: 1.29961s
[t=1.32646s, 432012 KB] Total time: 1.32646s
Solution found.
Peak memory: 432012 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6071e-05s, 424928 KB] reading input...
[t=0.00218878s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0263348s, 427780 KB] Building successor generator...done!
[t=0.0266138s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266476s, 427780 KB] time for successor generation creation: 0.000165279s
[t=0.0266763s, 427780 KB] Variables: 25
[t=0.0266983s, 427780 KB] FactPairs: 182
[t=0.0267208s, 427780 KB] Bytes per state: 8
[t=0.0269153s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.110887s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.110946s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.110972s, 430372 KB] f = 89, 1 evaluated, 0 expanded
[t=0.111s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.111024s, 430372 KB] pruning method: none
[t=0.121183s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.121234s, 431080 KB] g=1, 2 evaluated, 1 expanded
[t=0.124463s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 81
[t=0.124507s, 431080 KB] g=1, 3 evaluated, 1 expanded
[t=0.125258s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.125288s, 431080 KB] g=2, 7 evaluated, 2 expanded
[t=0.125495s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.125523s, 431080 KB] g=2, 8 evaluated, 2 expanded
[t=0.127165s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.127196s, 431080 KB] g=4, 17 evaluated, 5 expanded
[t=0.127934s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.127963s, 431080 KB] g=5, 21 evaluated, 6 expanded
[t=0.12817s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.128199s, 431080 KB] g=5, 22 evaluated, 6 expanded
[t=0.128936s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.128966s, 431080 KB] g=6, 26 evaluated, 7 expanded
[t=0.12935s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 49
[t=0.129378s, 431080 KB] g=7, 28 evaluated, 8 expanded
[t=0.129944s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.129973s, 431080 KB] g=8, 31 evaluated, 9 expanded
[t=0.130893s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.130922s, 431080 KB] g=9, 36 evaluated, 10 expanded
[t=0.131668s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.131699s, 431080 KB] g=11, 40 evaluated, 12 expanded
[t=0.133679s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.133718s, 431080 KB] g=13, 51 evaluated, 16 expanded
[t=0.135708s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.135741s, 431080 KB] g=15, 62 evaluated, 19 expanded
[t=0.147642s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.147678s, 431212 KB] g=17, 129 evaluated, 36 expanded
[t=0.160849s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.160891s, 431212 KB] g=19, 203 evaluated, 56 expanded
[t=0.258736s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.258781s, 431344 KB] g=21, 755 evaluated, 209 expanded, 1 reopened
[t=0.283941s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.283978s, 431344 KB] g=25, 897 evaluated, 249 expanded, 1 reopened
[t=30.1112s, 439116 KB] [Timed Statistics: 166397 evaluated, 67201 expanded, 7922 reopened]
[t=30.305s, 439116 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=30.3051s, 439116 KB] g=36, 167473 evaluated, 67612 expanded, 7964 reopened
[t=30.306s, 439116 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=30.306s, 439116 KB] g=37, 167478 evaluated, 67613 expanded, 7964 reopened
[t=30.3068s, 439116 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=30.3068s, 439116 KB] g=38, 167482 evaluated, 67614 expanded, 7964 reopened
[t=30.3105s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=30.3105s, 439248 KB] g=40, 167502 evaluated, 67618 expanded, 7964 reopened
[t=30.3138s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=30.3138s, 439248 KB] g=43, 167520 evaluated, 67623 expanded, 7964 reopened
[t=30.3149s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=30.315s, 439248 KB] g=45, 167526 evaluated, 67625 expanded, 7964 reopened
[t=30.3285s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=30.3285s, 439248 KB] g=43, 167600 evaluated, 67649 expanded, 7965 reopened
[t=30.3291s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=30.3291s, 439248 KB] g=44, 167603 evaluated, 67650 expanded, 7965 reopened
[t=30.3299s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=30.3299s, 439248 KB] g=45, 167607 evaluated, 67651 expanded, 7965 reopened
[t=30.331s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=30.3311s, 439248 KB] g=47, 167613 evaluated, 67653 expanded, 7965 reopened
[t=30.3345s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=30.3345s, 439248 KB] g=48, 167632 evaluated, 67660 expanded, 7965 reopened
[t=30.3357s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=30.3357s, 439248 KB] g=50, 167638 evaluated, 67662 expanded, 7965 reopened
[t=30.3365s, 439248 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=30.3365s, 439248 KB] g=52, 167642 evaluated, 67664 expanded, 7965 reopened
[t=30.3365s, 439248 KB] Solution found!
[t=30.3365s, 439248 KB] Actual search time: 30.2255s
stack h f (1)
unstack a e (1)
stack a k (1)
unstack e g (1)
stack e l (1)
unstack h f (1)
stack h a (1)
pick-up g (1)
stack g h (1)
unstack e l (1)
put-down e (1)
unstack f b (1)
stack f l (1)
unstack b d (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack d i (1)
stack d g (1)
unstack i c (1)
put-down i (1)
unstack d g (1)
stack d c (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
pick-up k (1)
stack k e (1)
unstack f l (1)
stack f a (1)
unstack k e (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack d c (1)
stack d b (1)
unstack l j (1)
stack l c (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=30.3366s, 439248 KB] Plan length: 53 step(s).
[t=30.3366s, 439248 KB] Plan cost: 53
[t=30.3366s, 439248 KB] Expanded 67666 state(s).
[t=30.3366s, 439248 KB] Reopened 7965 state(s).
[t=30.3366s, 439248 KB] Evaluated 167643 state(s).
[t=30.3366s, 439248 KB] Evaluations: 167643
[t=30.3366s, 439248 KB] Generated 325289 state(s).
[t=30.3366s, 439248 KB] Dead ends: 0 state(s).
[t=30.3366s, 439248 KB] Expanded until last jump: 0 state(s).
[t=30.3366s, 439248 KB] Reopened until last jump: 0 state(s).
[t=30.3366s, 439248 KB] Evaluated until last jump: 1 state(s).
[t=30.3366s, 439248 KB] Generated until last jump: 0 state(s).
[t=30.3366s, 439248 KB] Number of registered states: 167643
[t=30.3366s, 439248 KB] Int hash set load factor: 167643/262144 = 0.639507
[t=30.3366s, 439248 KB] Int hash set resizes: 18
[t=30.3366s, 439248 KB] Search time: 30.3097s
[t=30.3366s, 439248 KB] Total time: 30.3366s
Solution found.
Peak memory: 439248 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p8.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6005e-05s, 424928 KB] reading input...
[t=0.0021148s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262285s, 427780 KB] Building successor generator...done!
[t=0.0265096s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265329s, 427780 KB] time for successor generation creation: 0.000169682s
[t=0.0265617s, 427780 KB] Variables: 25
[t=0.0265847s, 427780 KB] FactPairs: 182
[t=0.0266067s, 427780 KB] Bytes per state: 8
[t=0.0268231s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.108094s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.10815s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.108175s, 430372 KB] f = 99, 1 evaluated, 0 expanded
[t=0.108203s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.108226s, 430372 KB] pruning method: none
[t=0.118249s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.118298s, 431080 KB] g=1, 2 evaluated, 1 expanded
[t=0.122234s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.122278s, 431080 KB] g=2, 7 evaluated, 2 expanded
[t=0.123219s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.123253s, 431080 KB] g=3, 12 evaluated, 3 expanded
[t=0.123463s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.123503s, 431080 KB] g=3, 13 evaluated, 3 expanded
[t=0.124983s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.125015s, 431080 KB] g=5, 21 evaluated, 5 expanded
[t=0.132573s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.132609s, 431080 KB] g=8, 63 evaluated, 15 expanded
[t=0.135154s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.135189s, 431212 KB] g=10, 77 evaluated, 18 expanded
[t=0.141126s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.141161s, 431212 KB] g=14, 110 evaluated, 28 expanded
[t=0.142087s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.14212s, 431212 KB] g=15, 115 evaluated, 29 expanded
[t=0.142327s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.142356s, 431212 KB] g=15, 116 evaluated, 29 expanded
[t=0.142922s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.142956s, 431212 KB] g=16, 119 evaluated, 30 expanded
[t=0.150002s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.150036s, 431212 KB] g=19, 158 evaluated, 40 expanded
[t=0.150606s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.150639s, 431212 KB] g=20, 161 evaluated, 41 expanded
[t=0.152127s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.152165s, 431212 KB] g=19, 169 evaluated, 44 expanded
[t=0.153984s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.154018s, 431212 KB] g=21, 179 evaluated, 46 expanded
[t=0.154942s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.154972s, 431212 KB] g=22, 184 evaluated, 47 expanded
[t=0.155906s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.155941s, 431212 KB] g=23, 189 evaluated, 48 expanded
[t=0.156509s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.15654s, 431212 KB] g=24, 192 evaluated, 49 expanded
[t=0.157105s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.157136s, 431212 KB] g=25, 195 evaluated, 50 expanded
[t=0.157705s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.157744s, 431212 KB] g=26, 198 evaluated, 51 expanded
[t=0.158136s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.158166s, 431212 KB] g=27, 200 evaluated, 52 expanded
[t=0.158733s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.158764s, 431212 KB] g=28, 203 evaluated, 53 expanded
[t=0.162753s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.162787s, 431212 KB] g=31, 225 evaluated, 61 expanded
[t=0.163187s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.163223s, 431212 KB] g=32, 227 evaluated, 62 expanded
[t=0.163792s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.163823s, 431212 KB] g=33, 230 evaluated, 63 expanded
[t=0.164215s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.164246s, 431212 KB] g=35, 232 evaluated, 65 expanded
[t=0.164638s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.164668s, 431212 KB] g=36, 234 evaluated, 66 expanded
[t=0.165792s, 431212 KB] Solution found!
[t=0.165829s, 431212 KB] Actual search time: 0.0576001s
put-down g (1)
unstack d b (1)
stack d i (1)
unstack l a (1)
stack l b (1)
unstack a h (1)
stack a e (1)
unstack l b (1)
stack l d (1)
pick-up h (1)
stack h g (1)
unstack a e (1)
stack a h (1)
unstack b k (1)
put-down b (1)
unstack k f (1)
stack k e (1)
unstack f j (1)
stack f a (1)
unstack k e (1)
stack k f (1)
pick-up e (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack l d (1)
put-down l (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.165855s, 431212 KB] Plan length: 39 step(s).
[t=0.165855s, 431212 KB] Plan cost: 39
[t=0.165855s, 431212 KB] Expanded 72 state(s).
[t=0.165855s, 431212 KB] Reopened 0 state(s).
[t=0.165855s, 431212 KB] Evaluated 241 state(s).
[t=0.165855s, 431212 KB] Evaluations: 241
[t=0.165855s, 431212 KB] Generated 311 state(s).
[t=0.165855s, 431212 KB] Dead ends: 1 state(s).
[t=0.165855s, 431212 KB] Expanded until last jump: 0 state(s).
[t=0.165855s, 431212 KB] Reopened until last jump: 0 state(s).
[t=0.165855s, 431212 KB] Evaluated until last jump: 1 state(s).
[t=0.165855s, 431212 KB] Generated until last jump: 0 state(s).
[t=0.165855s, 431212 KB] Number of registered states: 241
[t=0.165855s, 431212 KB] Int hash set load factor: 241/256 = 0.941406
[t=0.165855s, 431212 KB] Int hash set resizes: 8
[t=0.165855s, 431212 KB] Search time: 0.139033s
[t=0.165855s, 431212 KB] Total time: 0.165855s
Solution found.
Peak memory: 431212 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=5.0579e-05s, 424928 KB] reading input...
[t=0.00220766s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262223s, 427784 KB] Building successor generator...done!
[t=0.0265009s, 427784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265242s, 427784 KB] time for successor generation creation: 0.000166299s
[t=0.0265528s, 427784 KB] Variables: 25
[t=0.0265754s, 427784 KB] FactPairs: 182
[t=0.0265975s, 427784 KB] Bytes per state: 8
[t=0.0268012s, 427784 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0986939s, 430376 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.0987498s, 430376 KB] g=0, 1 evaluated, 0 expanded
[t=0.0987758s, 430376 KB] f = 137, 1 evaluated, 0 expanded
[t=0.0988032s, 430376 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 137
[t=0.0988277s, 430376 KB] pruning method: none
[t=0.111951s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.112025s, 431084 KB] g=1, 3 evaluated, 1 expanded
[t=0.112245s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.112276s, 431084 KB] g=2, 4 evaluated, 2 expanded
[t=0.112652s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.112682s, 431084 KB] g=3, 6 evaluated, 3 expanded
[t=0.113399s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 85
[t=0.11343s, 431084 KB] g=5, 10 evaluated, 5 expanded
[t=0.113634s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.113663s, 431084 KB] g=6, 11 evaluated, 6 expanded
[t=0.114038s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.114068s, 431084 KB] g=6, 13 evaluated, 6 expanded
[t=0.114442s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.114472s, 431084 KB] g=7, 15 evaluated, 7 expanded
[t=0.118941s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.118976s, 431084 KB] g=11, 41 evaluated, 15 expanded
[t=0.119513s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.119544s, 431084 KB] g=11, 44 evaluated, 15 expanded
[t=0.120427s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.120465s, 431084 KB] g=12, 49 evaluated, 16 expanded
[t=0.125252s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.125287s, 431084 KB] g=13, 77 evaluated, 22 expanded
[t=0.125491s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.125521s, 431084 KB] g=13, 78 evaluated, 22 expanded
[t=0.125894s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.125925s, 431084 KB] g=14, 80 evaluated, 23 expanded
[t=0.126296s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.126326s, 431084 KB] g=14, 82 evaluated, 23 expanded
[t=0.126703s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.12674s, 431084 KB] g=15, 84 evaluated, 24 expanded
[t=0.127978s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.128014s, 431216 KB] g=16, 91 evaluated, 25 expanded
[t=0.129251s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.129292s, 431216 KB] g=18, 98 evaluated, 27 expanded
[t=0.129706s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.129737s, 431216 KB] g=18, 100 evaluated, 27 expanded
[t=0.136442s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.136481s, 431216 KB] g=20, 139 evaluated, 39 expanded
[t=0.145695s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.145735s, 431216 KB] g=26, 193 evaluated, 51 expanded
[t=0.169786s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.169826s, 431216 KB] g=28, 334 evaluated, 86 expanded
[t=0.170034s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.170065s, 431216 KB] g=29, 335 evaluated, 87 expanded
[t=0.172549s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.172589s, 431216 KB] g=33, 349 evaluated, 92 expanded
[t=0.178975s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.179012s, 431348 KB] g=35, 386 evaluated, 102 expanded
[t=2.24282s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=2.24287s, 432176 KB] g=40, 12387 evaluated, 5375 expanded, 1575 reopened
[t=2.24704s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=2.24708s, 432176 KB] g=41, 12411 evaluated, 5382 expanded, 1575 reopened
[t=2.24782s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=2.24785s, 432176 KB] g=42, 12415 evaluated, 5383 expanded, 1575 reopened
[t=2.24858s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=2.24861s, 432176 KB] g=43, 12419 evaluated, 5384 expanded, 1575 reopened
[t=2.24915s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=2.24918s, 432176 KB] g=44, 12422 evaluated, 5385 expanded, 1575 reopened
[t=2.25007s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=2.2501s, 432176 KB] g=45, 12427 evaluated, 5386 expanded, 1575 reopened
[t=2.25065s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=2.25068s, 432176 KB] g=46, 12430 evaluated, 5387 expanded, 1575 reopened
[t=2.25125s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=2.25128s, 432176 KB] g=47, 12433 evaluated, 5388 expanded, 1575 reopened
[t=2.25286s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=2.25291s, 432176 KB] g=50, 12442 evaluated, 5391 expanded, 1575 reopened
[t=2.25829s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=2.25832s, 432176 KB] g=51, 12473 evaluated, 5401 expanded, 1575 reopened
[t=2.2594s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=2.25943s, 432176 KB] g=53, 12479 evaluated, 5403 expanded, 1575 reopened
[t=2.26015s, 432176 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=2.26018s, 432176 KB] g=55, 12483 evaluated, 5405 expanded, 1575 reopened
[t=2.26022s, 432176 KB] Solution found!
[t=2.26025s, 432176 KB] Actual search time: 2.16141s
unstack j i (1)
stack j h (1)
unstack i k (1)
put-down i (1)
unstack k e (1)
put-down k (1)
unstack e d (1)
put-down e (1)
unstack d b (1)
stack d k (1)
unstack b g (1)
stack b d (1)
unstack j h (1)
stack j i (1)
unstack g a (1)
put-down g (1)
pick-up a (1)
stack a j (1)
unstack h f (1)
stack h a (1)
unstack b d (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack f l (1)
stack f e (1)
unstack l c (1)
stack l h (1)
unstack d k (1)
stack d c (1)
unstack l h (1)
stack l d (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack f e (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d c (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=2.26027s, 432176 KB] Plan length: 56 step(s).
[t=2.26027s, 432176 KB] Plan cost: 56
[t=2.26027s, 432176 KB] Expanded 5407 state(s).
[t=2.26027s, 432176 KB] Reopened 1575 state(s).
[t=2.26027s, 432176 KB] Evaluated 12484 state(s).
[t=2.26027s, 432176 KB] Evaluations: 12484
[t=2.26027s, 432176 KB] Generated 27048 state(s).
[t=2.26027s, 432176 KB] Dead ends: 0 state(s).
[t=2.26027s, 432176 KB] Expanded until last jump: 0 state(s).
[t=2.26027s, 432176 KB] Reopened until last jump: 0 state(s).
[t=2.26027s, 432176 KB] Evaluated until last jump: 1 state(s).
[t=2.26027s, 432176 KB] Generated until last jump: 0 state(s).
[t=2.26027s, 432176 KB] Number of registered states: 12484
[t=2.26027s, 432176 KB] Int hash set load factor: 12484/16384 = 0.761963
[t=2.26027s, 432176 KB] Int hash set resizes: 14
[t=2.26027s, 432176 KB] Search time: 2.23347s
[t=2.26027s, 432176 KB] Total time: 2.26027s
Solution found.
Peak memory: 432176 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p10.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6598e-05s, 424928 KB] reading input...
[t=0.00214588s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259003s, 427780 KB] Building successor generator...done!
[t=0.0261954s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262198s, 427780 KB] time for successor generation creation: 0.000178042s
[t=0.0262487s, 427780 KB] Variables: 25
[t=0.0262714s, 427780 KB] FactPairs: 182
[t=0.0262933s, 427780 KB] Bytes per state: 8
[t=0.0264928s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.108077s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.108133s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.108159s, 430372 KB] f = 86, 1 evaluated, 0 expanded
[t=0.108186s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 86
[t=0.10821s, 430372 KB] pruning method: none
[t=0.118218s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.118268s, 431080 KB] g=1, 2 evaluated, 1 expanded
[t=0.124531s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 78
[t=0.124575s, 431080 KB] g=4, 21 evaluated, 5 expanded
[t=0.127704s, 431080 KB] f = 87, 39 evaluated, 11 expanded
[t=0.128437s, 431080 KB] f = 89, 43 evaluated, 13 expanded
[t=0.128822s, 431080 KB] f = 90, 45 evaluated, 14 expanded
[t=0.129034s, 431080 KB] f = 91, 46 evaluated, 15 expanded
[t=0.129773s, 431080 KB] f = 92, 50 evaluated, 19 expanded, 2 reopened
[t=0.130335s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.130369s, 431080 KB] g=4, 53 evaluated, 20 expanded, 2 reopened
[t=0.130739s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.130769s, 431080 KB] g=4, 55 evaluated, 20 expanded, 2 reopened
[t=0.134408s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.134442s, 431080 KB] g=7, 76 evaluated, 24 expanded, 2 reopened
[t=0.135186s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.135223s, 431212 KB] g=8, 80 evaluated, 25 expanded, 2 reopened
[t=0.135429s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.135458s, 431212 KB] g=8, 81 evaluated, 25 expanded, 2 reopened
[t=0.145114s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.145155s, 431212 KB] g=8, 137 evaluated, 39 expanded, 2 reopened
[t=0.157766s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.157806s, 431212 KB] g=10, 210 evaluated, 59 expanded, 2 reopened
[t=0.159061s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.159098s, 431212 KB] g=11, 217 evaluated, 60 expanded, 2 reopened
[t=0.164615s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.16465s, 431212 KB] g=16, 249 evaluated, 68 expanded, 2 reopened
[t=0.166076s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.166108s, 431212 KB] g=18, 257 evaluated, 70 expanded, 2 reopened
[t=0.20065s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.200699s, 431344 KB] g=22, 437 evaluated, 145 expanded, 16 reopened
[t=0.201608s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.20164s, 431344 KB] g=23, 442 evaluated, 146 expanded, 16 reopened
[t=0.202908s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.202948s, 431344 KB] g=24, 449 evaluated, 147 expanded, 16 reopened
[t=0.203866s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.203898s, 431344 KB] g=26, 454 evaluated, 149 expanded, 16 reopened
[t=0.204813s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.204845s, 431344 KB] g=27, 459 evaluated, 150 expanded, 16 reopened
[t=0.278395s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.278447s, 431476 KB] g=26, 862 evaluated, 299 expanded, 24 reopened
[t=0.280258s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.280296s, 431476 KB] g=27, 872 evaluated, 300 expanded, 24 reopened
[t=0.281888s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.281921s, 431476 KB] g=29, 881 evaluated, 302 expanded, 24 reopened
[t=0.283191s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.283227s, 431476 KB] g=30, 888 evaluated, 303 expanded, 24 reopened
[t=0.283965s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.283998s, 431608 KB] g=31, 892 evaluated, 304 expanded, 24 reopened
[t=0.284376s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.284406s, 431608 KB] g=31, 894 evaluated, 304 expanded, 24 reopened
[t=0.285482s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.285514s, 431608 KB] g=33, 900 evaluated, 306 expanded, 24 reopened
[t=0.285896s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.285927s, 431608 KB] g=33, 902 evaluated, 306 expanded, 24 reopened
[t=0.286864s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.286903s, 431608 KB] g=34, 907 evaluated, 307 expanded, 24 reopened
[t=0.287133s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.287166s, 431608 KB] g=35, 908 evaluated, 308 expanded, 24 reopened
[t=0.287768s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.287803s, 431608 KB] g=36, 911 evaluated, 309 expanded, 24 reopened
[t=0.288905s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.288937s, 431608 KB] g=37, 917 evaluated, 310 expanded, 24 reopened
[t=0.289319s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.289349s, 431608 KB] g=38, 919 evaluated, 311 expanded, 24 reopened
[t=0.289734s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.289765s, 431608 KB] g=39, 921 evaluated, 312 expanded, 24 reopened
[t=0.290672s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.290705s, 431608 KB] g=41, 926 evaluated, 314 expanded, 24 reopened
[t=0.29144s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.291478s, 431608 KB] g=43, 930 evaluated, 316 expanded, 24 reopened
[t=0.291512s, 431608 KB] Solution found!
[t=0.291539s, 431608 KB] Actual search time: 0.183325s
unstack g b (1)
put-down g (1)
unstack c e (1)
put-down c (1)
unstack e a (1)
stack e j (1)
pick-up l (1)
stack l e (1)
unstack a h (1)
stack a b (1)
pick-up h (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack l e (1)
put-down l (1)
unstack b k (1)
stack b l (1)
unstack e j (1)
stack e b (1)
unstack k i (1)
stack k c (1)
unstack i f (1)
put-down i (1)
unstack f d (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.291564s, 431608 KB] Plan length: 44 step(s).
[t=0.291564s, 431608 KB] Plan cost: 44
[t=0.291564s, 431608 KB] Expanded 318 state(s).
[t=0.291564s, 431608 KB] Reopened 24 state(s).
[t=0.291564s, 431608 KB] Evaluated 931 state(s).
[t=0.291564s, 431608 KB] Evaluations: 931
[t=0.291564s, 431608 KB] Generated 1399 state(s).
[t=0.291564s, 431608 KB] Dead ends: 0 state(s).
[t=0.291564s, 431608 KB] Expanded until last jump: 19 state(s).
[t=0.291564s, 431608 KB] Reopened until last jump: 2 state(s).
[t=0.291564s, 431608 KB] Evaluated until last jump: 50 state(s).
[t=0.291564s, 431608 KB] Generated until last jump: 76 state(s).
[t=0.291564s, 431608 KB] Number of registered states: 931
[t=0.291564s, 431608 KB] Int hash set load factor: 931/1024 = 0.90918
[t=0.291564s, 431608 KB] Int hash set resizes: 10
[t=0.291564s, 431608 KB] Search time: 0.265072s
[t=0.291564s, 431608 KB] Total time: 0.291564s
Solution found.
Peak memory: 431608 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p11.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6954e-05s, 424928 KB] reading input...
[t=0.00212615s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259055s, 427780 KB] Building successor generator...done!
[t=0.0261879s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262115s, 427780 KB] time for successor generation creation: 0.000169616s
[t=0.0262398s, 427780 KB] Variables: 25
[t=0.0262624s, 427780 KB] FactPairs: 182
[t=0.0262839s, 427780 KB] Bytes per state: 8
[t=0.0264924s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0980364s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0980913s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.0981175s, 430372 KB] f = 150, 1 evaluated, 0 expanded
[t=0.0981445s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.0981684s, 430372 KB] pruning method: none
[t=0.111292s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.11134s, 431080 KB] g=1, 3 evaluated, 1 expanded
[t=0.111896s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 125
[t=0.111927s, 431080 KB] g=1, 6 evaluated, 1 expanded
[t=0.112137s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 105
[t=0.112167s, 431080 KB] g=2, 7 evaluated, 2 expanded
[t=0.113062s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 96
[t=0.113092s, 431080 KB] g=3, 12 evaluated, 3 expanded
[t=0.115443s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.115487s, 431080 KB] g=4, 25 evaluated, 6 expanded
[t=0.115869s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.115902s, 431080 KB] g=4, 27 evaluated, 6 expanded
[t=0.116112s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.116141s, 431080 KB] g=5, 28 evaluated, 7 expanded
[t=0.116344s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.116382s, 431080 KB] g=5, 29 evaluated, 7 expanded
[t=0.116938s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.116967s, 431080 KB] g=6, 32 evaluated, 8 expanded
[t=0.117706s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.117736s, 431080 KB] g=7, 36 evaluated, 9 expanded
[t=0.120231s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.120265s, 431080 KB] g=8, 50 evaluated, 13 expanded
[t=0.125043s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.125145s, 431080 KB] g=8, 67 evaluated, 17 expanded
[t=0.126859s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.126892s, 431080 KB] g=9, 71 evaluated, 18 expanded
[t=0.127097s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.127126s, 431080 KB] g=9, 72 evaluated, 18 expanded
[t=0.15738s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.157422s, 431212 KB] g=12, 244 evaluated, 61 expanded
[t=0.158516s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.158551s, 431212 KB] g=13, 250 evaluated, 62 expanded
[t=0.17003s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.170067s, 431212 KB] g=18, 315 evaluated, 76 expanded
[t=0.171684s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.171716s, 431212 KB] g=20, 324 evaluated, 78 expanded
[t=0.173319s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.173352s, 431212 KB] g=21, 333 evaluated, 79 expanded
[t=0.186427s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.186465s, 431212 KB] g=24, 407 evaluated, 93 expanded
[t=0.190731s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.190767s, 431344 KB] g=26, 431 evaluated, 99 expanded
[t=0.190972s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.191001s, 431344 KB] g=26, 432 evaluated, 99 expanded
[t=0.336579s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.336626s, 431476 KB] g=32, 1254 evaluated, 352 expanded, 38 reopened
[t=0.531593s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.531647s, 431608 KB] g=36, 2358 evaluated, 690 expanded, 92 reopened
[t=0.536629s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.53667s, 431608 KB] g=36, 2386 evaluated, 697 expanded, 92 reopened
[t=0.537932s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.537966s, 431608 KB] g=38, 2393 evaluated, 699 expanded, 92 reopened
[t=0.540472s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.540509s, 431608 KB] g=41, 2407 evaluated, 702 expanded, 92 reopened
[t=2.0558s, 432156 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=2.05585s, 432156 KB] g=45, 11006 evaluated, 3542 expanded, 627 reopened
[t=2.63313s, 432288 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=2.63317s, 432288 KB] g=46, 14276 evaluated, 4760 expanded, 931 reopened
[t=6.14463s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=6.14468s, 433468 KB] g=42, 34250 evaluated, 11944 expanded, 2005 reopened
[t=6.14542s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=6.14545s, 433468 KB] g=43, 34254 evaluated, 11945 expanded, 2005 reopened
[t=6.14654s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=6.14657s, 433468 KB] g=45, 34260 evaluated, 11947 expanded, 2005 reopened
[t=6.14731s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=6.14734s, 433468 KB] g=46, 34264 evaluated, 11948 expanded, 2005 reopened
[t=6.14773s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=6.14776s, 433468 KB] g=47, 34266 evaluated, 11949 expanded, 2005 reopened
[t=6.14836s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=6.14839s, 433468 KB] g=48, 34269 evaluated, 11950 expanded, 2005 reopened
[t=6.14956s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=6.1496s, 433468 KB] g=49, 34275 evaluated, 11951 expanded, 2005 reopened
[t=6.14999s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=6.15002s, 433468 KB] g=50, 34277 evaluated, 11952 expanded, 2005 reopened
[t=6.1504s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=6.15043s, 433468 KB] g=51, 34279 evaluated, 11953 expanded, 2005 reopened
[t=6.15134s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=6.15138s, 433468 KB] g=53, 34284 evaluated, 11955 expanded, 2005 reopened
[t=6.15212s, 433468 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=6.15215s, 433468 KB] g=55, 34288 evaluated, 11957 expanded, 2005 reopened
[t=6.15218s, 433468 KB] Solution found!
[t=6.15222s, 433468 KB] Actual search time: 6.05405s
unstack l e (1)
stack l b (1)
pick-up g (1)
stack g l (1)
unstack e h (1)
put-down e (1)
unstack d i (1)
stack d k (1)
unstack h f (1)
stack h e (1)
unstack f j (1)
stack f d (1)
unstack i c (1)
put-down i (1)
unstack h e (1)
stack h f (1)
unstack j a (1)
stack j e (1)
unstack g l (1)
put-down g (1)
unstack l b (1)
put-down l (1)
pick-up b (1)
stack b l (1)
unstack j e (1)
stack j i (1)
pick-up a (1)
stack a j (1)
unstack h f (1)
stack h g (1)
unstack a j (1)
stack a h (1)
pick-up e (1)
stack e b (1)
unstack f d (1)
stack f a (1)
unstack d k (1)
stack d c (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=6.15224s, 433468 KB] Plan length: 56 step(s).
[t=6.15224s, 433468 KB] Plan cost: 56
[t=6.15224s, 433468 KB] Expanded 11959 state(s).
[t=6.15224s, 433468 KB] Reopened 2005 state(s).
[t=6.15224s, 433468 KB] Evaluated 34289 state(s).
[t=6.15224s, 433468 KB] Evaluations: 34289
[t=6.15224s, 433468 KB] Generated 61162 state(s).
[t=6.15224s, 433468 KB] Dead ends: 0 state(s).
[t=6.15224s, 433468 KB] Expanded until last jump: 0 state(s).
[t=6.15224s, 433468 KB] Reopened until last jump: 0 state(s).
[t=6.15224s, 433468 KB] Evaluated until last jump: 1 state(s).
[t=6.15224s, 433468 KB] Generated until last jump: 0 state(s).
[t=6.15224s, 433468 KB] Number of registered states: 34289
[t=6.15224s, 433468 KB] Int hash set load factor: 34289/65536 = 0.523209
[t=6.15224s, 433468 KB] Int hash set resizes: 16
[t=6.15224s, 433468 KB] Search time: 6.12575s
[t=6.15224s, 433468 KB] Total time: 6.15224s
Solution found.
Peak memory: 433468 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p12.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.9657e-05s, 424928 KB] reading input...
[t=0.00213734s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260659s, 427780 KB] Building successor generator...done!
[t=0.0263436s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263671s, 427780 KB] time for successor generation creation: 0.000167287s
[t=0.0263957s, 427780 KB] Variables: 25
[t=0.0264188s, 427780 KB] FactPairs: 182
[t=0.0264409s, 427780 KB] Bytes per state: 8
[t=0.0266359s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107578s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.107634s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.107659s, 430372 KB] f = 134, 1 evaluated, 0 expanded
[t=0.107686s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 134
[t=0.10771s, 430372 KB] pruning method: none
[t=0.11782s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.117869s, 431080 KB] g=1, 2 evaluated, 1 expanded
[t=0.12182s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 84
[t=0.12186s, 431080 KB] g=2, 7 evaluated, 2 expanded
[t=0.123191s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.123225s, 431080 KB] g=3, 14 evaluated, 3 expanded
[t=0.123634s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.123665s, 431080 KB] g=4, 16 evaluated, 4 expanded
[t=0.12425s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.124281s, 431080 KB] g=4, 19 evaluated, 4 expanded
[t=0.124684s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.124725s, 431080 KB] g=5, 21 evaluated, 5 expanded
[t=0.126238s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.126269s, 431080 KB] g=6, 29 evaluated, 6 expanded
[t=0.127052s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.127087s, 431080 KB] g=7, 33 evaluated, 7 expanded
[t=0.130273s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.130306s, 431080 KB] g=9, 50 evaluated, 12 expanded
[t=0.131092s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 60
[t=0.131126s, 431080 KB] g=10, 54 evaluated, 13 expanded
[t=0.149406s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.149442s, 431212 KB] g=15, 152 evaluated, 37 expanded
[t=0.199559s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.199598s, 431212 KB] g=16, 421 evaluated, 106 expanded, 7 reopened
[t=0.205032s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.205067s, 431212 KB] g=20, 450 evaluated, 111 expanded, 7 reopened
[t=0.219838s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.219875s, 431344 KB] g=19, 529 evaluated, 128 expanded, 7 reopened
[t=0.232564s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.232599s, 431344 KB] g=18, 597 evaluated, 146 expanded, 8 reopened
[t=0.233741s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.233772s, 431344 KB] g=19, 603 evaluated, 147 expanded, 8 reopened
[t=0.241258s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 37
[t=0.241293s, 431344 KB] g=22, 643 evaluated, 154 expanded, 8 reopened
[t=0.242632s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.242665s, 431344 KB] g=23, 650 evaluated, 155 expanded, 8 reopened
[t=0.249045s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.24908s, 431344 KB] g=25, 684 evaluated, 161 expanded, 8 reopened
[t=0.291066s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.291104s, 431476 KB] g=29, 910 evaluated, 207 expanded, 8 reopened
[t=0.36866s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.368698s, 431476 KB] g=31, 1326 evaluated, 298 expanded, 9 reopened
[t=0.370404s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.370437s, 431476 KB] g=32, 1335 evaluated, 299 expanded, 9 reopened
[t=0.371597s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.371631s, 431476 KB] g=33, 1341 evaluated, 300 expanded, 9 reopened
[t=0.372587s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.372621s, 431476 KB] g=34, 1346 evaluated, 301 expanded, 9 reopened
[t=0.373581s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.373613s, 431476 KB] g=35, 1351 evaluated, 302 expanded, 9 reopened
[t=0.375512s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.375546s, 431476 KB] g=37, 1361 evaluated, 304 expanded, 9 reopened
[t=0.375761s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.375791s, 431476 KB] g=37, 1362 evaluated, 304 expanded, 9 reopened
[t=0.456552s, 431608 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.456591s, 431608 KB] g=39, 1797 evaluated, 414 expanded, 10 reopened
[t=1.43768s, 432008 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=1.43772s, 432008 KB] g=42, 7077 evaluated, 1887 expanded, 50 reopened
[t=2.09821s, 432252 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=2.09826s, 432252 KB] g=40, 10632 evaluated, 2910 expanded, 82 reopened
[t=2.09885s, 432252 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=2.09889s, 432252 KB] g=41, 10635 evaluated, 2911 expanded, 82 reopened
[t=2.10899s, 432252 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=2.10903s, 432252 KB] g=42, 10689 evaluated, 2927 expanded, 82 reopened
[t=2.10944s, 432252 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=2.10947s, 432252 KB] g=43, 10691 evaluated, 2928 expanded, 82 reopened
[t=2.11176s, 432252 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=2.11179s, 432252 KB] g=46, 10703 evaluated, 2932 expanded, 82 reopened
[t=5.73074s, 433828 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=5.7308s, 433828 KB] g=44, 30077 evaluated, 9955 expanded, 744 reopened
[t=5.73196s, 433828 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=5.73199s, 433828 KB] g=45, 30083 evaluated, 9956 expanded, 744 reopened
[t=5.7324s, 433828 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=5.73244s, 433828 KB] g=46, 30085 evaluated, 9957 expanded, 744 reopened
[t=5.73366s, 433828 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=5.7337s, 433828 KB] g=47, 30091 evaluated, 9959 expanded, 744 reopened
[t=5.73489s, 433828 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=5.73492s, 433828 KB] g=49, 30097 evaluated, 9961 expanded, 744 reopened
[t=5.73571s, 433828 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=5.73574s, 433828 KB] g=51, 30101 evaluated, 9963 expanded, 744 reopened
[t=5.73577s, 433828 KB] Solution found!
[t=5.7358s, 433828 KB] Actual search time: 5.62809s
unstack a h (1)
stack a e (1)
unstack k g (1)
stack k l (1)
unstack g j (1)
stack g k (1)
unstack a e (1)
stack a j (1)
unstack e b (1)
stack e a (1)
unstack b c (1)
put-down b (1)
unstack e a (1)
put-down e (1)
pick-up h (1)
stack h g (1)
unstack c d (1)
stack c b (1)
pick-up e (1)
stack e d (1)
unstack h g (1)
stack h a (1)
unstack g k (1)
stack g h (1)
pick-up f (1)
stack f k (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a j (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k l (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack c b (1)
put-down c (1)
unstack d i (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=5.73582s, 433828 KB] Plan length: 52 step(s).
[t=5.73582s, 433828 KB] Plan cost: 52
[t=5.73582s, 433828 KB] Expanded 9965 state(s).
[t=5.73582s, 433828 KB] Reopened 744 state(s).
[t=5.73582s, 433828 KB] Evaluated 30102 state(s).
[t=5.73582s, 433828 KB] Evaluations: 30102
[t=5.73582s, 433828 KB] Generated 48917 state(s).
[t=5.73582s, 433828 KB] Dead ends: 0 state(s).
[t=5.73582s, 433828 KB] Expanded until last jump: 0 state(s).
[t=5.73582s, 433828 KB] Reopened until last jump: 0 state(s).
[t=5.73582s, 433828 KB] Evaluated until last jump: 1 state(s).
[t=5.73582s, 433828 KB] Generated until last jump: 0 state(s).
[t=5.73582s, 433828 KB] Number of registered states: 30102
[t=5.73582s, 433828 KB] Int hash set load factor: 30102/65536 = 0.45932
[t=5.73582s, 433828 KB] Int hash set resizes: 16
[t=5.73582s, 433828 KB] Search time: 5.70919s
[t=5.73582s, 433828 KB] Total time: 5.73582s
Solution found.
Peak memory: 433828 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p13.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7749e-05s, 424928 KB] reading input...
[t=0.00213429s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0260073s, 427784 KB] Building successor generator...done!
[t=0.0262882s, 427784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263115s, 427784 KB] time for successor generation creation: 0.00016619s
[t=0.0263396s, 427784 KB] Variables: 25
[t=0.0263619s, 427784 KB] FactPairs: 182
[t=0.0263837s, 427784 KB] Bytes per state: 8
[t=0.0265791s, 427784 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.109687s, 430376 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.109746s, 430376 KB] g=0, 1 evaluated, 0 expanded
[t=0.109772s, 430376 KB] f = 80, 1 evaluated, 0 expanded
[t=0.109799s, 430376 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.109823s, 430376 KB] pruning method: none
[t=0.119949s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.119998s, 431084 KB] g=1, 2 evaluated, 1 expanded
[t=0.124642s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 71
[t=0.124682s, 431084 KB] g=3, 11 evaluated, 4 expanded
[t=0.124892s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.124922s, 431084 KB] g=3, 12 evaluated, 4 expanded
[t=0.127658s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.127703s, 431084 KB] g=3, 27 evaluated, 9 expanded
[t=0.128635s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.128666s, 431084 KB] g=5, 32 evaluated, 11 expanded
[t=0.129064s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.129095s, 431084 KB] g=6, 34 evaluated, 12 expanded
[t=0.129665s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.129696s, 431084 KB] g=7, 37 evaluated, 13 expanded
[t=0.130263s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.130296s, 431084 KB] g=8, 40 evaluated, 14 expanded
[t=0.130874s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.130906s, 431084 KB] g=9, 43 evaluated, 15 expanded
[t=0.139245s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.13928s, 431084 KB] g=12, 89 evaluated, 29 expanded
[t=0.140035s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.140067s, 431216 KB] g=13, 93 evaluated, 30 expanded
[t=0.141178s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.14121s, 431216 KB] g=15, 99 evaluated, 32 expanded
[t=0.279549s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.279591s, 431480 KB] g=28, 859 evaluated, 362 expanded, 47 reopened
[t=0.280709s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.280744s, 431480 KB] g=29, 865 evaluated, 363 expanded, 47 reopened
[t=0.282583s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.28262s, 431480 KB] g=31, 875 evaluated, 365 expanded, 47 reopened
[t=0.299396s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.299432s, 431480 KB] g=32, 967 evaluated, 386 expanded, 47 reopened
[t=0.300558s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.300589s, 431480 KB] g=33, 973 evaluated, 387 expanded, 47 reopened
[t=0.301163s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.301197s, 431480 KB] g=34, 976 evaluated, 388 expanded, 47 reopened
[t=0.301586s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.301617s, 431480 KB] g=34, 978 evaluated, 388 expanded, 47 reopened
[t=0.302198s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.30223s, 431480 KB] g=35, 981 evaluated, 389 expanded, 47 reopened
[t=0.303551s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.303586s, 431480 KB] g=37, 988 evaluated, 391 expanded, 47 reopened
[t=0.304895s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.304932s, 431480 KB] g=39, 995 evaluated, 393 expanded, 47 reopened
[t=0.305327s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.305358s, 431480 KB] g=40, 997 evaluated, 394 expanded, 47 reopened
[t=0.305933s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.305966s, 431480 KB] g=41, 1000 evaluated, 395 expanded, 47 reopened
[t=0.306365s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.306396s, 431480 KB] g=43, 1002 evaluated, 397 expanded, 47 reopened
[t=0.306877s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.30691s, 431480 KB] g=44, 1004 evaluated, 398 expanded, 47 reopened
[t=0.308045s, 431480 KB] Solution found!
[t=0.308079s, 431480 KB] Actual search time: 0.198254s
stack a b (1)
unstack h l (1)
stack h a (1)
unstack g e (1)
stack g h (1)
unstack e j (1)
stack e l (1)
unstack j f (1)
put-down j (1)
unstack f k (1)
stack f e (1)
pick-up k (1)
stack k j (1)
unstack f e (1)
stack f k (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a h (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d b (1)
unstack f k (1)
stack f a (1)
unstack e l (1)
stack e d (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.308105s, 431480 KB] Plan length: 47 step(s).
[t=0.308105s, 431480 KB] Plan cost: 47
[t=0.308105s, 431480 KB] Expanded 404 state(s).
[t=0.308105s, 431480 KB] Reopened 47 state(s).
[t=0.308105s, 431480 KB] Evaluated 1011 state(s).
[t=0.308105s, 431480 KB] Evaluations: 1011
[t=0.308105s, 431480 KB] Generated 1617 state(s).
[t=0.308105s, 431480 KB] Dead ends: 1 state(s).
[t=0.308105s, 431480 KB] Expanded until last jump: 0 state(s).
[t=0.308105s, 431480 KB] Reopened until last jump: 0 state(s).
[t=0.308105s, 431480 KB] Evaluated until last jump: 1 state(s).
[t=0.308105s, 431480 KB] Generated until last jump: 0 state(s).
[t=0.308105s, 431480 KB] Number of registered states: 1011
[t=0.308105s, 431480 KB] Int hash set load factor: 1011/2048 = 0.493652
[t=0.308105s, 431480 KB] Int hash set resizes: 11
[t=0.308105s, 431480 KB] Search time: 0.281527s
[t=0.308105s, 431480 KB] Total time: 0.308105s
Solution found.
Peak memory: 431480 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p14.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1468 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6967e-05s, 424928 KB] reading input...
[t=0.00214554s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0262749s, 427784 KB] Building successor generator...done!
[t=0.0265575s, 427784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265811s, 427784 KB] time for successor generation creation: 0.000167489s
[t=0.0266094s, 427784 KB] Variables: 25
[t=0.0266325s, 427784 KB] FactPairs: 182
[t=0.0266551s, 427784 KB] Bytes per state: 8
[t=0.0268532s, 427784 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0995831s, 430376 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0996381s, 430376 KB] g=0, 1 evaluated, 0 expanded
[t=0.0996636s, 430376 KB] f = 111, 1 evaluated, 0 expanded
[t=0.0996926s, 430376 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0997166s, 430376 KB] pruning method: none
[t=0.109883s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 102
[t=0.109932s, 431084 KB] g=1, 2 evaluated, 1 expanded
[t=0.113193s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.113232s, 431084 KB] g=1, 3 evaluated, 1 expanded
[t=0.113637s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 87
[t=0.113668s, 431084 KB] g=1, 5 evaluated, 1 expanded
[t=0.113888s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.113918s, 431084 KB] g=2, 6 evaluated, 2 expanded
[t=0.114689s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 77
[t=0.114719s, 431084 KB] g=3, 10 evaluated, 3 expanded
[t=0.115112s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.115141s, 431084 KB] g=3, 12 evaluated, 3 expanded
[t=0.115357s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.115386s, 431084 KB] g=4, 13 evaluated, 4 expanded
[t=0.115981s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.116012s, 431084 KB] g=5, 16 evaluated, 5 expanded
[t=0.116589s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.116619s, 431084 KB] g=5, 19 evaluated, 5 expanded
[t=0.117196s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.117226s, 431084 KB] g=6, 22 evaluated, 6 expanded
[t=0.117807s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.117836s, 431084 KB] g=7, 25 evaluated, 7 expanded
[t=0.118967s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.118998s, 431084 KB] g=8, 31 evaluated, 8 expanded
[t=0.126733s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.126767s, 431084 KB] g=12, 73 evaluated, 18 expanded
[t=0.12845s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 50
[t=0.128482s, 431084 KB] g=14, 82 evaluated, 20 expanded
[t=0.180259s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.180296s, 431216 KB] g=19, 363 evaluated, 90 expanded, 1 reopened
[t=0.209316s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.209353s, 431216 KB] g=15, 520 evaluated, 130 expanded, 1 reopened
[t=0.215129s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.215165s, 431216 KB] g=17, 551 evaluated, 139 expanded, 1 reopened
[t=0.263809s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.263847s, 431348 KB] g=17, 814 evaluated, 208 expanded, 2 reopened
[t=0.264251s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.264281s, 431348 KB] g=17, 816 evaluated, 208 expanded, 2 reopened
[t=0.265239s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.265272s, 431348 KB] g=18, 821 evaluated, 209 expanded, 2 reopened
[t=0.265862s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.265893s, 431348 KB] g=19, 824 evaluated, 210 expanded, 2 reopened
[t=0.268348s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.268382s, 431348 KB] g=21, 837 evaluated, 212 expanded, 2 reopened
[t=0.269895s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.269927s, 431348 KB] g=23, 845 evaluated, 214 expanded, 2 reopened
[t=0.296788s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.296825s, 431348 KB] g=27, 990 evaluated, 245 expanded, 2 reopened
[t=0.323643s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.323681s, 431480 KB] g=29, 1134 evaluated, 281 expanded, 2 reopened
[t=0.400808s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.400845s, 431480 KB] g=26, 1550 evaluated, 377 expanded, 4 reopened
[t=0.403476s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.403508s, 431612 KB] g=28, 1564 evaluated, 380 expanded, 4 reopened
[t=0.405784s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.405821s, 431612 KB] g=31, 1576 evaluated, 383 expanded, 4 reopened
[t=1.54367s, 432048 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=1.54371s, 432048 KB] g=35, 7706 evaluated, 2222 expanded, 214 reopened
[t=1.54671s, 432048 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=1.54674s, 432048 KB] g=37, 7722 evaluated, 2227 expanded, 214 reopened
[t=1.54828s, 432048 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 22
[t=1.54831s, 432048 KB] g=39, 7730 evaluated, 2229 expanded, 214 reopened
[t=1.54871s, 432048 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=1.54875s, 432048 KB] g=40, 7732 evaluated, 2230 expanded, 214 reopened
[t=1.56175s, 432200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=1.56179s, 432200 KB] g=43, 7799 evaluated, 2251 expanded, 214 reopened
[t=1.56757s, 432200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=1.5676s, 432200 KB] g=46, 7830 evaluated, 2259 expanded, 214 reopened
[t=1.56948s, 432200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=1.56951s, 432200 KB] g=49, 7840 evaluated, 2262 expanded, 214 reopened
[t=1.57046s, 432200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=1.57049s, 432200 KB] g=51, 7845 evaluated, 2264 expanded, 214 reopened
[t=1.57424s, 432200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=1.57428s, 432200 KB] g=52, 7865 evaluated, 2272 expanded, 214 reopened
[t=1.57543s, 432200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=1.57546s, 432200 KB] g=54, 7871 evaluated, 2274 expanded, 214 reopened
[t=1.57624s, 432200 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=1.57628s, 432200 KB] g=56, 7875 evaluated, 2276 expanded, 214 reopened
[t=1.57631s, 432200 KB] Solution found!
[t=1.57634s, 432200 KB] Actual search time: 1.47661s
put-down f (1)
unstack g i (1)
stack g f (1)
unstack a h (1)
put-down a (1)
unstack h l (1)
stack h a (1)
unstack g f (1)
stack g h (1)
pick-up f (1)
stack f l (1)
unstack i j (1)
put-down i (1)
unstack c b (1)
put-down c (1)
unstack b e (1)
put-down b (1)
pick-up e (1)
stack e b (1)
unstack j d (1)
stack j i (1)
unstack d k (1)
stack d j (1)
pick-up k (1)
stack k c (1)
unstack f l (1)
stack f k (1)
pick-up l (1)
stack l d (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack f k (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack l d (1)
stack l c (1)
unstack d j (1)
stack d l (1)
unstack j i (1)
stack j e (1)
unstack d l (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=1.57636s, 432200 KB] Plan length: 57 step(s).
[t=1.57636s, 432200 KB] Plan cost: 57
[t=1.57636s, 432200 KB] Expanded 2278 state(s).
[t=1.57636s, 432200 KB] Reopened 214 state(s).
[t=1.57636s, 432200 KB] Evaluated 7876 state(s).
[t=1.57636s, 432200 KB] Evaluations: 7876
[t=1.57636s, 432200 KB] Generated 11865 state(s).
[t=1.57636s, 432200 KB] Dead ends: 0 state(s).
[t=1.57636s, 432200 KB] Expanded until last jump: 0 state(s).
[t=1.57636s, 432200 KB] Reopened until last jump: 0 state(s).
[t=1.57636s, 432200 KB] Evaluated until last jump: 1 state(s).
[t=1.57636s, 432200 KB] Generated until last jump: 0 state(s).
[t=1.57636s, 432200 KB] Number of registered states: 7876
[t=1.57636s, 432200 KB] Int hash set load factor: 7876/16384 = 0.480713
[t=1.57636s, 432200 KB] Int hash set resizes: 14
[t=1.57636s, 432200 KB] Search time: 1.54951s
[t=1.57636s, 432200 KB] Total time: 1.57636s
Solution found.
Peak memory: 432200 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p15.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.012s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1471 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7728e-05s, 424928 KB] reading input...
[t=0.00214492s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0263113s, 427784 KB] Building successor generator...done!
[t=0.0266133s, 427784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266367s, 427784 KB] time for successor generation creation: 0.000187919s
[t=0.0266656s, 427784 KB] Variables: 25
[t=0.0266877s, 427784 KB] FactPairs: 182
[t=0.0267095s, 427784 KB] Bytes per state: 8
[t=0.026905s, 427784 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107403s, 430376 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.107461s, 430376 KB] g=0, 1 evaluated, 0 expanded
[t=0.107496s, 430376 KB] f = 121, 1 evaluated, 0 expanded
[t=0.107523s, 430376 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 121
[t=0.107547s, 430376 KB] pruning method: none
[t=0.117653s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 80
[t=0.117702s, 431084 KB] g=1, 2 evaluated, 1 expanded
[t=0.122685s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 69
[t=0.122726s, 431084 KB] g=3, 13 evaluated, 3 expanded
[t=0.124004s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.124038s, 431084 KB] g=4, 20 evaluated, 4 expanded
[t=0.127968s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.128002s, 431084 KB] g=6, 42 evaluated, 9 expanded
[t=0.136401s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.136438s, 431216 KB] g=7, 89 evaluated, 20 expanded
[t=0.205155s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.205196s, 431216 KB] g=12, 473 evaluated, 125 expanded, 4 reopened
[t=0.206123s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 63
[t=0.206155s, 431216 KB] g=14, 478 evaluated, 127 expanded, 4 reopened
[t=0.207855s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.20789s, 431348 KB] g=14, 487 evaluated, 129 expanded, 4 reopened
[t=0.2248s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.224839s, 431348 KB] g=16, 581 evaluated, 158 expanded, 7 reopened
[t=0.29992s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.299968s, 431480 KB] g=19, 999 evaluated, 290 expanded, 8 reopened
[t=0.302544s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.302583s, 431480 KB] g=21, 1013 evaluated, 293 expanded, 8 reopened
[t=0.323479s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.323521s, 431480 KB] g=26, 1129 evaluated, 320 expanded, 8 reopened
[t=0.35754s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.357581s, 431480 KB] g=24, 1318 evaluated, 379 expanded, 9 reopened
[t=0.360144s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.360179s, 431480 KB] g=27, 1332 evaluated, 383 expanded, 9 reopened
[t=0.363455s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.363497s, 431480 KB] g=30, 1350 evaluated, 387 expanded, 9 reopened
[t=0.363711s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.363744s, 431480 KB] g=31, 1351 evaluated, 388 expanded, 9 reopened
[t=0.364496s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 36
[t=0.364528s, 431480 KB] g=32, 1355 evaluated, 389 expanded, 9 reopened
[t=0.365276s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 34
[t=0.365307s, 431480 KB] g=32, 1359 evaluated, 389 expanded, 9 reopened
[t=0.366055s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.366089s, 431480 KB] g=33, 1363 evaluated, 390 expanded, 9 reopened
[t=0.366661s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.366691s, 431480 KB] g=34, 1366 evaluated, 391 expanded, 9 reopened
[t=0.367277s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.36731s, 431480 KB] g=35, 1369 evaluated, 392 expanded, 9 reopened
[t=0.386636s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.386674s, 431612 KB] g=40, 1475 evaluated, 428 expanded, 10 reopened
[t=0.438459s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.438498s, 431612 KB] g=42, 1761 evaluated, 520 expanded, 13 reopened
[t=0.439089s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.439122s, 431612 KB] g=43, 1764 evaluated, 521 expanded, 13 reopened
[t=0.440055s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.440087s, 431612 KB] g=44, 1769 evaluated, 523 expanded, 13 reopened
[t=0.441204s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.441235s, 431744 KB] g=45, 1775 evaluated, 525 expanded, 13 reopened
[t=0.445619s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 20
[t=0.445656s, 431744 KB] g=49, 1799 evaluated, 534 expanded, 13 reopened
[t=0.448052s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.448085s, 431744 KB] g=49, 1812 evaluated, 538 expanded, 13 reopened
[t=0.451554s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.451589s, 431744 KB] g=49, 1831 evaluated, 544 expanded, 13 reopened
[t=0.465358s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.465399s, 431744 KB] g=52, 1907 evaluated, 565 expanded, 15 reopened
[t=0.465973s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.466008s, 431744 KB] g=53, 1910 evaluated, 566 expanded, 15 reopened
[t=0.466761s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.466792s, 431744 KB] g=54, 1914 evaluated, 567 expanded, 15 reopened
[t=0.474953s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.474988s, 431744 KB] g=54, 1959 evaluated, 580 expanded, 15 reopened
[t=0.475568s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.475601s, 431744 KB] g=55, 1962 evaluated, 581 expanded, 15 reopened
[t=0.475994s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.476024s, 431744 KB] g=55, 1964 evaluated, 581 expanded, 15 reopened
[t=0.477137s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.477171s, 431744 KB] g=57, 1970 evaluated, 584 expanded, 15 reopened
[t=0.47971s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.479744s, 431744 KB] g=57, 1983 evaluated, 588 expanded, 15 reopened
[t=0.480502s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.480533s, 431744 KB] g=59, 1987 evaluated, 590 expanded, 15 reopened
[t=0.481104s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.481134s, 431744 KB] g=60, 1990 evaluated, 591 expanded, 15 reopened
[t=1.8981s, 432652 KB] Solution found!
[t=1.89817s, 432652 KB] Actual search time: 1.79062s
unstack d c (1)
stack d j (1)
unstack f b (1)
put-down f (1)
unstack b g (1)
stack b d (1)
pick-up g (1)
stack g b (1)
unstack c k (1)
put-down c (1)
unstack g b (1)
stack g i (1)
pick-up k (1)
stack k c (1)
pick-up f (1)
stack f k (1)
pick-up h (1)
stack h f (1)
unstack g i (1)
put-down g (1)
unstack i e (1)
put-down i (1)
pick-up g (1)
stack g i (1)
unstack e l (1)
put-down e (1)
unstack l a (1)
put-down l (1)
pick-up e (1)
stack e l (1)
unstack g i (1)
put-down g (1)
unstack h f (1)
stack h g (1)
pick-up a (1)
stack a h (1)
unstack b d (1)
stack b i (1)
unstack d j (1)
stack d b (1)
pick-up j (1)
stack j d (1)
unstack f k (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j d (1)
stack j e (1)
unstack d b (1)
stack d j (1)
pick-up l (1)
stack l d (1)
unstack b i (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=1.8982s, 432652 KB] Plan length: 60 step(s).
[t=1.8982s, 432652 KB] Plan cost: 60
[t=1.8982s, 432652 KB] Expanded 5423 state(s).
[t=1.8982s, 432652 KB] Reopened 971 state(s).
[t=1.8982s, 432652 KB] Evaluated 9814 state(s).
[t=1.8982s, 432652 KB] Evaluations: 9814
[t=1.8982s, 432652 KB] Generated 21518 state(s).
[t=1.8982s, 432652 KB] Dead ends: 1 state(s).
[t=1.8982s, 432652 KB] Expanded until last jump: 0 state(s).
[t=1.8982s, 432652 KB] Reopened until last jump: 0 state(s).
[t=1.8982s, 432652 KB] Evaluated until last jump: 1 state(s).
[t=1.8982s, 432652 KB] Generated until last jump: 0 state(s).
[t=1.8982s, 432652 KB] Number of registered states: 9814
[t=1.8982s, 432652 KB] Int hash set load factor: 9814/16384 = 0.598999
[t=1.8982s, 432652 KB] Int hash set resizes: 14
[t=1.8982s, 432652 KB] Search time: 1.87129s
[t=1.8982s, 432652 KB] Total time: 1.8982s
Solution found.
Peak memory: 432652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p16.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.543e-05s, 424928 KB] reading input...
[t=0.00213188s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261839s, 427784 KB] Building successor generator...done!
[t=0.0264675s, 427784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264915s, 427784 KB] time for successor generation creation: 0.000167489s
[t=0.0265214s, 427784 KB] Variables: 25
[t=0.0265542s, 427784 KB] FactPairs: 182
[t=0.026577s, 427784 KB] Bytes per state: 8
[t=0.0267748s, 427784 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107218s, 430376 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.107276s, 430376 KB] g=0, 1 evaluated, 0 expanded
[t=0.107301s, 430376 KB] f = 89, 1 evaluated, 0 expanded
[t=0.107329s, 430376 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 89
[t=0.107353s, 430376 KB] pruning method: none
[t=0.117557s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 82
[t=0.117606s, 431084 KB] g=1, 2 evaluated, 1 expanded
[t=0.12172s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.121762s, 431084 KB] g=2, 8 evaluated, 2 expanded
[t=0.121965s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 72
[t=0.121994s, 431084 KB] g=2, 9 evaluated, 2 expanded
[t=0.123754s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 68
[t=0.123785s, 431084 KB] g=4, 19 evaluated, 5 expanded
[t=0.129299s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.129334s, 431084 KB] g=7, 51 evaluated, 13 expanded
[t=0.130051s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.130083s, 431084 KB] g=8, 55 evaluated, 14 expanded
[t=0.132538s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.13257s, 431084 KB] g=10, 69 evaluated, 17 expanded
[t=0.134495s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.134528s, 431216 KB] g=12, 80 evaluated, 19 expanded
[t=0.169474s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.169514s, 431216 KB] g=17, 283 evaluated, 66 expanded
[t=0.170752s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.170785s, 431216 KB] g=18, 290 evaluated, 67 expanded
[t=0.171524s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 31
[t=0.171559s, 431216 KB] g=19, 294 evaluated, 68 expanded
[t=0.172279s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.172312s, 431216 KB] g=20, 298 evaluated, 69 expanded
[t=0.177363s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.177397s, 431216 KB] g=22, 327 evaluated, 81 expanded, 1 reopened
[t=0.178298s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.178328s, 431216 KB] g=23, 332 evaluated, 82 expanded, 1 reopened
[t=0.181987s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.18202s, 431216 KB] g=27, 353 evaluated, 89 expanded, 1 reopened
[t=0.187739s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.187773s, 431216 KB] g=30, 386 evaluated, 96 expanded, 1 reopened
[t=0.197307s, 431348 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.197343s, 431348 KB] g=32, 441 evaluated, 111 expanded, 1 reopened
[t=9.06845s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=9.06852s, 433904 KB] g=39, 51054 evaluated, 28547 expanded, 11630 reopened
[t=9.06995s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=9.06998s, 433904 KB] g=41, 51062 evaluated, 28550 expanded, 11630 reopened
[t=9.0707s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=9.07073s, 433904 KB] g=42, 51066 evaluated, 28551 expanded, 11630 reopened
[t=9.07145s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=9.07148s, 433904 KB] g=43, 51070 evaluated, 28552 expanded, 11630 reopened
[t=9.07205s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=9.07208s, 433904 KB] g=44, 51073 evaluated, 28553 expanded, 11630 reopened
[t=9.07297s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=9.073s, 433904 KB] g=45, 51078 evaluated, 28554 expanded, 11630 reopened
[t=9.07355s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=9.07358s, 433904 KB] g=46, 51081 evaluated, 28555 expanded, 11630 reopened
[t=9.07413s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=9.07416s, 433904 KB] g=47, 51084 evaluated, 28556 expanded, 11630 reopened
[t=9.07575s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=9.07579s, 433904 KB] g=50, 51093 evaluated, 28559 expanded, 11630 reopened
[t=9.08119s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=9.08122s, 433904 KB] g=51, 51124 evaluated, 28569 expanded, 11630 reopened
[t=9.08228s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=9.08231s, 433904 KB] g=53, 51130 evaluated, 28571 expanded, 11630 reopened
[t=9.08304s, 433904 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=9.08308s, 433904 KB] g=55, 51134 evaluated, 28573 expanded, 11630 reopened
[t=9.08311s, 433904 KB] Solution found!
[t=9.08314s, 433904 KB] Actual search time: 8.97578s
unstack g b (1)
stack g i (1)
unstack b a (1)
put-down b (1)
unstack e f (1)
stack e c (1)
unstack f h (1)
put-down f (1)
unstack h k (1)
stack h e (1)
unstack g i (1)
stack g f (1)
pick-up a (1)
stack a k (1)
unstack h e (1)
stack h a (1)
unstack g f (1)
stack g h (1)
unstack e c (1)
stack e b (1)
unstack c d (1)
put-down c (1)
unstack d j (1)
stack d c (1)
unstack j l (1)
stack j i (1)
pick-up l (1)
stack l d (1)
pick-up f (1)
stack f j (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f j (1)
stack f a (1)
pick-up k (1)
stack k f (1)
unstack e b (1)
stack e k (1)
unstack j i (1)
stack j e (1)
unstack l d (1)
stack l b (1)
unstack d c (1)
stack d j (1)
unstack l b (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=9.08316s, 433904 KB] Plan length: 56 step(s).
[t=9.08316s, 433904 KB] Plan cost: 56
[t=9.08316s, 433904 KB] Expanded 28575 state(s).
[t=9.08316s, 433904 KB] Reopened 11630 state(s).
[t=9.08316s, 433904 KB] Evaluated 51135 state(s).
[t=9.08316s, 433904 KB] Evaluations: 51135
[t=9.08316s, 433904 KB] Generated 140749 state(s).
[t=9.08316s, 433904 KB] Dead ends: 0 state(s).
[t=9.08316s, 433904 KB] Expanded until last jump: 0 state(s).
[t=9.08316s, 433904 KB] Reopened until last jump: 0 state(s).
[t=9.08316s, 433904 KB] Evaluated until last jump: 1 state(s).
[t=9.08316s, 433904 KB] Generated until last jump: 0 state(s).
[t=9.08316s, 433904 KB] Number of registered states: 51135
[t=9.08316s, 433904 KB] Int hash set load factor: 51135/65536 = 0.780258
[t=9.08316s, 433904 KB] Int hash set resizes: 16
[t=9.08316s, 433904 KB] Search time: 9.05639s
[t=9.08316s, 433904 KB] Total time: 9.08316s
Solution found.
Peak memory: 433904 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p17.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=4.0208e-05s, 424928 KB] reading input...
[t=0.00215211s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0261958s, 427784 KB] Building successor generator...done!
[t=0.0264776s, 427784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0265223s, 427784 KB] time for successor generation creation: 0.000168014s
[t=0.026551s, 427784 KB] Variables: 25
[t=0.0265736s, 427784 KB] FactPairs: 182
[t=0.0265962s, 427784 KB] Bytes per state: 8
[t=0.0267961s, 427784 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.107755s, 430376 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.107811s, 430376 KB] g=0, 1 evaluated, 0 expanded
[t=0.107837s, 430376 KB] f = 150, 1 evaluated, 0 expanded
[t=0.107864s, 430376 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 150
[t=0.107888s, 430376 KB] pruning method: none
[t=0.118076s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 148
[t=0.118125s, 431084 KB] g=1, 2 evaluated, 1 expanded
[t=0.121326s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 146
[t=0.121369s, 431084 KB] g=1, 3 evaluated, 1 expanded
[t=0.12212s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 123
[t=0.122152s, 431084 KB] g=2, 7 evaluated, 2 expanded
[t=0.122713s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 90
[t=0.122743s, 431084 KB] g=3, 10 evaluated, 3 expanded
[t=0.123672s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 88
[t=0.123704s, 431084 KB] g=4, 15 evaluated, 4 expanded
[t=0.123913s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 79
[t=0.12394s, 431084 KB] g=4, 16 evaluated, 4 expanded
[t=0.124678s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.124719s, 431084 KB] g=5, 20 evaluated, 5 expanded
[t=0.126527s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 62
[t=0.126561s, 431084 KB] g=8, 30 evaluated, 8 expanded
[t=0.127685s, 431084 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 57
[t=0.127719s, 431084 KB] g=9, 36 evaluated, 9 expanded
[t=0.151761s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 46
[t=0.151797s, 431216 KB] g=18, 171 evaluated, 43 expanded, 1 reopened
[t=0.15254s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 44
[t=0.152571s, 431216 KB] g=19, 175 evaluated, 44 expanded, 1 reopened
[t=0.204217s, 431216 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 43
[t=0.204255s, 431216 KB] g=25, 466 evaluated, 121 expanded, 4 reopened
[t=0.409576s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 41
[t=0.409616s, 431480 KB] g=24, 1621 evaluated, 414 expanded, 14 reopened
[t=0.412669s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 39
[t=0.412703s, 431480 KB] g=26, 1638 evaluated, 418 expanded, 14 reopened
[t=0.415943s, 431480 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 38
[t=0.415977s, 431480 KB] g=27, 1656 evaluated, 422 expanded, 14 reopened
[t=0.567387s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.567427s, 431612 KB] g=31, 2507 evaluated, 633 expanded, 20 reopened
[t=0.570135s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.570166s, 431612 KB] g=35, 2522 evaluated, 637 expanded, 20 reopened
[t=0.599658s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 28
[t=0.599696s, 431612 KB] g=35, 2687 evaluated, 682 expanded, 21 reopened
[t=0.601507s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.601538s, 431612 KB] g=35, 2697 evaluated, 685 expanded, 21 reopened
[t=0.632965s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.633011s, 431612 KB] g=40, 2873 evaluated, 742 expanded, 22 reopened
[t=0.633581s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 23
[t=0.633612s, 431612 KB] g=41, 2876 evaluated, 743 expanded, 22 reopened
[t=0.635964s, 431612 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.636004s, 431612 KB] g=43, 2889 evaluated, 746 expanded, 22 reopened
[t=0.729365s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.729411s, 431744 KB] g=47, 3413 evaluated, 938 expanded, 26 reopened
[t=0.730508s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.730539s, 431744 KB] g=48, 3419 evaluated, 939 expanded, 26 reopened
[t=0.731127s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.731159s, 431744 KB] g=49, 3422 evaluated, 940 expanded, 26 reopened
[t=0.731547s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.731576s, 431744 KB] g=49, 3424 evaluated, 940 expanded, 26 reopened
[t=0.732674s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.732705s, 431744 KB] g=51, 3430 evaluated, 942 expanded, 26 reopened
[t=0.733088s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.733117s, 431744 KB] g=51, 3432 evaluated, 942 expanded, 26 reopened
[t=0.734036s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.734067s, 431744 KB] g=52, 3437 evaluated, 943 expanded, 26 reopened
[t=0.734278s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.734306s, 431744 KB] g=53, 3438 evaluated, 944 expanded, 26 reopened
[t=0.734885s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.734918s, 431744 KB] g=54, 3441 evaluated, 945 expanded, 26 reopened
[t=0.736018s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.73605s, 431744 KB] g=55, 3447 evaluated, 946 expanded, 26 reopened
[t=0.73644s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.736469s, 431744 KB] g=56, 3449 evaluated, 947 expanded, 26 reopened
[t=0.736858s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.736887s, 431744 KB] g=57, 3451 evaluated, 948 expanded, 26 reopened
[t=0.737809s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.73784s, 431744 KB] g=59, 3456 evaluated, 950 expanded, 26 reopened
[t=0.738584s, 431744 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.738613s, 431744 KB] g=61, 3460 evaluated, 952 expanded, 26 reopened
[t=0.738645s, 431744 KB] Solution found!
[t=0.738672s, 431744 KB] Actual search time: 0.63078s
unstack d e (1)
stack d h (1)
unstack b g (1)
put-down b (1)
unstack i c (1)
stack i g (1)
pick-up c (1)
stack c b (1)
unstack i g (1)
put-down i (1)
unstack d h (1)
put-down d (1)
unstack h f (1)
stack h e (1)
unstack f j (1)
stack f d (1)
unstack c b (1)
stack c i (1)
unstack j l (1)
stack j h (1)
pick-up b (1)
stack b l (1)
unstack j h (1)
stack j b (1)
unstack h e (1)
stack h f (1)
unstack g k (1)
stack g h (1)
unstack k a (1)
stack k j (1)
pick-up a (1)
stack a k (1)
unstack c i (1)
put-down c (1)
unstack g h (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack f d (1)
stack f a (1)
pick-up e (1)
stack e d (1)
unstack k j (1)
stack k f (1)
unstack e d (1)
stack e k (1)
unstack j b (1)
stack j e (1)
pick-up d (1)
stack d j (1)
unstack b l (1)
stack b c (1)
pick-up l (1)
stack l d (1)
unstack b c (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.738696s, 431744 KB] Plan length: 62 step(s).
[t=0.738696s, 431744 KB] Plan cost: 62
[t=0.738696s, 431744 KB] Expanded 954 state(s).
[t=0.738696s, 431744 KB] Reopened 26 state(s).
[t=0.738696s, 431744 KB] Evaluated 3461 state(s).
[t=0.738696s, 431744 KB] Evaluations: 3461
[t=0.738696s, 431744 KB] Generated 4798 state(s).
[t=0.738696s, 431744 KB] Dead ends: 0 state(s).
[t=0.738696s, 431744 KB] Expanded until last jump: 0 state(s).
[t=0.738696s, 431744 KB] Reopened until last jump: 0 state(s).
[t=0.738696s, 431744 KB] Evaluated until last jump: 1 state(s).
[t=0.738696s, 431744 KB] Generated until last jump: 0 state(s).
[t=0.738696s, 431744 KB] Number of registered states: 3461
[t=0.738696s, 431744 KB] Int hash set load factor: 3461/4096 = 0.844971
[t=0.738696s, 431744 KB] Int hash set resizes: 12
[t=0.738696s, 431744 KB] Search time: 0.711901s
[t=0.738696s, 431744 KB] Total time: 0.738696s
Solution found.
Peak memory: 431744 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p18.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6688e-05s, 424928 KB] reading input...
[t=0.00211327s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259743s, 427780 KB] Building successor generator...done!
[t=0.0262681s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262928s, 427780 KB] time for successor generation creation: 0.000178379s
[t=0.0263214s, 427780 KB] Variables: 25
[t=0.0263446s, 427780 KB] FactPairs: 182
[t=0.0263664s, 427780 KB] Bytes per state: 8
[t=0.0265668s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.10701s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.107066s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.107092s, 430372 KB] f = 99, 1 evaluated, 0 expanded
[t=0.107119s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 99
[t=0.107143s, 430372 KB] pruning method: none
[t=0.117186s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 73
[t=0.117237s, 431080 KB] g=1, 2 evaluated, 1 expanded
[t=0.120792s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 67
[t=0.120836s, 431080 KB] g=2, 5 evaluated, 2 expanded
[t=0.121409s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.12144s, 431080 KB] g=3, 8 evaluated, 3 expanded
[t=0.121833s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 53
[t=0.121864s, 431080 KB] g=4, 10 evaluated, 4 expanded
[t=0.122437s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.122467s, 431080 KB] g=5, 13 evaluated, 5 expanded
[t=0.125213s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.125246s, 431080 KB] g=9, 28 evaluated, 10 expanded
[t=0.125819s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.125849s, 431080 KB] g=10, 31 evaluated, 11 expanded
[t=0.126239s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 30
[t=0.126279s, 431080 KB] g=10, 33 evaluated, 11 expanded
[t=0.128664s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 29
[t=0.128698s, 431080 KB] g=12, 46 evaluated, 15 expanded
[t=0.130533s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.130564s, 431080 KB] g=14, 56 evaluated, 17 expanded
[t=0.140174s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.140213s, 431212 KB] g=19, 109 evaluated, 34 expanded
[t=0.215682s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.21572s, 431212 KB] g=19, 526 evaluated, 170 expanded
[t=0.270507s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.270545s, 431344 KB] g=25, 829 evaluated, 265 expanded
[t=0.396288s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 16
[t=0.396328s, 431476 KB] g=27, 1522 evaluated, 514 expanded, 4 reopened
[t=0.396544s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.396576s, 431476 KB] g=27, 1523 evaluated, 514 expanded, 4 reopened
[t=0.397334s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.397365s, 431476 KB] g=28, 1527 evaluated, 515 expanded, 4 reopened
[t=0.397948s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.397979s, 431476 KB] g=29, 1530 evaluated, 516 expanded, 4 reopened
[t=0.398555s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.398588s, 431476 KB] g=30, 1533 evaluated, 517 expanded, 4 reopened
[t=0.399556s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.39959s, 431476 KB] g=31, 1538 evaluated, 518 expanded, 4 reopened
[t=0.399987s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.400018s, 431476 KB] g=32, 1540 evaluated, 519 expanded, 4 reopened
[t=0.401151s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.401182s, 431476 KB] g=33, 1546 evaluated, 521 expanded, 4 reopened
[t=0.402307s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.402337s, 431476 KB] g=35, 1552 evaluated, 523 expanded, 4 reopened
[t=0.403111s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.403147s, 431476 KB] g=37, 1556 evaluated, 525 expanded, 4 reopened
[t=0.403186s, 431476 KB] Solution found!
[t=0.403213s, 431476 KB] Actual search time: 0.296066s
unstack d i (1)
stack d e (1)
unstack f h (1)
stack f d (1)
unstack i c (1)
put-down i (1)
unstack h g (1)
stack h f (1)
unstack g a (1)
put-down g (1)
unstack h f (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k l (1)
stack k c (1)
unstack l j (1)
stack l i (1)
unstack f d (1)
stack f a (1)
unstack k c (1)
stack k f (1)
unstack d e (1)
stack d c (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d c (1)
stack d j (1)
unstack l i (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.403238s, 431476 KB] Plan length: 38 step(s).
[t=0.403238s, 431476 KB] Plan cost: 38
[t=0.403238s, 431476 KB] Expanded 527 state(s).
[t=0.403238s, 431476 KB] Reopened 4 state(s).
[t=0.403238s, 431476 KB] Evaluated 1557 state(s).
[t=0.403238s, 431476 KB] Evaluations: 1557
[t=0.403238s, 431476 KB] Generated 2354 state(s).
[t=0.403238s, 431476 KB] Dead ends: 0 state(s).
[t=0.403238s, 431476 KB] Expanded until last jump: 0 state(s).
[t=0.403238s, 431476 KB] Reopened until last jump: 0 state(s).
[t=0.403238s, 431476 KB] Evaluated until last jump: 1 state(s).
[t=0.403238s, 431476 KB] Generated until last jump: 0 state(s).
[t=0.403238s, 431476 KB] Number of registered states: 1557
[t=0.403238s, 431476 KB] Int hash set load factor: 1557/2048 = 0.760254
[t=0.403238s, 431476 KB] Int hash set resizes: 11
[t=0.403238s, 431476 KB] Search time: 0.376672s
[t=0.403238s, 431476 KB] Total time: 0.403238s
Solution found.
Peak memory: 431476 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p19.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1469 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.102s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.7272e-05s, 424928 KB] reading input...
[t=0.00215284s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.026042s, 427780 KB] Building successor generator...done!
[t=0.0263209s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263441s, 427780 KB] time for successor generation creation: 0.000167007s
[t=0.0263722s, 427780 KB] Variables: 25
[t=0.0263946s, 427780 KB] FactPairs: 182
[t=0.0264168s, 427780 KB] Bytes per state: 8
[t=0.0266142s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0987986s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0988643s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.0988901s, 430372 KB] f = 111, 1 evaluated, 0 expanded
[t=0.0989173s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 111
[t=0.0989406s, 430372 KB] pruning method: none
[t=0.10899s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 101
[t=0.10904s, 431080 KB] g=1, 2 evaluated, 1 expanded
[t=0.112258s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 74
[t=0.1123s, 431080 KB] g=1, 3 evaluated, 1 expanded
[t=0.113417s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 66
[t=0.113449s, 431080 KB] g=3, 9 evaluated, 3 expanded
[t=0.121455s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.121489s, 431080 KB] g=8, 54 evaluated, 15 expanded
[t=0.122404s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.122436s, 431080 KB] g=9, 59 evaluated, 16 expanded
[t=0.123727s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 61
[t=0.123761s, 431080 KB] g=10, 66 evaluated, 17 expanded
[t=0.124506s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 59
[t=0.124537s, 431080 KB] g=12, 70 evaluated, 19 expanded
[t=0.125981s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 55
[t=0.126011s, 431080 KB] g=14, 78 evaluated, 21 expanded
[t=0.129249s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 51
[t=0.129296s, 431212 KB] g=14, 96 evaluated, 28 expanded
[t=0.130764s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 35
[t=0.130812s, 431212 KB] g=16, 104 evaluated, 32 expanded
[t=0.13535s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.135385s, 431212 KB] g=23, 129 evaluated, 41 expanded
[t=0.136486s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 27
[t=0.136516s, 431212 KB] g=24, 135 evaluated, 42 expanded
[t=0.140474s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.140507s, 431212 KB] g=27, 157 evaluated, 47 expanded
[t=0.141076s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 25
[t=0.141107s, 431212 KB] g=28, 160 evaluated, 48 expanded
[t=0.142029s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.14206s, 431212 KB] g=29, 165 evaluated, 49 expanded
[t=0.14299s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 18
[t=0.143027s, 431212 KB] g=30, 170 evaluated, 50 expanded
[t=0.143771s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.143804s, 431212 KB] g=31, 174 evaluated, 51 expanded
[t=0.144548s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 14
[t=0.144578s, 431212 KB] g=32, 178 evaluated, 52 expanded
[t=0.146021s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.146052s, 431212 KB] g=34, 186 evaluated, 54 expanded
[t=0.1477s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.147732s, 431212 KB] g=36, 195 evaluated, 56 expanded
[t=0.148127s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.148157s, 431212 KB] g=37, 197 evaluated, 57 expanded
[t=0.149077s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.149108s, 431212 KB] g=38, 202 evaluated, 58 expanded
[t=0.150033s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 6
[t=0.150065s, 431212 KB] g=40, 207 evaluated, 60 expanded
[t=0.153486s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 4
[t=0.15352s, 431212 KB] g=41, 226 evaluated, 67 expanded
[t=0.15462s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.154656s, 431212 KB] g=43, 232 evaluated, 69 expanded
[t=0.155415s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.155451s, 431212 KB] g=45, 236 evaluated, 71 expanded
[t=0.155483s, 431212 KB] Solution found!
[t=0.15551s, 431212 KB] Actual search time: 0.056566s
unstack b f (1)
put-down b (1)
unstack f e (1)
put-down f (1)
unstack h k (1)
stack h a (1)
unstack k g (1)
stack k b (1)
pick-up g (1)
stack g k (1)
pick-up f (1)
stack f e (1)
unstack g k (1)
stack g h (1)
unstack f e (1)
stack f k (1)
unstack g h (1)
put-down g (1)
unstack h a (1)
stack h g (1)
unstack a c (1)
stack a h (1)
unstack c j (1)
put-down c (1)
unstack f k (1)
stack f a (1)
unstack k b (1)
stack k f (1)
unstack e l (1)
stack e k (1)
unstack j i (1)
stack j e (1)
pick-up l (1)
stack l c (1)
unstack i d (1)
put-down i (1)
pick-up d (1)
stack d j (1)
unstack l c (1)
stack l d (1)
pick-up b (1)
stack b l (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.155534s, 431212 KB] Plan length: 46 step(s).
[t=0.155534s, 431212 KB] Plan cost: 46
[t=0.155534s, 431212 KB] Expanded 73 state(s).
[t=0.155534s, 431212 KB] Reopened 0 state(s).
[t=0.155534s, 431212 KB] Evaluated 237 state(s).
[t=0.155534s, 431212 KB] Evaluations: 237
[t=0.155534s, 431212 KB] Generated 311 state(s).
[t=0.155534s, 431212 KB] Dead ends: 0 state(s).
[t=0.155534s, 431212 KB] Expanded until last jump: 0 state(s).
[t=0.155534s, 431212 KB] Reopened until last jump: 0 state(s).
[t=0.155534s, 431212 KB] Evaluated until last jump: 1 state(s).
[t=0.155534s, 431212 KB] Generated until last jump: 0 state(s).
[t=0.155534s, 431212 KB] Number of registered states: 237
[t=0.155534s, 431212 KB] Int hash set load factor: 237/256 = 0.925781
[t=0.155534s, 431212 KB] Int hash set resizes: 8
[t=0.155534s, 431212 KB] Search time: 0.128921s
[t=0.155534s, 431212 KB] Total time: 0.155534s
Solution found.
Peak memory: 431212 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/translator.py tasks/blocksworld_ipc/probBLOCKS-12-0/domain.pddl tasks/blocksworld_ipc/probBLOCKS-12-0/p20.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
518 relevant atoms
348 auxiliary atoms
866 final queue length
1470 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 11
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2511
Translator peak memory: 42836 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1800s
INFO     search memory limit: 3800 MB
INFO     search command line string: /home/rvbettker/src/NeuralFastDownward2/builds/release/bin/downward --search 'astar(nh(torch_sampling_network(path=results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt,blind=false,unary_threshold=0.01)), max_time=1800)' --internal-plan-file sas_plan < output.sas
[t=3.6346e-05s, 424928 KB] reading input...
[t=0.00216608s, 425192 KB] done reading input!
Initializing network heuristic...
[t=0.0259336s, 427780 KB] Building successor generator...done!
[t=0.0262189s, 427780 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262424s, 427780 KB] time for successor generation creation: 0.000170756s
[t=0.0262713s, 427780 KB] Variables: 25
[t=0.0262944s, 427780 KB] FactPairs: 182
[t=0.0263168s, 427780 KB] Bytes per state: 8
[t=0.0265124s, 427780 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0982142s, 430372 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0982691s, 430372 KB] g=0, 1 evaluated, 0 expanded
[t=0.0982947s, 430372 KB] f = 149, 1 evaluated, 0 expanded
[t=0.098323s, 430372 KB] Initial heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 149
[t=0.0983472s, 430372 KB] pruning method: none
[t=0.108336s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 141
[t=0.108386s, 431080 KB] g=1, 2 evaluated, 1 expanded
[t=0.111773s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 132
[t=0.111814s, 431080 KB] g=1, 4 evaluated, 1 expanded
[t=0.112023s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 98
[t=0.112052s, 431080 KB] g=1, 5 evaluated, 1 expanded
[t=0.112972s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 91
[t=0.113005s, 431080 KB] g=2, 10 evaluated, 2 expanded
[t=0.113209s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 65
[t=0.113237s, 431080 KB] g=2, 11 evaluated, 2 expanded
[t=0.115174s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 64
[t=0.115206s, 431080 KB] g=5, 22 evaluated, 5 expanded
[t=0.116118s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 48
[t=0.11615s, 431080 KB] g=6, 27 evaluated, 6 expanded
[t=0.11864s, 431080 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 42
[t=0.118674s, 431080 KB] g=10, 41 evaluated, 11 expanded
[t=0.153108s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 33
[t=0.153147s, 431212 KB] g=15, 238 evaluated, 95 expanded, 13 reopened
[t=0.153879s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 32
[t=0.15391s, 431212 KB] g=16, 242 evaluated, 96 expanded, 13 reopened
[t=0.154647s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 26
[t=0.154678s, 431212 KB] g=17, 246 evaluated, 97 expanded, 13 reopened
[t=0.15594s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 24
[t=0.155972s, 431212 KB] g=20, 253 evaluated, 100 expanded, 13 reopened
[t=0.156929s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 21
[t=0.156964s, 431212 KB] g=22, 258 evaluated, 102 expanded, 13 reopened
[t=0.158586s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 19
[t=0.158618s, 431212 KB] g=24, 267 evaluated, 106 expanded, 13 reopened
[t=0.160758s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 17
[t=0.160799s, 431212 KB] g=23, 279 evaluated, 111 expanded, 13 reopened
[t=0.161362s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 15
[t=0.161393s, 431212 KB] g=24, 282 evaluated, 112 expanded, 13 reopened
[t=0.161774s, 431212 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 13
[t=0.161807s, 431212 KB] g=25, 284 evaluated, 113 expanded, 13 reopened
[t=0.254418s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 12
[t=0.25446s, 431344 KB] g=35, 805 evaluated, 476 expanded, 118 reopened
[t=0.254852s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 11
[t=0.254884s, 431344 KB] g=36, 807 evaluated, 477 expanded, 118 reopened
[t=0.255446s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 10
[t=0.255476s, 431344 KB] g=37, 810 evaluated, 478 expanded, 118 reopened
[t=0.255682s, 431344 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 9
[t=0.255712s, 431344 KB] g=37, 811 evaluated, 478 expanded, 118 reopened
[t=0.256636s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 8
[t=0.256674s, 431476 KB] g=39, 816 evaluated, 480 expanded, 118 reopened
[t=0.257078s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 7
[t=0.257111s, 431476 KB] g=40, 818 evaluated, 481 expanded, 118 reopened
[t=0.257676s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 5
[t=0.257706s, 431476 KB] g=41, 821 evaluated, 482 expanded, 118 reopened
[t=0.258096s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 2
[t=0.258127s, 431476 KB] g=43, 823 evaluated, 484 expanded, 118 reopened
[t=0.258513s, 431476 KB] New best heuristic value for nh(torch_sampling_network(path = results/train-pytorch-2021.07.24T21.10.26.314849/traced_fold_0.pt, blind = false, unary_threshold = 0.01)): 0
[t=0.258547s, 431476 KB] g=44, 825 evaluated, 485 expanded, 118 reopened
[t=0.259655s, 431476 KB] Solution found!
[t=0.259689s, 431476 KB] Actual search time: 0.161339s
stack b j (1)
unstack k h (1)
stack k a (1)
pick-up f (1)
stack f d (1)
unstack k a (1)
stack k f (1)
unstack a l (1)
stack a k (1)
pick-up h (1)
stack h a (1)
unstack l e (1)
put-down l (1)
unstack e g (1)
put-down e (1)
unstack b j (1)
stack b l (1)
pick-up e (1)
stack e b (1)
unstack h a (1)
stack h g (1)
unstack a k (1)
stack a h (1)
unstack k f (1)
stack k j (1)
unstack f d (1)
stack f a (1)
unstack k j (1)
stack k f (1)
unstack e b (1)
stack e k (1)
pick-up j (1)
stack j e (1)
unstack d i (1)
stack d j (1)
unstack b l (1)
put-down b (1)
pick-up l (1)
stack l d (1)
pick-up b (1)
stack b l (1)
unstack i c (1)
put-down i (1)
pick-up c (1)
stack c b (1)
pick-up i (1)
stack i c (1)
[t=0.259715s, 431476 KB] Plan length: 47 step(s).
[t=0.259715s, 431476 KB] Plan cost: 47
[t=0.259715s, 431476 KB] Expanded 491 state(s).
[t=0.259715s, 431476 KB] Reopened 118 state(s).
[t=0.259715s, 431476 KB] Evaluated 832 state(s).
[t=0.259715s, 431476 KB] Evaluations: 832
[t=0.259715s, 431476 KB] Generated 1731 state(s).
[t=0.259715s, 431476 KB] Dead ends: 1 state(s).
[t=0.259715s, 431476 KB] Expanded until last jump: 0 state(s).
[t=0.259715s, 431476 KB] Reopened until last jump: 0 state(s).
[t=0.259715s, 431476 KB] Evaluated until last jump: 1 state(s).
[t=0.259715s, 431476 KB] Generated until last jump: 0 state(s).
[t=0.259715s, 431476 KB] Number of registered states: 832
[t=0.259715s, 431476 KB] Int hash set load factor: 832/1024 = 0.8125
[t=0.259715s, 431476 KB] Int hash set resizes: 10
[t=0.259715s, 431476 KB] Search time: 0.233203s
[t=0.259715s, 431476 KB] Total time: 0.259715s
Solution found.
Peak memory: 431476 KB
Remove intermediate file output.sas
search exit code: 0

 | avg_val_loss=0.024800
The loss on the validation data didn't improve in 100 epochs.
Done!
Fold 0 test success: 20 of 20 (100.0%)

Max test success (fold 0): 100.0%
Min test success (fold 0): 100.0%
Avg test success: 100.0%
